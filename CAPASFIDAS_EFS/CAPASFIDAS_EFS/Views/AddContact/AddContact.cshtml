@{
    Layout = null;
}
<!--Following MS standard app minification is managed in BundleConfig.cs BundleTable.EnableOptimizations.
    Never use web config file to <compilation debug=”true”/> in order to avoid accidental deployments without minifcation! -->
<!--Minified script bundles-->
@Scripts.Render("~/Scripts/bundle-jquery")
@Scripts.Render("~/Scripts/DataTables-1.10.20/bundle-jquery-dataTables")
@Scripts.Render("~/Scripts/bundle-jquery-ui")
@Scripts.Render("~/Scripts/bundle-bootstrap")
@Scripts.Render("~/Scripts/bundle-other")
<!--Style bundles-->
@Styles.Render("~/Content/bundle-base")
@Styles.Render("~/Content/bundle-jquery")
@Styles.Render("~/Content/bundle-jquery-ui")
@Styles.Render("~/Content/bundle-bootstrap")
@Styles.Render("~/Content/DataTables-1.10.20/css/bundle-jquery-dataTables")
@Styles.Render("~/Content/DataTables-1.10.20/extensions/Responsive/css/bundle-jquery-dataTables-responsive")

<div style="text-align:center;">
    <h1 class="h1Bold">Add Contact</h1>
</div>
@using (Html.BeginForm("AddContact", "AddContact", FormMethod.Get, new { id = "submitForm" }))
{
    <div  class="divContactPopUp">
        <div style="text-align:left;" class="paddingLeft1em">
            @*<span id="spnTitle">
                    @Html.Label("Title", new { @id = "lblTitle" })
                </span>
                <span id="spnTitle" class="paddingLeftpoint7em">
                    @Html.DropDownList("lstTitle", "- Select -")
                </span>
                <br />
                <span id="spnPrefix">
                    @Html.Label("Prefix", new { @id = "lblPrefix" })
                </span>
                <span id="spnPrefix">
                    @Html.TextBox("searchTerm", null, new { id = "txtPrefix", size = "3" })
                </span>
                <span id="spnFirstName">
                    @Html.Label("First Name", new { @id = "lblFirstName" })
                </span>
                <span id="spnFirstName">
                    @Html.TextBox("searchTerm", null, new { id = "txtFirstName", size = "15" })
                </span>
                <span id="spnMiddleName">
                    @Html.Label("Middle Name", new { @id = "lblMiddleName" })
                </span>
                <span id="spnMiddleName">
                    @Html.TextBox("searchTerm", null, new { id = "txtMiddleName", size = "15" })
                </span>
                <span id="spnLastName">
                    @Html.Label("Last Name", new { @id = "lblLastName" })
                </span>
                <span id="spnLastName">
                    @Html.TextBox("searchTerm", null, new { id = "txtLastName", size = "15" })
                </span>
                <span id="spn">
                    @Html.Label("Suffix", new { @id = "lblSuffix" })
                </span>
                <span id="spn">
                    @Html.TextBox("searchTerm", null, new { id = "txtSuffix", size = "5" })
                </span>
                <br />
                <br />
                <br />*@
            <span style="float: left;">
                <span id="spnBestContactLabel">
                    <span id="lblBestContact">Best Contact</span>
                </span>
                <span id="spnBestContact" class="paddingLeft1em">
                    @Html.DropDownList("lstBestContact", null, "- Select -", new { id = "lstBestContact", aria_labelledby = "lblBestContact" })
                </span>
            </span>
            <span style="float: right; padding-right: 2em; padding-left: 3em;">
                <button id="btnCommonSave" class="btn-default buttonCSS" name="Command" value="CSV">
                    <img src="~/Content/Images/add.png" alt="Pluss/Add Icon" class="imgButtonCSS" />
                </button>
                <button id="btnCommonClear" class="btn-default buttonCSS" name="Command" value="CSV">
                    <img src="~/Content/Images/clear.png" alt="Reoload/Clear Icon" class="imgButtonCSS" />
                </button>
            </span>
            <br />
            <br />
            <span id="spnContactTypeLabel" style="padding-left: 0.1em;">
                <span id="lblContactType">Contact Type</span>
            </span>
            <span id="spnContactType" class="paddingLeft0pt8em">
                <span>
                    @Html.DropDownList("lstContactType", null, "- Select -", new { id = "lstContactType", aria_labelledby = "lblContactType" })
                </span>
                <span class="paddingLeft6pt9em">
                    @Html.DropDownList("lstContactType1", null, "- Select -", new { id = "lstContactType1", aria_labelledby = "lblContactType" })
                </span>
                <span class="paddingLeft6pt8em">
                    @Html.DropDownList("lstContactType2", null, "- Select -", new { id = "lstContactType2", aria_labelledby = "lblContactType" })
                </span>
                <span class="paddingLeft6pt8em">
                    @Html.DropDownList("lstContactType3", null, "- Select -", new { id = "lstContactType3", aria_labelledby = "lblContactType" })
                </span>
            </span>
            <br />
            <span id="spnContactValueLabel">
                <span id="lblContactValue">Contact Value</span>
            </span>
            <span id="spnContactValue" class="paddingLeft0pt5em">
                <span>
                    @Html.TextBox("searchTerm", null, new { id = "txtContactValue", aria_labelledby = "lblContactValue" })
                </span>
                <span>
                    @Html.TextBox("searchTerm", null, new { id = "txtContactValue1", aria_labelledby = "lblContactValue" })
                </span>
                <span>
                    @Html.TextBox("searchTerm", null, new { id = "txtContactValue2", aria_labelledby = "lblContactValue" })
                </span>
                <span>
                    @Html.TextBox("searchTerm", null, new { id = "txtContactValue3", aria_labelledby = "lblContactValue" })
                </span>
            </span>
        </div>
    </div>
}
<script>
    $m = jQuery.noConflict();

    $m(document).ready(function () {

        $("#lstContactType").prop("disabled", true);
        $("#lstContactType1").prop("disabled", true);
        $("#lstContactType2").prop("disabled", true);
        $("#lstContactType3").prop("disabled", true);

        //Update user data
        $m("#btnCommonSave").click(function () {
            event.preventDefault();
            //if ($m("#lstTitle option:selected").text() == "- Select -") {
            //    ShowDialogBox('NVRA', 'Select Title', 'Ok', '');
            //}
            if ($m("#lstBestContact option:selected").text() == "- Select -") {
                ShowDialogBox('NVRA', 'Select Best Contact', 'Ok', '');
            }
            //else if ($m("#txtFirstName").val().toString() == "") {
            //    ShowDialogBox('NVRA', 'Enter First Name', 'Ok', '');
            //}
            //else if ($m("#txtLastName").val().toString() == "") {
            //    ShowDialogBox('NVRA', 'Enter Last Name', 'Ok', '');
            //}
            //else if ($m("#lstContactType option:selected").text() == "- Select -") {
            //    ShowDialogBox('NVRA', 'Select Contact Type', 'Ok', '');
            //}
            else {
                var options = {};
                //options.url = "../AddContact/AddContactData";
                options.url = "@Url.Content("~/AddContact/AddContactData/")";
                options.type = "GET";
                options.data = {
                    lstBestContact: $m("#lstBestContact option:selected").val(),
                    lstContactType: $m("#lstContactType option:selected").val(),
                    lstContactType1: $m("#lstContactType1 option:selected").val(),
                    lstContactType2: $m("#lstContactType2 option:selected").val(),
                    lstContactType3: $m("#lstContactType3 option:selected").val(),
                    txtContactValue: $m("#txtContactValue").val().toString(),
                    txtContactValue1: $m("#txtContactValue1").val().toString(),
                    txtContactValue2: $m("#txtContactValue2").val().toString(),
                    txtContactValue3: $m("#txtContactValue3").val().toString(),
                };
                options.dataType = "json";
                options.contentType = "application/json";
                options.success = function (results) {
                    window.status = "Data Saved successfully";
                    window.opener.location.reload(true);
                    window.close();
                };
                options.error = function () {
                    alert("Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ");
                };
                $m.ajax(options);
            }
        });

        // Button Clear Search.
        $m("#btnCommonClear").click(function () {
            //$("#lstBestContact")[0].selectedIndex = 0;
            //$("#lstTitle")[0].selectedIndex = 0;
            //$("#txtPrefix").val("");
            //$("#txtFirstName").val("");
            //$("#txtMiddleName").val("");
            //$("#txtLastName").val("");
            //$("#txtSuffix").val("");
            //$("#lstContactType")[0].selectedIndex = 0;
            //$("#txtContactValue").val("");
            //$("#txtContactValue1").val("");
            //$("#txtContactValue2").val("");
            //$("#txtContactValue3").val("");
        });
    });
</script>
