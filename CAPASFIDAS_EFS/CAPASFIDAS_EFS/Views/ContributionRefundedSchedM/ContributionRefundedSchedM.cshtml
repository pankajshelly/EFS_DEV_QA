@{
    ViewBag.Title = ": Contributions Refunded Schedule M";
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
}

<form id="ContributionRefundedSchedMForm">

    @Html.Partial("UserControls/_UC_Alert_Message")
    @Html.Partial("UserControls/_UC_Delete_Message")

    <div id="divMainNew" class="mainDiv">
        <div class="mainLowerDivCSSDesktop">
            <div id="divhide" class="hideShowButtonCSS">
                Filter
                <button id="btnCommonShowHide1" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonShowHide">
                    <img src="~/Content/Images/up20.png" alt="Up/Hide Filter Arrow"  />
                </button>
            </div>
            <div id="divshow" class="hideShowButtonCSS">
                Filter
                <button id="btnCommonHideShow1" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonHideShow">
                    <img src="~/Content/Images/down20.png" alt="Down/Show Filter Arrow" />
                </button>
            </div>
        </div>
        <div class="mainLowerDivCSS">
            <div id="divhideForMobile" class="hideShowButtonCSS">
                File a New Disclosure Report
                <div class="paddingleft6emcss floatRight">
                    Filter
                    <button id="btnCommonShowHide2" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonShowHide">
                        <img src="~/Content/Images/up20.png" alt="Up/Hide Filter Arrow" />
                    </button>
                </div>
            </div>
            <div id="divshowForMobile" class="hideShowButtonCSS">
                File a New Disclosure Report
                <div class="paddingleft6emcss floatRight">
                    Filter
                    <button id="btnCommonHideShow2" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonHideShow">
                        <img src="~/Content/Images/down20.png" alt="Down/Show Filter Arrow" />
                    </button>
                </div>
            </div>
        </div>
        <div id="divTopSection">
            <div id="selectorItsRpt">
                <div class="divWidth">
                    <fieldset>
                        <legend class="visibleToScreenReaderOnly">Filter Controls Top</legend>
                        <div class="floatRightNew clsShowButtonClass">
                            <input type="button" id="btnCommonSearch1" class="btn btn-default clsCommonSearch clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Apply" title="Apply" style="font-size:12px;" />&nbsp;
                            <input type="button" id="btnCommonClear1" class="btn btn-default clsCommonClear ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />&nbsp;
                            <button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelp();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" class="ButtonImageCSS" title="Help" id="imgHelp1" /></button>
                        </div>
                    </fieldset>
                    <div class="requiredTextFilter">* marks required fields</div>
                    <div id="divFilerID">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilerID">* Filer ID</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("txtFilerID", ViewData["txtFilerID"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblFilerID" })
                        </div>
                    </div>
                    <div id="divFilerType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilerType">* Filer Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.TextBox("txtFilerType", null, new { id = "txtFilerType", @class = "txtWidth txtReportPeriodDatesFrom", aria_labelledby = "lblFilerType" })
                        </div>
                    </div>
                    <div id="divCommitteeName">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblCommitteeName">* Candidate/Committee Name</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("txtCommitteeName", ViewData["txtCommitteeName"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblCommitteeName" })
                        </div>
                    </div>
                    <div id="divElectionCycle">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblElectionCycle">* Report Year</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstElectionCycle", ViewData["lstElectionCycle"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblElectionCycle" })
                        </div>
                    </div>
                    <div id="divOfficeType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblOfficeType">* Election Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstUCOfficeType", null, "- Select -", new { id = "lstUCOfficeType", @class = "spanMobileWidth", aria_labelledby = "lblOfficeType" })
                        </div>
                    </div>
                    <div id="divCounty">
                        <div class="verticalCSSDestop lblCSS">
                            <span id = "lblCounty">* County</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstUCCounty", null, "- Select -", new { @class = "spanMobileWidth", aria_labelledby = "lblCounty" })
                        </div>
                    </div>
                    <div id="divMunicipality">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblMunicipality">* Municipality</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstUCMuncipality", null, "- Select -", new { @class = "spanMobileWidth", aria_labelledby = "lblMunicipality" })
                        </div>
                    </div>
                    <div id="divElectionType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id = "lblElectionType">* Report Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstElectionType", ViewData["lstElectionType"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblElectionType" })
                        </div>
                    </div>
                    <div id="divElectionDate">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblElectionDate">* Election Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstElectionDate", ViewData["lstElectionDate"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblElectionDate" })
                        </div>
                    </div>
                    <div id="divDisclosureType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblDisclosureType">* Disclosure Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstDisclosureType", ViewData["lstDisclosureType"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblDisclosureType" })
                        </div>
                    </div>
                    <div id="divDisclosurePeriod">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblDisclosurePeriod">* Disclosure Period</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstDisclosurePeriod", null, new { @class = "spanMobileWidth", aria_labelledby = "lblDisclosurePeriod" })
                        </div>
                    </div>
                    <div id="divReportPeriodDates">
                        <div class="verticalCSSDestop lblCSS">
                           <span id="lblReportPeriodDatesFrom">* Cut off Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.TextBox("searchTerm", null, new { id = "txtReportPeriodDatesFrom", @class = "txtWidth", aria_labelledby = "lblReportPeriodDatesFrom" })
                        </div>
                    </div>
                    <div id="divFilingDateDropDown">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilingDate">* Filing Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstFilingDate", ViewData["lstFilingDate"] as SelectList, "- Select -", new { @class = "spanMobileWidth lstFilingDate", aria_labelledby = "lblFilingDate" })
                        </div>
                    </div>
                    <div id="divReportPeriodDatesTo">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblReportPeriodDatesTo">* Filing Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.TextBox("searchTerm", null, new { id = "txtReportPeriodDatesTo", @class = "txtWidth", aria_labelledby = "lblReportPeriodDatesTo" })
                        </div>
                    </div>
                    @* OFFICE CYCLE FILING DATE *@
                    <div id="divFilingDateOffCycle">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilingDateOffCycle">* New Filing Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            <input type="text" id="txtNewFilingDate" name="txtNewFilingDate" class="txtWidth txtCurrentDateCls" maxlength="10" aria-labelledby = "lblFilingDateOffCycle"/>
                        </div>
                    </div>
                    @* OFFICE CYCLE FILING DATE *@

                    <div id="divFilingReason">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblReasonforFiling" >Resignation/Termination</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstResigTermType", ViewData["lstResigTermType"] as SelectList, "- Select -", new { @class = "spanMobileWidth lstResigTermType", aria_labelledby = "lblReasonforFiling" })
                        </div>
                    </div>
                    <div class="floatRightNew" style="padding-bottom: 2em;">
                        <fieldset>
                            <legend class="visibleToScreenReaderOnly">Filter Controls Bottom</legend>
                                <input type="button" id="btnCommonSearch2" class="btn btn-default clsCommonSearch ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Apply" title="Search" style="font-size:12px;" />&nbsp;
                                <input type="button" id="btnCommonClear2" class="btn btn-default clsCommonClear ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />&nbsp;
                                <button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelp();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" class="ButtonImageCSS" title="Help" id="imgHelp2" /></button>
                        </fieldset>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="floatRight paddingRight3em paddingTop0pt6em">
        <p><button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelpSchedM();" >
            <img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)"  class="ButtonImageCSS" title="Help for Schedule M" id="imgHelp3" />
            </button>
        </p>
    </div>

    <div id="divBreadCrumb" class="breadCrumbDivCSS" style="width: 46em;">
        <nav aria-label="Breadcrumbs" id="pBreadCrumb" class="FontSizeCss">
            <ol class="breadcrumb">
                <li>@Html.ActionLink("File a Disclosure Report", "ContributionsMonetary", "ContributionsMonetary", null, new { @class = "lnkLogout" })</li>
                <li class="active">Contributions Refunded (Decreases Balance)</li>
            </ol>
        </nav>
        <div id="divHeader1" class="paddingtoppt5" style="width: 170%;">
            <h1>
                <span id="lblHeader1">File a Disclosure Report</span> -
                <span id="lblHEleYear">File a Disclosure Report</span> -
                <span id="lblHDisclPer">File a Disclosure Report</span>
            </h1>
        </div>
        <div id="divHeader2" class="paddingtoppt5 PageHeaderWidth">
            <div class="paddingTop0em2em DisplayInlineBlock">
                <h3><span  id="lblHeader2">Contributions Refunded (Decreases Balance)</span></h3>
            </div>
        </div>
    </div>
    <div id="divGrid" class="divGridCSSTransferin">
        @Html.Partial("UserControls/_UC_Loding")
        @Html.Partial("UserControls/_UC_GridCommonControl")
    </div>
</form>

<div id="dialog-form_Sched_M" title="Add/Edit Transaction">
    <form id="DialogBoxSchedMForm">
        <div class="divWidthSchedABC">
            <div id="dvSearch" class="headerDBLiability">
                <span>Search Original Contribution</span>
            </div>
            <div id="dvAddContrRefunds" class="headerDBLiability">
                <span>Add/Edit Contribution Refunds</span>
            </div>
            <br />
            <div class="requiredTextFilter">Required fields are marked with an *</div>
            <div id="dvSearchContributor">
                <div id="dvOriginalName">
                    <div id="lstContributorName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblOriginalName">* Original Name</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstContributorName", ViewData["lstContributorName"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblOriginalName" })
                    </div>
                </div>
                <div id="dvOriginalAmount">
                    <div id="lstContributorAmount_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblContributorAmount">* Original Amount $</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstContributorAmount", null, "- Select -", new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblContributorAmount" })
                    </div>
                </div>
                <div id="dvOriginalDate">
                    <div id="lstContributorDate_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblContributorDate">* Original Contribution Date</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstContributorDate", null, "- Select -", new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblContributorDate" })
                    </div>
                </div>
            </div>

            <div id="dvContrRefunds">
                <div id="divDateReceived">
                    <div id="txtCurrentDateSchedL_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblDateRcvd">*  Date Refund Paid</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        <input type="text" id="txtCurrentDateSchedL" name="txtCurrentDateSchedL" class="datepicker txtWidthForDateSched_ABC txtCurrentDateCls" maxlength="10" aria-labelledby="lblDateRcvd" />
                    </div>
                </div>

                <div id="dvContrName">
                    <div id="txtContributorName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblContributorName">* Contributor Name</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtContributorName", null, new { id = "txtContributorName", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "40", aria_labelledby = "lblContributorName" })
                    </div>
                </div>

                <div id="tdCountryContributionChk">
                    <div class="verticalCSSDestopForLableSched_ABC lblCSSAdd">
                        <span id="lblOtherCountry">Other Country</span>
                    </div>
                    <div class="verticalCSSDestopForCheckBoxSched_ABC DDLCSSAdd">
                        @Html.CheckBox("chkCountry", false, new { @class = "txtWidthForDialogSched_ABC_CountryChkbox", aria_labelledby = "lblOtherCountry" })
                    </div>
                </div>
                <div id="tdCountryContributionTxt" class="divClearBoth">
                    <div id="txtCountry_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSched_ABC lblCSSAdd">
                        <span id="lblCountry">* Country</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSched_ABC DDLCSSAdd">
                        @Html.TextBox("txtCountry", null, new { id = "txtCountry", @class = "txtWidthForDialogSched_A required", @maxlength = "30", aria_labelledby = "lblCountry" })
                    </div>
                </div>

                <div id="divStreetAddress">
                    <div id="txtStreetName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblStreetName">* Street Address</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtStreetName", null, new { id = "txtStreetName", @class = "txtWidthForDialogSched_A", @maxlength = "60", aria_labelledby = "lblStreetName" })
                    </div>
                </div>

                <div id="divCity">
                    <div id="txtCity_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblCity">* City</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtCity", null, new { id = "txtCity", @class = "txtWidthForDialogSched_A", @maxlength = "30", aria_labelledby = "lblCity" })
                    </div>
                </div>

                <div id="divState">
                    <div id="txtState_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblState">* State</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtState", null, new { id = "txtState", @class = "txtWidthForDialogSched_A", @maxlength = "2", aria_labelledby = "lblState" })
                    </div>
                </div>

                <div id="divZip5">
                    <div id="txtZipCode_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblZip5">* Zip Code</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtZipCode", null, new { id = "txtZipCode", @class = "txtWidthForDialogSched_A", @maxlength = "10", aria_labelledby = "lblZip5" })
                    </div>
                </div>

                <div id="divMethod">
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblMethod">* Method</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstMethod", ViewData["lstMethod"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblMethod" })
                    </div>
                </div>

                <div id="tdCheck">
                    <div id="txtCheck_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblCheck">* Check #</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtCheck", null, new { id = "txtCheck", @class = "txtWidthForDialogSched_A required", @maxlength = "30", aria_labelledby = "lblCheck" })
                    </div>
                </div>

                <div id="dvAmountRefunded" class="divClearBoth">
                    <div id="txtAmountRefunded_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblAmount">* Amount Refunded $</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtAmountRefunded", null, new { id = "txtAmountRefunded", @class = "txtWidthForDialogSched_A required", @maxlength = "12", aria_required = "true", aria_labelledby = "lblAmount" })
                    </div>
                </div>

                <div id="dvOutstandingAmount" class="divClearBoth">
                    <div id="txtOutstandingAmount_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblOutstandingAmount">Outstanding Amount $</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtOutstandingAmount", null, new { id = "txtOutstandingAmount", @class = "txtWidthForDialogSched_A required", @maxlength = "12", aria_required = "true", aria_labelledby = "lblOutstandingAmount" })
                    </div>
                </div>

                <div id="divExplanation">
                    <div id="txtExplanationCommon_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblExplanation">Explanation</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtExplanationCommon", null, new { id = "txtExplanationCommon", @class = "txtWidthForDialogSched_A", @maxlength = "250", aria_labelledby = "lblExplanation" })
                    </div>
                </div>

            </div>


            <div id="AddUpdateBtnIdSchedM" class="AddLeftCSSSchedABC">
                <input type="button" id="btnPreviousDialog" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="<< Previous" title="Previous" style="font-size:12px;" />
                <input type="button" id="btnNextDialog" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Next >>" title="Next" style="font-size:12px;" />
                <input type="button" id="btnUpdateDialogSchedM" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Save" title="Save" style="font-size:12px;" />
                <input type="button" id="btnAddDialogSchedM" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Save" title="Save" style="font-size:12px;" />
                <input type="button" id="btnClearDialog" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />
                <input type="button" id="btnCloseDialog" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Close" title="Close" style="font-size:12px;" />
            </div>
        </div>
    </form>
</div>

<script>
    $m = jQuery.noConflict();

    function CallHelpSchedM() {

        var myWidth = 1050;
        var myHeight = 550;

        var left = (screen.width - myWidth) / 2;
        var top = (screen.height - myHeight) / 4;

        window.open("../../ContributionRefundedSchedM/GetScheduleMHelpPopUp", "Help", 'width=550, height=600,scrollbars=1, width=' + myWidth + ', height=' + myHeight + ', top=' + top + ', left=' + left);
    }

    $('#menuNav').css('opacity', 0);
    $('#ContributionRefundedSchedMForm').css('opacity', 0);
    $('#DialogBoxSchedMForm').css('opacity', 0);
    $('#divWelcomeBanner').css('opacity', 0);
    $(window).on('load', function () {
        $('#menuNav').css('opacity', 1);
        $('#ContributionRefundedSchedMForm').css('opacity', 1);
        $('#DialogBoxSchedMForm').css('opacity', 1);
        $('#divWelcomeBanner').css('opacity', 1);
    });


    $m(document).ready(function () {

        //----------------------------------------------------------------------------------------------------------------------------------------------
        // Common Function in EFS-Validation.js file - Start
        validatePage("DialogBoxSchedMForm");
        LefthandFilterValues();
        // Common Function in EFS-Validation.js file - ENd
        // JQUERY VALIDATITON REGULAR EXPRESSIONS.
        //----------------------------------------------------------------------------------------------------------------------------------------------


        //====================================================================================================================
        // Date picker validation based on Filing Type.
        if ($("#lstElectionType option:selected").val().toString() == "6") { // Off-Cycle
            if ($("#lstFilingDate option:selected").text().toString() == "- New Filing Date -") {
                sessionStorage.setItem("CuttOffDateForFiling", sessionStorage.getItem("FilingDate").toString());
            }
            else {
                sessionStorage.setItem("CuttOffDateForFiling", $("#lstFilingDate option:selected").text().toString());
            }
        }
        else {
            sessionStorage.setItem("CuttOffDateForFiling", sessionStorage.getItem("CutOffDate").toString());
        }

        // DATE CONTROL AND WATERMARK
        //----------------------------------------------------------------------------------------------------------------------------------------------
        $m("#txtCurrentDateSchedL").datepicker({
            showOn: "button",
            buttonImage: "../../Content/Images/Calendar.png",
            buttonImageOnly: false,
            buttonText: "Select From Date",
            changeMonth: true,
            changeYear: true,
            numberOfMonths: 1,
            maxDate: sessionStorage.getItem("CuttOffDateForFiling").toString(),
            dateFormat: 'mm/dd/yy',
            onChange: function () {
                $m("#txtCurrentDateSchedL").valid();
            },
        }).datepicker();

        $m('.datepicker').attr("placeholder", "MM/DD/YYYY").datepicker();
        $("#txtCurrentDateSchedL").addClass("watermarkHTMLTextBox");
        $("#txtCurrentDateSchedL").focusin(function () {
            $("#txtCurrentDateSchedL").removeClass("watermarkHTMLTextBox");
        });

        // Watermark TextBox. ////////////////////////////////////////////////////
        // DATE FORMATE....///////////////////////////////////////////////
        $("#txtCurrentDateSchedL").focusout(function () {
            if ($("#txtCurrentDateSchedL").val().toString() != "") {
                if ($("#txtCurrentDateSchedL").val().toString() != "MM/DD/YYYY") {

                    if ($m("#txtCurrentDateSchedL").valid()) {
                        var MyDate = new Date($("#txtCurrentDateSchedL").val().toString());
                        var MyDateString;
                        MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                            + ('0' + MyDate.getDate()).slice(-2) + '/'
                            + MyDate.getFullYear();
                        $("#txtCurrentDateSchedL").val("");
                        $("#txtCurrentDateSchedL").val(MyDateString);
                    }
                }
            }
            else {
                $("#txtCurrentDateSchedL").addClass("watermarkHTMLTextBox");
            }
        });
        // DATE FORMATE....///////////////////////////////////////////////
        // DATE CONTROL AND WATERMARK
        //-----------------------------------------------------------------------------------------------------------------
        //====================================================================================================================


        //-------------------------------------------------------------------------------------------------------------------------------------------
        /// Dialog Box Code /////////////////////////////////////////////////////////////////////
        var dialog_Sched_M;

        dialog_Sched_M = $m("#dialog-form_Sched_M").dialog({
            autoOpen: false,
            resizable: true,
            height: 'auto',
            width: 456,
            position: {
                my: "center top",
                at: "center top+200"
            },
            modal: true,
            resizable: false,
            closeOnEscape: false,
            open: function (event, ui) { hideDialogXButton(this); }
        });

        $(window).resize(function () {
            //// get the screen height and width
            if ($(window).width() < 500) {
                dialog_Sched_M = $m("#dialog-form_Sched_M").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 300,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 500 && $(window).width() <= 900) {
                dialog_Sched_M = $m("#dialog-form_Sched_M").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 456,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 900) {
                dialog_Sched_M = $m("#dialog-form_Sched_M").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 456,
                    modal: true,
                    dialogClass: 'DialogCustomStyle',
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
        }).resize();
        /// Dialog Box Code /////////////////////////////////////////////////////////////////////
        //--------------------------------------------------------------------------------------------------------------------------------------------------------


        // Button Close
        //--------------------------------------------------------------------------------------------------------------------------------------------------------
        // Get Filing Transactions Data....
        $m("#btnCloseDialog").button().on("click", function () {
            //By default we do not require close dialog confirmation for this form.
            var requireCloseConfirm = false;
            if (sessionStorage.getItem("UpdateFlagSchedM") != null && sessionStorage.getItem("UpdateFlagSchedM").toString() == "No") { // Only New Transactions
                //"ADD" operation will chech the fields. IF there's any data the close confirmation will be required.
                if ($("#lstContributorName option:selected").val().toString() != "0"
                    || ($("#lstContributorName option:selected").val().toString() != "0" && $("#lstContributorAmount option:selected").val().toString() != "0")
                    || ($("#lstContributorName option:selected").val().toString() != "0" && $("#lstContributorAmount option:selected").val().toString() != "0" && $("#lstContributorDate option:selected").val().toString() != "0")
                    || $("#txtCurrentDateSchedL").val().toString().length >= 1
                    || ($("#txtContributorName").val().toString() != "" && $("#txtContributorName").val().toString().length >= 1)
                    || ($('#chkCountry').is(':checked') && $("#txtCountry").val().toString().length >= 1)/*Other COUNTRY*/
                    || $("#txtStreetName").val().toString().length >= 1
                    || $("#txtCity").val().toString().length >= 1
                    || $("#txtState").val().toString().length >= 1
                    || $("#txtZipCode").val().toString().length >= 1
                    || $("#lstMethod option:selected").val().toString() != "0"
                    || $("#lstMethod option:selected").val().toString() == "1" && $("#txtCheck").val().toString().length >= 1
                    || $("#txtAmountRefunded").val().toString().length >= 1
                    || $("#txtExplanationCommon").val().toString().length >= 1) {
                    requireCloseConfirm = true;
                }
            }
            if (!requireCloseConfirm) {
                // Close Dialgobox.
                dialog_Sched_M.dialog("close");
                // For Defect 707 You don't Refresh the Data on Grid because you just canceled the edit or save function.
            } else {
                // Get confirmation Close the DialogBox or Not.
                var resultsCloseSchedA = "All unsaved data will be lost if you navigate away from this page. Are you sure you want to continue?";

                $m('#modal_dialog').text(resultsCloseSchedA);
                $m("#modal_dialog").dialog({
                    resizable: false,
                    modal: true,
                    width: '400px',
                    height: 'auto',
                    bgiframe: false,
                    closeOnEscape: false,
                    open: function (event, ui) { hideDialogXButton(this); },
                    buttons: {
                        "OK": function () {
                            //Close Confirm Box.
                            $m(this).dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                            // Close Dialogbox.
                            dialog_Sched_M.dialog("close");
                            // For Defect 707 You don't Refresh the Data on Grid because you just canceled the edit or save function.
                        },
                        "Cancel": function () {
                            $m(this).dialog("close");
                        }
                    }
                });
            }

        });
        // Button Close
        //--------------------------------------------------------------------------------------------------------------------------------------------------------

        //--------------------------------------------------------------------------------------------------------------------------------------------------------
        // Clear DialogBox.
        $("#btnClearDialog").click(function () {
            // Clear Dialogbox.
            if (sessionStorage.getItem("UpdateFlagSchedM").toString() == "Yes") { // Update Clear
                //Clear Values.
                $("#txtCurrentDateSchedL").val("");
                $("#txtContributorName").val("");
                $("#txtExplanationCommon").val("");
                $("#txtStreetName").val("");
                $("#txtCity").val("");
                $("#txtState").val("");
                $("#txtZipCode").val("");
                $("#txtAmountRefunded").val("");

                $("#txtCurrentDateSchedL").blur();
                $("#txtAmountRefunded").blur();

                $("#lstMethod")[0].selectedIndex = 0;
                $("#tdCheck").hide();

                $("#lblExplanation").text("Explanation");

                $("#txtCountry").val("United States");
                $("#txtCountry").prop("disabled", true);
                $("#chkCountry").prop('checked', false);
                $("#txtState").prop('maxLength', '2');
                $("#txtZipCode").blur();

                $("#tdCountryContributionChk").show("slow");
                $("#tdCountryContributionTxt").show("slow");

                $m("label[for=txtCurrentDateSchedL]").text('');
                $m("#txtCurrentDateSchedL").removeClass("error");

                $m("label[for=txtContributorName]").text('');
                $m("#txtContributorName").removeClass("error");

                $m("label[for=txtCountry]").text('');
                $m("#txtCountry").removeClass("error");

                $m("label[for=txtAmountRefunded]").text('');
                $m("#txtAmountRefunded").removeClass("error");

                $("#txtCurrentDateSchedL").focus();
            }
            else {
                if (sessionStorage.getItem("flagClear").toString() == "true") {

                    // Resent the Values
                    var contributiontName = $("#lstContributorName option:selected").index().toString();
                    var contributionAmount = $("#lstContributorAmount option:selected").index().toString();
                    var contributionDate = $("#lstContributorDate option:selected").index().toString();

                    var outstandingAmt = sessionStorage.getItem("OutstandingAmountClear").toString();

                    // Clear Dialogbox Values.
                    ClearDialogBoxValidationSchedM();

                    $m("label[for=lstContributorName]").text('');
                    $m("#lstContributorName").removeClass("error");

                    $m("label[for=txtCurrentDateSchedL]").text('');
                    $m("#txtCurrentDateSchedL").removeClass("error");

                    $m("label[for=txtContributorName]").text('');
                    $m("#txtContributorName").removeClass("error");

                    $m("label[for=txtAmountRefunded]").text('');
                    $m("#txtAmountRefunded").removeClass("error");

                    $("#lblExplanation").text("Explanation");

                    $("#txtOutstandingAmount").val(parseFloat(outstandingAmt).toFixed(2).toString());

                    // Resent the Values
                    $("#lstContributorName")[0].selectedIndex = parseInt(contributiontName);
                    $("#lstContributorAmount")[0].selectedIndex = parseInt(contributionAmount);
                    $("#lstContributorDate")[0].selectedIndex = parseInt(contributionDate);

                    $("#lstContributorAmount").prop("disabled", false);
                    $("#lstContributorDate").prop("disabled", false);

                    $("#txtCurrentDateSchedL").focus();
                }
                else {

                    // Clear Dialogbox Values.
                    ClearDialogBoxValidationSchedM();

                    $m("label[for=lstContributorName]").text('');
                    $m("#lstContributorName").removeClass("error");

                    $m("label[for=txtCurrentDateSchedL]").text('');
                    $m("#txtCurrentDateSchedL").removeClass("error");

                    $m("label[for=txtContributorName]").text('');
                    $m("#txtContributorName").removeClass("error");

                    $m("label[for=txtAmountRefunded]").text('');
                    $m("#txtAmountRefunded").removeClass("error");

                    // Clear the Fileds.
                    $("#lstContributorName")[0].selectedIndex = 0;
                    $("#lstContributorAmount")[0].selectedIndex = 0;
                    $("#lstContributorDate")[0].selectedIndex = 0;

                    $("#lblExplanation").text("Explanation");

                    //Hide/Show Controls
                    $("#dvSearch").show();
                    $("#dvSearchContributor").show();
                    $("#btnNextDialog").show();
                    //Hide/Show Controls
                    $("#dvContrRefunds").hide();
                    $("#dvAddContrRefunds").hide();
                    $("#btnPreviousDialog").hide();
                    $("#btnUpdateDialogSchedM").hide();
                    $("#btnAddDialogSchedM").hide();

                    $("#lstContributorAmount").prop("disabled", true);
                    $("#lstContributorDate").prop("disabled", true);

                    $("#lstContributorName").focus();
                }
            }

        });
        //--------------------------------------------------------------------------------------------------------------------------------------------------------


        //--------------------------------------------------------------------------------------------------------------------------------------------------------
        // Creditor Name - Auto Complete
        $m("#txtContributorName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/ContributionRefundedSchedM/AutoCompleteEntityName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();

                var selectedValue = ui.item.label;
                $.ajax({
                    url: "@Url.Content("~/ContributionRefundedSchedM/GetAutoCompleteNameData/")",
                    dataType: "json",
                    data: {
                        strValue: selectedValue.toString()
                    },
                    success: function (results) {
                        $.each(results, function (i, item) {
                            $("#txtContributorName").val(item.FilingEntityName.toString());
                            $("#txtStreetName").val(item.FilingEntityStreetName.toString());
                            $("#txtCity").val(item.FilingEntityCity.toString());
                            $("#txtState").val(item.FilingEntityState.toString());
                            $("#txtZipCode").val(item.FilingEntityZip.toString());
                            $("#txtCountry").val(item.FilingEntityCountry.toString());
                            if ($("#txtCountry").val().toString() == "United States") {
                                $("#chkCountry").prop('checked', false);
                                $("#txtCountry").prop("disabled", true);
                                $("#txtState").prop('maxLength', '2');
                                if (item.FilingEntityZip.toString() != "") {
                                    $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                                }
                                else {
                                    $("#txtZipCode").addClass("watermarkHTMLTextBox");
                                    $("#txtZipCode").blur();
                                }
                            } else {
                                $("#chkCountry").prop('checked', true);
                                $("#txtCountry").prop("disabled", false);
                                $("#txtState").prop('maxLength', '30');

                                $m('#txtZipCode').attr("placeholder", "");
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            }
                            $m("#txtContributorName").valid();
                            // Address validation
                            $m("#txtCountry").valid();
                            $m("#txtStreetName").valid();
                            $m("#txtCity").valid();
                            $m("#txtState").valid();
                            $m("#txtZipCode").valid();
                        });
                    }
                });
                $("#lstMethod").focus();
            },
            change: function (event, ui) {
                if (ui.item) {
                    // do whatever you want to when the item is found
                    $m("label[for=txtContributorName]").text('');
                    $m("#txtContributorName").removeClass("error");
                }
                else {
                    // do whatever you want to when the item is not found
                    $m("label[for=txtContributorName]").text('');
                    $m("#txtContributorName").removeClass("error");
                }
            }
        });
        //--------------------------------------------------------------------------------------------------------------------------------------------------------

        // Method Change
        // ------------------------------------------------------------------------------------------------------------------------------------------
        $("#lstMethod").change(function () {

            $("#txtCheck").val("");

            if ($("#lstMethod option:selected").val().toString() == "1") { // CHECK
                $("#tdCheck").show();
                $("#lblExplanation").text("Explanation");

                $m("label[for=txtExplanationCommon]").text('');
                $m("#txtExplanationCommon").removeClass("error");
            }
            else if ($("#lstMethod option:selected").val().toString() == "7") { // OTHER
                // EXPLANATION MANADATORY
                $("#lblExplanation").text("* Explanation");
                $("#tdCheck").hide();
            }
            else {
                $("#lblExplanation").text("Explanation");
                $("#tdCheck").hide();

                $m("label[for=txtExplanationCommon]").text('');
                $m("#txtExplanationCommon").removeClass("error");
            }

            $m("label[for=txtCheck]").text('');
            $m("#txtCheck").removeClass("error");
        });
        // Method Change
        // ------------------------------------------------------------------------------------------------------------------------------------------

        //--------------------------------------------------------------------------------------------------------------------------------------------------------
        // Add New Transaction DialobBox.
        $m("#btnAddNewTransaction").button().on("click", function () {
            event.preventDefault();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                 txtFilerId: $("#txtFilerID").val(),
                 lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                 strElectionTypeId: $m("#lstElectionType option:selected").val(),
                 lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                 lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                 lstFilingDate: $m("#lstFilingDate option:selected").text(),
                 txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
             }, function (resultEditFlag) {
                 if (resultEditFlag == "TRUE") {
                     sessionStorage.setItem("flagClear", "false");

                     dialog_Sched_M.dialog("open");

                     ClearDialogBoxValidationSchedM();

                     $("#lblExplanation").text("Explanation");

                     sessionStorage.setItem("UpdateFlagSchedM", "No");

                     $m("label[for=lstContributorName]").text('');
                     $m("#lstContributorName").removeClass("error");

                     //---------------------------------------
                     // Hide/Show Controls.
                     $("#dvSearch").show();
                     $("#dvSearchContributor").show();
                     $("#btnNextDialog").show();
                     // Hide/Show Controls.
                     $("#dvContrRefunds").hide();
                     $("#dvAddContrRefunds").hide();
                     $("#btnPreviousDialog").hide();
                     $("#btnUpdateDialogSchedM").hide();
                     $("#btnAddDialogSchedM").hide();
                     // Hide/Show Controls.
                     //---------------------------------------

                     // BIND CONTRIBUTIONS ORIGINAL NAME.
                     $.post("@Url.Content("~/ContributionRefundedSchedM/GetContributionOriginalName/")", {
                         strFilerId: $("#txtFilerID").val()
                     }, function (results) {
                         $("#lstContributorName").empty();
                         for (var i = 0; i < results.length; i++) {
                             $("#lstContributorName").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                         }
                     });

                     sessionStorage.removeItem("ContribtionEditedAmt");

                     $("#lstContributorName").focus();
                 }
                 else {
                     ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before adding this Transaction.', 'Ok', '');
                 } 
            });
        });

        
        // Add Newt Transaction DialobBox.
        //------------------------------------------------------------------------------------------------------------------------------------------------

        //-------------------------------------------------------------------------------------------------------------------------------------------------
        // Button Next
        $("#btnNextDialog").click(function () {
            event.preventDefault();

            // Resent the Values
            var contributiontName = $("#lstContributorName option:selected").index().toString();
            var contributionAmount = $("#lstContributorAmount option:selected").index().toString();
            var contributionDate = $("#lstContributorDate option:selected").index().toString();

            $m('#DialogBoxSchedMForm').valid();
            if ($m('#DialogBoxSchedMForm').valid()) {
                // Clear Dialogbox.
                ClearDialogBoxValidationSchedM();

                $m("label[for=txtCurrentDateSchedL]").text('');
                $m("#txtCurrentDateSchedL").removeClass("error");

                $m("label[for=txtPayorName]").text('');
                $m("#txtPayorName").removeClass("error");

                $m("label[for=txtCountry]").text('');
                $m("#txtCountry").removeClass("error");

                $m("label[for=txtStreetName]").text('');
                $m("#txtStreetName").removeClass("error");

                $m("label[for=txtCity]").text('');
                $m("#txtCity").removeClass("error");

                $m("label[for=txtState]").text('');
                $m("#txtState").removeClass("error");

                $m("label[for=txtZipCode]").text('');
                $m("#txtZipCode").removeClass("error");

                $m("label[for=txtCheck]").text('');
                $m("#txtCheck").removeClass("error");

                $m("label[for=txtAmountRefunded]").text('');
                $m("#txtAmountRefunded").removeClass("error");

                $m("label[for=txtExplanationCommon]").text('');
                $m("#txtExplanationCommon").removeClass("error"); 

                // Resent the Values
                $("#lstContributorName")[0].selectedIndex = parseInt(contributiontName);
                $("#lstContributorAmount")[0].selectedIndex = parseInt(contributionAmount);
                $("#lstContributorDate")[0].selectedIndex = parseInt(contributionDate);

                // Get Outstanding Amount Refunded.
                $.post("@Url.Content("~/ContributionRefundedSchedM/GetOutstandingContrRefundedAmt/")", {
                    strTransNumber: $("#lstContributorAmount option:selected").val(),
                    strFilerId: $("#txtFilerID").val()
                }, function (result) {
                    if (result.toString() != "0") {
                        var outstandingAmountRef = parseFloat($("#lstContributorAmount option:selected").text().toString()) - parseFloat(result.toString());
                        $("#txtOutstandingAmount").val(outstandingAmountRef.toFixed(2).toString());
                        sessionStorage.setItem("OutstandingAmountClear", $("#txtOutstandingAmount").val().toString());
                    }
                    else {
                        var contributionAmt = $("#lstContributorAmount option:selected").text().toString();
                        $("#txtOutstandingAmount").val(parseFloat(contributionAmt).toFixed(2).toString());
                        sessionStorage.setItem("OutstandingAmountClear", $("#txtOutstandingAmount").val().toString());
                    }
                    sessionStorage.setItem("ContributorAmtRefunded", $("#txtOutstandingAmount").val().toString());
                });

                sessionStorage.setItem("flagClear", "true");

                $("#txtOutstandingAmount").prop("disabled", true);

                // Hide/Show Fields
                $("#dvSearchContributor").hide();
                $("#btnNextDialog").hide();
                $("#dvSearch").hide();
                // Hide/Show Fields
                $("#dvAddContrRefunds").show();
                $("#dvContrRefunds").show();
                $("#btnPreviousDialog").show();
                $("#btnAddDialogSchedM").show();

                $m("#txtCurrentDateSchedL").focus();
            }
        });
        // Button Next
        //--------------------------------------------------------------------------------------------------------------------------------------------------------

        //--------------------------------------------------------------------------------------------------------------------------------------------------------
        // Button Previous
        $("#btnPreviousDialog").click(function () {

            var resultPrevious = "All unsaved date will be lost if you navigate away from this page. Are you sure you want to continue?";

            $m('#modal_dialog').text(resultPrevious);
            $m("#modal_dialog").dialog({
                resizable: false,
                width: '400px',
                height: 'auto',
                bgiframe: false,
                position: {
                    my: "center top",
                    at: "center top+200"
                },
                open: function (event, ui) { hideDialogXButton(this); },
                hide: { effect: 'scale', duration: 400 },
                buttons: {
                    "OK": function () {
                        sessionStorage.setItem("flagClear", "false");

                        //Hide/Show Controls
                        $("#dvContrRefunds").hide();
                        $("#btnPreviousDialog").hide();
                        $("#btnAddDialogSchedM").hide();
                        $("#dvAddContrRefunds").hide();
                        //Hide/Show Controls
                        $("#dvSearchContributor").show();
                        $("#btnNextDialog").show();
                        $("#dvSearch").show();

                        $m("label[for=lstContributorName]").text('');
                        $m("#lstContributorName").removeClass("error");

                        $("#lstContributorAmount").prop("disabled", false);
                        $("#lstContributorDate").prop("disabled", false);

                        // Close Confirm Box.
                        $m(this).dialog("close");
                    },
                    "Cancel": function () {
                        $m(this).dialog("close");
                    }
                }
            });
        });
        // Button Previous
        //--------------------------------------------------------------------------------------------------------------------------------------------------------

        //--------------------------------------------------------------------------------------------------------------------------------------------------------
        // Original Expenditure Name Change.
        $("#lstContributorName").change(function () {

            if ($("#lstContributorName option:selected").val().toString() != "0") {

                var selectedOriginalName = $("#lstContributorName option:selected").val().toString();

                $("#lstContributorDate")[0].selectedIndex = 0;
                $("#lstContributorDate").prop("disabled", true);

                $m("label[for=lstContributorDate_validate]").text('');
                $m("#lstContributorDate").removeClass("error");
                if ($("#lstContributorDate option:selected").val().toString() != "0") {
                    $m("#lstContributorDate").valid();
                } 

                $("#lstContributorAmount")[0].selectedIndex = 0;
                $("#lstContributorAmount").prop("disabled", true);

                $m("label[for=lstContributorAmount_validate]").text('');
                $m("#lstContributorAmount").removeClass("error");
                if ($("#lstContributorAmount option:selected").val().toString() != "0") {
                    $m("#lstContributorAmount").valid();
                }        

                $("#dvErrorOriginalNameLst").hide();

                // Bind Original Amount.
                $.post("@Url.Content("~/ContributionRefundedSchedM/GetContributorOrginalAmount/")", {
                    strFilingEntityId: selectedOriginalName
                }, function (resultsAmount) {
                    $("#lstContributorAmount").prop("disabled", false);
                    $("#lstContributorAmount").empty();
                    $("#lstContributorAmount").append("<option value='" + '0' + "'>" + "- Select -" + "</option>");
                    for (var i = 0; i < resultsAmount.length; i++) {
                        $("#lstContributorAmount").append("<option value='" + resultsAmount[i].Value + "'>" + resultsAmount[i].Text + "</option>");
                    }
                    if (resultsAmount.length.toString() == "1") {
                        $("#lstContributorAmount")[0].selectedIndex = 1;
                        $m("#lstContributorAmount").valid();

                        $m("label[for=lstContributorAmount]").text('');
                        $m("#lstContributorAmount").removeClass("error");

                        var selectedOriginalAmount = $("#lstContributorAmount option:selected").val().toString();

                        // Bind Original Expense Date.
                        $.post("@Url.Content("~/ContributionRefundedSchedM/GetContributorOriginalContributionDate/")", {
                            strFilingEntityId: selectedOriginalName,
                            strOriginalAmt: $("#lstContributorAmount option:selected").text()
                            //strFilingTransId: selectedOriginalAmount
                        }, function (resultsDate) {
                            $("#lstContributorDate").prop("disabled", false);
                            $("#lstContributorDate").empty();
                            $("#lstContributorDate").append("<option>" + "- Select -" + "</option>");
                            for (var i = 0; i < resultsDate.length; i++) {
                                $("#lstContributorDate").append("<option value='" + resultsDate[i].Value + "'>" + resultsDate[i].Text + "</option>");
                            }
                            if (resultsDate.length.toString() == "1") {
                                $("#lstContributorDate")[0].selectedIndex = 1;
                                $m("#lstContributorDate").valid();

                                $m("label[for=lstContributorDate]").text('');
                                $m("#lstContributorDate").removeClass("error");
                            }
                        });                                                
                    }
                });
            }
            else {

                $("#lstContributorDate")[0].selectedIndex = 0;
                $("#lstContributorDate").prop("disabled", true);

                $("#lstContributorAmount")[0].selectedIndex = 0;
                $("#lstContributorAmount").prop("disabled", true);

                $m("label[for=lstContributorAmount]").text('');
                $m("#lstContributorAmount").removeClass("error");

                $m("label[for=lstContributorDate]").text('');
                $m("#lstContributorDate").removeClass("error");
            }
            
        });
        // Original Expenditure Name Change.
        //--------------------------------------------------------------------------------------------------------------------------------------------------------

        // Original Expense Date Change
        $("#lstContributorDate").change(function () {
            if ($("#lstContributorAmount option:selected").text().toString() != "- Select -") {
                $("#dvErrorOriginalContrDateLst").hide();
            }
        });

        //--------------------------------------------------------------------------------------------------------------------------------------------------------
        // Orginal Amount Change.
        $("#lstContributorAmount").change(function () {

            if ($("#lstContributorAmount option:selected").val().toString() != "0") {

                var selectedOriginalAmount = $("#lstContributorAmount option:selected").val().toString();

                $("#lstContributorDate")[0].selectedIndex = 0;
                $("#lstContributorDate").prop("disabled", true);

                $m("label[for=lstContributorDate_validate]").text('');
                $m("#lstContributorDate").removeClass("error");

                if ($("#lstContributorDate option:selected").val().toString() != "0") {
                    $m("#lstContributorDate").valid();
                } 

                $("#dvErrorOriginalAmountLst").hide();

                // Bind Original Expense Date.
                var options = {};
                options.url = "@Url.Content("~/ContributionRefundedSchedM/GetContributorOriginalContributionDate/")";
                options.type = "POST";
                options.data = JSON.stringify(
                    {
                        strFilingEntityId: $("#lstContributorName option:selected").val(),
                        strOriginalAmt: $("#lstContributorAmount option:selected").text()
                        //strFilingTransId: selectedOriginalAmount
                    });
                options.dataType = "json";
                options.contentType = "application/json";
                options.success = function (results) {
                    $("#lstContributorDate").prop("disabled", false);
                    $("#lstContributorDate").empty();
                    $("#lstContributorDate").append("<option value='" + '0' + "'>" + "- Select -" + "</option>");
                    for (var i = 0; i < results.length; i++) {
                        $("#lstContributorDate").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                    }
                    if (results.length.toString() == "1") {
                        $("#lstContributorDate")[0].selectedIndex = 1;
                        $m("#lstContributorDate").valid();

                        $m("label[for=lstContributorDate]").text('');
                        $m("#lstContributorDate").removeClass("error");
                    }
                };
                options.error = function () {
                    alert("Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ");
                };
                $.ajax(options);
            }
            else {
                $("#lstContributorDate")[0].selectedIndex = 0;
                $("#lstContributorDate").prop("disabled", true);

                $m("label[for=lstContributorDate]").text('');
                $m("#lstContributorDate").removeClass("error");
            }
        });
        // Orginal Amount Change.
        //-----------------------------------------------------------------------------------------------------------------------------------------------------

        //-----------------------------------------------------------------------------------------------------------------------------------------------------
        // FOCUS IN & FOCUS OUT
        // Amount Validation on Focusout.....
        $("#txtAmountRefunded").focusout(function () {
            if (sessionStorage.getItem("ContribtionEditedAmt") == null) { // NEW TRANSACTIONS.
                if ($("#txtAmountRefunded").val().toString() != "") {
                    // CHECK THE INPUT AMOUNT NUMBERS OR NOT....
                    $.post("@Url.Content("~/_UC_GridCommonControl/GetNumberOrNot/")", {
                        strValue: $("#txtAmountRefunded").val().toString()
                    }, function (resultsNumbers) {
                        if (resultsNumbers) {

                            if ($("#txtOutstandingAmount").val().toString() != "") {
                                var amountRefunded = $("#txtAmountRefunded").val().toString();

                                var outstandingAmt = sessionStorage.getItem("ContributorAmtRefunded").toString();

                                if (parseFloat(amountRefunded) > parseFloat(outstandingAmt)) {
                                    $("#txtAmountRefunded").val("");
                                    $("#txtAmountRefunded").focus();
                                    ShowDialogBox('EFS', 'Amount Refunded cannot be more than Outstanding Amount: $' + parseFloat(outstandingAmt).toFixed(2).toString(), 'Ok', '');
                                }
                                else {
                                    var amountRefunded = parseFloat($("#txtAmountRefunded").val().toString());

                                    var outBalanceAmount = outstandingAmt - amountRefunded;

                                    $("#txtOutstandingAmount").val(outBalanceAmount.toFixed(2).toString());
                                }
                            }
                        }
                    });
                }
                else {
                    if (sessionStorage.getItem("ContributorAmtRefunded") != null) {
                        var orgOutContrRefundedAmt = parseFloat(sessionStorage.getItem("ContributorAmtRefunded").toString()).toFixed(2).toString();
                        $("#txtOutstandingAmount").val(orgOutContrRefundedAmt.toString());
                    }
                }
            } // EDIT TRANSACTIONS.
            else {
                if ($("#txtAmountRefunded").val().toString() != "") {
                    // CHECK THE INPUT AMOUNT NUMBERS OR NOT....
                    $.post("@Url.Content("~/_UC_GridCommonControl/GetNumberOrNot/")", {
                        strValue: $("#txtAmountRefunded").val().toString()
                    }, function (resultsNumbers) {
                        if (resultsNumbers) {
                            if ($("#txtOutstandingAmount").val().toString() != "") {
                                var amountRefunded = $("#txtAmountRefunded").val().toString();

                                var outstandingAmt = sessionStorage.getItem("ContributorAmtRefunded").toString();
                                var editedAmount = sessionStorage.getItem("ContribtionEditedAmt").toString();

                                var outstandingActualAmount = parseFloat(outstandingAmt) + parseFloat(editedAmount);

                                if (parseFloat(amountRefunded) > parseFloat(outstandingActualAmount)) {
                                    $("#txtAmountRefunded").val("");
                                    $("#txtAmountRefunded").focus();
                                    ShowDialogBox('EFS', 'Amount Refunded cannot be more than Outstanding Amount: $' + parseFloat(outstandingActualAmount).toFixed(2).toString(), 'Ok', '');
                                }
                                else {

                                    var outBalanceAmount = outstandingActualAmount - amountRefunded;

                                    $("#txtOutstandingAmount").val(outBalanceAmount.toFixed(2).toString());
                                }
                            }
                        }
                    });
                }
                else {
                    if (sessionStorage.getItem("ContributorAmtRefunded") != null) {

                        var outstandingAmount = sessionStorage.getItem("ContributorAmtRefunded").toString();
                        var originalAmount = sessionStorage.getItem("ContribtionEditedAmt").toString();

                        var actualAmount = parseFloat(outstandingAmount) + parseFloat(originalAmount);
                        
                        $("#txtOutstandingAmount").val(actualAmount.toFixed(2).toString());
                    }
                }
            }
        });


        // FOCUS IN & FOCUS OUT
        //-----------------------------------------------------------------------------------------------------------------------------------------------------


        //-----------------------------------------------------------------------------------------------------------------------------------------------------
        // Add CONTRIBUTION REFUNDED
        // Add
        $("#btnAddDialogSchedM").click(function (e) {
            e.preventDefault();
            // Add Expenditure Refunded Data
            $m('#DialogBoxSchedMForm').valid();
            if ($m('#DialogBoxSchedMForm').valid()) { // Add Contribution Refunded Data
                //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
                $("#divLoading").show();
                // Add Other Receipts Received Transactions.
                $.post("@Url.Content("~/ContributionRefundedSchedM/SaveContributionseRefundedData/")", {
                    txtFilerId: $("#txtFilerID").val(),
                    lstElectionCycle: $("#lstElectionCycle option:selected").text(),
                    lstElectionCycleId: $("#lstElectionCycle option:selected").val(),
                    lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                    lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                    lstElectionType: $("#lstElectionType option:selected").val(),
                    lstElectionDate: $("#lstElectionDate option:selected").text(),
                    strTransNumberOrg: $("#lstContributorAmount option:selected").val(),
                    lstTransactionType: sessionStorage.getItem("TransactionType").toString(),
                    txtDateRcvd: $m("#txtCurrentDateSchedL").val().toString(),
                    txtContributorName: $m("#txtContributorName").val(),
                    txtCountry: $m("#txtCountry").val(),
                    txtStreetName: $m("#txtStreetName").val(),
                    txtCity: $m("#txtCity").val(),
                    txtState: $m("#txtState").val(),
                    txtZipCode: $m("#txtZipCode").val(),
                    lstMethod: $m("#lstMethod option:selected").val(),
                    txtCheck: $m("#txtCheck").val(),
                    txtAmountRefunded: $m("#txtAmountRefunded").val(),
                    txtExplanationRefunded: $m("#txtExplanationCommon").val(),
                    lstElectionDateId: $("#lstElectionDate option:selected").val(),
                    txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
                    chkCountry: $('#chkCountry').is(':checked').toString(),
                    lstFilingDate: $m("#lstFilingDate option:selected").text(),
                    txtReportPeriodDatesTo: sessionStorage.getItem("FilingDate").toString(),
                    lstResigTermType: $m("#lstResigTermType option:selected").val(),
                    lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
                }, function (results) {

                    if (results.Errors == null) {
                        if (results == "Custom Error") {
                            ShowDialogBox('EFS', 'System Error found. Please try again.', 'Ok', '');
                            window.location.reload();
                        }
                        else {
                            if (results == "0") {
                                ShowDialogBox('EFS', 'System Error Found. Please try again.', 'Ok', '');
                                window.location.reload();
                            }
                            else {
                                results = "Custom Error";
                                $("#dvSearch").show();
                                $("#dvSearchContributor").show();
                                $("#btnNextDialog").show();

                                // Show All Fileds
                                $("#dvContrRefunds").hide();
                                $("#dvAddContrRefunds").hide();
                                $("#btnPreviousDialog").hide();
                                $("#btnUpdateDialogSchedM").hide();
                                $("#btnAddDialogSchedM").hide();

                                // Clear Dialogbox.
                                ClearDialogBoxValidationSchedM();

                                $("#lblExplanation").text("Explanation");

                                $m("label[for=lstContributorName]").text('');
                                $m("#lstContributorName").removeClass("error");

                                $("#lstContributorName").focus();

                                // Data Added Sucussfully.
                                window.status = "Transaction saved successfully";
                                var doneFunction = function () {
                                    $("#divLoading").hide();
                                    ShowDialogBox('EFS', 'Transaction saved Successfully', 'Ok', '');
                                }
                                // Refresh the Data on Grid...
                                GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);
                                $m("label[for=lstContributorName]").text('');
                                $m("#lstContributorName").removeClass("error");
                            }
                        }
                    }
                    else if (results.Errors.length >= 0) {
                        $("#divLoading").hide();
                        // Clear Dialogbox.
                        ClearDialogBoxValidationSchedM();
                        AppendCustomErrorLabels(results.Errors);
                    }
                }).fail(function () {
                    $("#divLoading").hide();//SaveContributionseRefundedData 
                });
            }
        });
        // Add EXPENDITURE REFUNDS
        //--------------------------------------------------------------------------------------------------------------------------------------------------------

        //--------------------------------------------------------------------------------------------------------------------------------------------------------
        // Update EXPENDITURE REFUNDS
        $("#btnUpdateDialogSchedM").click(function (e) {
            e.preventDefault();
            $m('#DialogBoxSchedMForm').valid();
            if ($m('#DialogBoxSchedMForm').valid()) {
                // SHOW THE PROCESSING....
                $("#divLoading").show();
                // Update Expenditure Refunded Transactions.
                $m.post("@Url.Content("~/ContributionRefundedSchedM/UpdateContributionsRefunded/")", {
                    strTransNumber: sessionStorage.getItem("FilingTransId").toString(),
                    strFilingEntId: sessionStorage.getItem("FilingEntityId").toString(),
                    txtDateRcvd: $m("#txtCurrentDateSchedL").val(),
                    txtContributorName: $m("#txtContributorName").val(),
                    txtCountry: $m("#txtCountry").val(),
                    txtStreetName: $m("#txtStreetName").val(),
                    txtCity: $m("#txtCity").val(),
                    txtState: $m("#txtState").val(),
                    txtZipCode: $m("#txtZipCode").val(),
                    lstMethod: $m("#lstMethod option:selected").val(),
                    txtCheck: $m("#txtCheck").val(),
                    txtAmountRefunded: $m("#txtAmountRefunded").val(),
                    txtExplanationRefunded: $m("#txtExplanationCommon").val(),
                    txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
                    chkCountry: $('#chkCountry').is(':checked').toString(),
                    lstFilingDate: $m("#lstFilingDate option:selected").text(),
                    txtReportPeriodDatesTo: sessionStorage.getItem("FilingDate").toString(),
                    lstResigTermType: $m("#lstResigTermType option:selected").val(),
                    lstElectionType: $("#lstElectionType option:selected").val(),
                }, function (results) {

                    if (results.Errors == null) {
                        // Close Dialog Box.
                        dialog_Sched_M.dialog("close");//Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                        window.status = "Transaction saved successfully";
                        var doneFunction = function () {
                            // HIDE THE PROCESSING....
                            $("#divLoading").hide();
                            ShowDialogBox('EFS', 'Transaction saved Successfully', 'Ok', '');
                        }
                        //Refresh the Data on Grid... Hides the loading too!
                        GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);
                    }
                    else if (results.Errors.length >= 0) {

                        // Clear Dialogbox.
                        ClearDialogBoxValidationSchedM();
                        AppendCustomErrorLabels(results.Errors);
                    }
                }).fail(function () {
                    $("#divLoading").hide();// UpdateContributionsRefunded failed.
                });
            }// IF VALIDATION FAILED.
            else {
                // HIDE THE PROCESSING....
                $("#divLoading").hide();
            }
        });
        // Update EXPENDITURE REFUNDS
        //-------------------------------------------------------------------------------------------------------------------------------------------------

        // ROW SELECT YELLOW HIGHLIGHTED...
        $m('#gridFilingTransactions tbody').on('click', 'tr', function (e) {
            e.preventDefault();

            if ($(this).hasClass('selected') != false) {
                tableFilingTransactions.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
                // Bind Data
            }
        });

        // EDIT COMMON
        //------------------------------------------------------------------------------------------------------------------------------------------------
        if (sessionStorage.getItem("EditFlag") != null) {
            if (sessionStorage.getItem("EditFlag").toString() == "True") {

                sessionStorage.setItem("UpdateFlagSchedM", "Yes");

                $("#lstTransactionType option").each(function () {
                    if ($(this).val() == sessionStorage.getItem("ScheduleId").toString()) {
                        //$(this).attr('selected', 'selected');
                        $(this).prop("selected", true);
                    }
                });

                // BIND COMMON SESSION VARIABLE.
                sessionStorage.setItem("TransactionType", sessionStorage.getItem("ScheduleId").toString());        

                // Hide Error Messages.//////////////////
                $("#dvErrorOriginalNameLst").hide();
                $("#dvErrorOriginalAmountLst").hide();
                $("#dvErrorOriginalContrDateLst").hide();
                $("#dvErrorDateRcvd").hide();
                $("#txtCurrentDateSchedL").removeClass("ui-state-error");
                $("#divErrorContrName").hide();
                $("#txtContributorName").removeClass("ui-state-error");
                $("#divErrorStreetName").hide();
                $("#txtStreetName").removeClass("ui-state-error");
                $("#divErrorCity").hide();
                $("#txtCity").removeClass("ui-state-error");
                $("#divErrorState").hide();
                $("#txtState").removeClass("ui-state-error");
                $("#divErrorZip5").hide();
                $("#txtZipCode").removeClass("ui-state-error");
                $("#dvErrorCheck").hide();
                $("#txtCheck").removeClass("ui-state-error");
                $("#dvErrorAmountRefunded").hide();
                $("#txtAmountRefunded").removeClass("ui-state-error");
                $("#dvErrorExplanationRefunded").hide();
                $("#txtExplanationCommon").removeClass("ui-state-error");
                // Hide Error Messages.//////////////////                                

                $.post("@Url.Content("~/_UC_GridCommonControl/GetEditTransactionData/")", {
                    strTransNumber: sessionStorage.getItem("TransNumberEdit").toString()
                }, function (resultsEditData) {
                    $.each(resultsEditData, function (i, item) {

                        $("#btnRefunds").removeClass("AddLeftCSSForScheI");
                        $("#btnRefunds").addClass("AddLeftCSSForScheLRefundsUpdate");

                        $("#txtOutstandingAmount").prop("disabled", true);

                        // Hide/Show Fileds
                        $("#dvSearchContributor").hide();
                        $("#btnNextDialog").hide();
                        $("#dvSearch").hide();
                        $("#btnAddDialogSchedM").hide();
                        $("#btnPreviousDialog").hide();

                        $("#dvContrRefunds").show();
                        $("#btnUpdateDialogSchedM").show();

                        dialog_Sched_M.dialog("open");

                        sessionStorage.setItem("FilingTransId", item.TransNumber.toString());
                        sessionStorage.setItem("FilingEntityId", item.FilingEntityId.toString());

                        $("#txtCurrentDateSchedL").val(item.SchedDate.toString());
                        $("#txtCurrentDateSchedL").focus();
                        if ($("#txtCurrentDateSchedL").val().toString() != "MM/DD/YYYY") {
                            $("#txtCurrentDateSchedL").removeClass('watermark');
                        }
                        $("#txtContributorName").val(item.FilingEntityName.toString());
                        $("#txtStreetName").val(item.FilingStreetName.toString());
                        $("#txtCity").val(item.FilingCity.toString());
                        $("#txtState").val(item.FilingState.toString());
                        $("#txtZipCode").val(item.FilingZip.toString());
                        if ($("#txtZipCode").val().toString() != "00000-0000") {
                            $("#txtZipCode").removeClass('watermark');
                        }
                        if (item.FilingZip.toString() != "") {
                            $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                        }
                        /// Country
                        $("#txtCountry").val(item.FilingCountry.toString());
                        if (item.FilingCountry.toString() == "United States") {
                            $("#chkCountry").prop('checked', false);
                            $("#txtCountry").prop("disabled", true);
                            $("#txtState").prop('maxLength', '2');
                        }
                        else { // Other Country
                            $("#chkCountry").prop('checked', true);
                            $("#txtCountry").prop("disabled", false);
                            $("#txtState").prop('maxLength', '30');
                            $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            $m('#txtZipCode').attr("placeholder", "");
                        }
                        if (item.PaymentTypeDesc.toString() != null || item.PaymentTypeDesc.toString() != "") {
                            $("#lstMethod option").each(function () {
                                if ($(this).text() == item.PaymentTypeDesc.toString()) {
                                    //$(this).attr('selected', 'selected');
                                    $(this).prop("selected", true);
                                }
                            });
                        }
                        //$("#txtCheck").val(item.PayNumber.toString());
                        if (item.PaymentTypeId.toString() == "1") {
                            $("#tdCheck").show();
                            $("#txtCheck").val(item.PayNumber.toString());
                        }
                        else {
                            $("#tdCheck").hide();
                        }
                        var otherReceiptsAmt = item.OriginalAmount.toString();
                        $("#txtAmountRefunded").val(otherReceiptsAmt);
                        if (item.OriginalAmount.toString() != "") {
                            $("#txtAmountRefunded").removeClass("watermarkHTMLTextBox");
                        }
                        $("#txtExplanationCommon").val(item.TransExplanation.toString());

                        // Get Outstanding Amount Refunded.
                        $.post("@Url.Content("~/ContributionRefundedSchedM/GetOriginalAmountContrTransIdUpdate/")", {
                            strTransNumber: item.TransNumber.toString()
                        }, function (results) {
                            var originalAmt = "";
                            var originalTransId = "";
                            $.each(results, function (i, item) {
                                originalTransId = item.TransNumber.toString();
                                originalAmt = item.OriginalAmount.toString();
                            });
                            var outstandingAmt = "";
                            // Get Outstanding Amount Refunded.
                            $.post("@Url.Content("~/ContributionRefundedSchedM/GetOutstandingContrRefundedAmt/")", {
                                strTransNumber: originalTransId,
                                strFilerId: $("#txtFilerID").val()
                            }, function (result) {
                                outstandingAmt = parseFloat(originalAmt.toString()) - parseFloat(result.toString());
                                $("#txtOutstandingAmount").val(outstandingAmt.toFixed(2).toString());
                                // OUTSTANDING AMOUNT SET.
                                sessionStorage.setItem("ContributorAmtRefunded", $("#txtOutstandingAmount").val().toString());
                                sessionStorage.setItem("ContribtionEditedAmt", $("#txtAmountRefunded").val().toString());
                            });
                        });
                    });
                });

                // Common Code
                sessionStorage.setItem("EditFlag", "False");
            }
        }
        // EDIT COMMON
        //------------------------------------------------------------------------------------------------------------------------------------------------

        //------------------------------------------------------------------------------------------------------------------------------------------------
        // Update EXPENDITURE REFUNDS
        // Edit Expenditure Refunded
        $m('#gridFilingTransactions tbody').on('click', 'a.editor_edit_Sched_M', function (e) {
            e.preventDefault();

            var data = tableFilingTransactions.row($(this).parents('tr')).data();
            //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                txtFilerId: $("#txtFilerID").val(),
                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }, function (resultEditFlag) {
                if (resultEditFlag == "TRUE") {
                    if (data[1].toString() == "13") { // Schedule M

                        $("#txtOutstandingAmount").prop("disabled", true);

                        // Hide/Show Fileds
                        $("#dvSearchContributor").hide();
                        $("#btnNextDialog").hide();
                        $("#dvSearch").hide();
                        $("#btnAddDialogSchedM").hide();
                        $("#btnPreviousDialog").hide();

                        $("#dvContrRefunds").show();
                        $("#btnUpdateDialogSchedM").show();
                        $("#divLoading").hide();
                        dialog_Sched_M.dialog("open");

                        // Clear Dialogbox.
                        ClearDialogBoxValidationSchedM();

                        sessionStorage.setItem("FilingTransId", data[42].toString());
                        sessionStorage.setItem("FilingEntityId", data[2].toString());

                        sessionStorage.setItem("UpdateFlagSchedM", "Yes");

                        $m("label[for=txtCurrentDateSchedL]").text('');
                        $m("#txtCurrentDateSchedL").removeClass("error");

                        $("#lblExplanation").text("Explanation");

                        $("#txtCurrentDateSchedL").val(data[10].toString());
                        if (data[10].toString() != "" || data[10].toString() != null) {
                            var MyDate = new Date($("#txtCurrentDateSchedL").val().toString());
                            var MyDateString;
                            MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                                + ('0' + MyDate.getDate()).slice(-2) + '/'
                                + MyDate.getFullYear();
                            $("#txtCurrentDateSchedL").val("");
                            $("#txtCurrentDateSchedL").val(MyDateString);
                            $("#txtCurrentDateSchedL").removeClass("watermarkHTMLTextBox");
                        }
                        $("#txtContributorName").val(data[13].toString());
                        $("#txtStreetName").val(data[18].toString());
                        $("#txtCity").val(data[19].toString());
                        $("#txtState").val(data[20].toString());
                        $("#txtZipCode").val(data[21].toString());
                        /// Country
                        $("#txtCountry").val(data[17].toString());
                        if (data[17].toString() == "United States") {
                            $("#chkCountry").prop('checked', false);
                            $("#txtCountry").prop("disabled", true);
                            $("#txtState").prop('maxLength', '2');
                        }
                        else { // Other Country
                            $("#chkCountry").prop('checked', true);
                            $("#txtCountry").prop("disabled", false);
                            $("#txtState").prop('maxLength', '30');
                            $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            $m('#txtZipCode').attr("placeholder", "");
                        }
                        if (data[21].toString() != "") {
                            $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                        }
                        else {
                            $("#txtZipCode").addClass("watermarkHTMLTextBox");
                            if (data[17].toString() == "United States") {
                                $("#txtZipCode").blur();
                            }
                        }
                        if (data[5].toString() == "1") {
                            $("#tdCheck").show();
                            $("#txtCheck").val(data[23].toString());
                        }
                        else {
                            $("#tdCheck").hide();
                        }

                        // Payment Type = Other Explanation Manadatory
                        if (data[5].toString() == "7") {
                            $("#lblExplanation").text("* Explanation");
                        }
                        // Bind Method Data
                        var options = {};
                        options.url = "@Url.Content("~/ContributionsCandIndFamily/GetPaymentMethodData/")";
                        options.type = "POST";
                        options.data = null;
                        options.dataType = "json";
                        options.contentType = "application/json";
                        options.success = function (resultsMethod) {
                            $("#lstMethod").empty();
                            for (var i = 0; i < resultsMethod.length; i++) {
                                $("#lstMethod").append("<option value='" + resultsMethod[i].Value + "'>" + resultsMethod[i].Text + "</option>");
                            }
                            // Set Method
                            if (data[5].toString() != null || data[5].toString() != "") {
                                $m("#lstMethod option")
                                    .filter(function () { return $m(this).val() == data[5].toString(); })
                                    .attr("selected", "selected");
                            }
                        };
                        options.error = function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                        };
                        $.ajax(options);

                        $("#txtCheck").val(data[23].toString());

                        var otherReceiptsAmt = data[24].toString();
                        $("#txtAmountRefunded").val(otherReceiptsAmt);
                        if ($("#txtAmountRefunded").val().toString() != "" || $("#txtAmountRefunded").val().toString() != "999999999.99") {
                            $("#txtAmountRefunded").removeClass("watermarkHTMLTextBox");
                        }
                        $("#txtExplanationCommon").val(data[36].toString());

                        // Get Outstanding Amount Refunded.
                        $.post("@Url.Content("~/ContributionRefundedSchedM/GetOriginalAmountContrTransIdUpdate/")", {
                            strTransNumber: data[42].toString()
                        }, function (results) {
                            var originalAmt = "";
                            var originalTransId = "";
                            $.each(results, function (i, item) {
                                originalTransId = item.TransNumber.toString();
                                originalAmt = item.OriginalAmount.toString();
                            });
                            var outstandingAmt = "";
                            // Get Outstanding Amount Refunded.
                            $.post("@Url.Content("~/ContributionRefundedSchedM/GetOutstandingContrRefundedAmt/")", {
                                strTransNumber: originalTransId,
                                strFilerId: $("#txtFilerID").val()
                            }, function (result) {
                                outstandingAmt = parseFloat(originalAmt.toString()) - parseFloat(result.toString());
                                $("#txtOutstandingAmount").val(outstandingAmt.toFixed(2).toString());
                                // OUTSTANDING AMOUNT SET.
                                sessionStorage.setItem("ContributorAmtRefunded", $("#txtOutstandingAmount").val().toString());
                                sessionStorage.setItem("ContribtionEditedAmt", $("#txtAmountRefunded").val().toString());
                            });
                        });

                        $("#txtCurrentDateSchedL").select();

                    }// Other Schedules
                    else if (["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "16", "17", "18", "19", "20", "21"].includes(data[1].toString())) {
                        //Common code to determine redirect url and set session varialbes. Also hides $("#divLoading") on fail.
                        //Uses window.location.href
                        appCommonEFS_DetermineScheduleRedirect(data[1].toString(), data[42].toString());
                    }
                } else {//resultEditFlag != "TRUE"
                    $("#divLoading").hide();
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before editing this Transaction.', 'Ok', '');
                }
            }).fail(function () {
                $("#divLoading").hide();// GetEditFlag failed.
            });
        });

        //-------------------------------------------------------------------------------------------------------------------------------------------------
        // Delete EXPENDITURE REFUNDS
        $m('#gridFilingTransactions tbody').on('click', 'a.editor_remove_Sched_M', function (e) {
            event.preventDefault();
            var dataTrans = tableFilingTransactions.row($(this).parents('tr')).data();
            //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                txtFilerId: $("#txtFilerID").val(),
                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }, function (resultEditFlag) {
                if (resultEditFlag == "TRUE") {

                    $.post("@Url.Content("~/_UC_GridCommonControl/GetDeleteFlag/")", {
                    }, function (resultDeleteFlag) {
                        if (resultDeleteFlag == "True") {

                            // LOAN RECEIVED DELETE CHECK.
                            $.post("@Url.Content("~/LoanReceivedSchedI/ValidateDelete_LoanReceived/")", {
                                loan_Lib_Number: dataTrans[41].toString(),
                            }, function (resultDeleteFlagSchedI) {

                                // CHECK THE VALIDATION IF ANY CONTRIBUTION REFUNDS (SCHEDULE 'M') EXISTS OR NOT.
                                // IF SCHEDULE 'M' EXISTS FOR EITHER SCHEDULE 'A', SCHEUDLE 'B', OR SCHEDULE 'C'...
                                // THEN SHOULD NOT DELETE UNTIL CHILD RECORDS DELETE.
                                $.post("@Url.Content("~/ContributionsCandIndFamily/ContributionsRefundSchedMExists/")", {
                                    strTransNumber: dataTrans[42].toString()
                                }, function (resultDelSchedABC) {

                                    // CHECK THE VALIDATION IF ANY EXPENDITURE REFUNDS (SCHEDULE 'L') EXISTS OR NOT.
                                    // IF SCHEDULE 'L' EXITS THEN SCHEDULE 'F' SHOULD NOT DELETE UNTLI CHILD DELETE ALL.
                                    $.post("@Url.Content("~/ExpenditurePaymentsSchedF/ExpenditureRefundSchedLExists/")", {
                                        strTransNumber: dataTrans[42].toString()
                                    }, function (resultDelSchedF) {

                                        var deleteData = {
                                            resultDeleteFlagSchedI: resultDeleteFlagSchedI,
                                            resultDelSchedABC: resultDelSchedABC,
                                            resultDelSchedF: resultDelSchedF
                                        }

                                        var resultsDelete = "Are you sure you want to delete this transaction?";
                                        var deleteURL = "";
                                        //Determine if you can
                                        var veredict = appCommonEFS_DetermineScheduleDelete(dataTrans, deleteData);
                                        if (!veredict || !bUtilIsObject(veredict)) {
                                            $("#divLoading").hide();
                                            return false;
                                        } else {
                                            var resultsDelete = veredict.alertMessageForOperation;
                                            var deleteURL = veredict.deleteURL;
                                        }

                                        $m('#modal_dialog').text(resultsDelete);
                                        $m("#modal_dialog").dialog({
                                            resizable: false,
                                            width: '400px',
                                            height: 'auto',
                                            bgiframe: false,
                                            position: {
                                                my: "center top",
                                                at: "center top+200"
                                            },
                                            open: function (event, ui) {
                                                $("#divLoading").hide();
                                                hideDialogXButton(this);
                                            },
                                            hide: { effect: 'scale', duration: 400 },
                                            buttons: {
                                                "OK": function () {
                                                    //Close Confirm Box.
                                                    $m(this).dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                                    $("#divLoading").show();
                                                    /// DELETE FILING TRANSACTIONS DATA.
                                                    var options = {};
                                                    options.url = deleteURL;
                                                    options.type = "GET";
                                                    options.data = {
                                                        strLoanLiabNumberOrg: dataTrans[41].toString(),
                                                        strTransNumber: dataTrans[42].toString(),
                                                        strRLiability: dataTrans[6].toString()
                                                    };
                                                    options.dataType = "json";
                                                    options.contentType = "application/json";
                                                    options.success = function (results) {

                                                        // Successfully Deleted.
                                                        window.status = "Record deleted successfully";
                                                        //Update the table... hides the loading too!
                                                        GetAllTransactionTypesData(true, tableFilingTransactions, false, false);
                                                    };
                                                    options.error = function () {
                                                        $("#divLoading").hide();// Call to method in deleteURL failed.
                                                        ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                                                    };
                                                    $.ajax(options);
                                                },
                                                "Cancel": function () {
                                                    $m(this).dialog("close");
                                                }
                                            }
                                        });
                                    }).fail(function () {
                                        $("#divLoading").hide();// ExpenditureRefundSchedLExists failed.
                                    });
                                }).fail(function () {
                                    $("#divLoading").hide();// ContributionsRefundSchedMExists failed.
                                });
                            }).fail(function () {
                                $("#divLoading").hide();// ValidateDelete_LoanReceived failed.
                            });
                        } else {//When resultDeleteFlag != "True"
                            $("#divLoading").hide();
                            ShowDialogBox('EFS', 'The last transaction cannot be deleted.  To delete the Disclosure report, a deletion request must be submitted to cfinfo@elections.ny.gov', 'Ok', '');
                        }
                    }).fail(function () {
                        $("#divLoading").hide();// GetDeleteFlag failed.
                    });
                } else {//When  resultEditFlag != "TRUE".
                    $("#divLoading").hide();
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before removing this Transaction.', 'Ok', '');
                }
            }).fail(function () {
                $("#divLoading").hide();// GetEditFlag failed.
            });
        });
        // Delete EXPENDITURE REFUNDS
        //--------------------------------------------------------------------------------------------------------------------------------------------------------

        //==============================================================================================================================================
        // COMMON CODE FOR BUTTON CLEAR AND IT WILL GO TO MAIN PAGE CONTRIBUTION MONETARY.
        //Bind Clear Click
        $(".clsCommonClear").bind('click', function () {
            $("#divGridMonetary").show();
            sessionStorage.setDataTable = "true";
            $("#divShowHideHelp").removeClass("clsShowHideHelpSec");
            $("#divShowHideHelp").addClass("clsShowHideHelpSecInMobileTablet");

            sessionStorage.setItem("FilerId", $("#txtFilerID option:selected").val());
            sessionStorage.setItem("CommitteeName", $("#txtCommitteeName option:selected").val());
            sessionStorage.setItem("ElectionCycle", $("#lstElectionCycle option:selected").val());
            sessionStorage.setItem("ElectionType", $("#lstElectionType option:selected").val());
            sessionStorage.setItem("ElectionDate", $("#lstElectionDate option:selected").val());
            sessionStorage.setItem("DisclosureType", $("#lstDisclosureType option:selected").val());
            sessionStorage.setItem("DisclosurePeriod", $("#lstDisclosurePeriod option:selected").val());
            sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesFrom").val());
            if ($("#lstElectionType option:selected").val() == "6") {
                sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
            }
            else {
                sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
            }
            sessionStorage.setItem("TransactionType", $("#lstTransactionType option:selected").val());
            sessionStorage.setItem("lstResigTermType", $("#lstResigTermType option:selected").val());
            sessionStorage.setItem("lstFilingDate", $("#lstFilingDate option:selected").val());

            sessionStorage.setItem("TransactionTypeId", "true");
            var urlContrHome = "@Url.Content("~/ContributionsMonetary/ContributionsMonetary/")";

            window.location.href = urlContrHome;
        });
        // COMMON CODE FOR BUTTON CLEAR AND IT WILL GO TO MAIN PAGE CONTRIBUTION MONETARY.
        //===============================================================================================++=============================================


        //===============================================================================================================================================
        // Grid Common Code ///////////////////////////////////////////////////
        //==============================================================================================+================================================
        // Grid Common Code ///////////////////////////////////////////////////
        //===============================================================================================================================================
        // Grid Common Code ///////////////////////////////////////////////////
        // CALL LOAD DATA FUNCTION
        LoadData();

        // FUNCTION LOAD DATA
        function LoadData() {
            $("#divLoading").show();
            tableFilingTransactions = $m('#gridFilingTransactions').DataTable({
                "bProcessing": true,
                "responsive": true,
                "deferRender": true,
                "retrieve": true,
                "columnDefs": [
                    {
                        "targets": [0, 1, 2, 3, 4, 5, 6, 7, 38, 39, 41, 42, 43, 44],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        "targets": [9],
                        "fnCreatedCell": function (cell) {
                            cell.setAttribute('aria-label', "Row Actions");
                        }
                    }
                ],
                "initComplete": function (settings, json) {
                    //Accessibility: Applies various Accessibility features to this dataTable.
                    makeDataTableAccessible($m('#gridFilingTransactions').DataTable());
                },
                "fnRowCallback": function (nRow, aaData, iDisplayIndex) {
                    var uniqueID = generateUniqueRowIdForFnRowCallback(iDisplayIndex, nRow);
                    if (aaData[1] == "13") {
                        $m('td:eq(1)', nRow).html('<a class="editor_edit_Sched_M" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_Sched_M" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a>');
                    }
                    else if (aaData[1] == "14") {
                        $m('td:eq(1)', nRow).html('');
                    }
                    else if (aaData[1] == "11") { // LIABILITY/LOANS FORGIVEN 
                        $m('td:eq(1)', nRow).html('<a class="editor_remove_Sched_M" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a>');
                    }
                    else {
                        if (aaData[1] != "15") {
                            $m('td:eq(1)', nRow).html('<a class="editor_edit_Sched_M" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_Sched_M" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                        }
                        else { // SCHEDULE 15 LEGACY DATA NOT EDIT NO ADD ONLY DELETE.
                            $m('td:eq(1)', nRow).html('<a class="editor_remove_Sched_M" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                        }
                    }
                    return nRow;
                },
                "fnDrawCallback": function () {
                    $("#divLoading").hide();
                },
                "fnServerData": function (url, data, callback) {
                    GetAllTransactionTypesData(false, callback, false, false);
                }
            });
            tableFilingTransactions.columns.adjust().draw(true);
            $m('#gridFilingTransactions').DataTable().ajax.reload();
            if (@Session["COMM_TYPE_ID"] == "23") {
                tableFilingTransactions.column(46).visible(true);
                tableFilingTransactions.column(47).visible(true);
                tableFilingTransactions.column(48).visible(true);
                tableFilingTransactions.column(49).visible(true);
                tableFilingTransactions.column(50).visible(true);
                tableFilingTransactions.column(51).visible(true);
                tableFilingTransactions.column(52).visible(true);
                tableFilingTransactions.column(53).visible(true);
                tableFilingTransactions.column(54).visible(true);
            }
            else {
                tableFilingTransactions.column(46).visible(false);
                tableFilingTransactions.column(47).visible(false);
                tableFilingTransactions.column(48).visible(false);
                tableFilingTransactions.column(49).visible(false);
                tableFilingTransactions.column(50).visible(false);
                tableFilingTransactions.column(51).visible(false);
                tableFilingTransactions.column(52).visible(false);
                tableFilingTransactions.column(53).visible(false);
                tableFilingTransactions.column(54).visible(false);
            }

            if (@Session["COMM_TYPE_ID"] == "19") {
                tableFilingTransactions.column(55).visible(true);
            }
            else {
                tableFilingTransactions.column(55).visible(false);
            }

            tableFilingTransactions.columns.adjust().draw(false);
            tableFilingTransactions.order([40, 'desc']).draw();
            tableFilingTransactions.columns.adjust().responsive.recalc();
            $("#divLoading").show();
        }

        //Common Code for Set Preferences - Start
        //---------------------------------------------------------------------------------------------------------------------------------------
        //---------------------------------------------------------------------------------------------------------------------------------------
        $('#btnSetPreferences').click(function () {
            $("#divLoading").show();
            var options = {};
            options.url = "@Url.Content("~/_UC_GridCommonControl/UpdateColumnValue/")";
            options.type = "GET";
            options.data = {
                uniqueValue: $m("#ddlViewableColumn").multipleSelect("getSelects").toString()
            };
            options.dataType = "json";
            options.contentType = "application/json";
            options.success = function (results) {
                window.status = "Transaction saved successfully";

                //Bind Grid hides the loading too!
                GetAllTransactionTypesData(true, tableFilingTransactions, false, false);
                HideColumn($m("#ddlViewableColumn").multipleSelect("getSelects", "text").toString().split(","));
            };
            options.error = function () {
                $("#divLoading").hide();
                ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ?(518) 474-8200 ', 'Ok', '');
            };
            $.ajax(options);

        });


        $.post("@Url.Content("~/_UC_GridCommonControl/GetSortName/")", {
        }, function (results) {
            HideColumn(results.toString().split(","));
        });

        function HideColumn(results) {
            var rules = {
                "indexesToStartHidden": [0, 1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43],
                "indexesToAlwaysKeepUnhidden": [8, 9], //Will always unhide.
                "columnNamesToUnhide": results,//String to match.
                "columnNamesIndexMappings": appCommonEFS_GetGridColumnSettings("UC_GridCommonControl") //String in header, index to unhide
            }
            appCommonEFS_HideTableColumn(tableFilingTransactions, rules);
        }
        /**
         * Appends label text to _validate elementys based on a list of custom errors returned from the server.
         * It won't do anyting to handle "AmmountError" keys but it will return true if it sees one in the list.
          * param {reuslt.Errors} errorList
          * Replaces this type of code basically:
             for (var i = 0; i < results.Errors.length; i++) {
                 if (results.Errors[i].Key == "txtPartAmt") {
                     $("#txtPartAmtSchedD_validate").append('<label for="txtPartAmtSchedD" class="error">' + results.Errors[i].Value + '</label>');
                 }
                 if (results.Errors[i].Key == "txtPartExplanationInKind") {
                     $("#txtPartExplanationInKind_validate").append('<label for="txtPartExplanationInKind" class="error">' + results.Errors[i].Value + '</label>');
                 }
                 if (results.Errors[i].Key == "AmountError") {
                     ShowDialogBox('EFS', 'Partnership Amount cannot be more than Outstanding Amount $' + parseFloat(expPartAmount).toFixed(2).toString(), 'Ok', '');
                 }
             }
        */
        function AppendCustomErrorLabels(errorList) {
            //You can define special error conditions using  new Map([["txtAmt", "txtAmtABC"], ["txtPartAmt", "txtPartAmtAC"]])
            var errorLabelDiscrepancies = new Map([["txtCurrentDate", "txtCurrentDateSchedL"], ["txtPartnerShipName", "txtContributorName"], ["txtAmt", "txtAmountRefunded"], ["txtExplanation", "txtExplanationCommon"]]);
            return appCommonEFS_AppendCustomErrorLabelsForAmmountError(errorList, errorLabelDiscrepancies);
        }

        //Commonly used values in this particular page.
        function GetTableFilingTransactionsAjaxOptionsData() {
            return {
                txtFilerID: $("#txtFilerID").val(),
                lstElectionCycle: $("#lstElectionCycle option:selected").val(),
                lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                lstElectionType: $("#lstElectionType option:selected").val(),
                lstElectionDateId: $("#lstElectionDate option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }
        }

        /**Common code for invoking GetAllTransactionTypesData from controller.
         * reloadAndRecalc { boolean } reloads and recalculates the table. When we reload we will display the "divLoading" image until the ajax reload call is completed. This was created for ALM Defect 707 where users were intertacting with the table while the "Processing..." text was still visible.
         * dataTableInstanceToReload { function } The referecne to the datatable we will reload in the success callback..
         * dataOverides { ajax data params } pass to overwrite data values when making ajax call.
         * doneFunction { function } A function to be called if the ajax call is completed.
         */
        function GetAllTransactionTypesData(reloadAndRecalc, dataTableInstanceToReload, dataOverides, doneFunction) {
            var callback = dataTableInstanceToReload ? dataTableInstanceToReload : tableFilingTransactions;
            //Determine what data to use.
            var optionsData = bUtilIsObject(dataOverides) ? dataOverides : GetTableFilingTransactionsAjaxOptionsData();
            appCommonEFS_GetAllTransactionTypesDataCommon(reloadAndRecalc, callback, optionsData, doneFunction);
        }
        //Common Code for Set Preferences - End
        //---------------------------------------------------------------------------------------------------------------------------------------
        //---------------------------------------------------------------------------------------------------------------------------------------

        // Clear Dialogbox Values.
        function ClearDialogBoxValidationSchedM() {

            // Clear form Validation Schedule 'E'
            var validator = $m("#DialogBoxSchedMForm").validate();
            validator.resetForm();  // clear out the validation errors
            $m("#DialogBoxSchedMForm")[0].reset();   // clear out the form data

            $("#tdCheck").hide();

            // Set the default values for form.
            $("#txtCountry").val("United States");
            $("#txtCountry").prop("disabled", true);
            $("#chkCountry").prop('checked', false);
            $("#txtState").prop('maxLength', '2');
            $m("#txtCountry").valid();

            $("#lstContributorName")[0].selectedIndex = 0;
            $("#lstContributorAmount")[0].selectedIndex = 0;
            $("#lstContributorDate")[0].selectedIndex = 0;
            $("#lstMethod")[0].selectedIndex = 0;

            $("#lstContributorAmount").prop("disabled", true);
            $("#lstContributorDate").prop("disabled", true);

            $("#txtAmountRefunded").blur();
            $("#txtZipCode").blur();
        }


    });  // Document END>>>> END>>>>>>

</script>