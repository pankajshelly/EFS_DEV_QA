@{
    ViewBag.Title = ": Loan Received Schedule I";
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
}

<form id="LoanReceivedScheIForm">

    @Html.Partial("UserControls/_UC_Alert_Message")
    @Html.Partial("UserControls/_UC_Delete_Message")
    @Html.Partial("UserControls/_SpinnerPV")

    <div id="divMainNew" class="mainDiv">
        <div class="mainLowerDivCSSDesktop">
            <div id="divhide" class="hideShowButtonCSS">
                Filter
                <button id="btnCommonShowHide1" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonShowHide">
                    <img src="~/Content/Images/up20.png" alt="Up/Hide Filter Arrow" />
                </button>
            </div>
            <div id="divshow" class="hideShowButtonCSS">
                Filter
                <button id="btnCommonHideShow1" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonHideShow">
                    <img src="~/Content/Images/down20.png" alt="Down/Show Filter Arrow" />
                </button>
            </div>
        </div>
        <div class="mainLowerDivCSS">
            <div id="divhideForMobile" class="hideShowButtonCSS">
                File a New Disclosure Report
                <div class="paddingleft6emcss floatRight">
                    Filter
                    <button id="btnCommonShowHide2" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonShowHide">
                        <img src="~/Content/Images/up20.png" alt="Up/Hide Filter Arrow" />
                    </button>
                </div>
            </div>
            <div id="divshowForMobile" class="hideShowButtonCSS">
                File a New Disclosure Report
                <div class="paddingleft6emcss floatRight">
                    Filter
                    <button id="btnCommonHideShow2" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonHideShow">
                        <img src="~/Content/Images/down20.png" alt="Down/Show Filter Arrow" />
                    </button>
                </div>
            </div>
        </div>
        <div id="divTopSection">
            <div id="selectorItsRpt">
                <div class="divWidth">
                    <fieldset>
                        <legend class="visibleToScreenReaderOnly">Filter Controls Top</legend>
                        <div class="floatRightNew clsShowButtonClass">
                            <input type="button" id="btnCommonSearch1" class="btn btn-default clsCommonSearch clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Apply" title="Apply" style="font-size:12px;" />&nbsp;
                            <input type="button" id="btnCommonClear1" class="btn btn-default clsCommonClearData ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />&nbsp;
                            <button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelp();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" class="ButtonImageCSS" title="Help" id="imgHelp" /></button>
                        </div>
                    </fieldset>
                    <div class="requiredTextFilter">* marks required fields</div>
                    <div id="divFilerID">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilerID">* Filer ID</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("txtFilerID", ViewData["txtFilerID"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblFilerID" })
                        </div>
                    </div>
                    <div id="divFilerType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilerType">* Filer Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.TextBox("txtFilerType", null, new { id = "txtFilerType", @class = "txtWidth txtReportPeriodDatesFrom", aria_labelledby = "lblFilerType" })
                        </div>
                    </div>
                    <div id="divCommitteeName">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblCommitteeName">* Candidate/Committee Name</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("txtCommitteeName", ViewData["txtCommitteeName"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblCommitteeName" })
                        </div>
                    </div>
                    <div id="divElectionCycle">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblElectionCycle">* Report Year</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstElectionCycle", ViewData["lstElectionCycle"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblElectionCycle" })
                        </div>
                    </div>
                    <div id="divOfficeType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblOfficeType">* Election Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstUCOfficeType", null, "- Select -", new { id = "lstUCOfficeType", @class = "spanMobileWidth", aria_labelledby = "lblOfficeType" })
                        </div>
                    </div>
                    <div id="divCounty">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblCounty">* County</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstUCCounty", null, "- Select -", new { @class = "spanMobileWidth", aria_labelledby = "lblCounty" })
                        </div>
                    </div>
                    <div id="divMunicipality">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblMunicipality">* Municipality</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstUCMuncipality", null, "- Select -", new { @class = "spanMobileWidth", aria_labelledby = "lblMunicipality" })
                        </div>
                    </div>
                    <div id="divElectionType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblElectionType">* Report Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstElectionType", ViewData["lstElectionType"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblElectionType" })
                        </div>
                    </div>
                    <div id="divElectionDate">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblElectionDate">* Election Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstElectionDate", ViewData["lstElectionDate"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblElectionDate" })
                        </div>
                    </div>
                    <div id="divDisclosureType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblDisclosureType">* Disclosure Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstDisclosureType", ViewData["lstDisclosureType"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblDisclosureType" })
                        </div>
                    </div>
                    <div id="divDisclosurePeriod">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblDisclosurePeriod">* Disclosure Period</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstDisclosurePeriod", null, new { @class = "spanMobileWidth", aria_labelledby = "lblDisclosurePeriod" })
                        </div>
                    </div>

                    <div id="divReportPeriodDates">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblReportPeriodDatesFrom">* Cut off Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.TextBox("searchTerm", null, new { id = "txtReportPeriodDatesFrom", @class = "txtWidth", aria_labelledby = "lblReportPeriodDatesFrom" })
                        </div>
                    </div>
                    <div id="divFilingDateDropDown">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilingDate">* Filing Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstFilingDate", ViewData["lstFilingDate"] as SelectList, "- Select -", new { @class = "spanMobileWidth lstFilingDate", aria_labelledby = "lblFilingDate" })
                        </div>
                    </div>
                    <div id="divReportPeriodDatesTo">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblReportPeriodDatesTo">* Filing Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.TextBox("searchTerm", null, new { id = "txtReportPeriodDatesTo", @class = "txtWidth", aria_labelledby = "lblReportPeriodDatesTo" })
                        </div>
                    </div>

                    @* OFFICE CYCLE FILING DATE *@
                    <div id="divFilingDateOffCycle">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilingDateOffCycle">* New Filing Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            <input type="text" id="txtNewFilingDate" name="txtNewFilingDate" class="txtWidth txtCurrentDateCls" maxlength="10" aria-labelledby="lblFilingDateOffCycle" />
                        </div>
                    </div>
                    @* OFFICE CYCLE FILING DATE *@
                    <div id="divFilingReason">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblReasonforFiling">Resignation/Termination</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstResigTermType", ViewData["lstResigTermType"] as SelectList, "- Select -", new { @class = "spanMobileWidth lstFilingDate", aria_labelledby = "lblReasonforFiling" })
                        </div>
                    </div>
                    <div class="floatRightNew" style="padding-bottom: 2em;">
                        <fieldset>
                            <legend class="visibleToScreenReaderOnly">Filter Controls Bottom</legend>
                            <input type="button" id="btnCommonSearch2" class="btn btn-default clsCommonSearch ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Apply" title="Search" style="font-size:12px;" />&nbsp;
                            <input type="button" id="btnCommonClear2" class="btn btn-default clsCommonClearData ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />&nbsp;
                            <button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelp();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" class="ButtonImageCSS" title="Help" id="imgHelp2" /></button>
                        </fieldset>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="floatRight paddingRight3em paddingTop0pt6em">
        <p><button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelpSchedI();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" class="ButtonImageCSS" title="Help Schedule I" id="imgHelp3" /></button></p>
    </div>

    <div id="divBreadCrumb" class="breadCrumbDivCSS">
        <nav aria-label="Breadcrumbs" id="pBreadCrumb" class="FontSizeCss">
            <ol class="breadcrumb">
                <li>@Html.ActionLink("File a Disclosure Report", "ContributionsMonetary", "ContributionsMonetary", null, new { @class = "lnkLogout" })</li>
                <li class="active">Loan Received</li>
            </ol>
        </nav>
        <div class="paddingtop3pt5">
            <h1>
                <span id="lblHeader1">File a Disclosure Report</span> -
                <span id="lblHEleYear">File a Disclosure Report</span> -
                <span id="lblHDisclPer">File a Disclosure Report</span>
            </h1>
        </div>
        <div>
            <div class="paddingtoppt5 paddingtoppt5TS">
                <h3><span id="lblHeader2">Loan Received</span></h3>
            </div>
        </div>
    </div>
    <div id="divGrid" class="divGridCSSTransferin">
        @Html.Partial("UserControls/_UC_Loding")
        @Html.Partial("UserControls/_UC_GridCommonControl")
        <div id="divShowPartnerAdddataNCR" class="divGridCSSItemIETrans">
            <div class="paddingLeft2em paddingBottom2em paddingtop2em">
                <table>
                    <tr>
                        <td><h3>Partner(s)</h3></td>
                        <td style="padding-left: 0.8em;">
                            <input type="button" id="btnAddNewAttribution" class="btn btn-default ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Add Partner" title="Add Partner" style="font-size:12px;" />
                        </td>
                    </tr>
                </table>
            </div>
            <div style="float: right; margin-right: 4em;">
                <span id="lblPartnershipAmt" class="clsOutstandingAmt">Outstanding Amount: </span>
            </div>
            <div id="divPartnerNCR">
                <table id="PartnersGridShechA" class="table-bordered display nowrap" style="width:100%; border-spacing: 0px;">
                    <thead id="thdGrid" class="header">
                        <tr>
                            <th class="never">Filing Trans Id</th> @* 0 *@
                            <th class="never">Filing Entity Id</th> @* 1 *@
                            <th>Expand</th> @* 2 *@
                            <th>Action</th> @* 3 *@
                            <th>Partnership Name</th> @* 4 *@
                            <th>Partner Name</th> @* 5 *@
                            <th>First Name</th> @* 6 *@
                            <th>Middle Name</th> @* 7 *@
                            <th>Last Name</th> @* 8 *@
                            <th>Country</th> @* 9 *@
                            <th>Street Address</th> @* 10 *@
                            <th>City</th> @* 11 *@
                            <th>State</th> @* 12 *@
                            <th>Zip Code</th> @* 13 *@
                            <th>Amount Attributed $</th> @* 14 *@
                            <th>Explanation</th> @* 15 *@
                            <th>Itemized</th> @* 16 *@
                            <th class="never">Trans Number</th> @* 17 *@
                            <th class="never">Trans Mapping</th> @* 18 *@
                            <th>Is Contribution greater than or equal to $100 in the aggregate?</th> @* 19 *@
                            <th>Employer</th> @* 20 *@
                            <th>Occupation</th> @* 21 *@
                            <th>Employer Address</th> @* 22 *@
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
        <div id="divUCLoanRepayLoanRec" class="divGridCSSItemIETrans paddingTop1em">
            @Html.Partial("UserControls/_UC_LoanRepayment_LoanReceived_Grid")
        </div>
        <div id="divUCLoanRecLoanRepay" class="divGridCSSItemIETrans paddingTop1em">
            @Html.Partial("UserControls/_UC_LoanReceived_LoanRepayment_Grid")
        </div>
        <div id="divUCLoanRecLoanForgiven" class="divGridCSSItemIETrans paddingTop1em">
            @Html.Partial("UserControls/_UC_LoanReceived_LoanForgiven_Grid")
        </div>
        <div id="divUCLoanRecOutLoans" class="divGridCSSItemIETrans paddingTop1em">
            @Html.Partial("UserControls/_UC_LoanReceived_OutstandingLoans_Grid")
        </div>
    </div>
</form>
<div id="dialog-form_Sched_I" title="Add/Edit Transaction">
    <form id="DialogBoxSchedIForm">
        <div class="divWidthSchedABC">
            <div style="width: 100%;">
                <div class="requiredTextDialogs">Required fields are marked with an *</div>
                <div id="divWidth">
                    <div id="txtCurrentDateLoanReceived_validate" class="verticalCSSDestopForError">
                    </div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblDateRcvd">* Loan Received</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        <input type="text" id="txtCurrentDateLoanReceived" name="txtCurrentDateLoanReceived" aria-labelledby="lblDateRcvd" class="datepicker txtWidthForDateSched_ABC txtCurrentDateCls" maxlength="10" />
                    </div>
                </div>
                <div id="divLoanerCode">
                    <div id="lstLoanerCode_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblLoanerCode">* Lender Code</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstLoanerCode", ViewData["lstLoanerCode"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblLoanerCode" })
                    </div>
                </div>
                <div id="divLenderName">
                    <div id="txtLenderName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblLenderName">* Lender Name</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtLenderName", null, new { id = "txtLenderName", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "60", aria_labelledby = "lblLenderName" })
                    </div>
                </div>
                <div id="divLenderFirstName">
                    <div id="txtLenderFirstName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblLenderFirstName">* First Name</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtLenderFirstName", null, new { id = "txtLenderFirstName", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "30", aria_labelledby = "lblLenderFirstName" })
                    </div>
                </div>
                <div id="divLenderMiddleName">
                    <div id="txtLenderMIName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblLenderMiddleName">Middle Name</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtLenderMIName", null, new { id = "txtLenderMIName", @class = "txtWidthForDialogSched_A", @maxlength = "30", aria_labelledby = "lblLenderMiddleName" })
                    </div>
                </div>
                <div id="divLenderLastName">
                    <div id="txtLenderLastName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblLenderLastName">* Last Name</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtLenderLastName", null, new { id = "txtLenderLastName", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "30", aria_labelledby = "lblLenderLastName" })
                    </div>
                </div>


                <div id="tdCountryContributionChk">
                    <div class="verticalCSSDestopForLableSched_ABC lblCSSAdd">
                        <span id="lblOtherCountry">Other Country</span>
                    </div>
                    <div class="verticalCSSDestopForCheckBoxSched_ABC DDLCSSAdd">
                        @Html.CheckBox("chkCountry", false, new { @class = "txtWidthForDialogSched_ABC_CountryChkbox", aria_labelledby = "lblOtherCountry" })
                    </div>
                </div>
                <div id="tdCountryContributionTxt">
                    <div id="txtCountry_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSched_ABC lblCSSAdd">
                        <span id="lblCountry">* Country</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSched_ABC DDLCSSAdd">
                        @Html.TextBox("txtCountry", null, new { id = "txtCountry", @class = "txtWidthForDialogSched_A required", @maxlength = "30", aria_labelledby = "lblCountry" })
                    </div>
                </div>
                <div id="divStreetAddress">
                    <div id="txtStreetName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblStreetName">* Street Address</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtStreetName", null, new { id = "txtStreetName", @class = "txtWidthForDialogSched_A", @maxlength = "60", aria_labelledby = "lblStreetName" })
                    </div>
                </div>

                <div id="divCity">
                    <div id="txtCity_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblCity_DialogBoxSchedIForm">* City</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtCity", null, new { id = "txtCity", @class = "txtWidthForDialogSched_A", @maxlength = "30", aria_labelledby = "lblCity_DialogBoxSchedIForm" })
                    </div>
                </div>
                <div id="divState">
                    <div id="txtState_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblState_DialogBoxSchedIForm">* State</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtState", null, new { id = "txtState", @class = "txtWidthForDialogSched_A", @maxlength = "2", aria_labelledby = "lblState_DialogBoxSchedIForm" })
                    </div>
                </div>

                <div id="divZip5">
                    <div id="txtZipCode_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblZip5_DialogBoxSchedIForm">* Zip Code</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtZipCode", null, new { id = "txtZipCode", @class = "txtWidthForDialogSched_A", @maxlength = "10", aria_labelledby = "lblZip5_DialogBoxSchedIForm" })
                    </div>
                </div>
                <div id="tdMethod">
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblMethod">* Method</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstMethod", ViewData["lstMethod"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblMethod" })
                    </div>
                </div>
                <div id="tdCheck">
                    <div id="txtCheck_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblCheck">* Check #</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtCheck", null, new { id = "txtCheck", @class = "txtWidthForDialogSched_A required", @maxlength = "30", aria_labelledby = "lblCheck" })
                    </div>
                </div>
                <div id="divAmount">
                    <div id="txtAmt_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblAmount">* Amount $</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtAmt", null, new { id = "txtAmt", @class = "txtWidthForDialogSched_A required", @maxlength = "12", aria_required = "true", aria_labelledby = "lblAmount" })
                    </div>
                </div>
                <div id="tdEmployer">
                    <div id="txtEmployerPCFB_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblEmployer">Employer</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtEmployerPCFB", null, new { id = "txtEmployerPCFB", @class = "txtWidthForDialogSched_A", @maxlength = "200", aria_labelledby = "lblEmployer" })
                    </div>
                </div>
                <div id="tdOccupation">
                    <div id="txtOccupationPCFB_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblOccupation">Occupation</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtOccupationPCFB", null, new { id = "txtOccupationPCFB", @class = "txtWidthForDialogSched_A", @maxlength = "50", aria_labelledby = "lblOccupation" })
                    </div>
                </div>
                <div id="divContStreetAddress">
                    <div id="txtContStreetName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblContStreetName">Employer Street Address</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtContStreetName", null, new { id = "txtContStreetName", @class = "txtWidthForDialogSched_A", @maxlength = "60", aria_labelledby = "lblContStreetName" })
                    </div>
                </div>

                <div id="divContCity">
                    <div id="txtContCity_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblContCity_DialogBoxSchedAForm">Employer City</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtContCity", null, new { id = "txtContCity", @class = "txtWidthForDialogSched_A", @maxlength = "30", aria_labelledby = "lblContCity_DialogBoxSchedAForm" })
                    </div>
                </div>

                <div id="divContState">
                    <div id="txtContState_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblContState_DialogBoxSchedAForm">Employer State</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtContState", null, new { id = "txtContState", @class = "txtWidthForDialogSched_A", @maxlength = "2", aria_labelledby = "lblContState_DialogBoxSchedAForm" })
                    </div>
                </div>

                <div id="divContZip5">
                    <div id="txtContZipCode_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblContZip5_DialogBoxSchedAForm">Employer Zip Code</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtContZipCode", null, new { id = "txtContZipCode", @class = "txtWidthForDialogSched_A", @maxlength = "10", aria_labelledby = "lblContZip5_DialogBoxSchedAForm" })
                    </div>
                </div>
                <div id="divHidden">
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                    </div>
                </div>
                <div id="divExplanation">
                    <div id="txtExplanationCommon_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblExplanation">Explanation</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtExplanationCommon", null, new { id = "txtExplanationCommon", @class = "txtWidthForDialogSched_A", @maxlength = "250", aria_labelledby = "lblExplanation" })
                    </div>
                </div>
                <div id="AddUpdateBtnIdSchedA" class="AddLeftCSSSchedABC">
                    <input type="button" id="btnUpdateDialog" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Save" title="Save" style="font-size:12px;" />
                    <input type="button" id="btnAddDialog" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Save" title="Save" style="font-size:12px;" />
                    <input type="button" id="btnClearDialog" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />
                    <input type="button" id="btnCloseDialog" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Close" title="Close" style="font-size:12px;" />
                </div>
            </div>
        </div>
    </form>
</div>
<div id="dialog-form_NCRPartner" title="Add/Edit Partner">
    <form id="DialogBoxSchedAPartnershipForm">
        <div id="divPartnershipData" class="divWidth">
            <div class="requiredTextDialogs">Required fields are marked with an *</div>
            <div id="dvUnitemized">
                <div class="verticalCSSDestopForLblLSC lblCSSAdd">
                    <span id="lblUnitemizedPart">Is Transaction Itemized?</span>
                </div>
                <div class="verticalCSSDestopForTextboxLSC DDLCSSAdd">
                    @Html.DropDownList("lstItemizedPart", ViewData["lstItemizedPart"] as SelectList, new { @class = "txtWidthForDialogSched_APartner", aria_labelledby = "lblUnitemizedPart" })
                </div>
            </div>
            <div id="dvPartIndividual" class="divClearBoth">
                <div class="verticalCSSDestopForLblLSC lblCSSAdd">
                    <span id="lblIndividualPart">Is Partner name an individual?</span>
                </div>
                <div class="verticalCSSDestopForTextboxLSC DDLCSSAdd">
                    @Html.DropDownList("lstIndividualPart", ViewData["lstIndividualPart"] as SelectList, new { @class = "txtWidthForDialogSched_APartner", aria_labelledby = "lblIndividualPart" })
                </div>
            </div>
            <div id="tdPartnershipNamePartner">
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblPartnershipName">Partnership Name</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("searchTerm", null, new { id = "txtPartshiptName", @class = "txtWidthForDialogSched_APartner", aria_labelledby = "lblPartnershipName" })
                </div>
            </div>
            <div id="tdPartnerName">
                <div id="txtPartnerName_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblPartnerName">* Partner Name</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartnerName", null, new { id = "txtPartnerName", @class = "txtWidthForDialogSched_APartner", @maxlength = "40", aria_labelledby = "lblPartnerName" })
                </div>
            </div>

            <div id="tdPartFirstName">
                <div id="txtPartFirstName_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblFirstName">* First Name</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartFirstName", null, new { id = "txtPartFirstName", @class = "txtWidthForDialogSched_APartner", @maxlength = "30", aria_labelledby = "lblFirstName" })
                </div>
            </div>

            <div id="tdPartMI">
                <div id="txtPartMI_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblMiddleName">Middle Name</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartMI", null, new { id = "txtPartMI", @class = "txtWidthForDialogSched_APartner", @maxlength = "30", aria_labelledby = "lblMiddleName" })
                </div>
            </div>

            <div id="tdPartLastName">
                <div id="txtPartLastName_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblLastName">* Last Name</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartLastName", null, new { id = "txtPartLastName", @class = "txtWidthForDialogSched_APartner", @maxlength = "30", aria_labelledby = "lblLastName" })
                </div>
            </div>


            <div id="tdCountryPartnershipChk">
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblOtherCountryPartnership">Other Country</span>
                </div>
                <div class="verticalCSSDestopForCheckBoxSched_ABC DDLCSSAdd">
                    @Html.CheckBox("chkCountryPartnership", false, new { @class = "txtWidthForDialogSched_ABC_CountryChkbox", aria_labelledby = "lblOtherCountryPartnership" })
                </div>
            </div>
            <div id="tdCountryPartnershipTxt" class="divClearBoth">
                <div id="txtCountryPartnership_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblCountryPartnership">* Country</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtCountryPartnership", null, new { id = "txtCountryPartnership", @class = "txtWidthForDialogSched_APartner", @maxlength = "30", aria_labelledby = "lblCountryPartnership" })
                </div>
            </div>

            <div id="tdPartStreetName">
                <div id="txtPartStreetName_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblStreetAddress">* Street Address</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartStreetName", null, new { id = "txtPartStreetName", @class = "txtWidthForDialogSched_APartner required", @maxlength = "60", aria_labelledby = "lblStreetAddress", required = "required" })
                </div>
            </div>

            <div id="tdPartCity">
                <div id="txtPartCity_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblCity">* City</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartCity", null, new { id = "txtPartCity", @class = "txtWidthForDialogSched_APartne requiredr", @maxlength = "30", aria_labelledby = "lblCity", required = "required" })
                </div>
            </div>
            <div id="tdPartState">
                <div id="txtPartState_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblState">* State</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartState", null, new { id = "txtPartState", @class = "txtWidthForDialogSched_APartner required", @maxlength = "2", aria_labelledby = "lblState", required = "required" })
                </div>
            </div>
            <div id="tdPartZip5">
                <div id="txtPartZip5_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblZip5">* Zip Code</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartZip5", null, new { id = "txtPartZip5", @class = "txtWidthForDialogSched_APartner required", @maxlength = "10", aria_labelledby = "lblZip5", required = "required" })
                </div>
            </div>
            <div id="tdPartAmt" class="divClearBoth">
                <div id="txtPartAmt_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblAmtAttributed">* Amount Attributed $</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartAmt", null, new { id = "txtPartAmt", @class = "txtWidthForDialogSched_APartner", @maxlength = "12", aria_labelledby = "lblAmtAttributed" })
                </div>
            </div>
            <div id="tdPartRContributions">
                <div id="lstPartRContributions_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                    <span id="lblPartRContributions">* Is Contribution greater than or equal to $100 in the aggregate?</span>
                </div>
                <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                    @Html.DropDownList("lstPartRContributions", ViewData["lstRContributions"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblPartRContributions", aria_describedby = "alertForLstContributionName", required = "required" })
                </div>
            </div>
            <div id="tdPartEmployer">
                <div id="txtPartEmployer_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                    <span id="lblPartEmployer">Employer</span>
                </div>
                <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                    @Html.TextBox("txtPartEmployer", null, new { id = "txtPartEmployer", @class = "txtWidthForDialogSched_A", @maxlength = "200", aria_labelledby = "lblPartEmployer" })
                </div>
            </div>
            <div id="tdPartOccupation">
                <div id="txtPartOccupation_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                    <span id="lblOccupation">Occupation</span>
                </div>
                <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                    @Html.TextBox("txtPartOccupation", null, new { id = "txtPartOccupation", @class = "txtWidthForDialogSched_A", @maxlength = "50", aria_labelledby = "lblPartOccupation" })
                </div>
            </div>
            <div id="divPartContStreetAddress">
                <div id="txtPartContStreetName_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                    <span id="lblPartContStreetName">Employer Street Address</span>
                </div>
                <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                    @Html.TextBox("txtPartContStreetName", null, new { id = "txtPartContStreetName", @class = "txtWidthForDialogSched_A", @maxlength = "60", aria_labelledby = "lblPartContStreetName" })
                </div>
            </div>

            <div id="divPartContCity">
                <div id="txtPartContCity_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                    <span id="lblPartContCity_DialogBoxSchedAForm">Employer City</span>
                </div>
                <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                    @Html.TextBox("txtPartContCity", null, new { id = "txtPartContCity", @class = "txtWidthForDialogSched_A", @maxlength = "30", aria_labelledby = "lblPartContCity_DialogBoxSchedAForm" })
                </div>
            </div>

            <div id="divPartContState">
                <div id="txtPartContState_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                    <span id="lblPartContState_DialogBoxSchedAForm">Employer State</span>
                </div>
                <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                    @Html.TextBox("txtPartContState", null, new { id = "txtPartContState", @class = "txtWidthForDialogSched_A", @maxlength = "2", aria_labelledby = "lblPartContState_DialogBoxSchedAForm" })
                </div>
            </div>

            <div id="divPartContZip5">
                <div id="txtPartContZipCode_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                    <span id="lblPartContZip5_DialogBoxSchedAForm">Employer Zip Code</span>
                </div>
                <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                    @Html.TextBox("txtPartContZipCode", null, new { id = "txtPartContZipCode", @class = "txtWidthForDialogSched_A", @maxlength = "10", aria_labelledby = "lblPartContZip5_DialogBoxSchedAForm" })
                </div>
            </div>
            <div id="tdPartExplanation">
                <div id="txtPartExplanationInKind_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblExplanationPart">Explanation</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartExplanationInKind", null, new { id = "txtPartExplanationInKind", @class = "txtWidthForDialogSched_APartner", @maxlength = "250", aria_labelledby = "lblExplanationPart" })
                </div>
            </div>

            <div id="AddUpdateBtnIdSchedAPart" class="AddLeftCSSPartnerSchedA">
                <br />
                <input type="button" id="btnSaveSchedAPartners" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Save" title="Save" style="font-size:12px;" />
                <input type="button" id="btnClearDialogPartner" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />
                <input type="button" id="btnCloseDialogPartner" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Close" title="Close" style="font-size:12px;" />
            </div>
        </div>
    </form>
</div>
<script>
    $m = jQuery.noConflict();

    function CallHelpSchedI() {

        var myWidth = 1050;
        var myHeight = 550;

        var left = (screen.width - myWidth) / 2;
        var top = (screen.height - myHeight) / 4;

        window.open("../../LoanReceivedSchedI/GetScheduleIHelpPopUp", "Help", 'width=550, height=600,scrollbars=1, width=' + myWidth + ', height=' + myHeight + ', top=' + top + ', left=' + left);
    }

        $('#menuNav').css('opacity', 0);
        $('#LoanReceivedScheIForm').css('opacity', 0);
        $('#dialog-form_Sched_I').css('opacity', 0);
        $('#dialog-form_NCRPartner').css('opacity', 0);
        $('#divWelcomeBanner').css('opacity', 0);
        $(window).on('load', function () {
            $('#menuNav').css('opacity', 1);
            $('#LoanReceivedScheIForm').css('opacity', 1);
            $('#dialog-form_Sched_I').css('opacity', 1);
            $('#dialog-form_NCRPartner').css('opacity', 1);
            $('#divWelcomeBanner').css('opacity', 1);
    });


    $(document).ready(function () {

        var tableFilingTransactions = '';
        $m("#txtAmt").attr('aria-required', true);
        $("#main").addClass("SetHeightTransferIn");
        $("#main").removeClass("SetHeight");
       

        sessionStorage.setItem("FlagForBank", "NO");
        $("#lblAllTransText").text("All Transactions: " + sessionStorage.getItem("ElectionCycleText").toString() + " - " + sessionStorage.getItem("DisclosurePeriodText").toString());
        // Common Function in EFS-Validation.js file - Start
        validatePage("DialogBoxSchedIForm");
        PartnershipValidation("DialogBoxSchedAPartnershipForm");
        LefthandFilterValues();
        // Common Function in EFS-Validation.js file - ENd

        /// Dialog Box Code /////////////////////////////////////////////////////////////////////
        var dialog;
        dialog = $m("#dialog-form_Sched_I").dialog({
            autoOpen: false,
            resizable: true,
            height: 'auto',
            width: 456,
            position: {
                my: "center top",
                at: "center top+200"
            },
            modal: true,
            resizable: false,
            closeOnEscape: false,
            open: function (event, ui) { hideDialogXButton(this); }
        });

        $(window).resize(function () {
            //// get the screen height and width
            if ($(window).width() < 500) {
                dialog = $m("#dialog-form_Sched_I").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 300,
                    modal: true,
                });
            }
            else if ($(window).width() > 500 && $(window).width() <= 900) {
                dialog = $m("#dialog-form_Sched_I").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 456,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 900) {
                dialog = $m("#dialog-form_Sched_I").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 456,
                    modal: true,
                    dialogClass: 'DialogCustomStyle',
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
        }).resize();

        var dialogPartner;

        // Partners Dialog Box.
        dialogPartner = $m("#dialog-form_NCRPartner").dialog({
            autoOpen: false,
            resizable: false,
            height: 'auto',
            width: 456,
            position: {
                my: "center top",
                at: "center top+200"
            },
            modal: true,
            resizable: false,
            closeOnEscape: false,
            open: function (event, ui) { hideDialogXButton(this); }
        });

        $(window).resize(function () {
            //// get the screen height and width
            if ($(window).width() < 500) {
                dialogPartner = $m("#dialog-form_NCRPartner").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 300,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });

            }
            else if ($(window).width() > 500 && $(window).width() <= 900) {
                dialogPartner = $m("#dialog-form_NCRPartner").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 456,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 900) {
                dialogPartner = $m("#dialog-form_NCRPartner").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 456,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
        }).resize();

        $("#main").addClass("SetHeightAssignReview");
        $("#main").removeClass("SetHeight");
        sessionStorage.setDataTable = "true";

        /**
         * Simplify reseting common fields in DialogBoxSchedIForm.
         * Clears out the validation errors and clear out the form data.
         */
        function ClearOutDialogBoxSchedIFormFormDataCommon() {
            var validator = $m("#DialogBoxSchedIForm").validate();
            validator.resetForm();  // clear out the validation errors
            $m("#DialogBoxSchedIForm")[0].reset();   // clear out the form data
            $("#txtCurrentDateLoanReceived").removeClass("ui-state-error error");
            $("#lstLoanerCode").removeClass("ui-state-error error");
            $("#txtLenderName").removeClass("ui-state-error error");
            $("#txtLenderFirstName").removeClass("ui-state-error error");
            $("#txtLenderMIName").removeClass("ui-state-error error");
            $("#txtLenderLastName").removeClass("ui-state-error error");
            $("#txtCountry").removeClass("ui-state-error error");
            $("#txtStreetName").removeClass("ui-state-error error");
            $("#txtCity").removeClass("ui-state-error error");
            $("#txtState").removeClass("ui-state-error error");
            $("#txtZipCode").removeClass("ui-state-error error");
            $("#txtCheck").removeClass("ui-state-error error");
            $("#txtAmt").removeClass("ui-state-error error");
            $("#txtExplanationCommon").removeClass("ui-state-error error");
        }

        $m("#btnAddNewTransaction").button().on("click", function () {
            //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                txtFilerId: $("#txtFilerID").val(),
                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }, function (resultEditFlag) {
                $("#divLoading").hide();//Hide spinner.
                if (resultEditFlag == "TRUE") {
                    dialog.dialog("open");
                    $("#divUCLoanRepayLoanRec").hide();
                    $("#divUCLoanRecLoanRepay").hide();
                    $("#divUCLoanRecLoanForgiven").hide();
                    $("#divUCLoanRecOutLoans").hide();
                    $("#divShowPartnerAdddataNCR").hide();

                    sessionStorage.setItem("AddEditCloseStatus", "Add");
                    ClearOutDialogBoxSchedIFormFormDataCommon();

                    $("#lstLoanerCode").prop("disabled", false);

                    $("#btnUpdateDialog").hide();
                    $("#btnAddDialog").show();

                    $("#lblExplanation").text("Explanation");
                    $("#txtCurrentDateLoanReceived").blur();
                    $("#txtZipCode").blur();
                    $("#txtAmt").blur();

                    $("#txtCountry").val("United States");
                    $("#txtCountry").prop("disabled", true);
                    $("#chkCountry").prop('checked', false);
                    $("#txtState").prop('maxLength', '2');
                    $("#lstMethod")[0].selectedIndex = 0;
                    $("#tdCheck").hide();

                    $("#divLenderName").hide();
                    $("#divLenderFirstName").show();
                    $("#divLenderMiddleName").show();
                    $("#divLenderLastName").show();

                    $("#txtCurrentDateLoanReceived").focus();
                    $m("label[for=txtCurrentDateLoanReceived]").text('');
                    $m("#txtCurrentDateLoanReceived").removeClass("error");
                    sessionStorage.setItem("FlagForBank", "NO");
                    if (@Session["COMM_TYPE_ID"] == "23") {
                        $("#tdEmployer").show();
                        $("#tdOccupation").show();
                        $("#divContStreetAddress").show();
                        $("#divContCity").show();
                        $("#divContState").show();
                        $("#divContZip5").show();
                        $m("#txtEmployerPCFB").val("");
                        $m("#txtOccupationPCFB").val("");
                        $m("#txtContStreetName").val("");
                        $m("#txtContCity").val("");
                        $m("#txtContState").val("");
                        $m("#txtContZipCode").val("");
                    }
                    else {
                        $("#tdEmployer").hide();
                        $("#tdOccupation").hide();
                        $("#divContStreetAddress").hide();
                        $("#divContCity").hide();
                        $("#divContState").hide();
                        $("#divContZip5").hide();
                    }
                }
                else {
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before adding this Transaction.', 'Ok', '');
                }
            }).fail(function () {
                $("#divLoading").hide();// GetEditFlag failed.
            });
        });

        $("#lstLoanerCode").change(function (e) {
            if ($("#lstLoanerCode option:selected").text() == "Candidate" ||
                $("#lstLoanerCode option:selected").text() == "Candidate Spouse" ||
                $("#lstLoanerCode option:selected").text() == "Family Member of Candidate - Parent" ||
                $("#lstLoanerCode option:selected").text() == "Family Member of Candidate - Grandparent" ||
                $("#lstLoanerCode option:selected").text() == "Family Member of Candidate - Child" ||
                $("#lstLoanerCode option:selected").text() == "Family Member of Candidate - Siblings" ||
                $("#lstLoanerCode option:selected").text() == "Family Member of Candidate - Spouse of Any of These" ||
                $("#lstLoanerCode option:selected").text() == "Individual") {
                $("#divLenderName").hide();
                $("#divLenderFirstName").show();
                $("#divLenderMiddleName").show();
                $("#divLenderLastName").show();
                $("#txtLenderFirstName").removeClass("ui-state-error error");
                $("#txtLenderMIName").removeClass("ui-state-error error");
                $("#txtLenderLastName").removeClass("ui-state-error error");
                $m("#txtLenderName").text('');
                $m("#txtLenderFirstName").text('');
                $m("#txtLenderMIName").text('');
                $m("#txtLenderLastName").text('');
                $("#lblExplanation").text("Explanation");
                
                if (@Session["COMM_TYPE_ID"] == "23") {
                    $("#tdEmployer").show();
                    $("#tdOccupation").show();
                    $("#divContStreetAddress").show();
                    $("#divContCity").show();
                    $("#divContState").show();
                    $("#divContZip5").show();
                }
                else {
                    $("#tdEmployer").hide();
                    $("#tdOccupation").hide();
                    $("#divContStreetAddress").hide();
                    $("#divContCity").hide();
                    $("#divContState").hide();
                    $("#divContZip5").hide();
                }
            }
            else if ($("#lstLoanerCode option:selected").text() == "Bank") {
                if (sessionStorage.getItem("FlagForBank") == "NO") {
                    ShowDialogBox('EFS', 'Bank Loan is from the bank to the committee, not from an individual to the committee', 'Ok', '');
                }
                $("#divLenderName").show();
                $("#divLenderFirstName").hide();
                $("#divLenderMiddleName").hide();
                $("#divLenderLastName").hide();
                $("#txtLenderName").removeClass("ui-state-error error");
                $m("#txtLenderName").text('');
                $m("#txtLenderFirstName").text('');
                $m("#txtLenderMIName").text('');
                $m("#txtLenderLastName").text('');
                $("#lblExplanation").text("Explanation");
                if (@Session["COMM_TYPE_ID"] == "23") {
                    $("#tdEmployer").show();
                    $("#tdOccupation").show();
                    $("#divContStreetAddress").show();
                    $("#divContCity").show();
                    $("#divContState").show();
                    $("#divContZip5").show();
                }
                else {
                    $("#tdEmployer").hide();
                    $("#tdOccupation").hide();
                    $("#divContStreetAddress").hide();
                    $("#divContCity").hide();
                    $("#divContState").hide();
                    $("#divContZip5").hide();
                }
            }
            else if ($("#lstLoanerCode option:selected").text() == "Partnership (including LLPs)" ||
                $("#lstLoanerCode option:selected").text() == "Bank" ||
                $("#lstLoanerCode option:selected").text() == "Corporation") {
                $("#divLenderName").show();
                $("#divLenderFirstName").hide();
                $("#divLenderMiddleName").hide();
                $("#divLenderLastName").hide();
                $("#txtLenderName").removeClass("ui-state-error error");
                $m("#txtLenderName").text('');
                $m("#txtLenderFirstName").text('');
                $m("#txtLenderMIName").text('');
                $m("#txtLenderLastName").text('');
                $("#lblExplanation").text("Explanation");
                $("#tdEmployer").hide();
                $("#tdOccupation").hide();
                $("#divContStreetAddress").hide();
                $("#divContCity").hide();
                $("#divContState").hide();
                $("#divContZip5").hide();
            }
            else if ($("#lstLoanerCode option:selected").text() == "Other Entities") {
                $("#divLenderName").show();
                $("#divLenderFirstName").hide();
                $("#divLenderMiddleName").hide();
                $("#divLenderLastName").hide();
                $("#txtLenderName").removeClass("ui-state-error error");
                $m("#txtLenderName").text('');
                $m("#txtLenderFirstName").text('');
                $m("#txtLenderMIName").text('');
                $m("#txtLenderLastName").text('');
                $("#lblExplanation").text("* Explanation");
                if (@Session["COMM_TYPE_ID"] == "23") {
                    $("#tdEmployer").show();
                    $("#tdOccupation").show();
                    $("#divContStreetAddress").show();
                    $("#divContCity").show();
                    $("#divContState").show();
                    $("#divContZip5").show();
                }
                else {
                    $("#tdEmployer").hide();
                    $("#tdOccupation").hide();
                    $("#divContStreetAddress").hide();
                    $("#divContCity").hide();
                    $("#divContState").hide();
                    $("#divContZip5").hide();
                }
            }
            else {
                $("#divLenderName").hide();
                $("#divLenderFirstName").show();
                $("#divLenderMiddleName").show();
                $("#divLenderLastName").show();
                $("#txtLenderFirstName").removeClass("ui-state-error error");
                $("#txtLenderMIName").removeClass("ui-state-error error");
                $("#txtLenderLastName").removeClass("ui-state-error error");
                $m("#txtLenderName").text('');
                $m("#txtLenderFirstName").text('');
                $m("#txtLenderMIName").text('');
                $m("#txtLenderLastName").text('');
                $("#lblExplanation").text("Explanation");
                if (@Session["COMM_TYPE_ID"] == "23") {
                    $("#tdEmployer").show();
                    $("#tdOccupation").show();
                    $("#divContStreetAddress").show();
                    $("#divContCity").show();
                    $("#divContState").show();
                    $("#divContZip5").show();
                }
                else {
                    $("#tdEmployer").hide();
                    $("#tdOccupation").hide();
                    $("#divContStreetAddress").hide();
                    $("#divContCity").hide();
                    $("#divContState").hide();
                    $("#divContZip5").hide();
                }
            }
        });

        $m("#btnCloseDialog").button().on("click", function () {
            //By default we do not require close dialog confirmation for this form.
            var requireCloseConfirm = false;
            if (sessionStorage.getItem("AddEditCloseStatus") != null) {
                //"ADD" operation will chech the fields. IF there's any data the close confirmation will be required.
                if (sessionStorage.getItem("AddEditCloseStatus").toString() == "Add") {
                    //We may not require confirmation of the user is trying to add.
                    if ($("#txtCurrentDateLoanReceived").val().toString().length >= 1
                        || $("#lstLoanerCode option:selected").val().toString() != "0"
                        || $("#txtLenderName").val().toString().length >= 1
                        || $("#txtLenderFirstName").val().toString().length >= 1
                        || $("#txtLenderMIName").val().toString().length >= 1
                        || ($('#chkCountry').is(':checked')
                            && $("#txtCountry").val().toString().length >= 1)/*Other COUNTRY*/
                        || $("#txtLenderLastName").val().toString().length >= 1
                        || $("#txtStreetName").val().toString().length >= 1
                        || $("#txtCity").val().toString().length >= 1
                        || $("#txtState").val().toString().length >= 1
                        || $("#txtZipCode").val().toString().length >= 1
                        || $("#lstMethod option:selected").val().toString() != "0"
                        || ($("#lstMethod option:selected").val().toString() == "1"
                            && $("#txtCheck").val().toString().length >= 1)
                        || $("#txtAmt").val().toString().length >= 1
                        || $("#txtExplanationCommon").val().toString().length >= 1) {
                        requireCloseConfirm = true;
                    }
                }
            }
            if (!requireCloseConfirm) {
                dialog.dialog("close");
                // For Defect 707 You don't Refresh the Data on Grid because you just canceled the edit or save function.
            }
            else {
                // Get confirmation Close the DialogBox or Not.
                var resultsCloseSchedA = "All unsaved data will be lost if you navigate away from this page. Are you sure you want to continue?";
                $m('#modal_dialog').text(resultsCloseSchedA);
                $m("#modal_dialog").dialog({
                    resizable: false,
                    width: '400px',
                    height: 'auto',
                    bgiframe: false,
                    modal: true,
                    closeOnEscape: false,
                    open: function (event, ui) { hideDialogXButton(this); },
                    buttons: {
                        "Ok": function () {
                            // Close Confirm Box.
                            $m(this).dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                            // Close the DialogBox
                            dialog.dialog("close");
                            // For Defect 707 You don't Refresh the Data on Grid because you just canceled the edit or save function.
                        },
                        "Cancel": function () {
                            $m(this).dialog("close");
                        }
                    }
                });
            }
        });


        //====================================================================================================================
        // Date picker validation based on Filing Type.
        if ($("#lstElectionType option:selected").val().toString() == "6") { // Off-Cycle
            if ($("#lstFilingDate option:selected").text().toString() == "- New Filing Date -") {
                sessionStorage.setItem("CuttOffDateForFiling", sessionStorage.getItem("FilingDate").toString());
            }
            else {
                sessionStorage.setItem("CuttOffDateForFiling", $("#lstFilingDate option:selected").text().toString());
            }
        }
        else {
            sessionStorage.setItem("CuttOffDateForFiling", sessionStorage.getItem("CutOffDate").toString());
        }

        $m("#txtCurrentDateLoanReceived").datepicker({
            showOn: "button",
            buttonImage: "../../Content/Images/Calendar.png", //"@Url.Content("~/Content/Images/Calendar.png")",
            buttonImageOnly: false,
            buttonText: "Select From Date",
            changeMonth: true,
            changeYear: true,
            numberOfMonths: 1,
            maxDate: sessionStorage.getItem("CuttOffDateForFiling").toString(),
            dateFormat: 'mm/dd/yy',
            onChange: function () {
                $m("#txtCurrentDateLoanReceived").valid();
            },
        }).datepicker();

        $m('.datepicker').attr("placeholder", "MM/DD/YYYY").datepicker();
        $("#txtCurrentDateLoanReceived").addClass("watermarkHTMLTextBox");
        $("#txtCurrentDateLoanReceived").focusin(function () {
            $("#txtCurrentDateLoanReceived").removeClass("watermarkHTMLTextBox");
        });

        // Watermark TextBox. ////////////////////////////////////////////////////

        // DATE FORMATE....///////////////////////////////////////////////
        $("#txtCurrentDateLoanReceived").focusout(function () {
            if ($("#txtCurrentDateLoanReceived").val().toString() != "") {
                if ($("#txtCurrentDateLoanReceived").val().toString() != "MM/DD/YYYY") {
                    var results = GetValidDateForCommon("txtCurrentDateLoanReceived", "Transferred");

                    if (results == "") {
                        var MyDate = new Date($("#txtCurrentDateLoanReceived").val().toString());
                        var MyDateString;
                        MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                            + ('0' + MyDate.getDate()).slice(-2) + '/'
                            + MyDate.getFullYear();
                        $("#txtCurrentDateLoanReceived").val("");
                        $("#txtCurrentDateLoanReceived").val(MyDateString);
                    }
                }
            }
            else {
                $("#txtCurrentDateLoanReceived").addClass("watermarkHTMLTextBox");
            }
        });
        // DATE FORMATE....///////////////////////////////////////////////

        //Partnership Contribution check
        $("#lstPartRContributions").change(function () {
            if ($("#lstPartRContributions option:selected").val().toString() == "0") {
                $("#tdPartEmployer").show();
                $("#tdPartOccupation").show();
                $("#divPartContStreetAddress").show();
                $("#divPartContCity").show();
                $("#divPartContState").show();
                $("#divPartContZip5").show();
                $m("#txtPartEmployer").val("");
                $m("#txtPartOccupation").val("");
                $m("#txtPartContStreetName").val("");
                $m("#txtPartContCity").val("");
                $m("#txtPartContState").val("");
                $m("#txtPartContZipCode").val("");
            }
            else {
                $("#tdPartEmployer").hide();
                $("#tdPartOccupation").hide();
                $("#divPartContStreetAddress").hide();
                $("#divPartContCity").hide();
                $("#divPartContState").hide();
                $("#divPartContZip5").hide();
                $m("#txtPartEmployer").val("");
                $m("#txtPartOccupation").val("");
                $m("#txtPartContStreetName").val("");
                $m("#txtPartContCity").val("");
                $m("#txtPartContState").val("");
                $m("#txtPartContZipCode").val("");
            }
        });

        // Method Change
        // ------------------------------------------------------------------------------------------------------------------------------------------
        $("#lstMethod").change(function () {

            $("#txtCheck").val("");

            if ($("#lstMethod option:selected").val().toString() == "1") { // CHECK
                $("#tdCheck").show();
                $("#lblExplanation").text("Explanation");
            }
            else if ($("#lstMethod option:selected").val().toString() == "7") { // OTHER
                // EXPLANATION MANADATORY
                $("#lblExplanation").text("* Explanation");
                $("#tdCheck").hide();
            }
            else {
                $("#lblExplanation").text("Explanation");
                $("#tdCheck").hide();
            }

            if ($("#lstLoanerCode option:selected").val().toString() == "13") { // OTHER
                // EXPLANATION MANADATORY
                $("#lblExplanation").text("* Explanation");
            }
        });

        if (@Session["COMM_TYPE_ID"] == "23") {
            if ($("#lstLoanerCode option:selected").val().toString() == "10") {
                //$("#tdRContributions").show();
                //$("#lstRContributions")[0].selectedIndex = 1;
                $("#tdEmployer").hide();
                $("#tdOccupation").hide();
                $("#divContStreetAddress").hide();
                $("#divContCity").hide();
                $("#divContState").hide();
                $("#divContZip5").hide();
            }
            else {
                //$("#tdRContributions").hide();
                $("#tdEmployer").show();
                $("#tdOccupation").show();
                $("#divContStreetAddress").show();
                $("#divContCity").show();
                $("#divContState").show();
                $("#divContZip5").show();
            }
            $m("#txtEmployerPCFB").val("");
            $m("#txtOccupationPCFB").val("");
            $m("#txtContStreetName").val("");
            $m("#txtContCity").val("");
            $m("#txtContState").val("");
            $m("#txtContZipCode").val("");
        }
        else {
            //$("#tdRContributions").hide();
            $("#tdEmployer").hide();
            $("#tdOccupation").hide();
            $("#divContStreetAddress").hide();
            $("#divContCity").hide();
            $("#divContState").hide();
            $("#divContZip5").hide();
        }

        $m("#btnAddDialog").click(function () {
            $m('#DialogBoxSchedIForm').valid();
            if ($m('#DialogBoxSchedIForm').valid()) {
                //$m("#divLoading").show();
                var valid = true;
                if (@Session["COMM_TYPE_ID"] == "23") {
                    if ($("#lstLoanerCode option:selected").val() != "10") {
                        if ($m("#txtEmployerPCFB").val() == "" ||
                            $m("#txtOccupationPCFB").val() == "" ||
                            $m("#txtContStreetName").val() == "" ||
                            $m("#txtContCity").val() == "" ||
                            $m("#txtContState").val() == "" ||
                            $m("#txtContZipCode").val() == "") {
                            valid = false;
                        }
                    }
                }

                if (valid == false) {
                    // Get confirmation the DialogBox or Not.
                    var resultsCloseSchedA = "You have reported a loan without Employer Address, Occupation, Employer and Employer Address. Failure to provide Employer Address, Occupation, Employer and Employer Address may be cited as a Deficiency by Compliance Review staff.";
                    $m('#modal_dialog').text(resultsCloseSchedA);
                    $m("#modal_dialog").dialog({
                        resizable: false,
                        modal: true,
                        width: '400px',
                        height: 'auto',
                        bgiframe: false,
                        closeOnEscape: false,
                        open: function (event, ui) { hideDialogXButton(this); },
                        buttons: {
                            "OK": function () {
                                $m(this).dialog("close");
                                $("#divLoading").show();
                                // INSERT
                                var url = '@Url.Action("AddLoanReceivedScheduledData", "LoanReceivedSchedI")';
                                $.post(url, {
                                    txtFilerId: $("#txtFilerID").val(),
                                    strFilingSchedId: $m("#lstTransactionType option:selected").val(),
                                    strFilingSchedDate: $m("#txtCurrentDateLoanReceived").val().toString(),
                                    strPayNumber: $m("#txtCheck").val().toString(),
                                    strOrgAmt: $m("#txtAmt").val().toString(),
                                    strTransExplanation: $m("#txtExplanationCommon").val().toString(),
                                    strElectionTypeId: $m("#lstElectionType option:selected").val(),
                                    lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                                    lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                                    lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                                    lstFilingEntId: "",
                                    strFlngEntName: $m("#txtLenderName").val().toString(),
                                    strFlngEntFirstName: $m("#txtLenderFirstName").val().toString(),
                                    strFlngEntMiddleName: $m("#txtLenderMIName").val().toString(),
                                    strFlngEntLastName: $m("#txtLenderLastName").val().toString(),
                                    strFlngEntStrName: $m("#txtStreetName").val().toString(),
                                    txtPartCity: $m("#txtCity").val().toString(),
                                    txtPartState: $m("#txtState").val().toString(),
                                    txtPartZip: $m("#txtZipCode").val().toString(),
                                    txtCountry: $m("#txtCountry").val().toString(),
                                    chkCountry: $('#chkCountry').is(':checked').toString(),
                                    PaymentTypeId: $m("#lstMethod option:selected").val(),
                                    LoanerCodeID: $m("#lstLoanerCode option:selected").val(),
                                    lstFilingDate: $m("#lstFilingDate option:selected").text(),
                                    txtReportPeriodDatesTo: sessionStorage.getItem("FilingDate").toString(),
                                    electionDateId: $m("#lstElectionDate").val(),
                                    lstResigTermType: $m("#lstResigTermType option:selected").val(),
                                    txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
                                    lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
                                    txtEmployerPCFB: $m("#txtEmployerPCFB").val(),
                                    txtOccupationPCFB: $m("#txtOccupationPCFB").val(),
                                    txtContStreetName: $m("#txtContStreetName").val(),
                                    txtContCity: $m("#txtContCity").val(),
                                    txtContState: $m("#txtContState").val(),
                                    txtContZipCode: $m("#txtContZipCode").val()
                                }, function (results) {
                                    if (results.Errors == null) {
                                        if (results == "Custom Error") {
                                            $m("#divLoading").hide();
                                            ShowDialogBox('EFS', 'System Error found. Please try again.', 'Ok', '');
                                            window.location.reload();
                                        }
                                        else {
                                            if (results == "0") {
                                                $m("#divLoading").hide();
                                                ShowDialogBox('EFS', 'System Error Found. Please try again.', 'Ok', '');
                                                window.location.reload();
                                            }
                                            else {
                                                results = "Custom Error";
                                                window.status = "Transaction saved successfully";
                                                // Refresh the Data on Grid...
                                                var doneFunction = function () {
                                                    $("#divLoading").hide();
                                                    ShowDialogBox('EFS', 'Transaction saved successfully. Letter of Indebtedness needs to be submitted. The loan balance will automatically be adjusted on any subsequent disclosure reports with the add/edit/delete of this loan transaction. Make sure to submit all amended disclosure reports to show the loan balance accurately.', 'Ok', '');
                                                };
                                                GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);

                                                var validator = $m("#DialogBoxSchedIForm").validate();
                                                validator.resetForm(); // clear out the validation errors
                                                $m("#DialogBoxSchedIForm")[0].reset();   // clear out the form data

                                                $(".divWidthSchedABC .error").removeClass("error");

                                                $("#btnUpdateDialog").hide();
                                                $("#btnAddDialog").show();

                                                $("#lblExplanation").text("Explanation");
                                                $("#txtCurrentDateLoanReceived").blur();
                                                $("#txtZipCode").blur();
                                                $("#txtAmt").blur();

                                                $("#txtCountry").val("United States");
                                                $("#txtCountry").prop("disabled", true);
                                                $("#chkCountry").prop('checked', false);
                                                $("#txtState").prop('maxLength', '2');
                                                $("#lstMethod")[0].selectedIndex = 0;
                                                $("#tdCheck").hide();
                                                $("#txtCurrentDateLoanReceived").focus();
                                                $m("label[for=txtCurrentDateLoanReceived]").text('');
                                                $m("#txtCurrentDateLoanReceived").removeClass("error");

                                                $m("label[for=txtCurrentDateLoanReceived]").text('');
                                                $m("#txtCurrentDateLoanReceived").removeClass("error");

                                                $m("#divLenderName").hide();
                                                $m("#divLenderFirstName").show();
                                                $m("#divLenderMiddleName").show();
                                                $m("#divLenderLastName").show();
                                                if (@Session["COMM_TYPE_ID"] == "23") {
                                                    if ($("#lstLoanerCode option:selected").val().toString() == "10") {
                                                        $("#tdEmployer").hide();
                                                        $("#tdOccupation").hide();
                                                        $("#divContStreetAddress").hide();
                                                        $("#divContCity").hide();
                                                        $("#divContState").hide();
                                                        $("#divContZip5").hide();
                                                    }
                                                    else {
                                                        $("#tdEmployer").show();
                                                        $("#tdOccupation").show();
                                                        $("#divContStreetAddress").show();
                                                        $("#divContCity").show();
                                                        $("#divContState").show();
                                                        $("#divContZip5").show();
                                                        $m("#txtEmployerPCFB").val("");
                                                        $m("#txtOccupationPCFB").val("");
                                                        $m("#txtContStreetName").val("");
                                                        $m("#txtContCity").val("");
                                                        $m("#txtContState").val("");
                                                        $m("#txtContZipCode").val("");
                                                    }
                                                }
                                                else {
                                                    $("#tdEmployer").hide();
                                                    $("#tdOccupation").hide();
                                                    $("#divContStreetAddress").hide();
                                                    $("#divContCity").hide();
                                                    $("#divContState").hide();
                                                    $("#divContZip5").hide();
                                                }
                                            }
                                        }
                                    }
                                    else if (results.Errors.length >= 0) {
                                        $m("#divLoading").hide();
                                        ClearServerSideErrors(); // Server Side Validation Clear
                                        AppendCustomErrorLabels(results.Errors);
                                    }
                                }).fail(function () {
                                    $m("#divLoading").hide();//When AddLoanReceivedScheduledData failed.
                                });
                            },
                            "Cancel": function () {
                                // confirm close
                                $m(this).dialog("close");
                            }
                        }
                    });
                }
                else {
                    $("#divLoading").show();
                    // INSERT
                    var url = '@Url.Action("AddLoanReceivedScheduledData", "LoanReceivedSchedI")';
                    $.post(url, {
                        txtFilerId: $("#txtFilerID").val(),
                        strFilingSchedId: $m("#lstTransactionType option:selected").val(),
                        strFilingSchedDate: $m("#txtCurrentDateLoanReceived").val().toString(),
                        strPayNumber: $m("#txtCheck").val().toString(),
                        strOrgAmt: $m("#txtAmt").val().toString(),
                        strTransExplanation: $m("#txtExplanationCommon").val().toString(),
                        strElectionTypeId: $m("#lstElectionType option:selected").val(),
                        lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                        lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                        lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                        lstFilingEntId: "",
                        strFlngEntName: $m("#txtLenderName").val().toString(),
                        strFlngEntFirstName: $m("#txtLenderFirstName").val().toString(),
                        strFlngEntMiddleName: $m("#txtLenderMIName").val().toString(),
                        strFlngEntLastName: $m("#txtLenderLastName").val().toString(),
                        strFlngEntStrName: $m("#txtStreetName").val().toString(),
                        txtPartCity: $m("#txtCity").val().toString(),
                        txtPartState: $m("#txtState").val().toString(),
                        txtPartZip: $m("#txtZipCode").val().toString(),
                        txtCountry: $m("#txtCountry").val().toString(),
                        chkCountry: $('#chkCountry').is(':checked').toString(),
                        PaymentTypeId: $m("#lstMethod option:selected").val(),
                        LoanerCodeID: $m("#lstLoanerCode option:selected").val(),
                        lstFilingDate: $m("#lstFilingDate option:selected").text(),
                        txtReportPeriodDatesTo: sessionStorage.getItem("FilingDate").toString(),
                        electionDateId: $m("#lstElectionDate").val(),
                        lstResigTermType: $m("#lstResigTermType option:selected").val(),
                        txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
                        lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
                        txtEmployerPCFB: $m("#txtEmployerPCFB").val(),
                        txtOccupationPCFB: $m("#txtOccupationPCFB").val(),
                        txtContStreetName: $m("#txtContStreetName").val(),
                        txtContCity: $m("#txtContCity").val(),
                        txtContState: $m("#txtContState").val(),
                        txtContZipCode: $m("#txtContZipCode").val()
                    }, function (results) {
                        if (results.Errors == null) {
                            if (results == "Custom Error") {
                                $m("#divLoading").hide();
                                ShowDialogBox('EFS', 'System Error found. Please try again.', 'Ok', '');
                                window.location.reload();
                            }
                            else {
                                if (results == "0") {
                                    $m("#divLoading").hide();
                                    ShowDialogBox('EFS', 'System Error Found. Please try again.', 'Ok', '');
                                    window.location.reload();
                                }
                                else {
                                    results = "Custom Error";
                                    window.status = "Transaction saved successfully";
                                    // Refresh the Data on Grid...
                                    var doneFunction = function () {
                                        $("#divLoading").hide();
                                        ShowDialogBox('EFS', 'Transaction saved successfully. Letter of Indebtedness needs to be submitted. The loan balance will automatically be adjusted on any subsequent disclosure reports with the add/edit/delete of this loan transaction. Make sure to submit all amended disclosure reports to show the loan balance accurately.', 'Ok', '');
                                    };
                                    GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);

                                    var validator = $m("#DialogBoxSchedIForm").validate();
                                    validator.resetForm(); // clear out the validation errors
                                    $m("#DialogBoxSchedIForm")[0].reset();   // clear out the form data

                                    $(".divWidthSchedABC .error").removeClass("error");

                                    $("#btnUpdateDialog").hide();
                                    $("#btnAddDialog").show();

                                    $("#lblExplanation").text("Explanation");
                                    $("#txtCurrentDateLoanReceived").blur();
                                    $("#txtZipCode").blur();
                                    $("#txtAmt").blur();

                                    $("#txtCountry").val("United States");
                                    $("#txtCountry").prop("disabled", true);
                                    $("#chkCountry").prop('checked', false);
                                    $("#txtState").prop('maxLength', '2');
                                    $("#lstMethod")[0].selectedIndex = 0;
                                    $("#tdCheck").hide();
                                    $("#txtCurrentDateLoanReceived").focus();
                                    $m("label[for=txtCurrentDateLoanReceived]").text('');
                                    $m("#txtCurrentDateLoanReceived").removeClass("error");

                                    $m("label[for=txtCurrentDateLoanReceived]").text('');
                                    $m("#txtCurrentDateLoanReceived").removeClass("error");

                                    $m("#divLenderName").hide();
                                    $m("#divLenderFirstName").show();
                                    $m("#divLenderMiddleName").show();
                                    $m("#divLenderLastName").show();
                                    if (@Session["COMM_TYPE_ID"] == "23") {
                                        if ($("#lstLoanerCode option:selected").val().toString() == "10") {
                                            $("#tdEmployer").hide();
                                            $("#tdOccupation").hide();
                                            $("#divContStreetAddress").hide();
                                            $("#divContCity").hide();
                                            $("#divContState").hide();
                                            $("#divContZip5").hide();
                                        }
                                        else {
                                            $("#tdEmployer").show();
                                            $("#tdOccupation").show();
                                            $("#divContStreetAddress").show();
                                            $("#divContCity").show();
                                            $("#divContState").show();
                                            $("#divContZip5").show();
                                            $m("#txtEmployerPCFB").val("");
                                            $m("#txtOccupationPCFB").val("");
                                            $m("#txtContStreetName").val("");
                                            $m("#txtContCity").val("");
                                            $m("#txtContState").val("");
                                            $m("#txtContZipCode").val("");
                                        }
                                    }
                                    else {
                                        $("#tdEmployer").hide();
                                        $("#tdOccupation").hide();
                                        $("#divContStreetAddress").hide();
                                        $("#divContCity").hide();
                                        $("#divContState").hide();
                                        $("#divContZip5").hide();
                                    }
                                }
                            }
                        }
                        else if (results.Errors.length >= 0) {
                            $m("#divLoading").hide();
                            ClearServerSideErrors(); // Server Side Validation Clear
                            AppendCustomErrorLabels(results.Errors);
                        }
                    }).fail(function () {
                        $m("#divLoading").hide();//When AddLoanReceivedScheduledData failed.
                    });
                }
            }
        });

        // EDIT COMMON ...................
        //...............................................................................................................
        if (sessionStorage.getItem("EditFlag") != null) {
            if (sessionStorage.getItem("EditFlag").toString() == "True") {
                var validator = $m("#DialogBoxSchedIForm").validate();
                validator.resetForm();  // clear out the validation errors
                $m("#DialogBoxSchedIForm")[0].reset();   // clear out the form data

                sessionStorage.setItem("FlagForBank", "YES");

                $("#lstTransactionType option").each(function () {
                    if ($(this).val() == sessionStorage.getItem("ScheduleId").toString()) {
                        //$(this).attr('selected', 'selected');
                        $(this).prop("selected", true);
                    }
                });

                // BIND COMMON SESSION VARIABLE.
                sessionStorage.setItem("TransactionType", sessionStorage.getItem("ScheduleId").toString());

                $.post("@Url.Content("~/_UC_GridCommonControl/GetEditTransactionData/")", {
                    strTransNumber: sessionStorage.getItem("TransNumberEdit").toString()
                }, function (resultsEditData) {
                    $.each(resultsEditData, function (i, item) {

                        $("#btnUpdateDialog").show();
                        $("#btnAddDialog").hide();
                        dialog.dialog("open");

                        sessionStorage.setItem("TransNumber", item.TransNumber.toString());
                        if (item.LoanLiablityNumber != null)
                            sessionStorage.setItem("loan_Lib_Num", item.LoanLiablityNumber.toString());
                        else
                            sessionStorage.setItem("loan_Lib_Num", "");
                        sessionStorage.setItem("FilingEntityId", item.FilingEntityId.toString());
                        $("#txtCurrentDateLoanReceived").val(item.SchedDate.toString());
                        $("#txtCurrentDateLoanReceived").removeClass("watermarkHTMLTextBox");
                        if (item.SchedDate.toString() != "" || item.SchedDate.toString() != null) {
                            var MyDate = new Date($("#txtCurrentDateLoanReceived").val().toString());
                            var MyDateString;
                            MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                                + ('0' + MyDate.getDate()).slice(-2) + '/'
                                + MyDate.getFullYear();
                            $("#txtCurrentDateLoanReceived").val("");
                            $("#txtCurrentDateLoanReceived").val(MyDateString);
                            $("#txtCurrentDateLoanReceived").removeClass("watermarkHTMLTextBox");
                        }
                        $("#txtCurrentDateLoanReceived").focus();

                        $m("#lstLoanerCode option").each(function () {
                            if ($(this).text() == item.LoanerCode.toString()) {
                                $(this).prop('selected', true).trigger('change');
                            }
                        });
                        if ($("#lstLoanerCode option:selected").text() == "Candidate" ||
                            $("#lstLoanerCode option:selected").text() == "Candidate Spouse" ||
                            $("#lstLoanerCode option:selected").text() == "Family Member of Candidate - Parent" ||
                            $("#lstLoanerCode option:selected").text() == "Family Member of Candidate - Grandparent" ||
                            $("#lstLoanerCode option:selected").text() == "Family Member of Candidate - Child" ||
                            $("#lstLoanerCode option:selected").text() == "Family Member of Candidate - Siblings" ||
                            $("#lstLoanerCode option:selected").text() == "Family Member of Candidate - Spouse of Any of These" ||
                            $("#lstLoanerCode option:selected").text() == "Individual") {
                            $("#divLenderName").hide();
                            $("#divLenderFirstName").show();
                            $("#divLenderMiddleName").show();
                            $("#divLenderLastName").show();
                            $("#txtLenderFirstName").removeClass("ui-state-error error");
                            $("#txtLenderMIName").removeClass("ui-state-error error");
                            $("#txtLenderLastName").removeClass("ui-state-error error");
                            $m("#txtLenderName").text('');
                            $m("#txtLenderFirstName").text('');
                            $m("#txtLenderMIName").text('');
                            $m("#txtLenderLastName").text('');
                        }
                        else if ($("#lstLoanerCode option:selected").text() == "Partnership (including LLPs)" ||
                            $("#lstLoanerCode option:selected").text() == "Bank" ||
                            $("#lstLoanerCode option:selected").text() == "Corporation" ||
                            $("#lstLoanerCode option:selected").text() == "Other Entities") {
                            $("#divLenderName").show();
                            $("#divLenderFirstName").hide();
                            $("#divLenderMiddleName").hide();
                            $("#divLenderLastName").hide();
                            $("#txtLenderName").removeClass("ui-state-error error");
                            $m("#txtLenderName").text('');
                            $m("#txtLenderFirstName").text('');
                            $m("#txtLenderMIName").text('');
                            $m("#txtLenderLastName").text('');
                        }
                        $("#lstLoanerCode").prop("disabled", true);

                        $("#txtLenderName").val(item.FilingEntityName.toString());
                        $("#txtLenderFirstName").val(item.FilingFirstName.toString());
                        $("#txtLenderMIName").val(item.FilingMiddleName.toString());
                        $("#txtLenderLastName").val(item.FilingLastName.toString());
                        $("#txtCountry").val(item.FilingCountry.toString());
                        if (item.FilingCountry.toString() == "United States") {
                            $("#chkCountry").prop('checked', false);
                            $("#txtCountry").prop("disabled", true);
                            $("#txtState").prop('maxLength', '2');
                        }
                        else { // Other Country
                            $("#chkCountry").prop('checked', true);
                            $("#txtCountry").prop("disabled", false);
                            $("#txtState").prop('maxLength', '30');
                            $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            $m('#txtZipCode').attr("placeholder", "");
                        }
                        $("#txtStreetName").val(item.FilingStreetName.toString());
                        $("#txtCity").val(item.FilingCity.toString());
                        $("#txtState").val(item.FilingState.toString());
                        $("#txtZipCode").val(item.FilingZip.toString());
                        if ($("#txtZipCode").val().toString() != "00000-0000") {
                            $("#txtZipCode").removeClass('watermark');
                        }

                        if (item.FilingZip.toString() != "") {
                            $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                        }
                        else {
                            $("#txtZipCode").addClass("watermarkHTMLTextBox");
                            if (item.FilingCountry.toString() == "United States") {
                                $("#txtZipCode").blur();
                            }
                        }
                        var originalAmount = item.OriginalAmount.toString();
                        $("#txtAmt").val(originalAmount);
                        sessionStorage.setItem("txtAmt", originalAmount);

                        if ($("#txtAmt").val().toString() != "" || $("#txtAmt").val().toString() != "999999999.99") {
                            $("#txtAmt").removeClass("watermarkHTMLTextBox");
                        }

                        if ($("#lstLoanerCode option:selected").text() == "Other Entities") {
                            $("#lblExplanation").text("* Explanation");
                        }
                        else {
                            $("#lblExplanation").text("Explanation");
                        }

                        $m("#lstMethod option").each(function () {
                            if ($(this).text() == item.PaymentTypeDesc.toString()) {
                                $(this).prop('selected', true).trigger('change');
                            }
                        });

                        if ($("#lstMethod option:selected").val().toString() == "1") { // CHECK
                            $("#tdCheck").show();
                            $("#lblExplanation").text("Explanation");
                        }
                        else if ($("#lstMethod option:selected").val().toString() == "7") { // OTHER
                            // EXPLANATION MANADATORY
                            $("#lblExplanation").text("* Explanation");
                            $("#tdCheck").hide();
                        }
                        else {
                            $("#lblExplanation").text("Explanation");
                            $("#tdCheck").hide();
                        }
                        $("#txtCheck").val(item.PayNumber.toString());

                        if ($("#lstLoanerCode option:selected").val().toString() == "13") { // OTHER
                            // EXPLANATION MANADATORY
                            $("#lblExplanation").text("* Explanation");
                        }

                        var varAmt = item.OriginalAmount.toString();
                        $("#txtAmt").val(varAmt);
                        $("#txtExplanationCommon").val(item.TransExplanation.toString())
                        // Common Code
                        sessionStorage.setItem("EditFlag", "False");
                        
                        if (@Session["COMM_TYPE_ID"] == "23") {
                            $("#tdEmployer").show();
                            $("#tdOccupation").show();
                            $("#divContStreetAddress").show();
                            $("#divContCity").show();
                            $("#divContState").show();
                            $("#divContZip5").show();
                            $("#txtEmployerPCFB").val(item.TreasurerEmployer);
                            $("#txtOccupationPCFB").val(item.TreasurerOccuptaion);
                            $("#txtContStreetName").val(item.TreaAddr1);
                            $("#txtContCity").val(item.TreaCity);
                            $("#txtContState").val(item.TreaState);
                            $("#txtContZipCode").val(item.TreaZipCode);
                        }
                        else {
                            $("#tdEmployer").hide();
                            $("#tdOccupation").hide();
                            $("#divContStreetAddress").hide();
                            $("#divContCity").hide();
                            $("#divContState").hide();
                            $("#divContZip5").hide();
                        }
                    });
                });
            }
        }

        // EDIT COMMON ...................
        //...............................................................................................................

        function ClearServerSideErrors() {
            //removing error class and error messages in search form
            $("#txtCurrentDateLoanReceived_validate").empty();
            $("#lstLoanerCode_validate").empty();
            $("#txtLenderName_validate").empty();
            $("#txtLenderFirstName_validate").empty();
            $("#txtLenderMIName_validate").empty();
            $("#txtLenderLastName_validate").empty();
            $("#txtCountry_validate").empty();
            $("#txtStreetName_validate").empty();
            $("#txtCity_validate").empty();
            $("#txtState_validate").empty();
            $("#txtZipCode_validate").empty();
            $("#txtCheck_validate").empty();
            $("#txtAmt_validate").empty();
            $("#txtExplanationCommon_validate").empty();
        }

        function ClearServerSideErrorsPartnership() {
            //removing error class and error messages in search form
            $("#txtPartnerName_validate").empty();
            $("#txtPartFirstName_validate").empty();
            $("#txtPartMI_validate").empty();
            $("#txtPartLastName_validate").empty();
            $("#txtCountryPartnership_validate").empty();
            $("#txtPartStreetName_validate").empty();
            $("#txtPartCity_validate").empty();
            $("#txtPartState_validate").empty();
            $("#txtPartZip5_validate").empty();
            $("#txtPartAmt_validate").empty();
            $("#txtPartExplanationInKind_validate").empty();
        }

        /**
         * Common code that "CLEAR THE LOAN DETAILS GIRDS - SB - 02.17.2021".
         * */
        function ClearTheLoanDetailsGrid() {
            // CLEAR THE LOAN DETAILS GIRDS - SB - 02.17.2021
            $(".divGridLoanReceivedJQueryClassSelector").hide();
            $("#divLiabilitiesGrid").hide();
            $(".divHeaderLoanReceivedJQueryClassSelector").hide();
            $("#divHeaderOutstandingLoans").hide();

            $("#divUCLoanRecLoanRepay").hide();
            $("#divUCLoanRecOutLoans").hide();
            $("#divUCLoanRepayLoanRec").hide();
            $("#divUCLoanRecLoanForgiven").hide();
            // CLEAR THE LOAN DETAILS GIRDS - SB - 02.17.2021
        }

        $m('#gridFilingTransactions tbody').on('click', 'a.editor_edit', function (e) {
            event.preventDefault();
            var data = tableFilingTransactions.row($(this).parents('tr')).data();
            // CLEAR THE LOAN DETAILS GIRDS - SB - 02.17.2021
            ClearTheLoanDetailsGrid();
            //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                txtFilerId: $("#txtFilerID").val(),
                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }, function (resultEditFlag) {
                if (resultEditFlag == "TRUE") {
                    var selectedTransactionType = data[1].toString();
                    sessionStorage.setItem("AddEditCloseStatus", "Edit");
                    ClearOutDialogBoxSchedIFormFormDataCommon();
                    $("#txtCurrentDateLoanReceived").focus();
                    sessionStorage.setItem("FlagForBank", "YES");
                    if (selectedTransactionType == "9") { // Schedule I
                        $("#divLoading").hide();
                        dialog.dialog("open");
                        $("#btnUpdateDialog").show();
                        $("#btnAddDialog").hide();

                        sessionStorage.setItem("loan_Lib_Num", data[41].toString());
                        sessionStorage.setItem("TransNumber", data[42].toString());
                        sessionStorage.setItem("FilingTransId", data[0].toString());
                        sessionStorage.setItem("FilingEntityId", data[2].toString());
                        $("#txtCurrentDateLoanReceived").val(data[10].toString());
                        $("#txtCurrentDateLoanReceived").removeClass("watermarkHTMLTextBox");
                        if (data[10].toString() != "" || data[10].toString() != null) {
                            var MyDate = new Date($("#txtCurrentDateLoanReceived").val().toString());
                            var MyDateString;
                            MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                                + ('0' + MyDate.getDate()).slice(-2) + '/'
                                + MyDate.getFullYear();
                            $("#txtCurrentDateLoanReceived").val("");
                            $("#txtCurrentDateLoanReceived").val(MyDateString);
                            $("#txtCurrentDateLoanReceived").removeClass("watermarkHTMLTextBox");
                        }
                        $("#txtCurrentDateLoanReceived").focus();

                        $m("#lstLoanerCode option").each(function () {
                            if ($(this).text() == data[32].toString()) {
                                $(this).prop('selected', true).trigger('change');
                            }
                        });
                        $("#lstLoanerCode").prop("disabled", true);

                        $("#txtLenderName").val(data[13].toString());
                        $("#txtLenderFirstName").val(data[14].toString());
                        $("#txtLenderMIName").val(data[15].toString());
                        $("#txtLenderLastName").val(data[16].toString());
                        $("#txtCountry").val(data[17].toString());
                        if (data[17].toString() == "United States") {
                            $("#chkCountry").prop('checked', false);
                            $("#txtCountry").prop("disabled", true);
                            $("#txtState").prop('maxLength', '2');
                        }
                        else { // Other Country
                            $("#chkCountry").prop('checked', true);
                            $("#txtCountry").prop("disabled", false);
                            $("#txtState").prop('maxLength', '30');
                            $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            $m('#txtZipCode').attr("placeholder", "");
                        }
                        $("#txtStreetName").val(data[18].toString());
                        $("#txtCity").val(data[19].toString());
                        $("#txtState").val(data[20].toString());
                        $("#txtZipCode").val(data[21].toString());
                        if ($("#txtZipCode").val().toString() != "00000-0000") {
                            $("#txtZipCode").removeClass('watermark');
                        }

                        if (data[21].toString() != "") {
                            $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                        }
                        else {
                            $("#txtZipCode").addClass("watermarkHTMLTextBox");
                            if (data[17].toString() == "United States") {
                                $("#txtZipCode").blur();
                            }
                        }

                        var originalAmount = data[24].toString();
                        $("#txtAmt").val(originalAmount);
                        sessionStorage.setItem("txtAmt", originalAmount);
                        if ($("#txtAmt").val().toString() != "" || $("#txtAmt").val().toString() != "999999999.99") {
                            $("#txtAmt").removeClass("watermarkHTMLTextBox");
                        }

                        if ($("#lstLoanerCode option:selected").text() == "Other Entities") {
                            $("#lblExplanation").text("* Explanation");
                        }
                        else {
                            $("#lblExplanation").text("Explanation");
                        }

                        $m("#lstMethod option").each(function () {
                            if ($(this).text() == data[22].toString()) {
                                $(this).prop('selected', true).trigger('change');
                            }
                        });

                        if ($("#lstMethod option:selected").val().toString() == "1") { // CHECK
                            $("#tdCheck").show();
                            $("#lblExplanation").text("Explanation");
                        }
                        else if ($("#lstMethod option:selected").val().toString() == "7") { // OTHER
                            // EXPLANATION MANADATORY
                            $("#lblExplanation").text("* Explanation");
                            $("#tdCheck").hide();
                        }
                        else {
                            $("#lblExplanation").text("Explanation");
                            $("#tdCheck").hide();
                        }
                        $("#txtCheck").val(data[23].toString());

                        if ($("#lstLoanerCode option:selected").val().toString() == "13") { // OTHER
                            // EXPLANATION MANADATORY
                            $("#lblExplanation").text("* Explanation");
                        }

                        var varAmt = data[24].toString();
                        $("#txtAmt").val(varAmt);
                        $("#txtExplanationCommon").val(data[36].toString());
                        if (@Session["COMM_TYPE_ID"] == "23") {
                            if ($("#lstLoanerCode option:selected").val().toString() == "10") {
                                $("#tdEmployer").hide();
                                $("#tdOccupation").hide();
                                $("#divContStreetAddress").hide();
                                $("#divContCity").hide();
                                $("#divContState").hide();
                                $("#divContZip5").hide();
                            }
                            else {
                                $("#tdEmployer").show();
                                $("#tdOccupation").show();
                                $("#divContStreetAddress").show();
                                $("#divContCity").show();
                                $("#divContState").show();
                                $("#divContZip5").show();
                                $("#txtEmployerPCFB").val(data[52].toString());
                                $("#txtOccupationPCFB").val(data[53].toString());
                                $("#txtContStreetName").val(data[55].toString());
                                $("#txtContCity").val(data[56].toString());
                                $("#txtContState").val(data[57].toString());
                                $("#txtContZipCode").val(data[58].toString());
                            }
                        }
                        else {
                            $("#tdEmployer").hide();
                            $("#tdOccupation").hide();
                            $("#divContStreetAddress").hide();
                            $("#divContCity").hide();
                            $("#divContState").hide();
                            $("#divContZip5").hide();
                        }

                    }// Other Schedules
                    else if (["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "16", "17", "18", "19", "20", "21"].includes(data[1].toString())) {
                        //Common code to determine redirect url and set session varialbes. Also hides $("#divLoading") on fail.
                        //Uses window.location.href
                        appCommonEFS_DetermineScheduleRedirect(data[1].toString(), data[42].toString());
                    }
                } else {//resultEditFlag != "TRUE"
                    $("#divLoading").hide();
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before editing this Transaction.', 'Ok', '');
                }
            }).fail(function () {
                $("#divLoading").hide();// GetEditFlag failed.
            });
        });

        //Delete - Start
        // Delete Record FILING TRANSACTIONS.
        $m('#gridFilingTransactions tbody').on('click', 'a.editor_remove', function (e) {
            e.preventDefault();
            var dataTrans = tableFilingTransactions.row($(this).parents('tr')).data();
            // CLEAR THE LOAN DETAILS GIRDS - SB - 02.17.2021
            ClearTheLoanDetailsGrid();
            //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                txtFilerId: $("#txtFilerID").val(),
                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }, function (resultEditFlag) {
                if (resultEditFlag == "TRUE") {

                    $.post("@Url.Content("~/_UC_GridCommonControl/GetDeleteFlag/")", {
                    }, function (resultDeleteFlag) {
                        if (resultDeleteFlag == "True") {

                            // LOAN RECEIVED DELETE CHECK.
                            $.post("@Url.Content("~/LoanReceivedSchedI/ValidateDelete_LoanReceived/")", {
                                loan_Lib_Number: dataTrans[41].toString(),
                            }, function (resultDeleteFlagSchedI) {

                                // CHECK THE VALIDATION IF ANY CONTRIBUTION REFUNDS (SCHEDULE 'M') EXISTS OR NOT.
                                // IF SCHEDULE 'M' EXISTS FOR EITHER SCHEDULE 'A', SCHEUDLE 'B', OR SCHEDULE 'C'...
                                // THEN SHOULD NOT DELETE UNTIL CHILD RECORDS DELETE.
                                $.post("@Url.Content("~/ContributionsCandIndFamily/ContributionsRefundSchedMExists/")", {
                                    strTransNumber: dataTrans[42].toString()
                                }, function (resultDelSchedABC) {

                                    // CHECK THE VALIDATION IF ANY EXPENDITURE REFUNDS (SCHEDULE 'L') EXISTS OR NOT.
                                    // IF SCHEDULE 'L' EXITS THEN SCHEDULE 'F' SHOULD NOT DELETE UNTLI CHILD DELETE ALL.
                                    $.post("@Url.Content("~/ExpenditurePaymentsSchedF/ExpenditureRefundSchedLExists/")", {
                                        strTransNumber: dataTrans[42].toString()
                                    }, function (resultDelSchedF) {
                                        var deleteData = {
                                            resultDeleteFlagSchedI: resultDeleteFlagSchedI,
                                            resultDelSchedABC: resultDelSchedABC,
                                            resultDelSchedF: resultDelSchedF
                                        }

                                        var resultsDelete = "Are you sure you want to delete this transaction?";
                                        var deleteURL = "";
                                        //Determine if you can
                                        var veredict = appCommonEFS_DetermineScheduleDelete(dataTrans, deleteData);
                                        if (!veredict || !bUtilIsObject(veredict)) {
                                            $("#divLoading").hide();
                                            return false;
                                        } else {
                                            var resultsDelete = veredict.alertMessageForOperation;
                                            var deleteURL = veredict.deleteURL;
                                        }

                                        $m('#modal_dialog').text(resultsDelete);
                                        $m("#modal_dialog").dialog({
                                            resizable: false,
                                            width: '400px',
                                            height: 'auto',
                                            bgiframe: false,
                                            modal: true,
                                            closeOnEscape: false,
                                            open: function (event, ui) {
                                                $("#divLoading").hide();
                                                hideDialogXButton(this);
                                            },
                                            buttons: {
                                                "Ok": function () {
                                                    // Close Confirm Box.
                                                    $m(this).dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                                    $("#divLoading").show();
                                                    var options = {};
                                                    options.url = deleteURL;
                                                    options.type = "GET";
                                                    options.data = {
                                                        strLoanLiabNumberOrg: dataTrans[41].toString(),
                                                        strTransNumber: dataTrans[42].toString(),
                                                        strRLiability: dataTrans[6].toString()
                                                    };
                                                    options.dataType = "json";
                                                    options.contentType = "application/json";
                                                    options.success = function (results) {
                                                        window.status = "Record deleted successfully";
                                                        $("#divShowPartnerAdddataNCR").hide();
                                                        var doneFunction = function () {
                                                            $("#divLoading").hide();
                                                            ShowDialogBox('EFS', 'Transaction deleted successfully. The loan balance will automatically be adjusted on any subsequent disclosure reports with the add/edit/delete of this loan transaction. Make sure to submit all amended disclosure reports to show the loan balance accurately.', 'Ok', '');
                                                        }

                                                        // Refresh the Data on Grid...
                                                        GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);
                                                    };
                                                    options.error = function () {
                                                        $("#divLoading").hide();// Call to method in deleteURL failed.
                                                        ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                                                    };
                                                    $.ajax(options);
                                                },
                                                "Cancel": function () {
                                                    $m(this).dialog("close");
                                                }
                                            }
                                        });
                                    }).fail(function () {
                                        $("#divLoading").hide();// ExpenditureRefundSchedLExists failed.
                                    });
                                }).fail(function () {
                                    $("#divLoading").hide();// ContributionsRefundSchedMExists failed.
                                });
                            }).fail(function () {
                                $("#divLoading").hide();// ValidateDelete_LoanReceived failed.
                            });
                        } else {//When resultDeleteFlag != "True"
                            $("#divLoading").hide();
                            ShowDialogBox('EFS', 'The last transaction cannot be deleted.  To delete the Disclosure report, a deletion request must be submitted to cfinfo@elections.ny.gov', 'Ok', '');
                        }
                    }).fail(function () {
                        $("#divLoading").hide();// GetDeleteFlag failed.
                    });
                } else {//When  resultEditFlag != "TRUE".
                    $("#divLoading").hide();
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before editing this Transaction.', 'Ok', '');
                }
            }).fail(function () {
                $("#divLoading").hide();// GetEditFlag failed.
            });
        });
        //Delete - End

        $m("#btnUpdateDialog").click(function () {
            $m('#DialogBoxSchedIForm').valid();
            if ($m('#DialogBoxSchedIForm').valid()) {
                // SHOW THE PROCESSING....
                //$m("#divLoading").show();

                var valid = true;
                if (@Session["COMM_TYPE_ID"] == "23") {
                    if ($("#lstLoanerCode option:selected").val() != "10") {
                        if ($m("#txtEmployerPCFB").val() == "" ||
                            $m("#txtOccupationPCFB").val() == "" ||
                            $m("#txtContStreetName").val() == "" ||
                            $m("#txtContCity").val() == "" ||
                            $m("#txtContState").val() == "" ||
                            $m("#txtContZipCode").val() == "") {
                            valid = false;
                        }
                    }
                }

                if (valid == false) {
                    // Get confirmation the DialogBox or Not.
                    var resultsCloseSchedA = "You have reported a loan without Employer Address, Occupation, Employer and Employer Address. Failure to provide Employer Address, Occupation, Employer and Employer Address may be cited as a Deficiency by Compliance Review staff.";
                    $m('#modal_dialog').text(resultsCloseSchedA);
                    $m("#modal_dialog").dialog({
                        resizable: false,
                        modal: true,
                        width: '400px',
                        height: 'auto',
                        bgiframe: false,
                        closeOnEscape: false,
                        open: function (event, ui) { hideDialogXButton(this); },
                        buttons: {
                            "OK": function () {
                                $m(this).dialog("close");
                                $("#divLoading").show();
                                // INSERT
                                $.post("@Url.Content("~/LoanReceivedSchedI/ValidateSchedI_UpdateAmount/")", {
                                    trans_Number: sessionStorage.getItem("TransNumber").toString(),
                                    org_Amt: $("#txtAmt").val().toString(),
                                }, function (result) {
                                    if (result == "1") {
                                        $("#divLoading").hide();
                                        ShowDialogBox('EFS', 'Amount cannot be less than Loan Payments/Loans Forgiven Amount.', 'Ok', '');
                                    }
                                    else if (result == "2") {
                                        $("#divLoading").hide();
                                        ShowDialogBox('EFS', 'Amount cannot be less than partnership details Amount.', 'Ok', '');
                                    }
                                    else {
                                        var url = '@Url.Action("UpdateLoanReceivedScheduledData", "LoanReceivedSchedI")';
                                        $m.post(url, {
                                            txtFilerId: $("#txtFilerID").val(),
                                            strFilingSchedId: $m("#lstTransactionType option:selected").val(),
                                            strFilingSchedDate: $m("#txtCurrentDateLoanReceived").val().toString(),
                                            strPayNumber: $m("#txtCheck").val().toString(),
                                            strOrgAmt: $m("#txtAmt").val().toString(),
                                            strTransExplanation: $m("#txtExplanationCommon").val().toString(),
                                            strElectionTypeId: $m("#lstElectionType option:selected").val(),
                                            lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                                            lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                                            lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                                            lstFilingEntId: "",
                                            strFlngEntName: $m("#txtLenderName").val().toString(),
                                            strFlngEntFirstName: $m("#txtLenderFirstName").val().toString(),
                                            strFlngEntMiddleName: $m("#txtLenderMIName").val().toString(),
                                            strFlngEntLastName: $m("#txtLenderLastName").val().toString(),
                                            strFlngEntStrName: $m("#txtStreetName").val().toString(),
                                            txtPartCity: $m("#txtCity").val().toString(),
                                            txtPartState: $m("#txtState").val().toString(),
                                            txtPartZip: $m("#txtZipCode").val().toString(),
                                            txtCountry: $m("#txtCountry").val().toString(),
                                            chkCountry: $('#chkCountry').is(':checked').toString(),
                                            PaymentTypeId: $m("#lstMethod option:selected").val(),
                                            LoanerCodeID: $m("#lstLoanerCode option:selected").val(),
                                            lstFilingDate: $m("#lstFilingDate option:selected").text(),
                                            txtReportPeriodDatesTo: sessionStorage.getItem("FilingDate").toString(),
                                            electionDateId: $m("#lstElectionDate").val(),
                                            lstResigTermType: $m("#lstResigTermType option:selected").val(),
                                            txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
                                            transNumber: sessionStorage.getItem("TransNumber").toString(),
                                            loan_Lib_Number: sessionStorage.getItem("loan_Lib_Num").toString(),
                                            amountCheck: sessionStorage.getItem("txtAmt").toString(),
                                            txtEmployerPCFB: $m("#txtEmployerPCFB").val(),
                                            txtOccupationPCFB: $m("#txtOccupationPCFB").val(),
                                            txtContStreetName: $m("#txtContStreetName").val(),
                                            txtContCity: $m("#txtContCity").val(),
                                            txtContState: $m("#txtContState").val(),
                                            txtContZipCode: $m("#txtContZipCode").val()
                                        }, function (data) {
                                            // Close Dialogbox.
                                            dialog.dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                            // Saved
                                            window.status = "Transaction saved successfully";
                                            var doneFunction = function () {
                                                $("#divLoading").hide();
                                                ShowDialogBox('EFS', 'Transaction saved successfully. The loan balance will automatically be adjusted on any subsequent disclosure reports with the add/edit/delete of this loan transaction. Make sure to submit all amended disclosure reports to show the loan balance accurately.', 'Ok', '');
                                            }
                                            // Refresh the Data on Grid...
                                            GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);
                                        }).fail(function () {
                                            $("#divLoading").hide();// UpdateLoanReceivedScheduledData failed.
                                        });
                                    }
                                }).fail(function () {
                                    $m("#divLoading").hide();//ValidateSchedI_UpdateAmount failed.
                                });
                            },
                            "Cancel": function () {
                                // confirm close
                                $m(this).dialog("close");
                            }
                        }
                    });
                }
                else {
                    $m("#divLoading").show();
                    $.post("@Url.Content("~/LoanReceivedSchedI/ValidateSchedI_UpdateAmount/")", {
                        trans_Number: sessionStorage.getItem("TransNumber").toString(),
                        org_Amt: $("#txtAmt").val().toString(),
                    }, function (result) {
                        if (result == "1") {
                            $("#divLoading").hide();
                            ShowDialogBox('EFS', 'Amount cannot be less than Loan Payments/Loans Forgiven Amount.', 'Ok', '');
                        }
                        else if (result == "2") {
                            $("#divLoading").hide();
                            ShowDialogBox('EFS', 'Amount cannot be less than partnership details Amount.', 'Ok', '');
                        }
                        else {
                            var url = '@Url.Action("UpdateLoanReceivedScheduledData", "LoanReceivedSchedI")';
                            $m.post(url, {
                                txtFilerId: $("#txtFilerID").val(),
                                strFilingSchedId: $m("#lstTransactionType option:selected").val(),
                                strFilingSchedDate: $m("#txtCurrentDateLoanReceived").val().toString(),
                                strPayNumber: $m("#txtCheck").val().toString(),
                                strOrgAmt: $m("#txtAmt").val().toString(),
                                strTransExplanation: $m("#txtExplanationCommon").val().toString(),
                                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                                lstFilingEntId: "",
                                strFlngEntName: $m("#txtLenderName").val().toString(),
                                strFlngEntFirstName: $m("#txtLenderFirstName").val().toString(),
                                strFlngEntMiddleName: $m("#txtLenderMIName").val().toString(),
                                strFlngEntLastName: $m("#txtLenderLastName").val().toString(),
                                strFlngEntStrName: $m("#txtStreetName").val().toString(),
                                txtPartCity: $m("#txtCity").val().toString(),
                                txtPartState: $m("#txtState").val().toString(),
                                txtPartZip: $m("#txtZipCode").val().toString(),
                                txtCountry: $m("#txtCountry").val().toString(),
                                chkCountry: $('#chkCountry').is(':checked').toString(),
                                PaymentTypeId: $m("#lstMethod option:selected").val(),
                                LoanerCodeID: $m("#lstLoanerCode option:selected").val(),
                                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                                txtReportPeriodDatesTo: sessionStorage.getItem("FilingDate").toString(),
                                electionDateId: $m("#lstElectionDate").val(),
                                lstResigTermType: $m("#lstResigTermType option:selected").val(),
                                txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
                                transNumber: sessionStorage.getItem("TransNumber").toString(),
                                loan_Lib_Number: sessionStorage.getItem("loan_Lib_Num").toString(),
                                amountCheck: sessionStorage.getItem("txtAmt").toString(),
                                txtEmployerPCFB: $m("#txtEmployerPCFB").val(),
                                txtOccupationPCFB: $m("#txtOccupationPCFB").val(),
                                txtContStreetName: $m("#txtContStreetName").val(),
                                txtContCity: $m("#txtContCity").val(),
                                txtContState: $m("#txtContState").val(),
                                txtContZipCode: $m("#txtContZipCode").val()
                            }, function (data) {
                                // Close Dialogbox.
                                dialog.dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                // Saved
                                window.status = "Transaction saved successfully";
                                var doneFunction = function () {
                                    $("#divLoading").hide();
                                    ShowDialogBox('EFS', 'Transaction saved successfully. The loan balance will automatically be adjusted on any subsequent disclosure reports with the add/edit/delete of this loan transaction. Make sure to submit all amended disclosure reports to show the loan balance accurately.', 'Ok', '');
                                }
                                // Refresh the Data on Grid...
                                GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);
                            }).fail(function () {
                                $("#divLoading").hide();// UpdateLoanReceivedScheduledData failed.
                            });
                        }
                    }).fail(function () {
                        $m("#divLoading").hide();//ValidateSchedI_UpdateAmount failed.
                    });
                }
            }
        });

        $m("#btnClearDialog").button().on("click", function () {

            var loanerCodeTemp = $m("#lstLoanerCode option:selected").text();

            var validator = $m("#DialogBoxSchedIForm").validate();
            validator.resetForm();  // clear out the validation errors
            $m("#DialogBoxSchedIForm")[0].reset();   // clear out the form data

            $(".divWidthSchedABC .error").removeClass("error");

            $("#lblExplanation").text("Explanation");

            $("#txtCountry").val("United States");
            $("#txtCountry").prop("disabled", true);
            $("#chkCountry").prop('checked', false);
            $("#txtState").prop('maxLength', '2');
            $("#lstMethod")[0].selectedIndex = 0;
            $("#tdCheck").hide();
            $("#txtCurrentDateLoanReceived").focus();
            $m("label[for=txtCurrentDateLoanReceived]").text('');
            $m("#txtCurrentDateLoanReceived").removeClass("error");
            $m("#divLenderName").hide();
            $m("#divLenderFirstName").show();
            $m("#divLenderMiddleName").show();
            $m("#divLenderLastName").show();

            if (sessionStorage.getItem("AddEditCloseStatus").toString() == "Edit") {
                $m("#lstLoanerCode option").each(function () {
                    if ($(this).text() == loanerCodeTemp.toString()) {
                        $(this).prop('selected', true).trigger('change');
                        sessionStorage.setItem("FlagForBank", "YES");
                    }
                });
            }

            if ($("#lstLoanerCode option:selected").val().toString() == "13") { // OTHER
                // EXPLANATION MANADATORY
                $("#lblExplanation").text("* Explanation");
            }
            else {
                $("#lblExplanation").text("Explanation");
            }

            if (@Session["COMM_TYPE_ID"] == "23") {
                if ($("#lstLoanerCode option:selected").val().toString() == "10") {
                    $("#tdEmployer").hide();
                    $("#tdOccupation").hide();
                    $("#divContStreetAddress").hide();
                    $("#divContCity").hide();
                    $("#divContState").hide();
                    $("#divContZip5").hide();
                }
                else {
                    $("#tdEmployer").show();
                    $("#tdOccupation").show();
                    $("#divContStreetAddress").show();
                    $("#divContCity").show();
                    $("#divContState").show();
                    $("#divContZip5").show();
                    $m("#txtEmployerPCFB").val("");
                    $m("#txtOccupationPCFB").val("");
                    $m("#txtContStreetName").val("");
                    $m("#txtContCity").val("");
                    $m("#txtContState").val("");
                    $m("#txtContZipCode").val("");
                }
            }
            else {
                $("#tdEmployer").hide();
                $("#tdOccupation").hide();
                $("#divContStreetAddress").hide();
                $("#divContCity").hide();
                $("#divContState").hide();
                $("#divContZip5").hide();
            }
        });

        /**
         * Common way to call GetuAutoCompleteNameData
         * param {String} strValueString is the string we pass to strValue as data.
         * param {String} autoCompleteType allows us to customize some of the actions.
         */
        function GetAutoCompleteNameData(strValueString, autoCompleteType) {
            $.ajax({
                url: "@Url.Content("~/ContributionsCandIndFamily/GetAutoCompleteNameData/")",
                dataType: "json",
                data: {
                    strValue: strValueString
                },
                success: function (results) {
                    $.each(results, function (i, item) {
                        $("#txtStreetName").val(item.FilingEntityStreetName.toString());
                        $("#txtCity").val(item.FilingEntityCity.toString());
                        $("#txtState").val(item.FilingEntityState.toString());
                        $("#txtZipCode").val(item.FilingEntityZip.toString());
                        $("#txtCountry").val(item.FilingEntityCountry.toString());

                        if ($("#txtCountry").val().toString() == "United States") {
                            $("#chkCountry").prop('checked', false);
                            $("#txtCountry").prop("disabled", true);
                            $("#txtState").prop('maxLength', '2');
                            if (item.FilingEntityZip.toString() != "") {
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            }
                            else {
                                $("#txtZipCode").addClass("watermarkHTMLTextBox");
                                $("#txtZipCode").blur();
                            }
                        } else {
                            $("#chkCountry").prop('checked', true);
                            $("#txtCountry").prop("disabled", false);
                            $("#txtState").prop('maxLength', '30');

                            $m('#txtZipCode').attr("placeholder", "");
                            $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                        }
                        // Address validation
                        $m("#txtCountry").valid();
                        $m("#txtStreetName").valid();
                        $m("#txtCity").valid();
                        $m("#txtState").valid();
                        $m("#txtZipCode").valid();
                        switch (autoCompleteType) {
                            case "txtLenderName":
                                $("#txtLenderName").val(item.FilingEntityName.toString());
                                $m("#txtLenderName").valid();
                                break;
                            case "txtLenderFirstName":
                            case "txtLenderLastName":
                                $("#txtLenderFirstName").val(item.FilingEntityFirstName.toString());
                                $("#txtLenderMIName").val(item.FilingEntityMiddleName.toString());
                                $("#txtLenderLastName").val(item.FilingEntityLastName.toString());
                                $m("#txtLenderFirstName").valid();
                                break;
                            case "txtPartnerShipName":
                                $("#txtPartnerShipName").val(item.FilingEntityName.toString());
                                $m("#txtPartnerShipName").valid();
                                break;
                            default:
                                console.warn("GetAutoCompleteNameData warning: Unsuported type autoCompleteType value of '" + autoCompleteType +"'.");
                                break;
                        }
                    });
                }
            });
            $("#lstMethod").focus();
        }

        /**
         * Common way to call GetuAutoCompleteNameData FOR partner fields
         * param {String} strValueString is the string we pass to strValue as data.
         * param {String} autoCompleteType allows us to customize some of the actions.
         */
        function GetAutoCompleteNameData_ForPartner(strValueString, autoCompleteType) {
            $.ajax({
                url: "@Url.Content("~/ContributionsCandIndFamily/GetAutoCompleteNameData/")",
                dataType: "json",
                data: {
                    strValue: strValueString
                },
                success: function (results) {
                    $.each(results, function (i, item) {
                        $("#txtPartStreetName").val(item.FilingEntityStreetName.toString());
                        $("#txtPartCity").val(item.FilingEntityCity.toString());
                        $("#txtPartState").val(item.FilingEntityState.toString());
                        $("#txtPartZip5").val(item.FilingEntityZip.toString());
                        $("#txtCountryPartnership").val(item.FilingEntityCountry.toString());
                        if ($("#txtCountryPartnership").val().toString() == "United States") {
                            $("#chkCountryPartnership").prop('checked', false);
                            $("#txtCountryPartnership").prop("disabled", true);
                            $("#txtPartState").prop('maxLength', '2');
                            if (item.FilingEntityZip.toString() != "") {
                                $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                            }
                            else {
                                $("#txtPartZip5").addClass("watermarkHTMLTextBox");
                                $("#txtPartZip5").blur();
                            }
                        } else {
                            $("#chkCountryPartnership").prop('checked', true);
                            $("#txtCountryPartnership").prop("disabled", false);
                            $("#txtPartState").prop('maxLength', '30');

                            $m('#txtPartZip5').attr("placeholder", "");
                            $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                        }

                        // Address validation
                        $m("#txtCountryPartnership").valid();
                        $m("#txtPartStreetName").valid();
                        $m("#txtPartCity").valid();
                        $m("#txtPartState").valid();
                        $m("#txtPartZip5").valid();

                        switch (autoCompleteType) {
                            case "txtPartFirstName":
                                $("#txtPartFirstName").val(item.FilingEntityFirstName.toString());
                                $("#txtPartMI").val(item.FilingEntityMiddleName.toString());
                                $("#txtPartLastName").val(item.FilingEntityLastName.toString());
                                $m("#txtPartFirstName").valid();
                                break;
                            case "txtPartLastName":
                                $("#txtPartFirstName").val(item.FilingEntityFirstName.toString());
                                $("#txtPartMI").val(item.FilingEntityMiddleName.toString());
                                $("#txtPartLastName").val(item.FilingEntityLastName.toString());
                                $m("#txtPartLastName").valid();
                                break;
                            case "txtPartnerName":
                                $("#txtPartnerName").val(item.FilingEntityName.toString());
                                $m("#txtPartnerName").valid();
                                break;
                            default:
                                console.warn("GetAutoCompleteNameData_ForPartner warning: Unsuported type autoCompleteType value of '" + autoCompleteType +"'.");
                                break;
                        }
                    });
                    $("#txtPartAmt").focus();
                }
            });
        }
        // Lender Name Auto Complete.
        $m("#txtLenderName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/ContributionsCandIndFamily/AutoCompleteEntityName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();
                var selectedValue = ui.item.label;
                GetAutoCompleteNameData(selectedValue.toString(), "txtLenderName");
            }
        });

        // First Name Auto Complete.
        $m("#txtLenderFirstName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/ContributionsCandIndFamily/AutoCompleteFirstName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();
                var selectedValue = ui.item.label;
                GetAutoCompleteNameData(selectedValue.toString(), "txtLenderFirstName");
            }
        });

        // Last Name - Auto Complete
        $m("#txtLenderLastName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/ContributionsCandIndFamily/AutoCompleteLastName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();
                var selectedValue = ui.item.label;
                GetAutoCompleteNameData(selectedValue.toString(), "txtLenderLastName");
            }
        });

        LoadData();

        function LoadData()
        {
        // Grid Common Code ///////////////////////////////////////////////////
            $("#divLoading").show();
        tableFilingTransactions = $m('#gridFilingTransactions').DataTable({
            "bProcessing": true,
            "responsive": true,
            "deferRender": true,
            "retrieve": true,
            "columnDefs": [
                {
                    "targets": [0, 1, 2, 3, 4, 5, 6, 7, 38, 39, 41, 42, 43, 44, 45],
                    "visible": false,
                    "searchable": false
                },
                {
                    "targets": [9],
                    "fnCreatedCell": function (cell) {
                        cell.setAttribute('aria-label', "Row Actions");
                    }
                }
            ],
            "initComplete": function (settings, json) {
                //Accessibility: Applies various Accessibility features to this dataTable.
                makeDataTableAccessible($m('#gridFilingTransactions').DataTable());
            },
            "fnRowCallback": function (nRow, aaData, iDisplayIndex) {
                var uniqueID = generateUniqueRowIdForFnRowCallback(iDisplayIndex, nRow);
                if (aaData[1] == "9") {
                    $m('td:eq(1)', nRow).html('<a class="editor_edit" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_loanDetails lnkGird"  href="#divUCLoanRecLoanRepay"> Loan Details </a>');
                    if (aaData[32] == "Partnership (including LLPs)") {
                        $m('td:eq(1)', nRow).html('<a class="editor_edit" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_loanDetails lnkGird"  href="#divUCLoanRecLoanRepay"> Loan Details </a><a class="editor_AttributionSchedA lnkGird" href="">Partnership</a>');
                    }
                }
                else if (aaData[1] == "10") {
                    $m('td:eq(1)', nRow).html('<a class="editor_edit" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_loanDetails lnkGird"  href="#divUCLoanRecLoanRepay"> Loan Details </a>');
                }
                else if (aaData[1] == "11") {
                    $m('td:eq(1)', nRow).html('<a class="editor_remove" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_loanDetails lnkGird"  href="#divUCLoanRecLoanRepay"> Loan Details </a>');
                }
                else if (aaData[1] == "14" && aaData[6] != "Y") {
                    $m('td:eq(1)', nRow).html('<a class="editor_loanDetails lnkGird"  href="#divUCLoanRecLoanRepay"> Loan Details </a>');
                }
                else if (aaData[1] == "14" && aaData[6] == "Y") { // LIABILITY.
                    if (aaData[22] == aaData[23]) {
                        $m('td:eq(1)', nRow).html('');
                    }
                    else if (aaData[22] != aaData[23]) {
                        $m('td:eq(1)', nRow).html('');
                    }
                }
                else {
                    if (aaData[1] != "15") {
                        $m('td:eq(1)', nRow).html('<a class="editor_edit" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                    }
                    else { // SCHEDULE 15 LEGACY DATA NOT EDIT NO ADD ONLY DELETE.
                        $m('td:eq(1)', nRow).html('<a class="editor_remove" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                    }
                }
                return nRow;
            },
            "fnDrawCallback": function () {
                $("#divLoading").hide();
            },
            "fnServerData": function (url, data, callback) {
                console.log(data);
                // Refresh the Data on Grid...
                GetAllTransactionTypesData(false, callback, false, false);
            }
        });
            tableFilingTransactions.columns.adjust().draw(true);
            $m('#gridFilingTransactions').DataTable().ajax.reload();
            //tableFilingTransactions.columns.adjust().draw(false);
            tableFilingTransactions.order([40, 'desc']).draw();
            if (@Session["COMM_TYPE_ID"] == "23") {
                tableFilingTransactions.column(46).visible(true);
                tableFilingTransactions.column(47).visible(true);
                tableFilingTransactions.column(48).visible(true);
                tableFilingTransactions.column(49).visible(true);
                tableFilingTransactions.column(50).visible(true);
                tableFilingTransactions.column(51).visible(true);
                tableFilingTransactions.column(52).visible(true);
                tableFilingTransactions.column(53).visible(true);
                tableFilingTransactions.column(54).visible(true);
            }
            else {
                tableFilingTransactions.column(46).visible(false);
                tableFilingTransactions.column(47).visible(false);
                tableFilingTransactions.column(48).visible(false);
                tableFilingTransactions.column(49).visible(false);
                tableFilingTransactions.column(50).visible(false);
                tableFilingTransactions.column(51).visible(false);
                tableFilingTransactions.column(52).visible(false);
                tableFilingTransactions.column(53).visible(false);
                tableFilingTransactions.column(54).visible(false);
            }

            if (@Session["COMM_TYPE_ID"] == "19") {
                tableFilingTransactions.column(55).visible(true);
            }
            else {
                tableFilingTransactions.column(55).visible(false);
            }

            tableFilingTransactions.columns.adjust().draw(false);
            tableFilingTransactions.columns.adjust().responsive.recalc();
            $("#divLoading").show();
        }

        //Common Code for Set Preferences - Start
        //---------------------------------------------------------------------------------------------------------------------------------------
        //---------------------------------------------------------------------------------------------------------------------------------------
        $('#btnSetPreferences').click(function () {
            $("#divLoading").show();
            var options = {};
            options.url = "@Url.Content("~/_UC_GridCommonControl/UpdateColumnValue/")";
            options.type = "GET";
            options.data = {
                uniqueValue: $m("#ddlViewableColumn").multipleSelect("getSelects").toString()
            };
            options.dataType = "json";
            options.contentType = "application/json";
            options.success = function (results) {
                window.status = "Transaction saved successfully";

                //Bind Grid hides the loading too!
                GetAllTransactionTypesData(true, tableFilingTransactions, false, false);
                HideColumn($m("#ddlViewableColumn").multipleSelect("getSelects", "text").toString().split(","));
                $("#divLoading").hide();
            };
            options.error = function () {
                $("#divLoading").hide();
                ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
            };
            $.ajax(options);

        });

        $.post("@Url.Content("~/_UC_GridCommonControl/GetSortName/")", {
        }, function (results) {
            HideColumn(results.toString().split(","));
        });

        function HideColumn(results) {
            var rules = {
                "indexesToStartHidden": [0, 1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43],
                "indexesToAlwaysKeepUnhidden": [8, 9], //Will always unhide.
                "columnNamesToUnhide": results,//String to match.
                "columnNamesIndexMappings": appCommonEFS_GetGridColumnSettings("UC_GridCommonControl") //String in header, index to unhide
            }
            appCommonEFS_HideTableColumn(tableFilingTransactions, rules);
        }

        /**
         * Appends label text to _validate elementys based on a list of custom errors returned from the server.
         * It won't do anyting to handle "AmmountError" keys but it will return true if it sees one in the list.
          * param {reuslt.Errors} errorList
          * Replaces this type of code basically:
             for (var i = 0; i < results.Errors.length; i++) {
                 if (results.Errors[i].Key == "txtPartAmt") {
                     $("#txtPartAmtSchedD_validate").append('<label for="txtPartAmtSchedD" class="error">' + results.Errors[i].Value + '</label>');
                 }
                 if (results.Errors[i].Key == "txtPartExplanationInKind") {
                     $("#txtPartExplanationInKind_validate").append('<label for="txtPartExplanationInKind" class="error">' + results.Errors[i].Value + '</label>');
                 }
                 if (results.Errors[i].Key == "AmountError") {
                     ShowDialogBox('EFS', 'Partnership Amount cannot be more than Outstanding Amount $' + parseFloat(expPartAmount).toFixed(2).toString(), 'Ok', '');
                 }
             }
        */
        function AppendCustomErrorLabels(errorList) {
            //You can define special error conditions using  new Map([["txtAmt", "txtAmtABC"], ["txtPartAmt", "txtPartAmtAC"]])
            var errorLabelDiscrepancies = false;//In this page all the error keys matched the label name so no discrepancies were needed.
            return appCommonEFS_AppendCustomErrorLabelsForAmmountError(errorList, errorLabelDiscrepancies);
        }

        //Commonly used values in this particular page.
        function GetTableFilingTransactionsAjaxOptionsData() {
            return {
                txtFilerID: $("#txtFilerID").val(),
                lstElectionCycle: $("#lstElectionCycle option:selected").val(),
                lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                lstElectionType: $("#lstElectionType option:selected").val(),
                lstElectionDateId: $("#lstElectionDate option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }
        }

        /**Common code for invoking GetAllTransactionTypesData from controller.
         * reloadAndRecalc { boolean } reloads and recalculates the table. When we reload we will display the "divLoading" image until the ajax reload call is completed. This was created for ALM Defect 707 where users were intertacting with the table while the "Processing..." text was still visible.
         * dataTableInstanceToReload { function } The referecne to the datatable we will reload in the success callback..
         * dataOverides { ajax data params } pass to overwrite data values when making ajax call.
         * doneFunction { function } A function to be called if the ajax call is completed.
         */
        function GetAllTransactionTypesData(reloadAndRecalc, dataTableInstanceToReload, dataOverides, doneFunction) {
            var callback = dataTableInstanceToReload ? dataTableInstanceToReload : tableFilingTransactions;
            //Determine what data to use.
            var optionsData = bUtilIsObject(dataOverides) ? dataOverides : GetTableFilingTransactionsAjaxOptionsData();
            appCommonEFS_GetAllTransactionTypesDataCommon(reloadAndRecalc, callback, optionsData, doneFunction);
        }

        //Common Code for Set Preferences - End
        //---------------------------------------------------------------------------------------------------------------------------------------
        //---------------------------------------------------------------------------------------------------------------------------------------

        // satheesh
        $m('#gridFilingTransactions tbody').on('click', 'tr', function (e) {
            var flngSchedId = tableFilingTransactions.cell(this, 1).data();
            var flngLoanerCode = tableFilingTransactions.cell(this, 32).data();
            if ($(this).hasClass('selected') != true) {
                tableFilingTransactions.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
            }

            if (flngSchedId != null) {
                if (flngSchedId.toString() != "9") {
                    $("#divShowPartnerAdddataNCR").hide();
                    sessionStorage.removeItem("PartnershipLink");
                }
                else {
                    if (flngLoanerCode.toString() != "Partnership (including LLPs)") {
                        $("#divShowPartnerAdddataNCR").hide();
                        sessionStorage.removeItem("PartnershipLink");
                    }
                    else {
                        if (sessionStorage.getItem("PartnershipLink") != null) {
                            if (sessionStorage.getItem("PartnershipLink").toString() == "Yes") {
                                $("#divShowPartnerAdddataNCR").show();
                                sessionStorage.removeItem("PartnershipLink");
                            }
                        }
                        else {
                            $("#divShowPartnerAdddataNCR").hide();
                            sessionStorage.removeItem("PartnershipLink");
                        }
                    }
                }
            }
        });

         // Partnership Code--- START-----------------------------------------------------------------------------------
         // Button Add New Partnership
         //---------------------------------------------------------------------------------------------------------------------------
         $m("#btnAddNewAttribution").button().on("click", function () {
             //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
             $("#divLoading").show();
             $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                 txtFilerId: $("#txtFilerID").val(),
                 lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                 strElectionTypeId: $m("#lstElectionType option:selected").val(),
                 lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                 lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                 lstFilingDate: $m("#lstFilingDate option:selected").text(),
                 txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                 electionDateId: $m("#lstElectionDate").val(),
                 lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
             }, function (resultEditFlag) {
                 if (resultEditFlag == "TRUE") {
                     dialogPartner.dialog("open");

                     sessionStorage.setItem("UpdateFlagSchedAPart", "No");

                     var validator = $m("#DialogBoxSchedAPartnershipForm").validate();
                     validator.resetForm();  // clear out the validation errors
                     $m("#DialogBoxSchedAPartnershipForm")[0].reset();   // clear out the form data

                     $("#lstItemizedPart").select();
                     $("#txtPartshiptName").focus();

                     // Fill the Auto fill data.
                     $("#txtPartshiptName").prop("disabled", true);
                     $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());

                     $("#lblExplanationPart").text("Explanation");

                     $("#txtCountryPartnership").val("United States");
                     $("#txtCountryPartnership").prop("disabled", true);
                     $("#txtPartState").prop('maxLength', '2');

                     $("#txtPartZip5").blur();
                     $("#txtPartAmt").blur();

                     //Clears labels removes class error
                     appCommonEFS_ClearLabeltextAndRemoveClassError([
                         "txtPartFirstName",
                         "txtPartMI",
                         "txtPartLastName",
                         "txtPartAmt"
                     ]);

                     $("#txtPartFirstName").removeClass("ui-state-error error");

                     $("#lstItemizedPart")[0].selectedIndex = 0;
                     $("#lstIndividualPart")[0].selectedIndex = 0;

                     $("#lstItemizedPart").prop("disabled", false);
                     $("#lstIndividualPart").prop("disabled", false);

                     $("#tdPartnerName").hide();

                     $("#tdPartFirstName").show("slow");
                     $("#tdPartMI").show("slow");
                     $("#tdPartLastName").show("slow");

                     $("#dvPartIndividual").show("slow");
                     $("#tdPartnershipNamePartner").show("slow");
                     $("#tdPartStreetName").show("slow");
                     $("#tdPartCity").show("slow");
                     $("#tdPartState").show("slow");
                     $("#tdPartZip5").show("slow");
                     $("#tdPartCity").show("slow");
                     $("#tdCountryPartnershipChk").show("slow");
                     $("#tdCountryPartnershipTxt").show("slow");
                     
                     if (@Session["COMM_TYPE_ID"] == "23") {
                         $("#lstItemizedPart").prop("disabled", true);
                         $("#tdPartRContributions").show();
                         $("#lstPartRContributions")[0].selectedIndex = 1;
                         $("#tdPartEmployer").hide();
                         $("#tdPartOccupation").hide();
                         $("#divPartContStreetAddress").hide();
                         $("#divPartContCity").hide();
                         $("#divPartContState").hide();
                         $("#divPartContZip5").hide();
                     }
                     else {
                         $("#lstItemizedPart").prop("disabled", false);
                         $("#tdPartRContributions").hide();
                         $("#lstPartRContributions")[0].selectedIndex = 1;
                         $("#tdPartEmployer").hide();
                         $("#tdPartOccupation").hide();
                         $("#divPartContStreetAddress").hide();
                         $("#divPartContCity").hide();
                         $("#divPartContState").hide();
                         $("#divPartContZip5").hide();
                     }

                 } else {
                     ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before adding this Transaction.', 'Ok', '');
                 }
             }).always(function () {
                 $("#divLoading").hide();// GetEditFlag is done.
             });
         });
        // Button Add New Partnership
        //---------------------------------------------------------------------------------------------------------------------------
        /**
         * Common code to call LoanReceivedSchedI/GetLoanReceivedPartnersData and refresh table tablePartners/PartnersGridShechA
         * param {String} strPartnershipNameValue is passed as data to strPartnershipName.
         * param {Callback function} callback to call on ajax success.
         */
        function GetLoanReceivedPartnersData(strPartnershipNameValue, callback) {
            $m.ajax({
                "url": "@Url.Content("~/LoanReceivedSchedI/GetLoanReceivedPartnersData/")",
                "data": {
                    strTransNumber: sessionStorage.getItem("TransIdPartnership").toString(),
                    strPartnershipName: strPartnershipNameValue,
                    strFilerId: $("#txtFilerID").val()
                },
                "success": callback,
                "dataType": "json",
                "type": "POST",
                "error": function () {
                    ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                }
            });
            $m('#PartnersGridShechA').DataTable().ajax.reload();
            tablePartners.responsive.recalc();
        }


        /**
         * Common code to call LoanReceivedSchedI/GetPartnershipTotAm
         * param {String} strTransNumberValue is passed as data to strTransNumber.
         * param {Boolean} compareResBalAmt if you want to show btnAddNewAttribution based on IndFamPartnershipAmt minus the resut.
         * param {Boolean} compareExpSubContrAmount if you want to show  based on sessions IndFamPartnershipAmt ammount.
         */
        function GetPartnershipTotAmt(strTransNumberValue, compareResBalAmt, compareExpSubContrAmount) {
            // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
            $.post("@Url.Content("~/LoanReceivedSchedI/GetPartnershipTotAmt/")", {
                strTransNumber: strTransNumberValue
                }, function (result) {
                    if (result != "") {
                        var subContTotalAmt = result.toString();
                        var expSubContrAmount = sessionStorage.getItem("IndFamPartnershipAmt").toString();

                        var resBalAmt = parseFloat(expSubContrAmount) - parseFloat(subContTotalAmt);

                        $("#lblPartnershipAmt").text("Outstanding Amount: $" + resBalAmt.toFixed(2).toString());
                        $("#lblPartnershipAmt").show();
                        if (compareResBalAmt == true && resBalAmt.toFixed(2).toString() != "0.00") {
                            $("#btnAddNewAttribution").show();
                        }
                    } else {
                        var expSubContrAmount = parseFloat(sessionStorage.getItem("IndFamPartnershipAmt"));
                        $("#lblPartnershipAmt").text("Outstanding Amount: $" + expSubContrAmount.toFixed(2).toString());
                        $("#lblPartnershipAmt").show();
                        if (compareExpSubContrAmount == true && expSubContrAmount.toFixed(2).toString() != "0.00") {
                        $("#btnAddNewAttribution").show();
                    }
                }
            });
        }
        /**
         * Refresh the Data on Grid.
         * Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
         */
        function GetLoanReceivedPartnersDataAndGetPartnershipTotAmt() {
            // Refresh the Data on Grid...
            GetLoanReceivedPartnersData(sessionStorage.getItem("PartnerPartnershipName").toString(), tablePartners);

            // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
            GetPartnershipTotAmt(sessionStorage.getItem("TransIdPartnership"), false, false);
        }
        // Get Partners Data.
        $m("#btnCloseDialogPartner").button().on("click", function () {

            var valid = true;

            if (sessionStorage.getItem("UpdateFlagSchedAPart").toString() == "No") {
                if ($("#lstItemizedPart option:selected").val().toString() == "N"
                    || $("#lstIndividualPart option:selected").val().toString() == "N"
                    || ($("#lstIndividualPart option:selected").val().toString() == "N" && $("#txtPartshiptName").val().toString().length >= 1)
                    || ($("#lstIndividualPart option:selected").val().toString() == "Y" && ($("#txtPartFirstName").val().toString().length >= 1) || $("#txtPartMI").val().toString().length >= 1 || $("#txtPartLastName").val().toString().length >= 1)
                    || ($('#chkCountryPartnership').is(':checked') && $("#txtCountryPartnership").val().toString().length >= 1)/* Other COUNTRY Partnership*/ 
                    || $("#txtPartStreetName").val().toString().length >= 1
                    || $("#txtPartCity").val().toString().length >= 1
                    || $("#txtPartState").val().toString().length >= 1
                    || $("#txtPartZip5").val().toString().length >= 1
                    || $("#txtPartAmt").val().toString().length >= 1
                    || $("#txtPartExplanationInKind").val().toString().length >= 1) {
                    valid = false;
                }
            }
            else {
                $m("label[for=txtPartFirstName]").text('');
                $m("#txtPartFirstName").removeClass("error");

                $m("label[for=txtPartnerName]").text('');
                $m("#txtPartnerName").removeClass("error");

                valid = false;
            }

            if (valid) {
                // Close DialgoBox
                dialogPartner.dialog("close");

                // Refresh the Data on Grid...
                GetLoanReceivedPartnersData(sessionStorage.getItem("PartnerPartnershipName").toString(), tablePartners);

                // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
                GetPartnershipTotAmt(sessionStorage.getItem("TransIdPartnership"), true, true);
            }
            else {
                // Get confirmation Close the DialogBox or Not.
                var resultsClose = "All unsaved data will be lost if you navigate away from this page. Are you sure you want to continue?";

                $m('#modal_dialog').text(resultsClose);
                $m("#modal_dialog").dialog({
                    resizable: false,
                    width: '400px',
                    height: 'auto',
                    bgiframe: false,
                    closeOnEscape: false,
                    open: function (event, ui) {
                        hideDialogXButton(this);
                        $(".ui-dialog-titlebar-close", ui.dialog | ui).hide();
                    },
                    buttons: {
                        "Ok": function () {
                            // Close Confirm Box.
                            $m(this).dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                            // Close DialgoBox
                            dialogPartner.dialog("close");
                            // For Defect 707 You don't Refresh the Data on Grid because you just canceled the edit or save function.
                        }, // confirm close
                        "Cancel": function () {
                            $m(this).dialog("close");
                        }
                    }
                });
            }
        });
        /// Dialog Box Code /////////////////////////////////////////////////////////////////////

         // Partnership Name Auto Complete.
        $m("#txtPartnerShipName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/ContributionsCandIndFamily/AutoCompleteEntityName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();
                var selectedValue = ui.item.label;
                GetAutoCompleteNameData(selectedValue, "txtPartnerShipName");
            }
        });

        // Attribution Partners First Name
        $m("#txtPartFirstName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/ContributionsCandIndFamily/AutoCompleteFirstName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();
                var selectedValue = ui.item.label;
                GetAutoCompleteNameData_ForPartner(selectedValue, "txtPartFirstName");
            }
        });

        // Attribution Partners Last Name
        $m("#txtPartLastName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/ContributionsCandIndFamily/AutoCompleteLastName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();
                var selectedValue = ui.item.label;
                GetAutoCompleteNameData_ForPartner(selectedValue, "txtPartLastName");
            }
        });

        // Partner Name Auto Complete.
        $m("#txtPartnerName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/ContributionsCandIndFamily/AutoCompleteEntityName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();
                var selectedValue = ui.item.label;
                GetAutoCompleteNameData_ForPartner(selectedValue, "txtPartnerName");
            }
        });
        /// AUTO COMPLETE SEARCH CODE //////////////////////////////////////////////////////////////////////////////////////


         $("#divShowPartnerAdddataMonetary").hide();
        $("#divPartnerMonetary").hide();
        $("#PartnersGridMonetary").addClass("Per100hideShowButtonCSS");


        // EDIT FILING TRANSACTIONS GRID
        $m('#gridFilingTransactions tbody').on('click', 'a.editor_AttributionSchedA', function (e) {
            e.preventDefault();
            var data = tableFilingTransactions.row($(this).parents('tr')).data();

            $("#divShowPartnerAdddataNCR").show();
            $("#tdButtonUpdatePartners").hide();
            $("#tdButtonSavePartners").show();

            $("#divUCLoanRecLoanRepay").hide();
            $("#divUCLoanRecOutLoans").hide();
            $("#divUCLoanRepayLoanRec").hide();
            $("#divUCLoanRecLoanForgiven").hide();

            sessionStorage.setItem("PartnershipLink", "Yes");

            sessionStorage.setItem("TransIdPartnership", data[42].toString());

            // GET THE PARTNERSHIP NAME
            sessionStorage.setItem("PartnerPartnershipName", data[13].toString());

            sessionStorage.setItem("TransNumberDel", data[42].toString());

            sessionStorage.setItem("TransNumber", data[42].toString());
            sessionStorage.setItem("FilingSchedId", data[1].toString());
            sessionStorage.setItem("FilingSchedDate", data[7].toString());
            var varAmt = data[24].toString();

            sessionStorage.setItem("IndFamPartnershipAmt", varAmt);

            var partnershipName = data[13].toString();
            sessionStorage.setItem("PartnershipName", data[13].toString());

            $("#txtPartshiptName").prop("disabled", true);
            $("#txtPartshiptName").val(partnershipName);
            $("#txtPartFirstName").focus();

            $("#divPartnerNCR").show();
            $("#divShowPartnerAdddataNCR").show();
            tablePartners = $m('#PartnersGridShechA').DataTable({
                "bProcessing": true,
                "responsive": true,
                "deferRender": true,
                "retrieve": true,
                "columnDefs": [
                    {
                        "targets": [0, 1, 17, 18],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        "targets": [3],
                        "fnCreatedCell": function (cell) {
                            cell.setAttribute('aria-label', "Row Actions");
                        }
                    }
                ],
                "initComplete": function (settings, json) {
                    //Accessibility: Applies various Accessibility features to this dataTable.
                    makeDataTableAccessible($m('#PartnersGridShechA').DataTable());
                },
                "fnRowCallback": function (nRow, aaData, iDisplayIndex) {
                    var uniqueID = generateUniqueRowIdForFnRowCallback(iDisplayIndex, nRow);
                    $m('td:eq(1)', nRow).html('<a class="editor_edit_PartnerSchedA" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_PartnerSchedA" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a>');
                },
                "fnDrawCallback": function (oSettings) {
                    var oSettings = this.fnSettings();
                    var iTotalRecords = oSettings.fnRecordsTotal();
                    sessionStorage.setItem("PartnershipRecCount", iTotalRecords);
                },
                "fnServerData": function (url, data, callback) {
                    $.ajax({
                        "url": "@Url.Content("~/LoanReceivedSchedI/GetLoanReceivedPartnersData/")",
                        "data": {
                            strTransNumber: sessionStorage.getItem("TransIdPartnership").toString(),
                            strPartnershipName: sessionStorage.getItem("PartnerPartnershipName").toString(),
                            strFilerId: $("#txtFilerID").val()
                        },
                        "success": callback,
                        "dataType": "json",
                        "type": "POST",
                        "error": function () {;
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                        }
                    });
                },
                "order": [[0, "desc"]]
            });
            $m('#PartnersGridShechA').DataTable().ajax.reload();
            if (@Session["COMM_TYPE_ID"] == "23") {
                tablePartners.column(19).visible(true);
                tablePartners.column(20).visible(true);
                tablePartners.column(21).visible(true);
                tablePartners.column(22).visible(true);                
            }
            else {
                tablePartners.column(19).visible(false);
                tablePartners.column(20).visible(false);
                tablePartners.column(21).visible(false);
                tablePartners.column(22).visible(false);                
            }
            tablePartners.columns.adjust().draw(false);
            tablePartners.search('').columns().search('').draw();
            tablePartners.responsive.recalc();

            // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
            GetPartnershipTotAmt(sessionStorage.getItem("TransIdPartnership"), true, true);

            $('html, body').animate({ scrollTop: $("#divShowPartnerAdddataNCR").offset().top }, 500);
        });

        // Update Partnership Data...
        $m('#PartnersGridShechA tbody').on('click', 'a.editor_edit_PartnerSchedA', function (e) {
            e.preventDefault();
            var dataPartners = tablePartners.row($(this).parents('tr')).data();
            //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                 txtFilerId: $("#txtFilerID").val(),
                 lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                 strElectionTypeId: $m("#lstElectionType option:selected").val(),
                 lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                 lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                 lstFilingDate: $m("#lstFilingDate option:selected").text(),
                 txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
             }, function (resultEditFlag) {
                 if (resultEditFlag == "TRUE") {
                     $("#divLoading").hide();
                     dialogPartner.dialog("open");

                     var validator = $m("#DialogBoxSchedAPartnershipForm").validate();
                     validator.resetForm();  // clear out the validation errors
                     $m("#DialogBoxSchedAPartnershipForm")[0].reset();   // clear out the form data

                     //==============================================================
                     // CLEAR THE ERRORS ON EDIT DIALOGBOX.
                     //Clears labels removes class error
                     appCommonEFS_ClearLabeltextAndRemoveClassError([
                         "txtPartshiptName",
                         "txtPartnerName",
                         "txtPartnerName",
                         "txtPartFirstName",
                         "txtPartMI",
                         "txtPartLastName",
                         "txtCountryPartnership",
                         "txtPartStreetName",
                         "txtPartCity",
                         "txtPartState",
                         "txtPartZip5",
                         "txtPartAmt",
                         "txtPartExplanationInKind"
                     ]);
                     // CLEAR THE ERRORS ON EDIT DIALOGBOX.
                     //==============================================================
                     sessionStorage.setItem("FilingEntityIdPartner", dataPartners[1].toString());
                     sessionStorage.setItem("TransNumberPartnership", dataPartners[17].toString());

                     // EDIT SCHEDULE C '&' VALIDATION.
                     sessionStorage.setItem("ScheduleCSchedId", "1");

                     $("#txtPartAmt").addClass("watermarkHTMLTextBox");

                     var attAmt = dataPartners[14].toString();

                     sessionStorage.setItem("PartnershipAttrAmount", attAmt.toString());

                     sessionStorage.setItem("UpdateFlagSchedAPart", "Yes");
                     $("#lblExplanationPart").text("Explanation");

                     if (dataPartners[16].toString() != "No") {
                         $("#tdPartnershipNamePartner").show();
                     }

                     $("#lstItemizedPart option")
                         .filter(function () { return $.trim($(this).text()) == dataPartners[16].toString(); })
                         .attr("selected", "selected");

                     if (dataPartners[5].toString() == "") {
                         $("#lstIndividualPart")[0].selectedIndex = 0;
                     }
                     else {
                         $("#lstIndividualPart")[0].selectedIndex = 1;
                     }

                     if (dataPartners[9].toString() == "United States") {
                         $("#chkCountryPartnership").prop('checked', false);
                         $("#txtCountryPartnership").prop("disabled", true);
                         $("#txtPartState").prop('maxLength', '2');
                     }
                     else { // Other Country
                         $("#chkCountryPartnership").prop('checked', true);
                         $("#txtCountryPartnership").prop("disabled", false);

                         $("#txtPartState").prop('maxLength', '30');
                         $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                         $m('#txtPartZip5').attr("placeholder", "");
                     }

                     if (dataPartners[16].toString() == "Yes") {

                         $("#lstItemizedPart")[0].selectedIndex = 0;

                         if (dataPartners[5].toString() != "") { // Individual No
                             $("#lstItemizedPart").prop("disabled", true);
                             $("#lstIndividualPart").prop("disabled", true);

                             if (@Session["COMM_TYPE_ID"] == "23") {
                                 if ($("#lstIndividualPart option:selected").val() == "N") {
                                     $("#tdPartRContributions").hide();
                                     $("#tdPartEmployer").hide();
                                     $("#tdPartOccupation").hide();
                                     $("#divPartContStreetAddress").hide();
                                     $("#divPartContCity").hide();
                                     $("#divPartContState").hide();
                                     $("#divPartContZip5").hide();
                                 }
                             }

                             $("#tdPartnerName").show();

                             $m("label[for=txtPartFirstName]").text('');
                             //Clears labels removes class error
                             appCommonEFS_ClearLabeltextAndRemoveClassError([
                                 "txtPartFirstName",
                                 "txtPartLastName",
                                 "txtPartAmt",
                             ]);

                             $("#tdPartFirstName").hide("slow");
                             $("#tdPartMI").hide("slow");
                             $("#tdPartLastName").hide("slow");

                             $("#dvPartIndividual").show("slow");
                             $("#tdPartnershipNamePartner").show("slow");
                             $("#tdPartStreetName").show("slow");
                             $("#tdPartCity").show("slow");
                             $("#tdPartState").show("slow");
                             $("#tdPartZip5").show("slow");
                             $("#tdPartCity").show("slow");
                             $("#tdCountryPartnershipChk").show("slow");
                             $("#tdCountryPartnershipTxt").show("slow");

                             $("#txtPartFirstName").val("");
                             $("#txtPartMI").val("");
                             $("#txtPartLastName").val("");

                             $("#txtPartshiptName").val(dataPartners[4].toString());
                             $("#txtPartnerName").val(dataPartners[5].toString());
                             $("#txtCountryPartnership").val(dataPartners[9].toString());
                             $("#txtPartStreetName").val(dataPartners[10].toString());
                             $("#txtPartCity").val(dataPartners[11].toString());
                             $("#txtPartState").val(dataPartners[12].toString());
                             $("#txtPartZip5").val(dataPartners[13].toString());
                             var varAmt = dataPartners[14].toString();
                             $("#txtPartAmt").val(varAmt);
                             if (dataPartners[14].toString() != "") {
                                 $("#txtPartAmt").removeClass("watermarkHTMLTextBox");
                             }

                             if (dataPartners[13].toString() != "") {
                                 $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                             }
                             else {
                                 $("#txtPartZip5").addClass("watermarkHTMLTextBox");
                                 if (dataPartners[9].toString() == "United States") {
                                     $("#txtPartZip5").blur();
                                 }
                             }

                             $("#txtPartExplanationInKind").val(dataPartners[15].toString());

                             $("#txtPartnerName").focus();
                         }
                         else { // Individual Yes
                             $("#lstItemizedPart").prop("disabled", true);
                             $("#lstIndividualPart").prop("disabled", true);

                             $("#tdPartnerName").hide();

                             $("#tdPartFirstName").show("slow");
                             $("#tdPartMI").show("slow");
                             $("#tdPartLastName").show("slow");
                             //Clears labels removes class error
                             appCommonEFS_ClearLabeltextAndRemoveClassError([
                                 "txtPartFirstName",
                                 "txtPartLastName",
                                 "txtPartAmt"
                             ]);

                             $("#dvPartIndividual").show("slow");
                             $("#tdPartnershipNamePartner").show("slow");
                             $("#tdPartStreetName").show("slow");
                             $("#tdPartCity").show("slow");
                             $("#tdPartState").show("slow");
                             $("#tdPartZip5").show("slow");
                             $("#tdPartCity").show("slow");
                             $("#tdCountryPartnershipChk").show("slow");
                             $("#tdCountryPartnershipTxt").show("slow");

                             $("#txtPartnerName").val("");

                             $("#txtPartshiptName").val(dataPartners[4].toString());
                             $("#txtPartFirstName").val(dataPartners[6].toString());
                             $("#txtPartMI").val(dataPartners[7].toString());
                             $("#txtPartLastName").val(dataPartners[8].toString());
                             $("#txtCountryPartnership").val(dataPartners[9].toString());
                             $("#txtPartStreetName").val(dataPartners[10].toString());
                             $("#txtPartCity").val(dataPartners[11].toString());
                             $("#txtPartState").val(dataPartners[12].toString());
                             $("#txtPartZip5").val(dataPartners[13].toString());
                             var varAmt = dataPartners[14].toString();
                             $("#txtPartAmt").val(varAmt);
                             if ($("#txtPartAmt").val().toString() != "" || $("#txtPartAmt").val().toString() != "999999999.99") {
                                 $("#txtPartAmt").removeClass("watermarkHTMLTextBox");
                             }

                             if (dataPartners[13].toString() != "") {
                                 $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                             }
                             else {
                                 $("#txtPartZip5").addClass("watermarkHTMLTextBox");
                                 if (dataPartners[9].toString() == "United States") {
                                     $("#txtPartZip5").blur();
                                 }
                             }

                             $("#txtPartExplanationInKind").val(dataPartners[15].toString());

                             $("#txtPartFirstName").focus();

                             if (@Session["COMM_TYPE_ID"] == "23") {
                                 if ($("#lstIndividualPart option:selected").val() == "N") {
                                     $("#tdPartRContributions").hide();
                                     $("#tdPartEmployer").hide();
                                     $("#tdPartOccupation").hide();
                                     $("#divPartContStreetAddress").hide();
                                     $("#divPartContCity").hide();
                                     $("#divPartContState").hide();
                                     $("#divPartContZip5").hide();
                                 }
                                 else {
                                     $("#tdPartRContributions").show();
                                     $m("#lstPartRContributions option").each(function () {
                                         if ($(this).text() == dataPartners[19].toString()) {
                                             $(this).prop('selected', true).trigger('change');
                                             if ($(this).text() == "Yes") {
                                                 $("#tdPartEmployer").show();
                                                 $("#tdPartOccupation").show();
                                                 $("#divPartContStreetAddress").show();
                                                 $("#divPartContCity").show();
                                                 $("#divPartContState").show();
                                                 $("#divPartContZip5").show();
                                                 $("#txtPartEmployer").val(dataPartners[20].toString());
                                                 $("#txtPartOccupation").val(dataPartners[21].toString());
                                                 $("#txtPartContStreetName").val(dataPartners[23].toString());
                                                 $("#txtPartContCity").val(dataPartners[24].toString());
                                                 $("#txtPartContState").val(dataPartners[25].toString());
                                                 $("#txtPartContZipCode").val(dataPartners[26].toString());
                                             }
                                             else {
                                                 $("#tdPartEmployer").hide();
                                                 $("#tdPartOccupation").hide();
                                                 $("#divPartContStreetAddress").hide();
                                                 $("#divPartContCity").hide();
                                                 $("#divPartContState").hide();
                                                 $("#divPartContZip5").hide();
                                             }
                                         }
                                     });
                                 }
                             }
                             else {
                                 $("#tdPartRContributions").hide();
                                 $("#tdPartEmployer").hide();
                                 $("#tdPartOccupation").hide();
                                 $("#divPartContStreetAddress").hide();
                                 $("#divPartContCity").hide();
                                 $("#divPartContState").hide();
                                 $("#divPartContZip5").hide();
                             }
                         }
                     }
                     else { // Unitemized
                         $("#lstItemizedPart").prop("disabled", true);
                         $("#lstItemizedPart")[0].selectedIndex = 1;

                         $("#tdPartnerName").hide();

                         $("#tdPartFirstName").hide("slow");
                         $("#tdPartMI").hide("slow");
                         $("#tdPartLastName").hide("slow");

                         $("#dvPartIndividual").hide("slow");
                         $("#tdPartStreetName").hide("slow");
                         $("#tdPartCity").hide("slow");
                         $("#tdPartState").hide("slow");
                         $("#tdPartZip5").hide("slow");
                         $("#tdPartCity").hide("slow");
                         $("#tdCountryPartnershipChk").hide("slow");
                         $("#tdCountryPartnershipTxt").hide("slow");
                         //Clears labels removes class error
                         appCommonEFS_ClearLabeltextAndRemoveClassError([
                             "txtPartFirstName",
                             "txtPartLastName",
                             "txtPartAmt",
                         ]);

                         if (@Session["COMM_TYPE_ID"] == "23") {
                             if ($("#lstIndividualPart option:selected").val() == "N") {
                                 $("#tdPartRContributions").hide();
                                 $("#tdPartEmployer").hide();
                                 $("#tdPartOccupation").hide();
                                 $("#divPartContStreetAddress").hide();
                                 $("#divPartContCity").hide();
                                 $("#divPartContState").hide();
                                 $("#divPartContZip5").hide();
                             }
                         }

                         $("#txtPartshiptName").val(dataPartners[4].toString());
                         var varAmt = dataPartners[14].toString();
                         $("#txtPartAmt").val(varAmt);
                         if ($("#txtPartAmt").val().toString() != "" || $("#txtPartAmt").val().toString() != "999999999.99") {
                             $("#txtPartAmt").removeClass("watermarkHTMLTextBox");
                         }
                         $("#txtPartExplanationInKind").val(dataPartners[15].toString());

                         $("#txtPartAmt").focus();
                     }
                 }
                 else {//When resultEditFlag != "TRUE".
                     $("#divLoading").hide();
                     ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before editing this Transaction.', 'Ok', '');
                 }
            }).fail(function () {
                $("#divLoading").hide();// GetEditFlag failed.
            });
        });

        // Delete Partnership Data.
        $m('#PartnersGridShechA tbody').on('click', 'a.editor_remove_PartnerSchedA', function (e) {
            e.preventDefault();
            var dataTrans = tablePartners.row($(this).parents('tr')).data();
            //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                 txtFilerId: $("#txtFilerID").val(),
                 lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                 strElectionTypeId: $m("#lstElectionType option:selected").val(),
                 lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                 lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                 lstFilingDate: $m("#lstFilingDate option:selected").text(),
                 txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
             }, function (resultEditFlag) {
                 if (resultEditFlag == "TRUE") {
                    var results = "Are you sure you want to delete the partnership details?";
                    $m('#modal_dialog').text(results);
                    $m("#modal_dialog").dialog({
                        resizable: false,
                        width: '400px',
                        height: 'auto',
                        bgiframe: false,
                        closeOnEscape: false,
                        open: function (event, ui) {
                            $("#divLoading").hide();
                            hideDialogXButton(this);
                        },
                        buttons: {
                            "Ok": function () {
                                // Close Confirm Box.
                                $m(this).dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                $("#divLoading").show();
                                var options = {};
                                options.url = "@Url.Content("~/ContributionsCandIndFamily/DeleteSchedAPartnersData/")";
                                options.type = "GET";
                                options.data = {
                                    strTransNumber: dataTrans[17].toString()
                                };
                                options.dataType = "json";
                                options.contentType = "application/json";
                                options.success = function (resultsDel) {
                                    if (resultsDel) {
                                        window.status = "Record deleted successfully";

                                        ShowDialogBox('EFS', 'Record deleted successfully', 'Ok', '');
                                        GetLoanReceivedPartnersData(dataTrans[13].toString(), results);

                                        // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
                                        GetPartnershipTotAmt(sessionStorage.getItem("TransIdPartnership"), false, false)
                                    }
                                };
                                options.error = function () {
                                    ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                                };
                                $.ajax(options).always(function () {
                                    $("#divLoading").hide();
                                })
                            },
                            "Cancel": function () {
                                $m(this).dialog("close");
                            }
                         }
                    });
                 }
                 else {//When resultEditFlag != "TRUE"
                     $("#divLoading").hide();
                     ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before deleting this Transaction.', 'Ok', '');
                 }
            }).fail(function () {
                $("#divLoading").hide();// GetEditFlag failed.
            });
        });

         // Partnership Individual Yes or No.
         $("#lstIndividualPart").change(function () {
             if ($("#lstIndividualPart option:selected").val().toString() == "Y") {

                 if (@Session["COMM_TYPE_ID"] == "23") {
                     $("#tdPartRContributions").show();
                     $("#tdPartEmployer").hide();
                     $("#tdPartOccupation").hide();
                     $("#divPartContStreetAddress").hide();
                     $("#divPartContCity").hide();
                     $("#divPartContState").hide();
                     $("#divPartContZip5").hide();
                     $("#lstPartRContributions")[0].selectedIndex = 1;
                 }
                 else {
                     $("#tdPartRContributions").hide();
                     $("#tdPartEmployer").hide();
                     $("#tdPartOccupation").hide();
                     $("#divPartContStreetAddress").hide();
                     $("#divPartContCity").hide();
                     $("#divPartContState").hide();
                     $("#divPartContZip5").hide();
                 }
                 // Fill the Auto fill data.
                 $("#txtPartshiptName").prop("disabled", true);
                 $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());
                 $("#txtPartFirstName").focus();

                 $("#tdPartFirstName").show("slow");
                 $("#tdPartMI").show("slow");
                 $("#tdPartLastName").show("slow");

                 $("#tdPartnerName").hide("slow");

                 $("#txtPartFirstName").val("");
                 $("#txtPartMI").val("");
                 $("#txtPartLastName").val("");
                 //Clears labels removes class error
                 appCommonEFS_ClearLabeltextAndRemoveClassError([
                     "txtPartFirstName",
                     "txtPartMI",
                     "txtPartLastName"
                 ]);

             }
             else {
                 if (@Session["COMM_TYPE_ID"] == "23") {
                     $("#tdPartRContributions").hide();
                     $("#tdPartEmployer").hide();
                     $("#tdPartOccupation").hide();
                     $("#divPartContStreetAddress").hide();
                     $("#divPartContCity").hide();
                     $("#divPartContState").hide();
                     $("#divPartContZip5").hide();
                 }
                 else {
                     $("#tdPartRContributions").hide();
                     $("#tdPartEmployer").hide();
                     $("#tdPartOccupation").hide();
                     $("#divPartContStreetAddress").hide();
                     $("#divPartContCity").hide();
                     $("#divPartContState").hide();
                     $("#divPartContZip5").hide();
                 }

                 // Fill the Auto fill data.
                 $("#txtPartshiptName").prop("disabled", true);
                 $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());
                 $("#txtPartFirstName").focus();

                 $("#tdPartFirstName").hide("slow");
                 $("#tdPartMI").hide("slow");
                 $("#tdPartLastName").hide("slow");

                 $("#tdPartnerName").show("slow");

                 $("#txtPartnerName").val("");

                 $m("label[for=txtPartnerName]").text('');
                 $m("#txtPartnerName").removeClass("error");
             }
         });

        // COMMON CODE FOR BUTTON CLEAR AND IT WILL GO TO MAIN PAGE CONTRIBUTION MONETARY.
        //Bind Clear Click
        $(".clsCommonClearData").bind('click', function () {
            $("#divGridMonetary").show();
            sessionStorage.setDataTable = "true";
            $("#divShowHideHelp").removeClass("clsShowHideHelpSec");
            $("#divShowHideHelp").addClass("clsShowHideHelpSecInMobileTablet");

            sessionStorage.setItem("FilerId", $("#txtFilerID option:selected").val());
            sessionStorage.setItem("CommitteeName", $("#txtCommitteeName option:selected").val());
            sessionStorage.setItem("ElectionCycle", $("#lstElectionCycle option:selected").val());
            sessionStorage.setItem("ElectionType", $("#lstElectionType option:selected").val());
            sessionStorage.setItem("ElectionDate", $("#lstElectionDate option:selected").val());
            sessionStorage.setItem("DisclosureType", $("#lstDisclosureType option:selected").val());
            sessionStorage.setItem("DisclosurePeriod", $("#lstDisclosurePeriod option:selected").val());
            sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesFrom").val());
            if ($("#lstElectionType option:selected").val() == "6") {
                sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
            }
            else {
                sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
            }
            sessionStorage.setItem("TransactionType", $("#lstTransactionType option:selected").val());
            sessionStorage.setItem("lstResigTermType", $("#lstResigTermType option:selected").val());
            sessionStorage.setItem("lstFilingDate", $("#lstFilingDate option:selected").val());

            sessionStorage.setItem("TransactionTypeId", "true");

            var urlContrHome = "@Url.Content("~/ContributionsMonetary/ContributionsMonetary/")";

            window.location.href = urlContrHome;
        });
        // COMMON CODE FOR BUTTON CLEAR AND IT WILL GO TO MAIN PAGE CONTRIBUTION MONETARY.


        // Unitemized Partnership.
        $("#lstItemizedPart").change(function () {
            if ($("#lstItemizedPart option:selected").val().toString() == "N") { // UNITEMIZED

                var validator = $m("#DialogBoxSchedAPartnershipForm").validate();
                validator.resetForm();  // clear out the validation errors
                $m("#DialogBoxSchedAPartnershipForm")[0].reset();   // clear out the form data

                // Fill the Auto fill data.
                $("#txtPartshiptName").prop("disabled", true);
                $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());

                $("#txtCurrentDate").blur();
                $("#txtPartAmt").blur();
                $("#lstItemizedPart").select();

                $("#txtCountryPartnership").val("United States");
                $("#txtCountryPartnership").prop("disabled", true);

                $("#lstIndividualPart")[0].selectedIndex = 0;

                $("#lstItemizedPart")[0].selectedIndex = 1;

                // Hide/Show Controls
                $("#dvPartIndividual").hide("slow");
                $("#tdPartnerName").hide("slow");
                $("#tdPartFirstName").hide("slow");
                $("#tdPartMI").hide("slow");
                $("#tdPartLastName").hide("slow");
                $("#tdPartStreetName").hide("slow");
                $("#tdPartCity").hide("slow");
                $("#tdPartState").hide("slow");
                $("#tdPartZip5").hide("slow");
                $("#tdPartCity").hide("slow");
                $("#tdCountryPartnershipChk").hide("slow");
                $("#tdCountryPartnershipTxt").hide("slow");
            }
            else {
                // Clear Form data
                var validator = $m("#DialogBoxSchedAPartnershipForm").validate();
                validator.resetForm();  // clear out the validation errors
                $m("#DialogBoxSchedAPartnershipForm")[0].reset();   // clear out the form data

                // Fill the Auto fill data.
                $("#txtPartshiptName").prop("disabled", true);
                $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());

                $("#txtCurrentDate").blur();
                $("#txtPartZip5").blur();
                $("#txtPartAmt").blur();
                $("#lstItemizedPart").select();

                $("#lblExplanationPart").text("Explanation");

                $("#txtCountryPartnership").val("United States");
                $("#txtCountryPartnership").prop("disabled", true);

                $("#lstIndividualPart")[0].selectedIndex = 0;
                $("#lstItemizedPart")[0].selectedIndex = 0;

                $("#tdPartnershipNamePartner").show();

                $("#tdPartFirstName").show("slow");
                $("#tdPartMI").show("slow");
                $("#tdPartLastName").show("slow");

                $("#dvPartIndividual").show("slow");
                $("#tdPartStreetName").show("slow");
                $("#tdPartCity").show("slow");
                $("#tdPartState").show("slow");
                $("#tdPartZip5").show("slow");
                $("#tdPartCity").show("slow");
                $("#tdCountryPartnershipChk").show("slow");
                $("#tdCountryPartnershipTxt").show("slow");
                //Clears labels removes class error
                appCommonEFS_ClearLabeltextAndRemoveClassError([
                    "txtPartFirstName",
                    "txtPartMI",
                    "txtPartLastName",
                ]);
            }
        });


        // Unitemzied then hide controls
        $("#lstItemized").change(function () {

            var selectedUnitemzied = $("#lstItemized option:selected").val();

            if (selectedUnitemzied == "N") {

                var validator = $m("#DialogBoxSchedAForm").validate();
                validator.resetForm();  // clear out the validation errors
                $m("#DialogBoxSchedAForm")[0].reset();   // clear out the form data

                $("#txtCurrentDate").blur();
                $("#txtAmt").blur();

                $("#txtCountry").val("United States");
                $("#lstItemized")[0].selectedIndex = 1;

                $("#lstMethod")[0].selectedIndex = 0;
                $("#lblExplanation").text("Explanation");

                // Hide fields
                $("#tdContributionName").hide("slow");
                $("#tdPartnershipName").hide("slow");
                $("#tdFirstName").hide("slow");
                $("#tdMI").hide("slow");
                $("#tdLastName").hide("slow");
                $("#divStreetAddress").hide("slow");
                $("#divCity").hide("slow");
                $("#divState").hide("slow");
                $("#divZip5").hide("slow");
                $("#tdMethod").hide("slow");
                $("#tdCountryContributionChk").hide("slow");
                $("#tdCountryContributionTxt").hide("slow");
                $("#tdCheck").hide("slow");
            }
            else { // 'Y'

                var validator = $m("#DialogBoxSchedAForm").validate();
                validator.resetForm();  // clear out the validation errors
                $m("#DialogBoxSchedAForm")[0].reset();   // clear out the form data

                $("#lstItemized").select();

                $("#txtCurrentDate").blur();
                $("#txtZipCode").blur();
                $("#txtAmt").blur();

                $("#txtCountry").val("United States");
                $("#lblExplanation").text("Explanation");

                $("#lstItemized")[0].selectedIndex = 0;

                if (sessionStorage.getItem("Other").toString() == "Yes") { // Schedule 'C'

                    // Show Fileds
                    $("#tdContributionName").show("slow");
                    $("#tdPartnershipName").show("slow");
                    $("#tdFirstName").hide("slow");
                    $("#tdMI").hide("slow");
                    $("#tdLastName").hide("slow");
                    $("#divStreetAddress").show("slow");
                    $("#divCity").show("slow");
                    $("#divState").show("slow");
                    $("#divZip5").show("slow");
                    $("#tdMethod").show("slow");
                    $("#tdCountryContributionChk").show("slow");
                    $("#tdCountryContributionTxt").show("slow");

                    $("#txtCountry").val("United States");
                    $("#txtCountry").prop("disabled", true);
                    $("#chkCountry").prop('checked', false);
                    $("#txtState").prop('maxLength', '2');

                    $("#lstContributionName")[0].selectedIndex = 0;
                    $("#lstMethod")[0].selectedIndex = 0;
                }
                else if (sessionStorage.getItem("Corporate").toString() == "Yes") { // Schedule 'B'

                    $("#lblPartnershipName").text("* Contributor Name");

                    $("#txtCountry").val("United States");
                    $("#txtCountry").prop("disabled", true);
                    $("#chkCountry").prop('checked', false);
                    $("#txtState").prop('maxLength', '2');

                    $("#lstMethod")[0].selectedIndex = 0;

                    $("#tdDateRcvd").show("slow");
                    $("#tdContributionName").hide("slow");
                    $("#tdPartnershipName").show("slow");
                    $("#tdFirstName").hide("slow");
                    $("#tdMI").hide("slow");
                    $("#tdLastName").hide("slow");
                    $("#tdCountryContributionChk").show("slow");
                    $("#tdCountryContributionTxt").show("slow");
                    $("#divStreetAddress").show("slow");
                    $("#divCity").show("slow");
                    $("#divState").show("slow");
                    $("#divZip5").show("slow");
                    $("#tdMethod").show("slow");
                    $("#tAmt").show("slow");
                    $("#tdExplanation").show("slow");

                    $("#lstItemized").prop("disabled", false);
                }
                else {
                    // Show Fileds
                    $("#tdContributionName").show("slow");
                    $("#tdPartnershipName").hide("slow");
                    $("#tdFirstName").show("slow");
                    $("#tdMI").show("slow");
                    $("#tdLastName").show("slow");
                    $("#divStreetAddress").show("slow");
                    $("#divCity").show("slow");
                    $("#divState").show("slow");
                    $("#divZip5").show("slow");
                    $("#tdMethod").show("slow");
                    $("#tdCountryContributionChk").show("slow");
                    $("#tdCountryContributionTxt").show("slow");

                    $("#txtCountry").val("United States");
                    $("#txtCountry").prop("disabled", true);
                    $("#chkCountry").prop('checked', false);
                    $("#txtState").prop('maxLength', '2');

                    $("#lstContributionName")[0].selectedIndex = 0;
                    $("#lstMethod")[0].selectedIndex = 0;

                    $m("label[for=txtFirstName]").text('');
                    $m("#txtFirstName").removeClass("error");

                    $m("label[for=txtLastName]").text('');
                    $m("#txtLastName").removeClass("error");
                }
            }
        });

         // Save Schedule 'A' Partnership Data.
        $m("#btnSaveSchedAPartners").click(function () {
            $m('#DialogBoxSchedAPartnershipForm').valid();
            if ($m('#DialogBoxSchedAPartnershipForm').valid()) { // REMOVED FOR SERVER SIDE TESTING ONCE DONE ENABLE.
                // Save Data....

                var valid = true;
                if (@Session["COMM_TYPE_ID"] == "23") {
                    if ($("#lstIndividualPart option:selected").val() == "Y") {
                        if ($m("#lstPartRContributions option:selected").text() == "Yes") {
                            if ($m("#txtPartEmployer").val() == "" ||
                                $m("#txtPartOccupation").val() == "" ||
                                $m("#txtPartContStreetName").val() == "" ||
                                $m("#txtPartContCity").val() == "" ||
                                $m("#txtPartContState").val() == "" ||
                                $m("#txtPartContZipCode").val() == "") {
                                valid = false;
                            }
                        }
                    }
                }

                if (valid == false) {
                    // Get confirmation the DialogBox or Not.
                    var resultsCloseSchedA = "You have reported a loan over $100 without Contributor Address, Occupation, Employer and Employer Address. Failure to provide Contributor Address, Occupation, Employer and Employer Address may be cited as a Deficiency by Compliance Review staff.";
                    $m('#modal_dialog').text(resultsCloseSchedA);
                    $m("#modal_dialog").dialog({
                        resizable: false,
                        modal: true,
                        width: '400px',
                        height: 'auto',
                        bgiframe: false,
                        closeOnEscape: false,
                        open: function (event, ui) { hideDialogXButton(this); },
                        buttons: {
                            "OK": function () {
                                $m(this).dialog("close");
                                $("#divLoading").show();
                                // INSERT
                                if (sessionStorage.getItem("UpdateFlagSchedAPart").toString() == "No") { // Save
                                    $("#divLoading").show();


                                    $.post("@Url.Content("~/LoanReceivedSchedI/GetPartnershipTotAmt/")", {
                                        strTransNumber: sessionStorage.getItem("TransIdPartnership")
                                    }, function (result) {
                                        if (result != "") {
                                            var expPartAmount = sessionStorage.getItem("IndFamPartnershipAmt").toString();
                                            if ($("#txtPartAmt").val().toString() == "999999999.99" || $("#txtPartAmt").val().toString() == "") {
                                                var expPayAmount = "0";
                                            }
                                            else {
                                                var expPayAmount = $("#txtPartAmt").val().toString();
                                            }
                                            expPartAmount = parseFloat(expPartAmount) - parseFloat(result);
                                            if (parseFloat(expPayAmount) <= parseFloat(expPartAmount).toFixed(2)) { // REMOVE THIS ONE ONCE SERVER SIDE TESTING DONE.
                                                $.post("@Url.Content("~/ContributionsCandIndFamily/SaveSchedAPartnersData/")", {
                                                    strTransNumber: sessionStorage.getItem("TransIdPartnership").toString(),
                                                    strFilingSchedId: sessionStorage.getItem("FilingSchedId").toString(),
                                                    strFilingSchedDate: sessionStorage.getItem("FilingSchedDate").toString(),
                                                    txtFilerId: $("#txtFilerID").val(),
                                                    lstElectionCycle: $("#lstElectionCycle option:selected").text(),
                                                    lstElectionCycleId: $("#lstElectionCycle option:selected").val(),
                                                    lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                                                    lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                                                    lstElectionType: $("#lstElectionType option:selected").val(),
                                                    lstElectionDate: $("#lstElectionDate option:selected").text(),
                                                    txtPartnerName: $("#txtPartnerName").val(),
                                                    txtPartFirstName: $("#txtPartFirstName").val(),
                                                    txtPartMI: $m("#txtPartMI").val(),
                                                    txtPartLastName: $m("#txtPartLastName").val(),
                                                    txtPartStreetName: $m("#txtPartStreetName").val(),
                                                    txtPartCity: $m("#txtPartCity").val(),
                                                    txtPartState: $m("#txtPartState").val(),
                                                    txtPartZip5: $m("#txtPartZip5").val(),
                                                    txtPartAmt: $m("#txtPartAmt").val(),
                                                    txtPartExplanationInKind: $m("#txtPartExplanationInKind").val(),
                                                    lstItemizedPart: $("#lstItemizedPart option:selected").val(),
                                                    txtCountryPartnership: $m("#txtCountryPartnership").val(),
                                                    lstIndividualPart: $("#lstIndividualPart option:selected").val(),
                                                    chkCountryPartnership: $('#chkCountryPartnership').is(':checked').toString(),
                                                    outOrginalAmount: sessionStorage.getItem("IndFamPartnershipAmt").toString(),
                                                    recordCount: sessionStorage.getItem("PartnershipRecCount").toString(),
                                                    txtEmployerPCFB: $m("#txtPartEmployer").val(),
                                                    txtOccupationPCFB: $m("#txtPartOccupation").val(),
                                                    txtContStreetName: $m("#txtPartContStreetName").val(),
                                                    txtContCity: $m("#txtPartContCity").val(),
                                                    txtContState: $m("#txtPartContState").val(),
                                                    txtContZipCode: $m("#txtPartContZipCode").val(),
                                                    lstRContributions: $m("#lstPartRContributions option:selected").text()
                                                }, function (results) {
                                                    if (results.Errors == null) {
                                                        window.status = "Transaction saved successfully";

                                                        var validator = $m("#DialogBoxSchedAPartnershipForm").validate();
                                                        validator.resetForm();  // clear out the validation errors
                                                        $m("#DialogBoxSchedAPartnershipForm")[0].reset();   // clear out the form data

                                                        $("#txtCountryPartnership").val("United States");
                                                        $("#txtCountryPartnership").prop("disabled", true);
                                                        $("#chkCountryPartnership").prop('checked', false);
                                                        $("#txtSttxtPartStateate").prop('maxLength', '2');

                                                        $("#txtCurrentDate").blur();
                                                        $("#txtPartZip5").blur();
                                                        $("#txtPartAmt").blur();
                                                        //Clears labels removes class error
                                                        appCommonEFS_ClearLabeltextAndRemoveClassError([
                                                            "txtPartFirstName",
                                                            "txtPartLastName",
                                                            "txtPartAmt",
                                                        ]);

                                                        // Fill the Auto fill data.
                                                        $("#txtPartshiptName").prop("disabled", true);
                                                        $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());

                                                        $("#lstItemizedPart")[0].selectedIndex = 0;
                                                        $("#lstIndividualPart")[0].selectedIndex = 0;
                                                        $("#tdPartnerName").hide();

                                                        $("#tdPartFirstName").show("slow");
                                                        $("#tdPartMI").show("slow");
                                                        $("#tdPartLastName").show("slow");

                                                        $("#tdPartnershipNamePartner").show("slow");
                                                        $("#dvPartIndividual").show("slow");
                                                        $("#tdPartnershipName").show("slow");
                                                        $("#tdPartStreetName").show("slow");
                                                        $("#tdPartCity").show("slow");
                                                        $("#tdPartState").show("slow");
                                                        $("#tdPartZip5").show("slow");
                                                        $("#tdPartCity").show("slow");
                                                        $("#tdCountryPartnershipChk").show("slow");
                                                        $("#tdCountryPartnershipTxt").show("slow");

                                                        $("#lstItemizedPart").focus();

                                                        if (@Session["COMM_TYPE_ID"] == "23") {
                                                            $("#tdPartRContributions").show();
                                                            $("#tdPartEmployer").hide();
                                                            $("#tdPartOccupation").hide();
                                                            $("#divPartContStreetAddress").hide();
                                                            $("#divPartContCity").hide();
                                                            $("#divPartContState").hide();
                                                            $("#divPartContZip5").hide();
                                                            $("#lstPartRContributions")[0].selectedIndex = 1;
                                                        }

                                                        ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');
                                                        // Refresh the Data on Grid...
                                                        // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
                                                        GetLoanReceivedPartnersDataAndGetPartnershipTotAmt();
                                                    } else if (results.Errors.length >= 0) {

                                                        ClearServerSideErrorsPartnership(); // Server Side Validation Clear
                                                        var hasAmmountError = AppendCustomErrorLabels(results.Errors);
                                                        if (hasAmmountError == true) {
                                                            $("#divLoading").hide();
                                                            ShowDialogBox('EFS', 'Partnership Amount cannot be more than Outstanding Amount $' + parseFloat(expPartAmount).toFixed(2).toString(), 'Ok', '');
                                                        }
                                                    }
                                                }).always(function () {
                                                    $("#divLoading").hide();
                                                });
                                            } else {
                                                $("#divLoading").hide();//
                                                ShowDialogBox('EFS', 'Partnership Amount cannot be more than Outstanding Amount $' + parseFloat(expPartAmount).toFixed(2).toString(), 'Ok', '');
                                            }
                                        } else {
                                            var partnershipAmount = sessionStorage.getItem("IndFamPartnershipAmt").toString();
                                            if ($("#txtPartAmt").val().toString() == "999999999.99" || $("#txtPartAmt").val().toString() == "") {
                                                var expPayAmount = "0";
                                            }
                                            else {
                                                var expPayAmount = $("#txtPartAmt").val().toString();
                                            }
                                            if (parseFloat(expPayAmount) <= parseFloat(partnershipAmount).toFixed(2)) {
                                                $.post("@Url.Content("~/ContributionsCandIndFamily/SaveSchedAPartnersData/")", {
                                                    strTransNumber: sessionStorage.getItem("TransIdPartnership").toString(),
                                                    strFilingSchedId: sessionStorage.getItem("FilingSchedId").toString(),
                                                    strFilingSchedDate: sessionStorage.getItem("FilingSchedDate").toString(),
                                                    txtFilerId: $("#txtFilerID").val(),
                                                    lstElectionCycle: $("#lstElectionCycle option:selected").text(),
                                                    lstElectionCycleId: $("#lstElectionCycle option:selected").val(),
                                                    lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                                                    lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                                                    lstElectionType: $("#lstElectionType option:selected").val(),
                                                    lstElectionDate: $("#lstElectionDate option:selected").text(),
                                                    txtPartnerName: $("#txtPartnerName").val(),
                                                    txtPartFirstName: $("#txtPartFirstName").val(),
                                                    txtPartMI: $m("#txtPartMI").val(),
                                                    txtPartLastName: $m("#txtPartLastName").val(),
                                                    txtPartStreetName: $m("#txtPartStreetName").val(),
                                                    txtPartCity: $m("#txtPartCity").val(),
                                                    txtPartState: $m("#txtPartState").val(),
                                                    txtPartZip5: $m("#txtPartZip5").val(),
                                                    txtPartAmt: $m("#txtPartAmt").val(),
                                                    txtPartExplanationInKind: $m("#txtPartExplanationInKind").val(),
                                                    lstItemizedPart: $("#lstItemizedPart option:selected").val(),
                                                    txtCountryPartnership: $m("#txtCountryPartnership").val(),
                                                    lstIndividualPart: $("#lstIndividualPart option:selected").val(),
                                                    chkCountryPartnership: $('#chkCountryPartnership').is(':checked').toString(),
                                                    outOrginalAmount: sessionStorage.getItem("IndFamPartnershipAmt").toString(),
                                                    recordCount: sessionStorage.getItem("PartnershipRecCount").toString(),
                                                    txtEmployerPCFB: $m("#txtPartEmployer").val(),
                                                    txtOccupationPCFB: $m("#txtPartOccupation").val(),
                                                    txtContStreetName: $m("#txtPartContStreetName").val(),
                                                    txtContCity: $m("#txtPartContCity").val(),
                                                    txtContState: $m("#txtPartContState").val(),
                                                    txtContZipCode: $m("#txtPartContZipCode").val(),
                                                    lstRContributions: $m("#lstPartRContributions option:selected").text()
                                                }, function (results) {

                                                    if (results.Errors == null) {
                                                        window.status = "Transaction Saved successfully";

                                                        var validator = $m("#DialogBoxSchedAPartnershipForm").validate();
                                                        validator.resetForm();  // clear out the validation errors
                                                        $m("#DialogBoxSchedAPartnershipForm")[0].reset();   // clear out the form data

                                                        $("#txtCountryPartnership").val("United States");
                                                        $("#txtCountryPartnership").prop("disabled", true);
                                                        $("#chkCountryPartnership").prop('checked', false);
                                                        $("#txtSttxtPartStateate").prop('maxLength', '2');
                                                        //Clears labels removes class error
                                                        appCommonEFS_ClearLabeltextAndRemoveClassError([
                                                            "txtPartFirstName",
                                                            "txtPartLastName",
                                                            "txtPartAmt"
                                                        ]);

                                                        $("#txtCurrentDate").blur();
                                                        $("#txtPartZip5").blur();
                                                        $("#txtPartAmt").blur();

                                                        // Fill the Auto fill data.
                                                        $("#txtPartshiptName").prop("disabled", true);
                                                        $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());

                                                        $("#lstItemizedPart")[0].selectedIndex = 0;
                                                        $("#lstIndividualPart")[0].selectedIndex = 0;
                                                        $("#tdPartnerName").hide();

                                                        $("#tdPartFirstName").show("slow");
                                                        $("#tdPartMI").show("slow");
                                                        $("#tdPartLastName").show("slow");

                                                        $("#tdPartnershipNamePartner").show("slow");
                                                        $("#dvPartIndividual").show("slow");
                                                        $("#tdPartnershipName").show("slow");
                                                        $("#tdPartStreetName").show("slow");
                                                        $("#tdPartCity").show("slow");
                                                        $("#tdPartState").show("slow");
                                                        $("#tdPartZip5").show("slow");
                                                        $("#tdPartCity").show("slow");
                                                        $("#tdCountryPartnershipChk").show("slow");
                                                        $("#tdCountryPartnershipTxt").show("slow");

                                                        $("#lstItemizedPart").focus();
                                                        $("#divLoading").hide();

                                                        if (@Session["COMM_TYPE_ID"] == "23") {
                                                            $("#tdPartRContributions").show();
                                                            $("#tdPartEmployer").hide();
                                                            $("#tdPartOccupation").hide();
                                                            $("#divPartContStreetAddress").hide();
                                                            $("#divPartContCity").hide();
                                                            $("#divPartContState").hide();
                                                            $("#divPartContZip5").hide();
                                                            $("#lstPartRContributions")[0].selectedIndex = 1;
                                                        }

                                                        ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');
                                                    }
                                                    else if (results.Errors.length >= 0) {
                                                        ClearServerSideErrorsPartnership(); // Server Side Validation Clear
                                                        AppendCustomErrorLabels(results.Errors);
                                                        var hasAmmountError = AppendCustomErrorLabels(results.Errors);
                                                        if (hasAmmountError == true) {
                                                            ShowDialogBox('EFS', 'Partnership Amount cannot be more than Outstanding Amount $' + parseFloat(sessionStorage.getItem("IndFamPartnershipAmt").toString()).toFixed(2).toString(), 'Ok', '');
                                                        }
                                                    }
                                                }).always(function () {
                                                    $("#divLoading").hide();
                                                });
                                            } else {
                                                $("#divLoading").hide();
                                                ShowDialogBox('EFS', 'Partnership Amount cannot be more than Outstanding Amount $' + parseFloat(sessionStorage.getItem("IndFamPartnershipAmt").toString()).toFixed(2).toString(), 'Ok', '');
                                            }
                                        }
                                    }).fail(function () {
                                        $("#divLoading").hide();// GetPartnershipTotAmt failed.
                                    });
                                }
                                else if (sessionStorage.getItem("UpdateFlagSchedAPart").toString() == "Yes") { /// Update data...
                                    $("#divLoading").show();
                                    $.post("@Url.Content("~/LoanReceivedSchedI/GetPartnershipTotAmt/")", {
                                        strTransNumber: sessionStorage.getItem("TransIdPartnership")
                                    }, function (result) {
                                        if (result != "") {
                                            var partnershipAmount = sessionStorage.getItem("IndFamPartnershipAmt").toString();
                                            var partnershipAttrAmount = sessionStorage.getItem("PartnershipAttrAmount").toString();
                                            result = parseFloat(result) - parseFloat(partnershipAttrAmount);
                                            var totalExpPayAmt = parseFloat(partnershipAmount) - parseFloat(result);
                                            var expPayAmount = $("#txtPartAmt").val().toString();
                                            if (parseFloat(expPayAmount) <= parseFloat(totalExpPayAmt).toFixed(2)) { // REMOVE SERVER SIDE TESTING DONE.
                                                $.post("@Url.Content("~/ContributionsCandIndFamily/UpdateSchedAPartnersData/")", {
                                                    strTransNumber: sessionStorage.getItem("TransNumberPartnership").toString(),
                                                    strFilingEntityId: sessionStorage.getItem("FilingEntityIdPartner").toString(),
                                                    txtPartshiptName: $("#txtPartnerName").val().toString(),
                                                    txtPartFirstName: $("#txtPartFirstName").val(),
                                                    txtPartMI: $m("#txtPartMI").val(),
                                                    txtPartLastName: $m("#txtPartLastName").val(),
                                                    txtPartStreetName: $m("#txtPartStreetName").val(),
                                                    txtPartCity: $m("#txtPartCity").val(),
                                                    txtPartState: $m("#txtPartState").val(),
                                                    txtPartZip5: $m("#txtPartZip5").val(),
                                                    txtPartAmt: $m("#txtPartAmt").val(),
                                                    txtPartExplanationInKind: $m("#txtPartExplanationInKind").val(),
                                                    txtCountryPartnership: $m("#txtCountryPartnership").val(),
                                                    lstItemizedPart: $("#lstItemizedPart option:selected").val(),
                                                    lstIndividualPart: $("#lstIndividualPart option:selected").val(),
                                                    chkCountryPartnership: $('#chkCountryPartnership').is(':checked').toString(),
                                                    outOrginalAmount: sessionStorage.getItem("IndFamPartnershipAmt").toString(),
                                                    recordCount: sessionStorage.getItem("PartnershipRecCount").toString(),
                                                    existingAmount: sessionStorage.getItem("PartnershipAttrAmount").toString(),
                                                    strFilingSchedId: sessionStorage.getItem("ScheduleCSchedId").toString(),
                                                    txtEmployerPCFB: $m("#txtPartEmployer").val(),
                                                    txtOccupationPCFB: $m("#txtPartOccupation").val(),
                                                    txtContStreetName: $m("#txtPartContStreetName").val(),
                                                    txtContCity: $m("#txtPartContCity").val(),
                                                    txtContState: $m("#txtPartContState").val(),
                                                    txtContZipCode: $m("#txtPartContZipCode").val(),
                                                    lstRContributions: $m("#lstPartRContributions option:selected").text()
                                                }, function (results) {

                                                    if (results.Errors == null) {
                                                        dialogPartner.dialog("close");//Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.

                                                        window.status = "Transaction saved successfully";
                                                        $("#divLoading").hide();

                                                        if (@Session["COMM_TYPE_ID"] == "23") {
                                                            $("#tdPartRContributions").show();
                                                            $("#tdPartEmployer").hide();
                                                            $("#tdPartOccupation").hide();
                                                            $("#divPartContStreetAddress").hide();
                                                            $("#divPartContCity").hide();
                                                            $("#divPartContState").hide();
                                                            $("#divPartContZip5").hide();
                                                            $("#lstPartRContributions")[0].selectedIndex = 1;
                                                        }

                                                        ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');

                                                        // Reload Partners Grid
                                                        // Refresh the Data on Grid...
                                                        GetLoanReceivedPartnersData(sessionStorage.getItem("PartnerPartnershipName").toString(), tablePartners);

                                                        // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
                                                        GetPartnershipTotAmt(sessionStorage.getItem("TransIdPartnership"), true, true);
                                                    }
                                                    else if (results.Errors.length >= 0) {

                                                        ClearServerSideErrorsPartnership(); // Server Side Validation Clear
                                                        var hasAmmountError = AppendCustomErrorLabels(results.Errors);

                                                        if (hasAmmountError == true) {
                                                            ShowDialogBox('EFS', 'Partnership Amount cannot be more than Outstanding Amount $' + parseFloat(totalExpPayAmt).toFixed(2).toString(), 'Ok', '');
                                                        }
                                                    }
                                                }).always(function () {
                                                    $("#divLoading").hide();// UpdateSchedAPartnersData failed.
                                                });
                                            }
                                            else {
                                                $("#divLoading").hide();
                                                ShowDialogBox('EFS', 'Partnership Amount cannot be more than Outstanding Amount $' + parseFloat(totalExpPayAmt).toFixed(2).toString(), 'Ok', '');
                                            }
                                        } else {
                                            $("#divLoading").hide();
                                        }
                                    }).fail(function () {
                                        $("#divLoading").hide();// GetPartnershipTotAmt failed.
                                    });
                                }
                            },
                            "Cancel": function () {
                                // confirm close
                                $m(this).dialog("close");
                            }
                        }
                    });
                }
                else {
                    if (sessionStorage.getItem("UpdateFlagSchedAPart").toString() == "No") { // Save
                        $("#divLoading").show();


                        $.post("@Url.Content("~/LoanReceivedSchedI/GetPartnershipTotAmt/")", {
                            strTransNumber: sessionStorage.getItem("TransIdPartnership")
                        }, function (result) {
                            if (result != "") {
                                var expPartAmount = sessionStorage.getItem("IndFamPartnershipAmt").toString();
                                if ($("#txtPartAmt").val().toString() == "999999999.99" || $("#txtPartAmt").val().toString() == "") {
                                    var expPayAmount = "0";
                                }
                                else {
                                    var expPayAmount = $("#txtPartAmt").val().toString();
                                }
                                expPartAmount = parseFloat(expPartAmount) - parseFloat(result);
                                if (parseFloat(expPayAmount) <= parseFloat(expPartAmount).toFixed(2)) { // REMOVE THIS ONE ONCE SERVER SIDE TESTING DONE.
                                    $.post("@Url.Content("~/ContributionsCandIndFamily/SaveSchedAPartnersData/")", {
                                        strTransNumber: sessionStorage.getItem("TransIdPartnership").toString(),
                                        strFilingSchedId: sessionStorage.getItem("FilingSchedId").toString(),
                                        strFilingSchedDate: sessionStorage.getItem("FilingSchedDate").toString(),
                                        txtFilerId: $("#txtFilerID").val(),
                                        lstElectionCycle: $("#lstElectionCycle option:selected").text(),
                                        lstElectionCycleId: $("#lstElectionCycle option:selected").val(),
                                        lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                                        lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                                        lstElectionType: $("#lstElectionType option:selected").val(),
                                        lstElectionDate: $("#lstElectionDate option:selected").text(),
                                        txtPartnerName: $("#txtPartnerName").val(),
                                        txtPartFirstName: $("#txtPartFirstName").val(),
                                        txtPartMI: $m("#txtPartMI").val(),
                                        txtPartLastName: $m("#txtPartLastName").val(),
                                        txtPartStreetName: $m("#txtPartStreetName").val(),
                                        txtPartCity: $m("#txtPartCity").val(),
                                        txtPartState: $m("#txtPartState").val(),
                                        txtPartZip5: $m("#txtPartZip5").val(),
                                        txtPartAmt: $m("#txtPartAmt").val(),
                                        txtPartExplanationInKind: $m("#txtPartExplanationInKind").val(),
                                        lstItemizedPart: $("#lstItemizedPart option:selected").val(),
                                        txtCountryPartnership: $m("#txtCountryPartnership").val(),
                                        lstIndividualPart: $("#lstIndividualPart option:selected").val(),
                                        chkCountryPartnership: $('#chkCountryPartnership').is(':checked').toString(),
                                        outOrginalAmount: sessionStorage.getItem("IndFamPartnershipAmt").toString(),
                                        recordCount: sessionStorage.getItem("PartnershipRecCount").toString(),
                                        txtEmployerPCFB: $m("#txtPartEmployer").val(),
                                        txtOccupationPCFB: $m("#txtPartOccupation").val(),
                                        txtContStreetName: $m("#txtPartContStreetName").val(),
                                        txtContCity: $m("#txtPartContCity").val(),
                                        txtContState: $m("#txtPartContState").val(),
                                        txtContZipCode: $m("#txtPartContZipCode").val(),
                                        lstRContributions: $m("#lstPartRContributions option:selected").text()
                                    }, function (results) {
                                        if (results.Errors == null) {
                                            window.status = "Transaction saved successfully";

                                            var validator = $m("#DialogBoxSchedAPartnershipForm").validate();
                                            validator.resetForm();  // clear out the validation errors
                                            $m("#DialogBoxSchedAPartnershipForm")[0].reset();   // clear out the form data

                                            $("#txtCountryPartnership").val("United States");
                                            $("#txtCountryPartnership").prop("disabled", true);
                                            $("#chkCountryPartnership").prop('checked', false);
                                            $("#txtSttxtPartStateate").prop('maxLength', '2');

                                            $("#txtCurrentDate").blur();
                                            $("#txtPartZip5").blur();
                                            $("#txtPartAmt").blur();
                                            //Clears labels removes class error
                                            appCommonEFS_ClearLabeltextAndRemoveClassError([
                                                "txtPartFirstName",
                                                "txtPartLastName",
                                                "txtPartAmt",
                                            ]);

                                            // Fill the Auto fill data.
                                            $("#txtPartshiptName").prop("disabled", true);
                                            $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());

                                            $("#lstItemizedPart")[0].selectedIndex = 0;
                                            $("#lstIndividualPart")[0].selectedIndex = 0;
                                            $("#tdPartnerName").hide();

                                            $("#tdPartFirstName").show("slow");
                                            $("#tdPartMI").show("slow");
                                            $("#tdPartLastName").show("slow");

                                            $("#tdPartnershipNamePartner").show("slow");
                                            $("#dvPartIndividual").show("slow");
                                            $("#tdPartnershipName").show("slow");
                                            $("#tdPartStreetName").show("slow");
                                            $("#tdPartCity").show("slow");
                                            $("#tdPartState").show("slow");
                                            $("#tdPartZip5").show("slow");
                                            $("#tdPartCity").show("slow");
                                            $("#tdCountryPartnershipChk").show("slow");
                                            $("#tdCountryPartnershipTxt").show("slow");

                                            $("#lstItemizedPart").focus();

                                            if (@Session["COMM_TYPE_ID"] == "23") {
                                                $("#tdPartRContributions").show();
                                                $("#tdPartEmployer").hide();
                                                $("#tdPartOccupation").hide();
                                                $("#divPartContStreetAddress").hide();
                                                $("#divPartContCity").hide();
                                                $("#divPartContState").hide();
                                                $("#divPartContZip5").hide();
                                                $("#lstPartRContributions")[0].selectedIndex = 1;
                                            }

                                            ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');
                                            // Refresh the Data on Grid...
                                            // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
                                            GetLoanReceivedPartnersDataAndGetPartnershipTotAmt();
                                        } else if (results.Errors.length >= 0) {

                                            ClearServerSideErrorsPartnership(); // Server Side Validation Clear
                                            var hasAmmountError = AppendCustomErrorLabels(results.Errors);
                                            if (hasAmmountError == true) {
                                                $("#divLoading").hide();
                                                ShowDialogBox('EFS', 'Partnership Amount cannot be more than Outstanding Amount $' + parseFloat(expPartAmount).toFixed(2).toString(), 'Ok', '');
                                            }
                                        }
                                    }).always(function () {
                                        $("#divLoading").hide();
                                    });
                                } else {
                                    $("#divLoading").hide();//
                                    ShowDialogBox('EFS', 'Partnership Amount cannot be more than Outstanding Amount $' + parseFloat(expPartAmount).toFixed(2).toString(), 'Ok', '');
                                }
                            } else {
                                var partnershipAmount = sessionStorage.getItem("IndFamPartnershipAmt").toString();
                                if ($("#txtPartAmt").val().toString() == "999999999.99" || $("#txtPartAmt").val().toString() == "") {
                                    var expPayAmount = "0";
                                }
                                else {
                                    var expPayAmount = $("#txtPartAmt").val().toString();
                                }
                                if (parseFloat(expPayAmount) <= parseFloat(partnershipAmount).toFixed(2)) {
                                    $.post("@Url.Content("~/ContributionsCandIndFamily/SaveSchedAPartnersData/")", {
                                        strTransNumber: sessionStorage.getItem("TransIdPartnership").toString(),
                                        strFilingSchedId: sessionStorage.getItem("FilingSchedId").toString(),
                                        strFilingSchedDate: sessionStorage.getItem("FilingSchedDate").toString(),
                                        txtFilerId: $("#txtFilerID").val(),
                                        lstElectionCycle: $("#lstElectionCycle option:selected").text(),
                                        lstElectionCycleId: $("#lstElectionCycle option:selected").val(),
                                        lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                                        lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                                        lstElectionType: $("#lstElectionType option:selected").val(),
                                        lstElectionDate: $("#lstElectionDate option:selected").text(),
                                        txtPartnerName: $("#txtPartnerName").val(),
                                        txtPartFirstName: $("#txtPartFirstName").val(),
                                        txtPartMI: $m("#txtPartMI").val(),
                                        txtPartLastName: $m("#txtPartLastName").val(),
                                        txtPartStreetName: $m("#txtPartStreetName").val(),
                                        txtPartCity: $m("#txtPartCity").val(),
                                        txtPartState: $m("#txtPartState").val(),
                                        txtPartZip5: $m("#txtPartZip5").val(),
                                        txtPartAmt: $m("#txtPartAmt").val(),
                                        txtPartExplanationInKind: $m("#txtPartExplanationInKind").val(),
                                        lstItemizedPart: $("#lstItemizedPart option:selected").val(),
                                        txtCountryPartnership: $m("#txtCountryPartnership").val(),
                                        lstIndividualPart: $("#lstIndividualPart option:selected").val(),
                                        chkCountryPartnership: $('#chkCountryPartnership').is(':checked').toString(),
                                        outOrginalAmount: sessionStorage.getItem("IndFamPartnershipAmt").toString(),
                                        recordCount: sessionStorage.getItem("PartnershipRecCount").toString(),
                                        txtEmployerPCFB: $m("#txtPartEmployer").val(),
                                        txtOccupationPCFB: $m("#txtPartOccupation").val(),
                                        txtContStreetName: $m("#txtPartContStreetName").val(),
                                        txtContCity: $m("#txtPartContCity").val(),
                                        txtContState: $m("#txtPartContState").val(),
                                        txtContZipCode: $m("#txtPartContZipCode").val(),
                                        lstRContributions: $m("#lstPartRContributions option:selected").text()
                                    }, function (results) {

                                        if (results.Errors == null) {
                                            window.status = "Transaction Saved successfully";

                                            var validator = $m("#DialogBoxSchedAPartnershipForm").validate();
                                            validator.resetForm();  // clear out the validation errors
                                            $m("#DialogBoxSchedAPartnershipForm")[0].reset();   // clear out the form data

                                            $("#txtCountryPartnership").val("United States");
                                            $("#txtCountryPartnership").prop("disabled", true);
                                            $("#chkCountryPartnership").prop('checked', false);
                                            $("#txtSttxtPartStateate").prop('maxLength', '2');
                                            //Clears labels removes class error
                                            appCommonEFS_ClearLabeltextAndRemoveClassError([
                                                "txtPartFirstName",
                                                "txtPartLastName",
                                                "txtPartAmt"
                                            ]);

                                            $("#txtCurrentDate").blur();
                                            $("#txtPartZip5").blur();
                                            $("#txtPartAmt").blur();

                                            // Fill the Auto fill data.
                                            $("#txtPartshiptName").prop("disabled", true);
                                            $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());

                                            $("#lstItemizedPart")[0].selectedIndex = 0;
                                            $("#lstIndividualPart")[0].selectedIndex = 0;
                                            $("#tdPartnerName").hide();

                                            $("#tdPartFirstName").show("slow");
                                            $("#tdPartMI").show("slow");
                                            $("#tdPartLastName").show("slow");

                                            $("#tdPartnershipNamePartner").show("slow");
                                            $("#dvPartIndividual").show("slow");
                                            $("#tdPartnershipName").show("slow");
                                            $("#tdPartStreetName").show("slow");
                                            $("#tdPartCity").show("slow");
                                            $("#tdPartState").show("slow");
                                            $("#tdPartZip5").show("slow");
                                            $("#tdPartCity").show("slow");
                                            $("#tdCountryPartnershipChk").show("slow");
                                            $("#tdCountryPartnershipTxt").show("slow");

                                            $("#lstItemizedPart").focus();
                                            $("#divLoading").hide();
                                            if (@Session["COMM_TYPE_ID"] == "23") {
                                                $("#tdPartRContributions").show();
                                                $("#tdPartEmployer").hide();
                                                $("#tdPartOccupation").hide();
                                                $("#divPartContStreetAddress").hide();
                                                $("#divPartContCity").hide();
                                                $("#divPartContState").hide();
                                                $("#divPartContZip5").hide();
                                                $("#lstPartRContributions")[0].selectedIndex = 1;
                                            }
                                            ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');
                                        }
                                        else if (results.Errors.length >= 0) {
                                            ClearServerSideErrorsPartnership(); // Server Side Validation Clear
                                            AppendCustomErrorLabels(results.Errors);
                                            var hasAmmountError = AppendCustomErrorLabels(results.Errors);
                                            if (hasAmmountError == true) {
                                                ShowDialogBox('EFS', 'Partnership Amount cannot be more than Outstanding Amount $' + parseFloat(sessionStorage.getItem("IndFamPartnershipAmt").toString()).toFixed(2).toString(), 'Ok', '');
                                            }
                                        }
                                    }).always(function () {
                                        $("#divLoading").hide();
                                    });
                                } else {
                                    $("#divLoading").hide();
                                    ShowDialogBox('EFS', 'Partnership Amount cannot be more than Outstanding Amount $' + parseFloat(sessionStorage.getItem("IndFamPartnershipAmt").toString()).toFixed(2).toString(), 'Ok', '');
                                }
                            }
                        }).fail(function () {
                            $("#divLoading").hide();// GetPartnershipTotAmt failed.
                        });
                    }
                    else if (sessionStorage.getItem("UpdateFlagSchedAPart").toString() == "Yes") { /// Update data...
                        $("#divLoading").show();
                        $.post("@Url.Content("~/LoanReceivedSchedI/GetPartnershipTotAmt/")", {
                            strTransNumber: sessionStorage.getItem("TransIdPartnership")
                        }, function (result) {
                            if (result != "") {
                                var partnershipAmount = sessionStorage.getItem("IndFamPartnershipAmt").toString();
                                var partnershipAttrAmount = sessionStorage.getItem("PartnershipAttrAmount").toString();
                                result = parseFloat(result) - parseFloat(partnershipAttrAmount);
                                var totalExpPayAmt = parseFloat(partnershipAmount) - parseFloat(result);
                                var expPayAmount = $("#txtPartAmt").val().toString();
                                if (parseFloat(expPayAmount) <= parseFloat(totalExpPayAmt).toFixed(2)) { // REMOVE SERVER SIDE TESTING DONE.
                                    $.post("@Url.Content("~/ContributionsCandIndFamily/UpdateSchedAPartnersData/")", {
                                        strTransNumber: sessionStorage.getItem("TransNumberPartnership").toString(),
                                        strFilingEntityId: sessionStorage.getItem("FilingEntityIdPartner").toString(),
                                        txtPartshiptName: $("#txtPartnerName").val().toString(),
                                        txtPartFirstName: $("#txtPartFirstName").val(),
                                        txtPartMI: $m("#txtPartMI").val(),
                                        txtPartLastName: $m("#txtPartLastName").val(),
                                        txtPartStreetName: $m("#txtPartStreetName").val(),
                                        txtPartCity: $m("#txtPartCity").val(),
                                        txtPartState: $m("#txtPartState").val(),
                                        txtPartZip5: $m("#txtPartZip5").val(),
                                        txtPartAmt: $m("#txtPartAmt").val(),
                                        txtPartExplanationInKind: $m("#txtPartExplanationInKind").val(),
                                        txtCountryPartnership: $m("#txtCountryPartnership").val(),
                                        lstItemizedPart: $("#lstItemizedPart option:selected").val(),
                                        lstIndividualPart: $("#lstIndividualPart option:selected").val(),
                                        chkCountryPartnership: $('#chkCountryPartnership').is(':checked').toString(),
                                        outOrginalAmount: sessionStorage.getItem("IndFamPartnershipAmt").toString(),
                                        recordCount: sessionStorage.getItem("PartnershipRecCount").toString(),
                                        existingAmount: sessionStorage.getItem("PartnershipAttrAmount").toString(),
                                        strFilingSchedId: sessionStorage.getItem("ScheduleCSchedId").toString(),
                                        txtEmployerPCFB: $m("#txtPartEmployer").val(),
                                        txtOccupationPCFB: $m("#txtPartOccupation").val(),
                                        txtContStreetName: $m("#txtPartContStreetName").val(),
                                        txtContCity: $m("#txtPartContCity").val(),
                                        txtContState: $m("#txtPartContState").val(),
                                        txtContZipCode: $m("#txtPartContZipCode").val(),
                                        lstRContributions: $m("#lstPartRContributions option:selected").text()
                                    }, function (results) {

                                        if (results.Errors == null) {
                                            dialogPartner.dialog("close");//Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.

                                            window.status = "Transaction saved successfully";
                                            $("#divLoading").hide();
                                            if (@Session["COMM_TYPE_ID"] == "23") {
                                                $("#tdPartRContributions").show();
                                                $("#tdPartEmployer").hide();
                                                $("#tdPartOccupation").hide();
                                                $("#divPartContStreetAddress").hide();
                                                $("#divPartContCity").hide();
                                                $("#divPartContState").hide();
                                                $("#divPartContZip5").hide();
                                                $("#lstPartRContributions")[0].selectedIndex = 1;
                                            }
                                            ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');

                                            // Reload Partners Grid
                                            // Refresh the Data on Grid...
                                            GetLoanReceivedPartnersData(sessionStorage.getItem("PartnerPartnershipName").toString(), tablePartners);

                                            // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
                                            GetPartnershipTotAmt(sessionStorage.getItem("TransIdPartnership"), true, true);
                                        }
                                        else if (results.Errors.length >= 0) {

                                            ClearServerSideErrorsPartnership(); // Server Side Validation Clear
                                            var hasAmmountError = AppendCustomErrorLabels(results.Errors);

                                            if (hasAmmountError == true) {
                                                ShowDialogBox('EFS', 'Partnership Amount cannot be more than Outstanding Amount $' + parseFloat(totalExpPayAmt).toFixed(2).toString(), 'Ok', '');
                                            }
                                        }
                                    }).always(function () {
                                        $("#divLoading").hide();// UpdateSchedAPartnersData failed.
                                    });
                                }
                                else {
                                    $("#divLoading").hide();
                                    ShowDialogBox('EFS', 'Partnership Amount cannot be more than Outstanding Amount $' + parseFloat(totalExpPayAmt).toFixed(2).toString(), 'Ok', '');
                                }
                            } else {
                                $("#divLoading").hide();
                            }
                        }).fail(function () {
                            $("#divLoading").hide();// GetPartnershipTotAmt failed.
                        });
                    }
                }

                
            } // REMOVED FOR SERVER SIDE VALIDATION
        });

         // Clear Attribution Dialog Box..
         $("#btnClearDialogPartner").click(function () {

             sessionStorage.setItem("ItemizedPartYorN", $("#lstItemizedPart option:selected").val().toString());
             sessionStorage.setItem("IndividualPartYorN", $("#lstIndividualPart option:selected").val().toString());
             sessionStorage.setItem("CountryPartVal", $("#txtCountryPartnership").val().toString());
             sessionStorage.setItem("PartnershipNameEdit", $("#txtPartshiptName").val().toString());

             var validator = $m("#DialogBoxSchedAPartnershipForm").validate();
             validator.resetForm();  // clear out the validation errors
             $m("#DialogBoxSchedAPartnershipForm")[0].reset();   // clear out the form data

             if (sessionStorage.getItem("UpdateFlagSchedAPart").toString() != "Yes") { // Add Transactions

                 // Fill the Auto fill data.
                 $("#txtPartshiptName").prop("disabled", true);
                 $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());

                 $("#txtCountryPartnership").val("United States");
                 $("#txtCountryPartnership").prop("disabled", true);
                 $("#chkCountryPartnership").prop('checked', false);
                 $("#txtPartState").prop('maxLength', '2');

                 $("#lstItemizedPart")[0].selectedIndex = 0;
                 $("#lstIndividualPart")[0].selectedIndex = 0;

                 $("#lstItemizedPart").prop("disabled", false);
                 $("#lstIndividualPart").prop("disabled", false);

                 $("#tdPartnershipNamePartner").show();

                 $("#tdPartnerName").hide();
                 $("#tdPartFirstName").show("slow");
                 $("#tdPartMI").show("slow");
                 $("#tdPartLastName").show("slow");
                 $("#dvPartIndividual").show("slow");
                 $("#tdPartnershipName").show("slow");
                 $("#tdPartStreetName").show("slow");
                 $("#tdPartCity").show("slow");
                 $("#tdPartState").show("slow");
                 $("#tdPartZip5").show("slow");
                 $("#tdPartCity").show("slow");
                 $("#tdCountryPartnershipChk").show("slow");
                 $("#tdCountryPartnershipTxt").show("slow");
                 //Clears labels removes class error
                 appCommonEFS_ClearLabeltextAndRemoveClassError([
                     "txtPartFirstName",
                     "txtPartMI",
                     "txtPartLastName"
                 ]);

                 $m("#lstItemizedPart").focus();

             }
             else { // Edit Transactions
                 if (sessionStorage.getItem("ItemizedPartYorN").toString() == "N") { // Unitemized Edit Transactions
                     $("#lstItemizedPart")[0].selectedIndex = 1;
                     $("#txtCurrentDate").focus();
                     $("#lstItemizedPart").prop("disabled", true);
                     $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());
                 }
                 else { // Itemized Edit Transactions
                     $("#txtCurrentDate").blur();
                     $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipNameEdit").toString());
                     if (sessionStorage.getItem("IndividualPartYorN").toString() == "Y") {
                         $("#lstIndividualPart")[0].selectedIndex = 0;
                         $("#txtPartFirstName").focus();
                     }
                     else {
                         $("#lstIndividualPart")[0].selectedIndex = 1;
                         $("#txtPartnerName").focus();
                     }

                     $("#lstItemizedPart").prop("disabled", true);
                     $("#lstIndividualPart").prop("disabled", true);

                     $("#txtCountryPartnership").val("United States");
                     $("#txtCountryPartnership").prop("disabled", true);
                     $("#chkCountryPartnership").prop('checked', false);
                     $("#txtPartState").prop('maxLength', '2');
                 }
             }

         });
         // Partnership Code----END-------------------------------------------------------------------------------------

         // Show Loan Details Link -----Start---------------------------------------------------------------------------

        sessionStorage.setItem("FilingTransIdForGrid", ' ');

        $("#divUCLoanRepayLoanRec").hide();
        $("#divUCLoanRecLoanRepay").hide();
        $("#divUCLoanRecLoanForgiven").hide();
        $("#divUCLoanRecOutLoans").hide();
        $("#divShowPartnerAdddataNCR").hide();

        var tableFilingTransactionsLoanReceived = '';
        var tableFilingTransactionsLoanRepay = '';
        var tableFilingTransactionsOutStandingLoans = '';
        var tableFilingTransactionsLoanForgiven = '';
        //Loan Details Grid
        $m('#gridFilingTransactions tbody').on('click', 'a.editor_loanDetails', function (e) {
            event.preventDefault();
            var rowData = tableFilingTransactions.row($(this).parents('tr')).data();

            sessionStorage.setItem("Loan_Lib_Num_details", rowData[41].toString());
            // FOR LEGACY RECORDS IF THERE IS NOT OUTSTANDING MAPPING RECOEDS THEN...
            // TAKE THE OURTSTANDING AMOUNT FROM THE MAIN GRID NOT DETAILS GRID. FIXED - 01/15/2021
            sessionStorage.setItem("OutstandingAmountLegacy", rowData[25].toString());
            //Get Loan Outstanding balance
            $.post("@Url.Content("~/LoanReceivedSchedI/GetLoanOutstandingBalance/")", {
                loan_Lib_Number: sessionStorage.getItem("Loan_Lib_Num_details").toString(),
            }, function (result) {
                    $("#lbl_UC_OutstandingBalance").text("Outstanding Amount: $" + result.toString());
            });

            $("#divUCLoanRecLoanRepay").show();
            $("#divUCLoanRecOutLoans").show();
            $("#divUCLoanRepayLoanRec").show();
            $("#divUCLoanRecLoanForgiven").show();
            $("#divShowPartnerAdddataNCR").hide();

            $(".divGridLoanReceivedJQueryClassSelector").show();
            $("#divLiabilitiesGrid").show();

            $(".divHeaderLoanReceivedJQueryClassSelector").show();
            $("#divHeaderOutstandingLoans").show();

            tableFilingTransactionsLoanReceived = $m('#gridLoanRepayLoanRec').DataTable({
                "bProcessing": true,
                "responsive": true,
                "deferRender": true,
                "retrieve": true,
                "columnDefs": [
                    {
                        "targets": [0, 1, 2, 3, 4, 5, 6, 7],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        "targets": [9],
                        "fnCreatedCell": function (cell) {
                            cell.setAttribute('aria-label', "Row Actions");
                        }
                    }
                ],
                "initComplete": function (settings, json) {
                    //Accessibility: Applies various Accessibility features to this dataTable.
                    makeDataTableAccessible($m('#gridLoanRepayLoanRec').DataTable());
                },
                "fnServerData": function (url, data, callback) {
                    $.ajax({
                        "url": "@Url.Content("~/LoanRepaymentsSchedJ/GetLoanReceived_LoanRepaymentData/")",
                        "data": {
                            loan_Lib_Num: sessionStorage.getItem("Loan_Lib_Num_details").toString(),
                            SchedName: "LoanReceived"
                        },
                        "success": callback,
                        "dataType": "json",
                        "type": "POST",
                        "error": function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                        }
                    });
                }
            });
            tableFilingTransactionsLoanReceived.column(0).visible(false);
            tableFilingTransactionsLoanReceived.column(1).visible(false);
            tableFilingTransactionsLoanReceived.column(2).visible(false);
            tableFilingTransactionsLoanReceived.column(3).visible(false);
            tableFilingTransactionsLoanReceived.column(4).visible(false);
            tableFilingTransactionsLoanReceived.column(5).visible(false);
            tableFilingTransactionsLoanReceived.column(6).visible(false);
            tableFilingTransactionsLoanReceived.column(7).visible(false);
            tableFilingTransactionsLoanReceived.columns.adjust().draw(false);
            $m('#gridLoanRepayLoanRec').DataTable().ajax.reload();
            tableFilingTransactionsLoanReceived.search('').columns().search('').draw();

            // Bind All Loan Repayment
            tableFilingTransactionsLoanRepay = $m('#gridLoanRecLoanRepay').DataTable({
                "bProcessing": true,
                "responsive": true,
                "deferRender": true,
                "retrieve": true,
                "columnDefs": [
                    {
                        "targets": [0, 1, 2, 3, 4, 5, 6, 7],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        "targets": [9],
                        "fnCreatedCell": function (cell) {
                            cell.setAttribute('aria-label', "Row Actions");
                        }
                    }
                ],
                "initComplete": function (settings, json) {
                    //Accessibility: Applies various Accessibility features to this dataTable.
                    makeDataTableAccessible($m('#gridLoanRecLoanRepay').DataTable());
                },
                "fnServerData": function (url, data, callback) {
                    $.ajax({
                        "url": "@Url.Content("~/LoanReceivedSchedI/GetLoanReceived_LoanRepaymentData/")",
                        "data": {
                            loan_Lib_Num: sessionStorage.getItem("Loan_Lib_Num_details").toString(),
                            SchedName: "LoanRepayment",
                        },
                        "success": callback,
                        "dataType": "json",
                        "type": "POST",
                        "error": function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                        }
                    });
                }
            });
            tableFilingTransactionsLoanRepay.column(0).visible(false);
            tableFilingTransactionsLoanRepay.column(1).visible(false);
            tableFilingTransactionsLoanRepay.column(2).visible(false);
            tableFilingTransactionsLoanRepay.column(3).visible(false);
            tableFilingTransactionsLoanRepay.column(4).visible(false);
            tableFilingTransactionsLoanRepay.column(5).visible(false);
            tableFilingTransactionsLoanRepay.column(6).visible(false);
            tableFilingTransactionsLoanRepay.column(7).visible(false);
            tableFilingTransactionsLoanRepay.columns.adjust().draw(true);
            $m('#gridLoanRecLoanRepay').DataTable().ajax.reload();
            tableFilingTransactionsLoanRepay.search('').columns().search('').draw();

            //Bind All Outstanding Loan
            tableFilingTransactionsOutStandingLoans = $m('#gridLoanRecOutStandingLoan').DataTable({
                "bProcessing": true,
                "responsive": true,
                "deferRender": true,
                "retrieve": true,
                "columnDefs": [
                    {
                        "targets": [0, 1, 2, 3, 4, 5, 6, 7],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        "targets": [2],
                        "fnCreatedCell": function (cell) {
                            cell.setAttribute('aria-label', "Row Actions");
                        }
                    }
                ],
                "initComplete": function (settings, json) {
                    //Accessibility: Applies various Accessibility features to this dataTable.
                    makeDataTableAccessible($m('#gridLoanRecOutStandingLoan').DataTable());
                },
                "fnRowCallback": function (nRow, aaData, iDisplayIndex) {
                    // come here
                    return nRow;
                },
                "fnServerData": function (url, data, callback) {
                    $.ajax({
                        "url": "@Url.Content("~/LoanReceivedSchedI/GetLoanReceived_LoanRepaymentData/")",
                        "data": {
                            loan_Lib_Num: sessionStorage.getItem("Loan_Lib_Num_details").toString(),
                            SchedName: "LoanLiabilities",
                        },
                        "success": callback,
                        "dataType": "json",
                        "type": "POST",
                        "error": function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                        }
                    });
                }
            });
            tableFilingTransactionsOutStandingLoans.column(0).visible(false);
            tableFilingTransactionsOutStandingLoans.column(1).visible(false);
            tableFilingTransactionsOutStandingLoans.column(2).visible(false);
            tableFilingTransactionsOutStandingLoans.column(3).visible(false);
            tableFilingTransactionsOutStandingLoans.column(4).visible(false);
            tableFilingTransactionsOutStandingLoans.column(5).visible(false);
            tableFilingTransactionsOutStandingLoans.column(6).visible(false);
            tableFilingTransactionsOutStandingLoans.column(7).visible(false);
            tableFilingTransactionsOutStandingLoans.columns.adjust().draw(true);
            $m('#gridLoanRecOutStandingLoan').DataTable().ajax.reload();
            tableFilingTransactionsOutStandingLoans.search('').columns().search('').draw();

            //Get Loan Outstanding balance
            $.post("@Url.Content("~/LoanReceivedSchedI/GetLoanOutstandingBalance/")", {
                loan_Lib_Number: sessionStorage.getItem("Loan_Lib_Num_details").toString(),
            }, function (result) {
                    $("#lbl_UC_OutstandingBalance").text("Outstanding Amount: $" + result.toString());
            });

            // Bind All Loan Forgiven
            tableFilingTransactionsLoanForgiven = $m('#gridLoanRecLoanForgiven').DataTable({
                "bProcessing": true,
                "responsive": true,
                "deferRender": true,
                "retrieve": true,
                "columnDefs": [
                    {
                        "targets": [0, 1, 2, 3, 4, 5, 6, 7],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        "targets": [8],
                        "fnCreatedCell": function (cell) {
                            cell.setAttribute('aria-label', "Row Actions");
                        }
                    },
                ],
                "initComplete": function (settings, json) {
                    //Accessibility: Applies various Accessibility features to this dataTable.
                    makeDataTableAccessible($m('#gridLoanRecLoanForgiven').DataTable());
                },
                "fnServerData": function (url, data, callback) {
                    $.ajax({
                        "url": "@Url.Content("~/LoanReceivedSchedI/GetLoanReceived_LoanForgivenData/")",
                        "data": {
                            loan_Lib_Num: sessionStorage.getItem("Loan_Lib_Num_details").toString(),
                            SchedName: "LoanForgiven",
                        },
                        "success": callback,
                        "dataType": "json",
                        "type": "POST",
                        "error": function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                        }
                    });
                }
            });
            tableFilingTransactionsLoanForgiven.column(0).visible(false);
            tableFilingTransactionsLoanForgiven.column(1).visible(false);
            tableFilingTransactionsLoanForgiven.column(2).visible(false);
            tableFilingTransactionsLoanForgiven.column(3).visible(false);
            tableFilingTransactionsLoanForgiven.column(4).visible(false);
            tableFilingTransactionsLoanForgiven.column(5).visible(false);
            tableFilingTransactionsLoanForgiven.column(6).visible(false);
            tableFilingTransactionsLoanForgiven.column(7).visible(false);
            tableFilingTransactionsLoanForgiven.columns.adjust().draw(true);
            $m('#gridLoanRecLoanForgiven').DataTable().ajax.reload();
            tableFilingTransactionsLoanForgiven.search('').columns().search('').draw();

            $('html, body').animate({ scrollTop: $("#divUCLoanRepayLoanRec").offset().top }, 500);
         });
         // Show Loan Details Link -----END-----------------------------------------------------------------------------
    });
</script>