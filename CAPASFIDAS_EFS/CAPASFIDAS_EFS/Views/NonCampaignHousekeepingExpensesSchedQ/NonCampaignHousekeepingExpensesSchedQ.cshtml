@{
    ViewBag.Title = ": Non-Campaign Housekeeping Expenses Schedule Q";
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
}

<form id="NonCampaignHousekeepingExpensesSchedQForm">

    @Html.Partial("UserControls/_UC_Alert_Message")
    @Html.Partial("UserControls/_UC_Delete_Message")

    <div id="divMainNew" class="mainDiv">
        <div class="mainLowerDivCSSDesktop">
            <div id="divhide" class="hideShowButtonCSS">
                Filter
                <button id="btnCommonShowHide1" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonShowHide">
                    <img src="~/Content/Images/up20.png" alt="Up/Hide Filter Arrow" />
                </button>
            </div>
            <div id="divshow" class="hideShowButtonCSS">
                Filter
                <button id="btnCommonHideShow1" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonHideShow">
                    <img src="~/Content/Images/down20.png" alt="Down/Show Filter Arrow" />
                </button>
            </div>
        </div>
        <div class="mainLowerDivCSS">
            <div id="divhideForMobile" class="hideShowButtonCSS">
                File a New Disclosure Report
                <div class="paddingleft6emcss floatRight">
                    Filter
                    <button id="btnCommonShowHide2" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonShowHide">
                        <img src="~/Content/Images/up20.png" alt="Up/Hide Filter Arrow" />
                    </button>
                </div>
            </div>
            <div id="divshowForMobile" class="hideShowButtonCSS">
                File a New Disclosure Report
                <div class="paddingleft6emcss floatRight">
                    Filter
                    <button id="btnCommonHideShow2" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonHideShow">
                        <img src="~/Content/Images/down20.png" alt="Down/Show Filter Arrow" />
                    </button>
                </div>
            </div>
        </div>
        <div id="divTopSection">
            <div id="selectorItsRpt">
                <div class="divWidth">
                    <fieldset>
                        <legend class="visibleToScreenReaderOnly">Filter Controls Top</legend>
                        <div class="floatRightNew clsShowButtonClass">
                            <input type="button" id="btnCommonSearch1" class="btn btn-default clsCommonSearch clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Apply" title="Apply" style="font-size:12px;" />&nbsp;
                            <input type="button" id="btnCommonClear1" class="btn btn-default clsCommonClear ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />&nbsp;
                            <button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelp();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" class="ButtonImageCSS" title="Help" id="imgHelp1" /></button>
                        </div>
                    </fieldset>
                    <div class="requiredTextFilter">* marks required fields</div>
                    <div id="divFilerID">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilerID">* Filer ID</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("txtFilerID", ViewData["txtFilerID"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblFilerID" })
                        </div>
                    </div>
                    <div id="divFilerType">
                        <div class="verticalCSSDestop lblCSS"><span id="lblFilerType">* Filer Type</span></div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.TextBox("txtFilerType", null, new { id = "txtFilerType", @class = "txtWidth txtReportPeriodDatesFrom", aria_labelledby = "lblFilerType" })
                        </div>
                    </div>
                    <div id="divCommitteeName">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblCommitteeName">* Candidate/Committee Name</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("txtCommitteeName", ViewData["txtCommitteeName"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblCommitteeName" })
                        </div>
                    </div>
                    <div id="divElectionCycle">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblElectionCycle">* Report Year</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstElectionCycle", ViewData["lstElectionCycle"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblElectionCycle" })
                        </div>
                    </div>
                    <div id="divOfficeType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblOfficeType">* Election Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstUCOfficeType", null, "- Select -", new { id = "lstUCOfficeType", @class = "spanMobileWidth", aria_labelledby = "lblOfficeType" })
                        </div>
                    </div>
                    <div id="divCounty">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblCounty">* County</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstUCCounty", null, "- Select -", new { @class = "spanMobileWidth", aria_labelledby = "lblCounty" })
                        </div>
                    </div>
                    <div id="divMunicipality">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblMunicipality">* Municipality</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstUCMuncipality", null, "- Select -", new { @class = "spanMobileWidth", aria_labelledby = "lblMunicipality" })
                        </div>
                    </div>
                    <div id="divElectionType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblElectionType">* Report Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstElectionType", ViewData["lstElectionType"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby="lblElectionType" })
                        </div>
                    </div>
                    <div id="divElectionDate">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblElectionDate">* Election Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstElectionDate", ViewData["lstElectionDate"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblElectionDate" })
                        </div>
                    </div>
                    <div id="divDisclosureType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblDisclosureType">* Disclosure Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstDisclosureType", ViewData["lstDisclosureType"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblDisclosureType" })
                        </div>
                    </div>
                    <div id="divDisclosurePeriod">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblDisclosurePeriod">* Disclosure Period</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstDisclosurePeriod", null, new { @class = "spanMobileWidth", aria_labelledby = "lblDisclosurePeriod" })
                        </div>
                    </div>
                    <div id="divReportPeriodDates">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblReportPeriodDatesFrom">* Cut off Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.TextBox("searchTerm", null, new { id = "txtReportPeriodDatesFrom", @class = "txtWidth", aria_labelledby = "lblReportPeriodDatesFrom" })
                        </div>
                    </div>
                    <div id="divFilingDateDropDown">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilingDate">* Filing Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstFilingDate", ViewData["lstFilingDate"] as SelectList, "- Select -", new { @class = "spanMobileWidth lstFilingDate", aria_labelledby = "lblFilingDate" })
                        </div>
                    </div>
                    <div id="divReportPeriodDatesTo">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblReportPeriodDatesTo">* Filing Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.TextBox("searchTerm", null, new { id = "txtReportPeriodDatesTo", @class = "txtWidth", aria_labelledby = "lblReportPeriodDatesTo" })
                        </div>
                    </div>

                    @* OFFICE CYCLE FILING DATE *@
                    <div id="divFilingDateOffCycle">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilingDateOffCycle">* New Filing Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            <input type="text" id="txtNewFilingDate" name="txtNewFilingDate" class="txtWidth txtCurrentDateCls" maxlength="10" aria-labelledby = "lblFilingDateOffCycle" />
                        </div>
                    </div>
                    @* OFFICE CYCLE FILING DATE *@

                    <div id="divFilingReason">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblReasonforFiling">Resignation/Termination</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstResigTermType", ViewData["lstResigTermType"] as SelectList, "- Select -", new { @class = "spanMobileWidth lstResigTermType", aria_labelledby = "lblReasonforFiling" })
                        </div>
                    </div>
                    <div class="floatRightNew" style="padding-bottom: 2em;">
                        <fieldset>
                            <legend class="visibleToScreenReaderOnly">Filter Controls Bottom</legend>
                            <input type="button" id="btnCommonSearch2" class="btn btn-default clsCommonSearch ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Apply" title="Search" style="font-size:12px;" />&nbsp;
                            <input type="button" id="btnCommonClear2" class="btn btn-default clsCommonClear ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />&nbsp;
                            <button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelp();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" class="ButtonImageCSS" title="Help" id="imgHelp2" /></button>
                        </fieldset>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="floatRight paddingRight3em paddingTop0pt6em">
        <p><button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelpSchedQ();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" class="ButtonImageCSS" title="Help Schedule Q" id="imgHelp3" /></button></p>
    </div>

    <div id="divBreadCrumb" class="breadCrumbDivCSS" style="width: 46em;">
        <nav aria-label="Breadcrumbs" id="pBreadCrumb" class="FontSizeCss displayInline">
            <ol class="breadcrumb">
                <li>@Html.ActionLink("File a Disclosure Report", "ContributionsMonetary", "ContributionsMonetary", null, new { @class = "lnkLogout" })</li>
                <li class="active">Non-Campaign HouseKeeping Expenses</li>
            </ol>
        </nav>
        <div class="paddingtoppt5" style="width: 170%;">
            <h1>
                <span id="lblHeader1" >File a Disclosure Report</span> -
                <span id="lblHEleYear" >File a Disclosure Report</span> -
                <span id="lblHDisclPer" >File a Disclosure Report</span>
            </h1>
        </div>
        <div class="paddingtoppt5 PageHeaderWidth">
            <div class="paddingTop0em2em DisplayInlineBlock">
                <h2><span id="lblHeader2">Non-Campaign HouseKeeping Expenses</span></h2>
            </div>
        </div>
    </div>
    <div id="divGrid" class="divGridCSSTransferin">
        @Html.Partial("UserControls/_UC_Loding")
        @Html.Partial("UserControls/_UC_GridCommonControl")
    </div>
    @*// Grid Reimbursement Details Data.*@
    <div id="divShowReimbursement" class="divGridCSS">
        <div class="paddingLeft2em paddingtop2em">
            <h2>Reimbursement Details</h2>
        </div>
        <div class="paddingLeft2em" style="margin-bottom: 0.25em;">
            <button id="btnAddNewReimbursement" type="button" class="btn btn-default">Add Details</button>
            <span id="lblReimbursementAmt" class="clsOutstandingAmt" style="float:right; margin-right: 4em;">Outstanding Amount: </span>
        </div>
        <div id="divGridReimbursement" class="paddingTop0pt6em">
            <table id="gridReimbursementSchedQ" class="table-bordered display nowrap" style="width:100%; border-spacing: 0px;">
                <thead id="thdGrid_gridReimbursementSchedQ" class="header">
                    <tr>
                        <th class="never">Filing Trans Id</th> @* 0 *@
                        <th class="never">Filing Entity Id</th> @* 1 *@
                        <th class="never">PurposeCodeId</th> @* 2 *@
                        <th>Expand</th> @* 3 *@
                        <th>Action</th> @* 4 *@
                        <th>Date Paid</th> @* 5 *@
                        <th>Original Payee Name</th> @* 6 *@
                        <th>Details Payee Name</th> @* 7 *@
                        <th>Country</th> @* 8 *@
                        <th>Street Address</th> @* 9 *@
                        <th>City</th> @* 10 *@
                        <th>State</th> @* 11 *@
                        <th>Zip Code</th> @* 12 *@
                        <th>Purpose Code</th> @* 13 *@
                        <th>Amount</th> @* 14 *@
                        <th>Explanation</th> @* 15 *@
                        <th>Itemized</th> @* 16 *@
                        <th class="never">Trans Number</th> @* 17 *@
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>

    @*// Grid Credit Card Payment Data.*@
    <div id="divShowCreditCardPayment" class="divGridCSS">
        <div class="paddingLeft2em paddingtop2em">
            <h2>Credit Card Itemization</h2>
        </div>
        <div class="paddingLeft2em" style="margin-bottom: 0.25em;">
            <button id="btnAddNewCreditCardItemization" type="button" class="btn btn-default">Add Itemization</button>
            <span id="lblBalanceCCIAmt" class="clsOutstandingAmt" style="float:right; margin-right: 4em;">Outstanding Amount: </span>
        </div>
        <div id="divGridCreditCardPayment" class="paddingTop0pt6em">
            <table id="gridCreditCardPaymentSchedF" class="table-bordered display nowrap" style="width:100%; border-spacing: 0px;">
                <thead id="thdGrid_gridCreditCardPaymentSchedF" class="header">
                    <tr>
                        <th class="never">Filing Trans Id</th> @* 0 *@
                        <th class="never">Filing Entity Id</th> @* 1 *@
                        <th class="never">Purpose Code Id</th> @* 2 *@
                        <th>Expand</th> @* 3 *@
                        <th>Action</th> @* 4 *@
                        <th>Date Paid</th> @* 5 *@
                        <th>Original Payee Name</th> @* 6 *@
                        <th>Detail Payee Name</th> @* 7 *@
                        <th>Country</th> @* 8 *@
                        <th>Street Address</th> @* 9 *@
                        <th>City</th> @* 10 *@
                        <th>State</th> @* 11 *@
                        <th>Zip Code</th> @* 12 *@
                        <th>Purpose Code</th> @* 13 *@
                        <th>Amount</th> @* 14 *@
                        <th>Explanation</th> @* 15 *@
                        <th>Itemized</th> @* 16 *@
                        <th class="never">Trans Number</th> @* 17 *@
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</form>

<div id="dialog-form_Sched_Q" title="Add/Edit Transaction">
    <form id="DialogBoxSchedQForm">
        <div class="divWidthSchedABC">
            <div style="width: 100%">
                <div class="requiredTextDialogs">Required fields are marked with an *</div>
                <div id="dvUnitemized_DialogBoxSchedQForm">
                    <div class="verticalCSSDestopForLblLSC lblCSSAdd">
                        <span id="lblDatePaid_DialogBoxSchedQForm">Is Transaction Itemized?</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxLSC DDLCSSAdd">
                        @Html.DropDownList("lstItemized", ViewData["lstItemized"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblDatePaid_DialogBoxSchedQForm" })
                    </div>
                </div>

                <div id="tdDateRcvdExpenditurePayments">
                    <div id="txtCurrentDateSchedQ_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblDateReceived_DialogBoxSchedQForm">* Date Paid</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        <input type="text" id="txtCurrentDateSchedQ" name="txtCurrentDateSchedQ" class="datepicker txtWidthForDateSched_ABC txtCurrentDateSchedQCls" maxlength="10" aria-labelledby = "lblDateReceived_DialogBoxSchedQForm" />
                    </div>
                </div>

                <div id="tdPayorNameExpenditurePayments">
                    <div id="txtPayeeName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblPayeeName_DialogBoxSchedQForm">* Payee Name</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtPayeeName", null, new { id = "txtPayeeName", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "40", aria_labelledby = "lblPayeeName_DialogBoxSchedQForm" })
                    </div>
                </div>

                <div id="tdCountryContributionChk">
                    <div class="verticalCSSDestopForLableSched_ABC lblCSSAdd">
                        <span id="lblOtherCountry_DialogBoxSchedQForm">Other Country</span>
                    </div>
                    <div class="verticalCSSDestopForCheckBoxSched_ABC DDLCSSAdd">
                        @Html.CheckBox("chkCountry", false, new { @class = "txtWidthForDialogSched_ABC_CountryChkbox", aria_labelledby = "lblOtherCountry_DialogBoxSchedQForm" })
                    </div>
                </div>
                <div id="tdCountryContributionTxt" class="divClearBoth">
                    <div id="txtCountry_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSched_ABC lblCSSAdd">
                        <span id="lblCountry_DialogBoxSchedQForm">* Country</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSched_ABC DDLCSSAdd">
                        @Html.TextBox("txtCountry", null, new { id = "txtCountry", @class = "txtWidthForDialogSched_A required", @maxlength = "30", aria_labelledby = "lblCountry_DialogBoxSchedQForm" })
                    </div>
                </div>

                @*@Html.Partial("UserControls/_UC_Address")*@

                <div id="divStreetAddress">
                    <div id="txtStreetName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblStreetName_DialogBoxSchedQForm">* Street Address</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtStreetName", null, new { id = "txtStreetName", @class = "txtWidthForDialogSched_A", @maxlength = "60", aria_labelledby = "lblStreetName_DialogBoxSchedQForm" })
                    </div>
                </div>

                <div id="divCity">
                    <div id="txtCity_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblCity_DialogBoxSchedQForm">* City</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtCity", null, new { id = "txtCity", @class = "txtWidthForDialogSched_A", @maxlength = "30", aria_labelledby = "lblCity_DialogBoxSchedQForm" })
                    </div>
                </div>

                <div id="divState">
                    <div id="txtState_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblState_DialogBoxSchedQForm">* State</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtState", null, new { id = "txtState", @class = "txtWidthForDialogSched_A", @maxlength = "2", aria_labelledby = "lblState_DialogBoxSchedQForm" })
                    </div>
                </div>

                <div id="divZip5">
                    <div id="txtZipCode_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblZip5_DialogBoxSchedQForm">* Zip Code</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtZipCode", null, new { id = "txtZipCode", @class = "txtWidthForDialogSched_A", @maxlength = "10", aria_labelledby = "lblZip5_DialogBoxSchedQForm" })
                    </div>
                </div>

                <div id="tdPurposeCodeExpenditurePayments">
                    <div id="lstPurposeCode_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblPurposeName_DialogBoxSchedQForm">* Purpose Code</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstPurposeCode", ViewData["lstPurposeCode"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblPurposeName_DialogBoxSchedQForm" })
                    </div>
                </div>

                <div id="tdMethodNonHouseKeepingScheP">
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblMethod_DialogBoxSchedQForm">* Method</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstMethod", ViewData["lstMethod"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblMethod_DialogBoxSchedQForm" })
                    </div>
                </div>

                <div id="tdCheck">
                    <div id="txtCheck_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblCheck_DialogBoxSchedQForm">* Check #</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtCheck", null, new { id = "txtCheck", @class = "txtWidthForDialogSched_A required", @maxlength = "30", aria_labelledby = "lblCheck_DialogBoxSchedQForm" })
                    </div>
                </div>

                <div id="tdAmt" class="divClearBoth">
                    <div id="txtAmtSchedQ_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblAmount_DialogBoxSchedQForm">* Amount $</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtAmtSchedQ", null, new { id = "txtAmtSchedQ", @class = "txtWidthForDialogSched_A required", @maxlength = "12", aria_required = "true", aria_labelledby = "lblAmount_DialogBoxSchedQForm" })
                    </div>
                </div>

                <div id="tdExplanation">
                    <div id="txtExplanationSchedQ_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblExplanation">Explanation</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtExplanationSchedQ", null, new { id = "txtExplanationSchedQ", @class = "txtWidthForDialogSched_A", @maxlength = "250", aria_labelledby = "lblExplanation" })
                    </div>
                </div>

                <div id="AddUpdateBtnIdSchedP_DialogBoxSchedQForm" class="AddLeftCSSSchedABC">
                    <input type="button" id="btnSaveSchedQ" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Save" title="Save" style="font-size:12px;" />
                    <input type="button" id="btnClearDialog" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />
                    <input type="button" id="btnCloseDialog" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Close" title="Close" style="font-size:12px;" />
                </div>

            </div>
        </div>
    </form>
</div>

@* REIMBURSEMENT DETAILS FORM *@
<div id="dialog-form_Sched_Q_Reim" title="Add/Edit Reimbursement Details">
    <form id="DialogBoxSchedQReimForm">
        <div class="divWidthSchedABC">
            <div class="dvWidth100pt">
                <div class="requiredTextDialogs">Required fields are marked with an *</div>
                <div id="dvUnitemized">
                    <div class="verticalCSSDestopForLblLSC lblCSSAdd">
                        <span id="lblDatePaid_DialogBoxSchedQReimForm">Is Transaction Itemized?</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxLSC DDLCSSAdd">
                        @Html.DropDownList("lstItemizedReim", ViewData["lstItemizedReim"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblDatePaid_DialogBoxSchedQReimForm" })
                    </div>
                </div>

                <div id="tdDatePaidReim">
                    <div id="txtCurrentDateSchedQReim_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblDateReceived_DialogBoxSchedQReimForm">* Date Paid</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        <input type="text" id="txtCurrentDateSchedQReim" name="txtCurrentDateSchedQReim" class="datepicker txtWidthForDateSched_ABC txtCurrentDateSchedQCls" maxlength="10" aria-labelledby = "lblDateReceived_DialogBoxSchedQReimForm" />
                    </div>
                </div>

                <div id="tdOriginalPayeeName">
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblPayeeName_DialogBoxSchedQReimForm">Original Payee Name</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtOriginalPayeeName", null, new { id = "txtOriginalPayeeName", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "40", aria_labelledby = "lblPayeeName_DialogBoxSchedQReimForm" })
                    </div>
                </div>

                <div id="tdDetailsPayeeNameReim">
                    <div id="txtDetailsPayeeNameReim_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblDetailsPayeeNameReim">* Details Payee Name</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtDetailsPayeeNameReim", null, new { id = "txtDetailsPayeeNameReim", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "40", aria_labelledby = "lblDetailsPayeeNameReim" })
                    </div>
                </div>

                <div id="tdCountryContributionChkReim">
                    <div class="verticalCSSDestopForLableSched_ABC lblCSSAdd">
                        <span id="lblOtherCountry_DialogBoxSchedQReimForm">Other Country</span>
                    </div>
                    <div class="verticalCSSDestopForCheckBoxSched_ABC DDLCSSAdd">
                        @Html.CheckBox("chkCountryReim", false, new { @class = "txtWidthForDialogSched_ABC_CountryChkbox", aria_labelledby = "lblOtherCountry_DialogBoxSchedQReimForm" })
                    </div>
                </div>
                <div id="tdCountryContributionTxtReim" class="divClearBoth">
                    <div id="txtCountryReim_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSched_ABC lblCSSAdd">
                        <span id="lblCountry_DialogBoxSchedQReimForm">* Country</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSched_ABC DDLCSSAdd">
                        @Html.TextBox("txtCountryReim", null, new { id = "txtCountryReim", @class = "txtWidthForDialogSched_A required", @maxlength = "30", aria_labelledby = "lblCountry_DialogBoxSchedQReimForm" })
                    </div>
                </div>

                <div id="divStreetAddressReim">
                    <div id="txtStreetNameReim_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblStreetName_DialogBoxSchedQReimForm">Street Address</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtStreetNameReim", null, new { id = "txtStreetNameReim", @class = "txtWidthForDialogSched_A", @maxlength = "60", aria_labelledby = "lblStreetName_DialogBoxSchedQReimForm" })
                    </div>
                </div>

                <div id="divCityReim">
                    <div id="txtCityReim_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblCity_DialogBoxSchedQReimForm">City</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtCityReim", null, new { id = "txtCityReim", @class = "txtWidthForDialogSched_A", @maxlength = "30", aria_labelledby = "lblCity_DialogBoxSchedQReimForm" })
                    </div>
                </div>

                <div id="divStateReim">
                    <div id="txtStateReim_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblState_DialogBoxSchedQReimForm">State</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtStateReim", null, new { id = "txtStateReim", @class = "txtWidthForDialogSched_A", @maxlength = "2", aria_labelledby = "lblState_DialogBoxSchedQReimForm" })
                    </div>
                </div>

                <div id="divZip5Reim">
                    <div id="txtZipCodeReim_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblZip5_DialogBoxSchedQReimForm">Zip Code</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtZipCodeReim", null, new { id = "txtZipCodeReim", @class = "txtWidthForDialogSched_A", @maxlength = "10", aria_labelledby = "lblZip5_DialogBoxSchedQReimForm" })
                    </div>
                </div>

                <div id="tdPurposeCodeReim">
                    <div id="lstPurposeCodeReim_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblPurposeName_DialogBoxSchedQReimForm">* Purpose Code</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstPurposeCodeReim", ViewData["lstPurposeCodeReim"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblPurposeName_DialogBoxSchedQReimForm" })
                    </div>
                </div>

                <div id="tdAmtReim" class="divClearBoth">
                    <div id="txtAmtReim_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblAmount">* Amount $</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtAmtReim", null, new { id = "txtAmtReim", @class = "txtWidthForDialogSched_A required", @maxlength = "12", aria_required = "true", aria_labelledby = "lblAmount" })
                    </div>
                </div>

                <div id="tdExplanationReim">
                    <div id="txtExplanationSchedQReim_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblExplanationReim">Explanation</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtExplanationSchedQReim", null, new { id = "txtExplanationSchedQReim", @class = "txtWidthForDialogSched_A", @maxlength = "250", aria_labelledby = "lblExplanationReim" })
                    </div>
                </div>

                <div id="AddUpdateBtnIdSchedP_DialogBoxSchedQReimForm" class="AddLeftCSSSchedABC">
                    <input type="button" id="btnSaveSchedQReim" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Save" title="Save" style="font-size:12px;" />
                    <input type="button" id="btnUpdateSchedQReim" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Save" title="Save" style="font-size:12px;" />
                    <input type="button" id="btnClearDialogReim" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />
                    <input type="button" id="btnCloseDialogReim" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Close" title="Close" style="font-size:12px;" />
                </div>

            </div>
        </div>
    </form>
</div>

@* CREDIT CARD ITEMIZATION FORM *@
<div id="dialog-form_Sched_Q_CCI" title="Add/Edit Credit Card Itemization">
    <form id="DialogBoxSchedQCCIForm">
        <div class="divWidthSchedABC">
            <div class="dvWidth100pt">
                <div class="requiredTextDialogs">Required fields are marked with an *</div>
                <div id="dvItemizedCCI">
                    <div class="verticalCSSDestopForLblLSC lblCSSAdd">
                        <span id="lblItemizedCCItem_DialogBoxSchedQCCIForm">Is Transaction itemized?</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxLSC DDLCSSAdd">
                        @Html.DropDownList("lstItemizedCCI", ViewData["lstItemizedCCI"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblItemizedCCItem_DialogBoxSchedQCCIForm" })
                    </div>
                </div>

                <div id="tdDatePaidCCI">
                    <div id="txtCurrentDateSchedQCCI_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblDateReceived">* Date Paid</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        <input type="text" id="txtCurrentDateSchedQCCI" name="txtCurrentDateSchedQCCI" class="datepicker txtWidthForDateSched_ABC txtCurrentDateSchedQCls" maxlength="10" aria-labelledby = "lblDateReceived" />
                    </div>
                </div>

                <div id="tdPayeeNameOrgCCI">
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblPayeeNameOrg_DialogBoxSchedQCCIForm">Original Payee Name</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtOriginalPayeeNameCCI", null, new { id = "txtOriginalPayeeNameCCI", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "40", aria_labelledby = "lblPayeeNameOrg_DialogBoxSchedQCCIForm" })
                    </div>
                </div>
                <div id="tdPayeeNameCCI">
                    <div id="txtDetailsPayeeNameCCI_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblPayeeName_DialogBoxSchedQCCIForm">* Detail Payee Name</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtDetailsPayeeNameCCI", null, new { id = "txtDetailsPayeeNameCCI", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "40", aria_labelledby = "lblPayeeName_DialogBoxSchedQCCIForm" })
                    </div>
                </div>

                <div id="tdCountryContributionChkCCI">
                    <div class="verticalCSSDestopForLableSched_ABC lblCSSAdd">
                        <span id="lblOtherCountry_DialogBoxSchedQCCIForm">Other Country</span>
                    </div>
                    <div class="verticalCSSDestopForCheckBoxSched_ABC DDLCSSAdd">
                        @Html.CheckBox("chkCountryCCI", false, new { @class = "txtWidthForDialogSched_ABC_CountryChkbox", aria_labelledby = "lblOtherCountry_DialogBoxSchedQCCIForm" })
                    </div>
                </div>
                <div id="tdCountryContributionTxtCCI" class="divClearBoth">
                    <div id="txtCountryCCI_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSched_ABC lblCSSAdd">
                        <span id="lblCountry_DialogBoxSchedQCCIForm">* Country</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSched_ABC DDLCSSAdd">
                        @Html.TextBox("txtCountryCCI", null, new { id = "txtCountryCCI", @class = "txtWidthForDialogSched_A required", @maxlength = "30", aria_labelledby = "lblCountry_DialogBoxSchedQCCIForm" })
                    </div>
                </div>

                <div id="divStreetAddressCCI">
                    <div id="txtStreetNameCCI_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblStreetName_DialogBoxSchedQCCIForm">Street Address</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtStreetNameCCI", null, new { id = "txtStreetNameCCI", @class = "txtWidthForDialogSched_A", @maxlength = "60", aria_labelledby = "lblStreetName_DialogBoxSchedQCCIForm" })
                    </div>
                </div>

                <div id="divCityCCI">
                    <div id="txtCityCCI_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblCity_DialogBoxSchedQCCIForm">City</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtCityCCI", null, new { id = "txtCityCCI", @class = "txtWidthForDialogSched_A", @maxlength = "30", aria_labelledby = "lblCity_DialogBoxSchedQCCIForm" })
                    </div>
                </div>

                <div id="divStateCCI">
                    <div id="txtStateCCI_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblState_DialogBoxSchedQCCIForm">State</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtStateCCI", null, new { id = "txtStateCCI", @class = "txtWidthForDialogSched_A", @maxlength = "2", aria_labelledby = "lblState_DialogBoxSchedQCCIForm" })
                    </div>
                </div>

                <div id="divZip5CCI">
                    <div id="txtZipCodeCCI_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblZip5_DialogBoxSchedQCCIForm">Zip Code</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtZipCodeCCI", null, new { id = "txtZipCodeCCI", @class = "txtWidthForDialogSched_A", @maxlength = "10", aria_labelledby = "lblZip5_DialogBoxSchedQCCIForm" })
                    </div>
                </div>

                <div id="tdPurposeCodeItemization">
                    <div id="lstPurposeCodeCCI_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblPurposeName_DialogBoxSchedQCCIForm">* Purpose Code</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstPurposeCodeCCI", ViewData["lstPurposeCodeCCI"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblPurposeName_DialogBoxSchedQCCIForm" })
                    </div>
                </div>
                <div id="tdAmtCCI">
                    <div id="txtAmountCCI_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblAmtAttributed_DialogBoxSchedQCCIForm">* Amount</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtAmountCCI", null, new { id = "txtAmountCCI", @class = "txtWidthForDialogSched_A required", @maxlength = "12", aria_required = "true", aria_labelledby = "lblAmtAttributed_DialogBoxSchedQCCIForm" })
                    </div>
                </div>

                <div id="tdExplanationCCI">
                    <div id="txtExplanationCCI_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblExplanationCCI">Explanation</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtExplanationCCI", null, new { id = "txtExplanationCCI", @class = "txtWidthForDialogSched_A", @maxlength = "250", aria_labelledby = "lblExplanationCCI" })
                    </div>
                </div>

                <div id="AddUpdateBtnIdSchedP_DialogBoxSchedQCCIForm" class="AddLeftCSSSchedABC">
                    <input type="button" id="btnSaveSchedQCCItem" class="btn btn-default clsSetPreserences clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Save" title="Save" style="font-size:12px;" />
                    <input type="button" id="btnUpdateSchedQCCItem" class="btn btn-default clsSetPreserences clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Save" title="Save" style="font-size:12px;" />
                    <input type="button" id="btnClearDialogSchedQCCItem" class="btn btn-default clsSetPreserences clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />
                    <input type="button" id="btnCloseDialogSchedQCCItem" class="btn btn-default clsSetPreserences clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Close" title="Close" style="font-size:12px;" />
                </div>
            </div>
        </div>
    </form>
</div>
<script>
    $m = jQuery.noConflict();

    function CallHelpSchedQ() {

        var myWidth = 1050;
        var myHeight = 550;

        var left = (screen.width - myWidth) / 2;
        var top = (screen.height - myHeight) / 4;

        window.open("../../NonCampaignHousekeepingExpensesSchedQ/GetScheduleQHelpPopUp", "Help", 'width=550, height=600,scrollbars=1, width=' + myWidth + ', height=' + myHeight + ', top=' + top + ', left=' + left);
    }

    $('#menuNav').css('opacity', 0);
    $('#NonCampaignHousekeepingExpensesSchedQForm').css('opacity', 0);
    $('#DialogBoxSchedQForm').css('opacity', 0);
    $('#DialogBoxSchedQReimForm').css('opacity', 0);
    $('#DialogBoxSchedQCCIForm').css('opacity', 0);
    $('#divWelcomeBanner').css('opacity', 0);
    $(window).on('load', function () {
        $('#menuNav').css('opacity', 1);
        $('#NonCampaignHousekeepingExpensesSchedQForm').css('opacity', 1);
        $('#DialogBoxSchedQForm').css('opacity', 1);
        $('#DialogBoxSchedQReimForm').css('opacity', 1);
        $('#DialogBoxSchedQCCIForm').css('opacity', 1);
        $('#divWelcomeBanner').css('opacity', 1);
    });

    $m(document).ready(function () {

        // FORM VALIDATION SCHEDULE 'A' JQUERY VALIDATOR
        //----------------------------------------------------------------------------------------------------------------------------------------------


        // Common Function in EFS-Validation.js file - Start
        validatePage("DialogBoxSchedQForm");
        ValidateReimburesementDetails("DialogBoxSchedQReimForm");
        ValidateCreditCardItemization("DialogBoxSchedQCCIForm");
        LefthandFilterValues();
        // Common Function in EFS-Validation.js file - ENd
        // JQUERY VALIDATITON REGULAR EXPRESSIONS.
        //----------------------------------------------------------------------------------------------------------------------------------------------

        var tableReimbursement = '';
        var tableCreditCardPayment = '';

        // Hide Reimbursement Details.
        $("#divShowReimbursement").hide();
        // Hide Credit card Itemization
        $("#divShowCreditCardPayment").hide();

        // Hide Credit Card Itemization.

        /// Dialog Box Code /////////////////////////////////////////////////////////////////////

        var dialog_Sched_Q;

        // FILING TRANSACTIONS DIALOG BOX
        dialog_Sched_Q = $m("#dialog-form_Sched_Q").dialog({
            autoOpen: false,
            resizable: true,
            height: 'auto',
            width: 450,
            position: {
                my: "center top",
                at: "center top+200"
            },
            modal: true,
            resizable: false,
            closeOnEscape: false,
            open: function (event, ui) { hideDialogXButton(this); }
        });

        // FILING TRANSACTION DIALOG BOX
        $(window).resize(function () {
            //// get the screen height and width
            if ($(window).width() < 500) {
                dialog_Sched_Q = $m("#dialog-form_Sched_Q").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 300,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 500 && $(window).width() <= 900) {
                dialog_Sched_Q = $m("#dialog-form_Sched_Q").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 456,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 900) {
                dialog_Sched_Q = $m("#dialog-form_Sched_Q").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 456,
                    modal: true,
                    dialogClass: 'DialogCustomStyle',
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
        }).resize();

        var dialog_Sched_Q_Reim;

        // FILING TRANSACTIONS DIALOG BOX
        dialog_Sched_Q_Reim = $m("#dialog-form_Sched_Q_Reim").dialog({
            autoOpen: false,
            height: 'auto',
            width: 450,
            position: {
                my: "center top",
                at: "center top+220"
            },
            modal: true,
            resizable: false,
            closeOnEscape: false,
            open: function (event, ui) { hideDialogXButton(this); }
        });

        // FILING TRANSACTION DIALOG BOX
        $(window).resize(function () {
            //// get the screen height and width
            if ($(window).width() < 500) {
                ddialog_Sched_Q_Reim = $m("#dialog-form_Sched_Q_Reim").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 300,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 500 && $(window).width() <= 900) {
                dialog_Sched_Q_Reim = $m("#dialog-form_Sched_Q_Reim").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 456,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 900) {
                dialog_Sched_Q_Reim = $m("#dialog-form_Sched_Q_Reim").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 456,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
        }).resize();

        // Credit Card Itemization.
        var dialog_Sched_Q_CCI;

        // FILING TRANSACTIONS DIALOG BOX
        dialog_Sched_Q_CCI = $m("#dialog-form_Sched_Q_CCI").dialog({
            autoOpen: false,
            height: 'auto',
            width: 450,
            position: {
                my: "center top",
                at: "center top+220"
            },
            modal: true,
            resizable: false,
            closeOnEscape: false,
            open: function (event, ui) { hideDialogXButton(this); }
        });

        // FILING TRANSACTION DIALOG BOX
        $(window).resize(function () {
            //// get the screen height and width
            if ($(window).width() < 500) {
                dialog_Sched_Q_CCI = $m("#dialog-form_Sched_Q_CCI").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 300,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 500 && $(window).width() <= 900) {
                dialog_Sched_Q_CCI = $m("#dialog-form_Sched_Q_CCI").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 456,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 900) {
                dialog_Sched_Q_CCI = $m("#dialog-form_Sched_Q_CCI").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 456,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
        }).resize();


        // Auto Complete
        //----------------------------------------------------------------------------------------------------------------------------------------------
        // Payee Name
        $m("#txtPayeeName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/AutoCompleteEntityName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();

                var selectedValue = ui.item.label;
                $.ajax({
                    url: "@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/GetAutoCompleteNameData/")",
                    dataType: "json",
                    data: {
                        strValue: selectedValue.toString()
                    },
                    success: function (results) {
                        $.each(results, function (i, item) {
                            $("#txtPayeeName").val(item.FilingEntityName.toString());
                            $("#txtStreetName").val(item.FilingEntityStreetName.toString());
                            $("#txtCity").val(item.FilingEntityCity.toString());
                            $("#txtState").val(item.FilingEntityState.toString());
                            $("#txtZipCode").val(item.FilingEntityZip.toString());
                            $("#txtCountry").val(item.FilingEntityCountry.toString());
                            if ($("#txtCountry").val().toString() == "United States") {
                                $("#chkCountry").prop('checked', false);
                                $("#txtCountry").prop("disabled", true);
                                $("#txtState").prop('maxLength', '2');
                                if (item.FilingEntityZip.toString() != "") {
                                    $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                                }
                                else {
                                    $("#txtZipCode").addClass("watermarkHTMLTextBox");
                                    $("#txtZipCode").blur();
                                }
                            } else {
                                $("#chkCountry").prop('checked', true);
                                $("#txtCountry").prop("disabled", false);
                                $("#txtState").prop('maxLength', '30');

                                $m('#txtZipCode').attr("placeholder", "");
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            }
                            $m("#txtPayeeName").valid();
                            // Address validation
                            $m("#txtCountry").valid();
                            $m("#txtStreetName").valid();
                            $m("#txtCity").valid();
                            $m("#txtState").valid();
                            $m("#txtZipCode").valid();
                        });
                    }
                });
                $("#lstPurposeCode").focus();
            },
            change: function (event, ui) {
                // do whatever you want to when the item is found
                $m("label[for=txtPayeeName]").text('');
                $m("#txtPayeeName").removeClass("error");
            }
        });

        // Details Payee Name - Reimbursement Details.
        $m("#txtDetailsPayeeNameReim").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/AutoCompleteEntityName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();

                var selectedValue = ui.item.label;
                $.ajax({
                    url: "@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/GetAutoCompleteNameData/")",
                    dataType: "json",
                    data: {
                        strValue: selectedValue.toString()
                    },
                    success: function (results) {
                        $.each(results, function (i, item) {
                            $("#txtDetailsPayeeNameReim").val(item.FilingEntityName.toString());
                            $("#txtStreetNameReim").val(item.FilingEntityStreetName.toString());
                            $("#txtCityReim").val(item.FilingEntityCity.toString());
                            $("#txtStateReim").val(item.FilingEntityState.toString());
                            $("#txtZipCodeReim").val(item.FilingEntityZip.toString());
                            $("#txtCountryReim").val(item.FilingEntityCountry.toString());
                            if ($("#txtCountryReim").val().toString() == "United States") {
                                $("#chkCountryReim").prop('checked', false);
                                $("#txtCountryReim").prop("disabled", true);
                                $("#txtStateReim").prop('maxLength', '2');
                                if (item.FilingEntityZip.toString() != "") {
                                    $("#txtZipCodeReim").removeClass("watermarkHTMLTextBox");
                                }
                                else {
                                    $("#txtZipCodeReim").addClass("watermarkHTMLTextBox");
                                    $("#txtZipCodeReim").blur();
                                }
                            } else {
                                $("#chkCountryReim").prop('checked', true);
                                $("#txtCountryReim").prop("disabled", false);
                                $("#txtStateReim").prop('maxLength', '30');

                                $m('#txtZipCodeReim').attr("placeholder", "");
                                $("#txtZipCodeReim").removeClass("watermarkHTMLTextBox");
                            }
                            $m("#txtPayeeName").valid();
                            // Address validation
                            $m("#txtCountryReim").valid();
                            $m("#txtStreetNameReim").valid();
                            $m("#txtCityReim").valid();
                            $m("#txtStateReim").valid();
                            $m("#txtZipCodeReim").valid();
                        });
                    }
                });
                $("#lstPurposeCodeReim").focus();
            },
            change: function (event, ui) {
                // do whatever you want to when the item is found
                $m("label[for=txtDetailsPayeeNameReim]").text('');
                $m("#txtDetailsPayeeNameReim").removeClass("error");
            }
        });

        // Details Payee Name - Credit Card Itemization.
        $m("#txtDetailsPayeeNameCCI").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/AutoCompleteEntityName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();

                var selectedValue = ui.item.label;
                $.ajax({
                    url: "@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/GetAutoCompleteNameData/")",
                    dataType: "json",
                    data: {
                        strValue: selectedValue.toString()
                    },
                    success: function (results) {
                        $.each(results, function (i, item) {
                            $("#txtDetailsPayeeNameCCI").val(item.FilingEntityName.toString());
                            $("#txtStreetNameCCI").val(item.FilingEntityStreetName.toString());
                            $("#txtCityCCI").val(item.FilingEntityCity.toString());
                            $("#txtStateCCI").val(item.FilingEntityState.toString());
                            $("#txtZipCodeCCI").val(item.FilingEntityZip.toString());
                            $("#txtCountryCCI").val(item.FilingEntityCountry.toString());
                            if ($("#txtCountryCCI").val().toString() == "United States") {
                                $("#chkCountryCCI").prop('checked', false);
                                $("#txtCountryCCI").prop("disabled", true);
                                $("#txtStateCCI").prop('maxLength', '2');
                                if (item.FilingEntityZip.toString() != "") {
                                    $("#txtZipCodeCCI").removeClass("watermarkHTMLTextBox");
                                }
                                else {
                                    $("#txtZipCodeCCI").addClass("watermarkHTMLTextBox");
                                    $("#txtZipCodeCCI").blur();
                                }
                            } else {
                                $("#chkCountryCCI").prop('checked', true);
                                $("#txtCountryCCI").prop("disabled", false);
                                $("#txtStateCCI").prop('maxLength', '30');

                                $m('#txtZipCodeCCI').attr("placeholder", "");
                                $("#txtZipCodeCCI").removeClass("watermarkHTMLTextBox");
                            }
                            $m("#txtPayeeName").valid();
                            // Address validation
                            $m("#txtCountryCCI").valid();
                            $m("#txtStreetNameCCI").valid();
                            $m("#txtCityCCI").valid();
                            $m("#txtStateCCI").valid();
                            $m("#txtZipCodeCCI").valid();
                        });
                    }
                });
                $("#lstPurposeCodeCCI").focus();
            },
            change: function (event, ui) {
                // do whatever you want to when the item is found
                $m("label[for=txtDetailsPayeeNameCCI]").text('');
                $m("#txtDetailsPayeeNameCCI").removeClass("error");
            }
        });
        // Auto Complete
        //----------------------------------------------------------------------------------------------------------------------------------------------

        //====================================================================================================================
        // Date picker validation based on Filing Type.
        if ($("#lstElectionType option:selected").val().toString() == "6") { // Off-Cycle
            if ($("#lstFilingDate option:selected").text().toString() == "- New Filing Date -") {
                sessionStorage.setItem("CuttOffDateForFiling", sessionStorage.getItem("FilingDate").toString());
            }
            else {
                sessionStorage.setItem("CuttOffDateForFiling", $("#lstFilingDate option:selected").text().toString());
            }
        }
        else {
            sessionStorage.setItem("CuttOffDateForFiling", sessionStorage.getItem("CutOffDate").toString());
        }

        // DATE FOR SCHEDULE 'Q' DIALOG BOX.
        $m(".txtCurrentDateSchedQCls").datepicker({
            showOn: "button",
            buttonImage: "../../Content/Images/Calendar.png",
            buttonImageOnly: false,
            buttonText: "Select From Date",
            changeMonth: true,
            changeYear: true,
            numberOfMonths: 1,
            maxDate: sessionStorage.getItem("CuttOffDateForFiling").toString(),
            dateFormat: 'mm/dd/yy',
            onChange: function () {
                $m("#txtCurrentDateSchedQ").valid();
            },
        }).datepicker();

        $m('.datepicker').attr("placeholder", "MM/DD/YYYY").datepicker();
        $("#txtCurrentDateSchedQ").addClass("watermarkHTMLTextBox");
        $("#txtCurrentDateSchedQ").focusin(function () {
            $("#txtCurrentDateSchedQ").removeClass("watermarkHTMLTextBox");
        });

        // Watermark TextBox. ////////////////////////////////////////////////////

        // DATE FORMATE....///////////////////////////////////////////////
        $("#txtCurrentDateSchedQ").focusout(function () {
            if ($("#txtCurrentDateSchedQ").val().toString() != "") {
                if ($("#txtCurrentDateSchedQ").val().toString() != "MM/DD/YYYY") {
                    if ($m("#txtCurrentDateSchedQ").valid()) {
                        var MyDate = new Date($("#txtCurrentDateSchedQ").val().toString());
                        var MyDateString;
                        MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                            + ('0' + MyDate.getDate()).slice(-2) + '/'
                            + MyDate.getFullYear();
                        $("#txtCurrentDateSchedQ").val("");
                        $("#txtCurrentDateSchedQ").val(MyDateString);
                    }
                }
            }
            else {
                $("#txtCurrentDateSchedQ").addClass("watermarkHTMLTextBox");
            }
        });

        // REIMBURSEMENT DATEPICKER
        $m(".txtCurrentDateSchedQCls").datepicker({
            showOn: "button",
            buttonImage: "../../Content/Images/Calendar.png",
            buttonImageOnly: false,
            buttonText: "Select From Date",
            changeMonth: true,
            changeYear: true,
            numberOfMonths: 1,
            maxDate: sessionStorage.getItem("CuttOffDateForFiling").toString(),
            dateFormat: 'mm/dd/yy',
            onChange: function () {
                $m("#txtCurrentDateSchedQReim").valid();
            },
        }).datepicker();


        $("#txtCurrentDateSchedQReim").addClass("watermarkHTMLTextBox");
        $("#txtCurrentDateSchedQReim").focusin(function () {
            $("#txtCurrentDateSchedQReim").removeClass("watermarkHTMLTextBox");
        });

        // Watermark TextBox. ////////////////////////////////////////////////////

        // DATE FORMATE....///////////////////////////////////////////////
        $("#txtCurrentDateSchedQReim").focusout(function () {
            if ($("#txtCurrentDateSchedQReim").val().toString() != "") {
                if ($("#txtCurrentDateSchedQReim").val().toString() != "MM/DD/YYYY") {
                    if ($m("#txtCurrentDateSchedQReim").valid()) {
                        var MyDate = new Date($("#txtCurrentDateSchedQReim").val().toString());
                        var MyDateString;
                        MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                            + ('0' + MyDate.getDate()).slice(-2) + '/'
                            + MyDate.getFullYear();
                        $("#txtCurrentDateSchedQReim").val("");
                        $("#txtCurrentDateSchedQReim").val(MyDateString);
                    }
                }
            }
            else {
                $("#txtCurrentDateSchedQReim").addClass("watermarkHTMLTextBox");
            }
        });

        // CREDIT CARD ITEMIZATION DATEPICKER.
        $m(".txtCurrentDateSchedQCls").datepicker({
            showOn: "button",
            buttonImage: "../../Content/Images/Calendar.png",
            buttonImageOnly: false,
            buttonText: "Select From Date",
            changeMonth: true,
            changeYear: true,
            numberOfMonths: 1,
            maxDate: sessionStorage.getItem("CuttOffDateForFiling").toString(),
            dateFormat: 'mm/dd/yy',
            onChange: function () {
                $m("#txtCurrentDateSchedQCCI").valid();
            },
        }).datepicker();


        $("#txtCurrentDateSchedQCCI").addClass("watermarkHTMLTextBox");
        $("#txtCurrentDateSchedQCCI").focusin(function () {
            $("#txtCurrentDateSchedQCCI").removeClass("watermarkHTMLTextBox");
        });

        // Watermark TextBox. ////////////////////////////////////////////////////

        // DATE FORMATE....///////////////////////////////////////////////
        $("#txtCurrentDateSchedQCCI").focusout(function () {
            if ($("#txtCurrentDateSchedQCCI").val().toString() != "") {
                if ($("#txtCurrentDateSchedQCCI").val().toString() != "MM/DD/YYYY") {
                    if ($m("#txtCurrentDateSchedQCCI").valid()) {
                        var MyDate = new Date($("#txtCurrentDateSchedQCCI").val().toString());
                        var MyDateString;
                        MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                            + ('0' + MyDate.getDate()).slice(-2) + '/'
                            + MyDate.getFullYear();
                        $("#txtCurrentDateSchedQCCI").val("");
                        $("#txtCurrentDateSchedQCCI").val(MyDateString);
                    }
                }
            }
            else {
                $("#txtCurrentDateSchedQCCI").addClass("watermarkHTMLTextBox");
            }
        });

        // Add New Reimbursement
        $m("#btnAddNewReimbursement").button().on("click", function () {
            event.preventDefault();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                 txtFilerId: $("#txtFilerID").val(),
                 lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                 strElectionTypeId: $m("#lstElectionType option:selected").val(),
                 lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                 lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                 lstFilingDate: $m("#lstFilingDate option:selected").text(),
                 txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
             }, function (resultEditFlag) {
                 if (resultEditFlag == "TRUE") {
                     dialog_Sched_Q_Reim.dialog("open");

                     ClearDialogBoxValidationSchedQReim();

                     sessionStorage.setItem("UpdateFlagSchedQReim", "No");

                     sessionStorage.setItem("flagUpdate", "null");
                     sessionStorage.setItem("Reimbursement", "Yes");

                     appCommonEFS_ClearLabeltextAndRemoveClassError(["txtCurrentDateSchedQReim", "txtDetailsPayeeNameReim", "lstPurposeCodeReim", "txtAmtReim"]);

                     // Add/Edit
                     $("#btnSaveSchedQReim").show();
                     $("#btnUpdateSchedQReim").hide();

                     $("#txtOriginalPayeeName").val(sessionStorage.getItem("PayeeNameReimCCI").toString());

                     // Hide/Show
                     $("#tdDatePaidReim").show();
                     $("#tdOriginalPayeeName").show();
                     $("#tdDetailsPayeeNameReim").show();
                     $("#divStreetAddressReim").show();
                     $("#divCityReim").show();
                     $("#divStateReim").show();
                     $("#divZip5Reim").show();
                     $("#tdPurposeCodeReim").show();
                     $("#tdAmtReim").show();
                     $("#tdExplanationReim").show();
                     $("#tdCountryContributionChkReim").show();
                     $("#tdCountryContributionTxtReim").show();
                    // Hide/Show
                 }
                 else {
                     ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before adding this Transaction.', 'Ok', '');
                 }
            });
        });

        // Add New Credit Card Itemization.
        $m("#btnAddNewCreditCardItemization").button().on("click", function () {
            event.preventDefault();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                 txtFilerId: $("#txtFilerID").val(),
                 lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                 strElectionTypeId: $m("#lstElectionType option:selected").val(),
                 lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                 lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                 lstFilingDate: $m("#lstFilingDate option:selected").text(),
                 txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
             }, function (resultEditFlag) {
                 if (resultEditFlag == "TRUE") {
                     dialog_Sched_Q_CCI.dialog("open");

                     ClearDialogBoxValidationSchedQCCI();

                     sessionStorage.setItem("UpdateFlagSchedQCCI", "No");

                     appCommonEFS_ClearLabeltextAndRemoveClassError(["txtCurrentDateSchedQCCI", "txtDetailsPayeeNameCCI", "lstPurposeCodeCCI", "txtAmountCCI"]);

                     // Add/Edit
                     $("#btnSaveSchedQCCItem").show();
                     $("#btnUpdateSchedQCCItem").hide();

                     $("#txtOriginalPayeeNameCCI").val(sessionStorage.getItem("PayeeNameReimCCI").toString());

                     // Hide/Show
                     $("#tdDatePaidCCI").show();
                     $("#tdPayeeNameOrgCCI").show();
                     $("#tdPayeeNameCCI").show();
                     $("#divStreetAddressCCI").show();
                     $("#divCityCCI").show();
                     $("#divStateCCI").show();
                     $("#divZip5CCI").show();
                     $("#tdPurposeCodeItemization").show();
                     $("#tdAmtCCI").show();
                     $("#tdExplanationCCI").show();
                     $("#tdCountryContributionChkCCI").show();
                     $("#tdCountryContributionTxtCCI").show();
                    // Hide/Show
                 }
                 else {
                     ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before adding this Transaction.', 'Ok', '');
                 }
            });
        });

        // Payment Type Change.
        $("#lstMethod").change(function (e) {

            $("#txtCheck").val("");

            var selectedMethod = $("#lstMethod option:selected").val().toString();

            if (selectedMethod == "1") {
                $("#tdCheck").show();
                $("#lblExplanation").text("Explanation");

                $m("label[for=txtExplanationSchedQ]").text('');
                $m("#txtExplanationSchedQ").removeClass("error");
            }
            else if (selectedMethod == "7") {
                // EXPLANATION MANADATORY
                $("#lblExplanation").text("* Explanation");
                $("#tdCheck").hide();
            }
            else {
                $("#tdCheck").hide();
                $("#lblExplanation").text("Explanation");

                $m("label[for=txtExplanationSchedQ]").text('');
                $m("#txtExplanationSchedQ").removeClass("error");
            }

            if ($("#lstPurposeCode option:selected").val().toString() == "30") { // OTHER
                // EXPLANATION MANADATORY
                $("#lblExplanation").text("* Explanation");
            }

            $m("label[for=txtCheck]").text('');
            $m("#txtCheck").removeClass("error");
        });

        // Purpose Code Change
        $("#lstPurposeCode").change(function (e) {

            var selectedPurposeCode = $("#lstPurposeCode option:selected").val().toString();

            if (selectedPurposeCode == "30") {
                $("#lblExplanation").text("* Explanation");
            }
            else {
                $("#lblExplanation").text("Explanation");
            }

            if ($("#lstMethod option:selected").val().toString() == "7") { // OTHER
                // EXPLANATION MANADATORY
                $("#lblExplanation").text("* Explanation");
            }

            $m("label[for=txtExplanationSchedQ]").text('');
            $m("#txtExplanationSchedQ").removeClass("error");

        });

        // Purpose Code Change - Reimbursement Details.
        $("#lstPurposeCodeReim").change(function (e) {

            var selectedPurposeCode = $("#lstPurposeCodeReim option:selected").val().toString();

            if (selectedPurposeCode == "30") {
                $("#lblExplanationReim").text("* Explanation");
            }
            else {
                $("#lblExplanationReim").text("Explanation");
            }

            $m("label[for=txtExplanationSchedQReim]").text('');
            $m("#txtExplanationSchedQReim").removeClass("error");

        });

        // Purpose Code Change - Credit Card Itemization.
        $("#lstPurposeCodeCCI").change(function (e) {

            var selectedPurposeCode = $("#lstPurposeCodeCCI option:selected").val().toString();

            if (selectedPurposeCode == "8") {  // Other: Must Provide Explanation
                $("#lblExplanationCCI").text("* Explanation");
            }
            else {
                $("#lblExplanationCCI").text("Explanation");
            }

            $m("label[for=txtExplanationCCI]").text('');
            $m("#txtExplanationCCI").removeClass("error");

        });

        // Reimbursement Details
        $m("#btnCloseDialogReim").button().on("click", function () {
            //Forsome reason someone had mapped 2 click event logics to the same button which I just combined.
            //This is part 1
            if (sessionStorage.getItem("SchedFPopuUpCloseMessageReim").toString() == "Yes") {
                $.post("@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/GetReimbursementDetailsTotalAmt/")", {
                    strTransNumber: sessionStorage.getItem("TransNumber").toString()
                }, function (results) {
                    if (results == "0.00") {

                        var resultsCloseSchedA = "You have reported an expenditure as a reimbursement. Reimbursement details are required to disclose where the person/entity being reimbursed spent funds on behalf of the committee. Failure to provide reimbursement details or incomplete reimbursement details may be cited as a Deficiency by Compliance Review staff. Do you want to continuee?";

                        $m('#modal_dialog').text(resultsCloseSchedA);
                        $m("#modal_dialog").dialog({
                            resizable: false,
                            modal: true,
                            width: '400px',
                            height: 'auto',
                            bgiframe: false,
                            closeOnEscape: false,
                            open: function (event, ui) { hideDialogXButton(this); },
                            buttons: {
                                "OK": function () {
                                    // Close Confirm Box.
                                    $m(this).dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                    // Close dialog box.
                                    dialog_Sched_Q_Reim.dialog("close");

                                }, // confirm close
                                "Cancel": function () {
                                    $m(this).dialog("close");
                                }
                            }
                        });
                    }
                    else {
                        // Close dialog box.
                        dialog_Sched_Q_Reim.dialog("close");
                    }
                });
            }
            //This is part 2
            // Get Filing Transactions Data....
            var valid = true;

            if (sessionStorage.getItem("UpdateFlagSchedQReim").toString() == "No") { // Only New Transactions
                if ($("#lstItemizedReim option:selected").val().toString() == "N"
                    || $("#txtCurrentDateSchedQReim").val().toString().length >= 1
                    || $("#txtDetailsPayeeNameReim").val().toString().length >= 1
                    || $('#chkCountryReim').is(':checked')/*Other COUNTRY*/
                    || ($('#chkCountryReim').is(':checked') && $("#txtCountryReim").val().toString().length >= 1)
                    || $("#txtStreetNameReim").val().toString().length >= 1
                    || $("#txtCityReim").val().toString().length >= 1
                    || $("#txtStateReim").val().toString().length >= 1
                    || $("#txtZipCodeReim").val().toString().length >= 1
                    || $("#lstPurposeCodeReim option:selected").val().toString() != "0"
                    || $("#txtAmtReim").val().toString().length >= 1
                    || $("#txtExplanationSchedQReim").val().toString().length >= 1) {
                    valid = false;
                }
            } else {
                valid = false;
            }
            if (valid) {
                if (tableReimbursement != "") {
                    // Close dialog box.
                    dialog_Sched_Q_Reim.dialog("close");

                    // For Defect 707 You don't Refresh the Data on Grid because you just canceled the edit or save function.
                }
            } else {
                // Get confirmation Close the DialogBox or Not.
                var resultsCloseSchedA = "All unsaved data will be lost if you navigate away from this page. Are you sure you want to continue?";

                $m('#modal_dialog').text(resultsCloseSchedA);
                $m("#modal_dialog").dialog({
                    resizable: false,
                    width: '400px',
                    height: 'auto',
                    bgiframe: false,
                    closeOnEscape: false,
                    open: function (event, ui) { hideDialogXButton(this); },
                    buttons: {
                        "OK": function () {
                            // Close Confirm Box.
                            $m(this).dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                            // Close dialog box.
                            dialog_Sched_Q_Reim.dialog("close");

                            // For Defect 707 You don't Refresh the Data on Grid because you just canceled the edit or save function.
                        },
                        "Cancel": function () {
                            $m(this).dialog("close");
                        }
                    }
                });
            }
        });
        /**
         * Common code to refresh Rimbursement Details Grid.
         * param {function} doneFunction (optional) A function to be called if the ajax call is completed.
         */
        function callGetReimbursementDataReinbursement(doneFunction) {
            // Refresh Rimbursement Details Grid.
            $m.ajax({
                "url": "@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/GetReimbursementData/")",
                "data": {
                    strTransNumber: sessionStorage.getItem("TransNumber").toString()
                },
                "success": tableReimbursement,
                "dataType": "json",
                "type": "POST",
                "error": function () {
                    ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                }
            }).always(function () {
                if (bUtilIsFunction(doneFunction)) {
                    doneFunction();
                }
            });
            //Don't reload if we dont have a table
            if (tableReimbursement != '' && tableReimbursement instanceof $m.fn.dataTable.Api) {
                $m('#gridReimbursementSchedQ').DataTable().ajax.reload();
                tableReimbursement.responsive.recalc();
            }
        }


        // BUTTON CLOSE CREDIT CARD ITEMIZATION.
        $m("#btnCloseDialogSchedQCCItem").button().on("click", function () {
            //Forsome reason someone had mapped 2 click event logics to the same button which I just combined.
            //This is part 1
            if (sessionStorage.getItem("SchedFPopuUpCloseMessageCCI").toString() == "Yes") {
                $.post("@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/GetReimbursementDetailsTotalAmt/")", {
                    strTransNumber: sessionStorage.getItem("TransNumber").toString()
                }, function (results) {
                    if (results == "0.00") {

                        var resultsCloseSchedA = "You have reported an expenditure as a credit card payment is required to itemize the expenditures the credit card was used to pay for. Failure to provide credit card itemization may be cited as a Deficiency by Compliance Review staff. Do you want to continuee?";

                        $m('#modal_dialog').text(resultsCloseSchedA);
                        $m("#modal_dialog").dialog({
                            resizable: false,
                            width: '400px',
                            height: 'auto',
                            bgiframe: false,
                            closeOnEscape: false,
                            open: function (event, ui) { hideDialogXButton(this); },
                            buttons: {
                                "OK": function () {
                                    // Close Confirm Box.
                                    $m(this).dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                    // Close dialog box.
                                    dialog_Sched_Q_CCI.dialog("close");
                                },
                                "Cancel": function () {
                                    $m(this).dialog("close");
                                }
                            }
                        });
                    } else {
                        // Close dialog box.
                        dialog_Sched_Q_CCI.dialog("close");
                    }
                });
            }
            //This is part 2
            // Get Filing Transactions Data....
            var valid = true;

            if (sessionStorage.getItem("UpdateFlagSchedQCCI").toString() == "No") { // Only New Transactions

                if ($("#lstItemizedCCI option:selected").val().toString() == "N"
                    || $("#txtCurrentDateSchedQCCI").val().toString().length >= 1
                    || $("#txtDetailsPayeeNameCCI").val().toString().length >= 1
                    || ($('#chkCountryCCI').is(':checked')/*Other COUNTRY*/ && $("#txtCountryCCI").val().toString().length >= 1)
                    || $("#txtStreetNameCCI").val().toString().length >= 1
                    || $("#txtCityCCI").val().toString().length >= 1
                    || $("#txtStateCCI").val().toString().length >= 1
                    || $("#txtZipCodeCCI").val().toString().length >= 1
                    || $("#lstPurposeCodeCCI option:selected").val().toString() != "0"
                    || $("#txtAmountCCI").val().toString().length >= 1
                    || $("#txtExplanationCCI").val().toString().length >= 1) {
                    valid = false;
                }
            } else {
                valid = false;
            }
            if (valid) {

                if (tableCreditCardPayment != "") {

                    // Close dialog box.
                    dialog_Sched_Q_CCI.dialog("close");

                    // For Defect 707 You don't Refresh the Data on Grid because you just canceled the edit or save function.
                }
            } else {
                // Get confirmation Close the DialogBox or Not.
                var resultsCloseSchedA = "All unsaved data will be lost if you navigate away from this page. Are you sure you want to continue?";

                $m('#modal_dialog').text(resultsCloseSchedA);
                $m("#modal_dialog").dialog({
                    resizable: false,
                    width: '400px',
                    height: 'auto',
                    bgiframe: false,
                    closeOnEscape: false,
                    open: function (event, ui) { hideDialogXButton(this); },
                    buttons: {
                        "OK": function () {
                            // Close Confirm Box.
                            $m(this).dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                            // Close dialog box.
                            dialog_Sched_Q_CCI.dialog("close");

                            // For Defect 707 You don't Refresh the Data on Grid because you just canceled the edit or save function.
                        },
                        "Cancel": function () {
                            $m(this).dialog("close");
                        }
                    }
                });
            }
        });
        // BUTTON CLOSE CREDIT CARD ITEMIZATION.
        //--------------------------------------------------------------------------------------------------------------------------------------

        /**
         * Common code to refresh CreditCard Reinbursement Details Grid.
         * param {function} doneFunction (optional) A function to be called if the ajax call is completed.
         */
        function callGetReimbursementDataCreditCard(doneFunction) {
            // Refresh Credit CardRimbursement Details Grid.
            $m.ajax({
                "url": "@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/GetReimbursementData/")",
                "data": {
                    strTransNumber: sessionStorage.getItem("TransNumber").toString()
                },
                "success": tableCreditCardPayment,
                "dataType": "json",
                "type": "POST",
                "error": function () {
                    ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                }
            }).always(function () {
                if (bUtilIsFunction(doneFunction)) {
                    doneFunction();
                }
                });
            //Don't reload if we dont have a table
            if (tableCreditCardPayment != '' && tableCreditCardPayment instanceof $m.fn.dataTable.Api) { 
                $m('#gridCreditCardPaymentSchedF').DataTable().ajax.reload();
                tableCreditCardPayment.responsive.recalc();
            }
        }



        // Get Filing Transactions Data....
        $m("#btnCloseDialog").button().on("click", function () {
            var valid = true;
            if (sessionStorage.getItem("UpdateFlagSchedQ").toString() == "No") { // Only New Transactions
                if ($("#lstItemized option:selected").val().toString() == "N"
                    || $("#txtCurrentDateSchedQ").val().toString().length >= 1
                    || $("#txtPayeeName").val().toString().length >= 1
                    || ($('#chkCountry').is(':checked') /*Other COUNTRY*/ && $("#txtCountry").val().toString().length >= 1) 
                    || $("#txtStreetName").val().toString().length >= 1
                    || $("#txtCity").val().toString().length >= 1
                    || $("#txtState").val().toString().length >= 1
                    || $("#txtZipCode").val().toString().length >= 1
                    || $("#lstPurposeCode option:selected").val().toString() != "0"
                    || $("#lstMethod option:selected").val().toString() != "0"
                    || ($("#lstMethod option:selected").val().toString() == "1" && $("#txtCheck").val().toString().length >= 1)
                    || $("#txtAmtSchedQ").val().toString().length >= 1
                    || $("#txtExplanationSchedQ").val().toString().length >= 1) {
                    valid = false;
                }
            } else {
                valid = false;
            }

            if (valid) {
                // Close dialog box.
                dialog_Sched_Q.dialog("close");

                // For Defect 707 You don't Refresh the Data on Grid because you just canceled the edit or save function.
            } else {
                // Get confirmation Close the DialogBox or Not.
                var resultsCloseSchedA = "All unsaved data will be lost if you navigate away from this page. Are you sure you want to continue?";

                $m('#modal_dialog').text(resultsCloseSchedA);
                $m("#modal_dialog").dialog({
                    resizable: false,
                    width: '400px',
                    height: 'auto',
                    bgiframe: false,
                    closeOnEscape: false,
                    open: function (event, ui) { hideDialogXButton(this); },
                    buttons: {
                        "OK": function () {
                            // Close Confirm Box.
                            $m(this).dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                            // Close dialog box.
                            dialog_Sched_Q.dialog("close");

                            // For Defect 707 You don't Refresh the Data on Grid because you just canceled the edit or save function.
                        },
                        "Cancel": function () {
                            $m(this).dialog("close");
                        }
                    }
                });
            }
        });

        $("#btnClearDialog").click(function (e) {
            sessionStorage.setItem("ItemizedSchedDYorN", $("#lstItemized option:selected").val().toString());

            // Clear Form Validation. Schedule 'D'
            var validator = $m("#DialogBoxSchedQForm").validate();
            validator.resetForm();  // clear out the validation errors
            $m("#DialogBoxSchedQForm")[0].reset();   // clear out the form data

            if (sessionStorage.getItem("UpdateFlagSchedQ").toString() != "Yes") { // Add New Transaction

                // Set the default values for form.
                $("#txtCountry").val("United States");
                $("#txtCountry").prop("disabled", true);
                $("#chkCountry").prop('checked', false);
                $("#txtState").prop('maxLength', '2');
                $m("#txtCountry").valid();

                // Set the default values for form.
                $("#lblExplanation").text("Explanation");

                // Set the default values for form.
                $("#lstItemized").prop("disabled", false);
                $("#lstPurposeCode").prop("disabled", false);

                // Set the default values for form.
                $("#lstItemized")[0].selectedIndex = 0;
                $("#lstPurposeCode")[0].selectedIndex = 0;
                $("#lstMethod")[0].selectedIndex = 0;

                // Set the default values for form.
                $("#txtCurrentDateSchedQ").blur();
                $("#txtZipCode").blur();
                $("#txtAmtSchedQ").blur();

                // Hide/Show
                $("#tdDateRcvdExpenditurePayments").show();
                $("#tdPayorNameExpenditurePayments").show();
                $("#divStreetAddress").show();
                $("#divCity").show();
                $("#divState").show();
                $("#divZip5").show();
                $("#tdPurposeCodeExpenditurePayments").show();
                $("#tdMethodNonHouseKeepingScheP").show();
                $("#tdCountryContributionChk").show();
                $("#tdCountryContributionTxt").show();
                // Hide/Show
                $("#tdCheck").hide();

                // On focus
                $("#lstItemized").select();
            } else { // Update Transactions.
                if (sessionStorage.getItem("ItemizedSchedDYorN").toString() == "N") { // Unitemized
                    $("#txtCurrentDateSchedQ").blur();
                    $("#txtAmtSchedQ").blur();

                    $("#lstItemized")[0].selectedIndex = 1;
                }
                else { // Itemized
                    $("#txtCurrentDateSchedQ").blur();
                    $("#txtAmtSchedQ").blur();

                    $("#lstMethod")[0].selectedIndex = 0;
                    $("#tdCheck").hide();

                    $("#lblExplanation").text("Explanation");

                    $("#txtCountry").val("United States");
                    $("#txtCountry").prop("disabled", true);
                    $("#chkCountry").prop('checked', false);
                    $("#txtState").prop('maxLength', '2');
                    $("#txtZipCode").blur();
                }
            }
        });

        // Clear values Reimbursement Details.
        $("#btnClearDialogReim").click(function (e) {
            sessionStorage.setItem("ItemizedSchedDYorN", $("#lstItemizedReim option:selected").val().toString());

            // Clear Form Validation. Schedule 'D'
            var validator = $m("#DialogBoxSchedQReimForm").validate();
            validator.resetForm();  // clear out the validation errors
            $m("#DialogBoxSchedQReimForm")[0].reset();   // clear out the form data

            if (sessionStorage.getItem("UpdateFlagSchedQReim").toString() != "Yes") { // Add New Transaction

                // Set the default values for form.
                $("#txtCountryReim").val("United States");
                $("#txtCountryReim").prop("disabled", true);
                $("#chkCountryReim").prop('checked', false);
                $("#txtStateReim").prop('maxLength', '2');
                $m("#txtCountryReim").valid();

                // Set the default values for form.
                $("#txtExplanationSchedQReim").text("Explanation");

                // Set the default values for form.
                $("#lstItemizedReim").prop("disabled", false);
                $("#lstPurposeCodeReim").prop("disabled", false);

                // Set the default values for form.
                $("#lstItemizedReim")[0].selectedIndex = 0;
                $("#lstPurposeCodeReim")[0].selectedIndex = 0;

                // Set the default values for form.
                $("#txtCurrentDateSchedQReim").blur();
                $("#txtZipCodeReim").blur();
                $("#txtAmtReim").blur();

                // Hide/Show
                $("#tdDatePaidReim").show();
                $("#tdOriginalPayeeName").show();
                $("#tdDetailsPayeeNameReim").show();
                $("#divStreetAddress").show();
                $("#divCity").show();
                $("#divState").show();
                $("#divZip5").show();
                $("#tdPurposeCodeReim").show();
                $("#tdAmt").show();
                $("#tdExplanation").show();
                $("#tdCountryContributionChk").show();
                $("#tdCountryContributionTxt").show();
                // Hide/Show

                // Original Payee Name
                $("#txtOriginalPayeeName").val(sessionStorage.getItem("PayeeNameReimCCI").toString());

                // On focus
                $("#lstItemizedReim").select();
            } else { // Update Transactions.
                if (sessionStorage.getItem("ItemizedSchedDYorN").toString() == "N") { // Unitemized
                    $("#txtCurrentDateSchedQReim").blur();
                    $("#txtAmtReim").blur();

                    $("#lstItemizedReim")[0].selectedIndex = 1;

                    $("#txtOriginalPayeeName").val(sessionStorage.getItem("PayeeNameReimCCI").toString());
                } else { // Itemized

                    // Original Payee Name
                    $("#txtOriginalPayeeName").val(sessionStorage.getItem("PayeeNameReimCCI").toString());

                    // Set the default values for form.
                    $("#txtCurrentDateSchedQReim").blur();
                    $("#txtAmtReim").blur();

                    $("#lstItemizedReim")[0].selectedIndex = 0;
                    $("#lstPurposeCodeReim")[0].selectedIndex = 0;

                    $("#txtExplanationSchedQReim").text("Explanation");

                    $("#txtCountryReim").val("United States");
                    $("#txtCountryReim").prop("disabled", true);
                    $("#chkCountryReim").prop('checked', false);
                    $("#txtStateReim").prop('maxLength', '2');
                    $m("#txtCountryReim").valid();
                    $("#txtZipCodeReim").blur();
                }
            }
        });

        // Clear values Credit Card Itemization.
        $("#btnClearDialogSchedQCCItem").click(function (e) {

            sessionStorage.setItem("ItemizedSchedDYorN", $("#lstItemizedCCI option:selected").val().toString());

            // Clear Form Validation. Schedule 'D'
            var validator = $m("#DialogBoxSchedQCCIForm").validate();
            validator.resetForm();  // clear out the validation errors
            $m("#DialogBoxSchedQCCIForm")[0].reset();   // clear out the form data

            if (sessionStorage.getItem("UpdateFlagSchedQCCI").toString() != "Yes") { // Add New Transaction

                // Set the default values for form.
                $("#txtCountryCCI").val("United States");
                $("#txtCountryCCI").prop("disabled", true);
                $("#chkCountryCCI").prop('checked', false);
                $("#txtStateCCI").prop('maxLength', '2');
                $m("#txtCountryCCI").valid();

                // Set the default values for form.
                $("#txtExplanationCCI").text("Explanation");

                // Set the default values for form.
                $("#lstItemizedCCI").prop("disabled", false);
                $("#lstPurposeCodeCCI").prop("disabled", false);

                // Set the default values for form.
                $("#lstItemizedCCI")[0].selectedIndex = 0;
                $("#lstPurposeCodeCCI")[0].selectedIndex = 0;

                // Set the default values for form.
                $("#txtCurrentDateSchedQCCI").blur();
                $("#txtZipCodeCCI").blur();
                $("#txtAmountCCI").blur();

                // Hide/Show
                $("#tdDatePaidCCI").show();
                $("#tdPayeeNameOrgCCI").show();
                $("#tdPayeeNameCCI").show();
                $("#divStreetAddressCCI").show();
                $("#divCityCCI").show();
                $("#divStateCCI").show();
                $("#divZip5CCI").show();
                $("#tdPurposeCodeItemization").show();
                $("#tdAmtCCI").show();
                $("#tdExplanationCCI").show();
                $("#tdCountryContributionChkCCI").show();
                $("#tdCountryContributionTxtCCI").show();
                // Hide/Show

                $("#txtOriginalPayeeNameCCI").val(sessionStorage.getItem("PayeeNameReimCCI").toString());

                // On focus
                $("#lstItemizedCCI").select();
            } else { // Update Transactions.
                if (sessionStorage.getItem("ItemizedSchedDYorN").toString() == "N") { // Unitemized
                    $("#txtCurrentDateSchedQCCI").blur();
                    $("#txtAmountCCI").blur();

                    $("#lstItemizedCCI")[0].selectedIndex = 1;

                    $("#txtOriginalPayeeNameCCI").val(sessionStorage.getItem("PayeeNameReimCCI").toString());
                } else { // Itemized

                    // Original Payee Name
                    $("#txtOriginalPayeeNameCCI").val(sessionStorage.getItem("PayeeNameReimCCI").toString());

                    // Set the default values for form.
                    $("#txtCurrentDateSchedQCCI").blur();
                    $("#txtAmountCCI").blur();

                    $("#lstItemizedCCI")[0].selectedIndex = 0;
                    $("#lstPurposeCodeCCI")[0].selectedIndex = 0;

                    $("#txtExplanationCCI").text("Explanation");

                    $("#txtCountryCCI").val("United States");
                    $("#txtCountryCCI").prop("disabled", true);
                    $("#chkCountryCCI").prop('checked', false);
                    $("#txtStateCCI").prop('maxLength', '2');
                    $m("#txtCountryCCI").valid();
                    $("#txtZipCodeCCI").blur();
                }
            }
        });

        $m("#btnAddNewTransaction").button().on("click", function () {
            event.preventDefault();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                 txtFilerId: $("#txtFilerID").val(),
                 lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                 strElectionTypeId: $m("#lstElectionType option:selected").val(),
                 lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                 lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                 lstFilingDate: $m("#lstFilingDate option:selected").text(),
                 txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
             }, function (resultEditFlag) {
                 if (resultEditFlag == "TRUE") {
                     sessionStorage.setItem("flagUpdate", "null");
                     sessionStorage.setItem("Reimbursement", "No");

                     sessionStorage.setItem("UpdateFlagSchedQ", "No");

                     // Hide Reimbursement Details.
                     $("#divShowReimbursement").hide();
                     // Hide Credit Card Itemization
                     $("#divShowCreditCardPayment").hide();

                     ClearDialogBoxValidationSchedQ();

                     tableReimbursement = "";
                     tableCreditCardPayment = "";

                     dialog_Sched_Q.dialog("open");

                     appCommonEFS_ClearLabeltextAndRemoveClassError(["txtCurrentDateSchedQ", "txtPayeeName", "lstPurposeCode", "txtAmtSchedQ"]);

                     // Hide/Show
                     $("#tdDateRcvdExpenditurePayments").show();
                     $("#tdPayorNameExpenditurePayments").show();
                     $("#divStreetAddress").show();
                     $("#divCity").show();
                     $("#divState").show();
                     $("#divZip5").show();
                     $("#tdPurposeCodeExpenditurePayments").show();
                     $("#tdMethodNonHouseKeepingScheP").show();
                     $("#tdCountryContributionChk").show();
                     $("#tdCountryContributionTxt").show();
                     // Hide/Show

                     $("#tdCheck").hide();
                    }
                 else {
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before adding this Transaction.', 'Ok', '');
                }
            });
        });

        // Itemized/Unitemized changes.
        $("#lstItemized").change(function () {

            if ($("#lstItemized option:selected").val().toString() == "N") { // UNITEMIZED

                ClearDialogBoxValidationSchedQ();

                // Hide/Show
                $("#tdDateRcvdExpenditurePayments").show();
                $("#tdPayorNameExpenditurePayments").hide();
                $("#divStreetAddress").hide();
                $("#divCity").hide();
                $("#divState").hide();
                $("#divZip5").hide();
                $("#tdPurposeCodeExpenditurePayments").hide();
                $("#tdMethodNonHouseKeepingScheP").hide();
                $("#tdCountryContributionChk").hide();
                $("#tdCountryContributionTxt").hide();
                // Hide/Show

                $("#tdCheck").hide();

                $("#lstItemized")[0].selectedIndex = 1;
            }
            else { // ITEMIZED

                ClearDialogBoxValidationSchedQ();

                // Hide/Show
                $("#tdDateRcvdExpenditurePayments").show();
                $("#tdPayorNameExpenditurePayments").show();
                $("#divStreetAddress").show();
                $("#divCity").show();
                $("#divState").show();
                $("#divZip5").show();
                $("#tdPurposeCodeExpenditurePayments").show();
                $("#tdMethodNonHouseKeepingScheP").show();
                $("#tdCountryContributionChk").show();
                $("#tdCountryContributionTxt").show();
                // Hide/Show
                $("#tdCheck").hide();

                $("#lstItemized")[0].selectedIndex = 0;
            }
        });

        // Itemized/Unitemized changes for Reimbursement Details.
        $("#lstItemizedReim").change(function () {
            if ($("#lstItemizedReim option:selected").val().toString() == "N") { // UNITEMIZED

                // Clear Dialogbox
                ClearDialogBoxValidationSchedQReim();

                // Hide/Show
                $("#tdDatePaidReim").show();
                $("#tdOriginalPayeeName").show();
                $("#tdDetailsPayeeNameReim").hide();
                $("#divStreetAddressReim").hide();
                $("#divCityReim").hide();
                $("#divStateReim").hide();
                $("#divZip5Reim").hide();
                $("#tdPurposeCodeReim").hide();
                $("#tdAmtReim").show();
                $("#tdExplanationReim").show();
                $("#tdCountryContributionChkReim").hide();
                $("#tdCountryContributionTxtReim").hide();
                // Hide/Show

                $("#lstItemizedReim")[0].selectedIndex = 1;
            } else {
                // Clear Dialogbox
                ClearDialogBoxValidationSchedQReim();
                // Hide/Show
                $("#tdDatePaidReim").show();
                $("#tdOriginalPayeeName").show();
                $("#tdDetailsPayeeNameReim").show();
                $("#divStreetAddressReim").show();
                $("#divCityReim").show();
                $("#divStateReim").show();
                $("#divZip5Reim").show();
                $("#tdPurposeCodeReim").show();
                $("#tdAmtReim").show();
                $("#tdExplanationReim").show();
                $("#tdCountryContributionChkReim").show();
                $("#tdCountryContributionTxtReim").show();
                // Hide/Show

                $("#lstItemizedReim")[0].selectedIndex = 0;
            }
        });

        // Itemized transaction Y/N
        $("#lstItemizedCCI").change(function () {
            if ($("#lstItemizedCCI option:selected").val().toString() == "N") { // UNITEMIZED

                // Clear Dialogbox
                ClearDialogBoxValidationSchedQCCI();

                // Hide/Show
                $("#tdDatePaidCCI").show();
                $("#tdPayeeNameOrgCCI").show();
                $("#tdPayeeNameCCI").hide();
                $("#divStreetAddressCCI").hide();
                $("#divCityCCI").hide();
                $("#divStateCCI").hide();
                $("#divZip5CCI").hide();
                $("#tdPurposeCodeItemization").hide();
                $("#tdAmtCCI").show();
                $("#tdExplanationCCI").show();
                $("#tdCountryContributionChkCCI").hide();
                $("#tdCountryContributionTxtCCI").hide();
                // Hide/Show

                $("#lstItemizedCCI")[0].selectedIndex = 1;
            } else {
                // Clear Dialogbox
                ClearDialogBoxValidationSchedQCCI();

                // Hide/Show
                $("#tdDatePaidCCI").show();
                $("#tdPayeeNameOrgCCI").show();
                $("#tdPayeeNameCCI").show();
                $("#divStreetAddressCCI").show();
                $("#divCityCCI").show();
                $("#divStateCCI").show();
                $("#divZip5CCI").show();
                $("#tdPurposeCodeItemization").show();
                $("#tdAmtCCI").show();
                $("#tdExplanationCCI").show();
                $("#tdCountryContributionChkCCI").show();
                $("#tdCountryContributionTxtCCI").show();
                // Hide/Show

                $("#lstItemizedCCI")[0].selectedIndex = 0;
            }
        });


        // Delete Record FILING TRANSACTIONS.
        $m('#gridFilingTransactions tbody').on('click', 'a.editor_remove_SchedQ', function (e) {
            e.preventDefault();
            var dataTrans = tableFilingTransactions.row($(this).parents('tr')).data();
            //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                txtFilerId: $("#txtFilerID").val(),
                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }, function (resultEditFlag) {
                if (resultEditFlag == "TRUE") {

                    $.post("@Url.Content("~/_UC_GridCommonControl/GetDeleteFlag/")", {
                    }, function (resultDeleteFlag) {
                        if (resultDeleteFlag == "True") {

                            // LOAN RECEIVED DELETE CHECK
                            $.post("@Url.Content("~/LoanReceivedSchedI/ValidateDelete_LoanReceived/")", {
                                loan_Lib_Number: dataTrans[41].toString(),
                            }, function (resultDeleteFlagSchedI) {

                                // CHECK THE VALIDATION IF ANY CONTRIBUTION REFUNDS (SCHEDULE 'M') EXISTS OR NOT.
                                // IF SCHEDULE 'M' EXISTS FOR EITHER SCHEDULE 'A', SCHEUDLE 'B', OR SCHEDULE 'C'...
                                // THEN SHOULD NOT DELETE UNTIL CHILD RECORDS DELETE.
                                $.post("@Url.Content("~/ContributionsCandIndFamily/ContributionsRefundSchedMExists/")", {
                                    strTransNumber: dataTrans[42].toString()
                                }, function (resultDelSchedABC) {

                                    // CHECK THE VALIDATION IF ANY EXPENDITURE REFUNDS (SCHEDULE 'L') EXISTS OR NOT.
                                    // IF SCHEDULE 'L' EXITS THEN SCHEDULE 'F' SHOULD NOT DELETE UNTLI CHILD DELETE ALL.
                                    $.post("@Url.Content("~/ExpenditurePaymentsSchedF/ExpenditureRefundSchedLExists/")", {
                                        strTransNumber: dataTrans[42].toString()
                                    }, function (resultDelSchedF) {

                                        // Hide Reimbursement Details.
                                        $("#divShowReimbursement").hide();
                                        // Hide Credit Card Itemization
                                        $("#divShowCreditCardPayment").hide();
                                        var deleteData = {
                                            resultDeleteFlagSchedI: resultDeleteFlagSchedI,
                                            resultDelSchedABC: resultDelSchedABC,
                                            resultDelSchedF: resultDelSchedF
                                        }

                                        var resultsDelete = "Are you sure you want to delete this transaction?";
                                        var deleteURL = "";
                                        //Determine if you can
                                        var veredict = appCommonEFS_DetermineScheduleDelete(dataTrans, deleteData);
                                        if (!veredict || !bUtilIsObject(veredict)) {
                                            $("#divLoading").hide();
                                            return false;
                                        } else {
                                            var resultsDelete = veredict.alertMessageForOperation;
                                            var deleteURL = veredict.deleteURL;
                                        }

                                        // Delete...
                                        $m('#modal_dialog').text(resultsDelete);
                                        $m("#modal_dialog").dialog({
                                            resizable: false,
                                            modal: true,
                                            width: '400px',
                                            height: 'auto',
                                            bgiframe: false,
                                            position: {
                                                my: "center top",
                                                at: "center top+200"
                                            },
                                            open: function (event, ui) {
                                                $("#divLoading").hide();
                                                hideDialogXButton(this);
                                            },
                                            buttons: {
                                                "OK": function () {
                                                    // Close Confirm Box.
                                                    $m(this).dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                                    var options = {};
                                                    options.url = deleteURL;
                                                    options.type = "GET";
                                                    options.data = {
                                                        strLoanLiabNumberOrg: dataTrans[41].toString(),
                                                        strTransNumber: dataTrans[42].toString(),
                                                        strRLiability: dataTrans[6].toString()
                                                    };
                                                    options.dataType = "json";
                                                    options.contentType = "application/json";
                                                    options.success = function (results) {

                                                        // Successfully Deleted.
                                                        window.status = "Record deleted successfully";
                                                        var doneFunction = function () {
                                                            $("#divLoading").hide();
                                                            ShowDialogBox('EFS', 'Record deleted successfully', 'Ok', '');
                                                        }
                                                        //Refresh the Data on Grid...
                                                        GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);
                                                    };
                                                    options.error = function () {
                                                        $("#divLoading").hide();// Call to method in deleteURL failed.
                                                        ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                                                    };
                                                    $.ajax(options);
                                                },
                                                "Cancel": function () {
                                                    $m(this).dialog("close");
                                                }
                                            }
                                        });
                                    }).fail(function () {
                                        $("#divLoading").hide();// ExpenditureRefundSchedLExists failed.
                                    });
                                }).fail(function () {
                                    $("#divLoading").hide();// ContributionsRefundSchedMExists failed.
                                });
                            }).fail(function () {
                                $("#divLoading").hide();// ValidateDelete_LoanReceived failed.
                            });
                        } else {//When resultDeleteFlag != "True"
                            $("#divLoading").hide();
                            ShowDialogBox('EFS', 'The last transaction cannot be deleted.  To delete the Disclosure report, a deletion request must be submitted to cfinfo@elections.ny.gov', 'Ok', '');
                        }
                    }).fail(function () {
                        $("#divLoading").hide();// GetDeleteFlag failed.
                    });
                } else {//When  resultEditFlag != "TRUE".
                    $("#divLoading").hide();
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before removing this Transaction.', 'Ok', '');
                }
            }).fail(function () {
                $("#divLoading").hide();// GetEditFlag failed.
            });
        });


        //==============================================================================================================================================
        // COMMON CODE FOR BUTTON CLEAR AND IT WILL GO TO MAIN PAGE CONTRIBUTION MONETARY.
        //Bind Clear Click
        $(".clsCommonClear").bind('click', function () {
            $("#divGridMonetary").show();
            sessionStorage.setDataTable = "true";
            $("#divShowHideHelp").removeClass("clsShowHideHelpSec");
            $("#divShowHideHelp").addClass("clsShowHideHelpSecInMobileTablet");

            sessionStorage.setItem("FilerId", $("#txtFilerID option:selected").val());
            sessionStorage.setItem("CommitteeName", $("#txtCommitteeName option:selected").val());
            sessionStorage.setItem("ElectionCycle", $("#lstElectionCycle option:selected").val());
            sessionStorage.setItem("ElectionType", $("#lstElectionType option:selected").val());
            sessionStorage.setItem("ElectionDate", $("#lstElectionDate option:selected").val());
            sessionStorage.setItem("DisclosureType", $("#lstDisclosureType option:selected").val());
            sessionStorage.setItem("DisclosurePeriod", $("#lstDisclosurePeriod option:selected").val());
            sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesFrom").val());
            if ($("#lstElectionType option:selected").val() == "6") {
                sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
            }
            else {
                sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
            }
            sessionStorage.setItem("TransactionType", $("#lstTransactionType option:selected").val());
            sessionStorage.setItem("lstResigTermType", $("#lstResigTermType option:selected").val());
            sessionStorage.setItem("lstFilingDate", $("#lstFilingDate option:selected").val());

            sessionStorage.setItem("TransactionTypeId", "true");

            var urlContrHome = "@Url.Content("~/ContributionsMonetary/ContributionsMonetary/")";

            window.location.href = urlContrHome;
        });
        // COMMON CODE FOR BUTTON CLEAR AND IT WILL GO TO MAIN PAGE CONTRIBUTION MONETARY.
        //==============================================================================================================================================

        $("#divShowPartnerAdddataInKind").hide();
        $("#divPartnerInKing").hide();
        $("#PartnersGridInKind").addClass("Per100hideShowButtonCSS");

        // Edit a record
        $m('#NonCompHKExpensesGrid tbody').on('click', 'a.editor_AttributionInKind', function (e) {
            e.preventDefault();
            $("#divShowPartnerAdddataInKind").show();
            tablePartners = $m('#PartnersGridInKind').DataTable({
                "bProcessing": true,
                "retrieve": true,
                "stateSave": true,
                "scrollX": "100%",
                "scrollY": "100%",
                "mData": null,
                "sDefaultContent": "Edit",
                "sAjaxSource": "@Url.Content("~/ContributionsMonetary/GetPartnerSearchData/")",
                "bAutoWidth": false,
                "columnDefs": [
                    { width: "5%", targets: -2, data: null, defaultContent: '<a  href="" class="editor_edit_NonCompExpenses"><img src="../../Content/Images/edit.png" title="Edit Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a>', orderable: false },
                    { width: "5%", targets: -1, data: null, defaultContent: '<a  href="" class="editor_remove_NonCompExpenses"><img src="../../Content/Images/delete.png" title="Delete Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a>', orderable: false },
                ],
                "initComplete": function (settings, json) {
                    //Accessibility: Applies various Accessibility features to this dataTable.
                    makeDataTableAccessible($m('#PartnersGridInKind').DataTable());
                },
                "fnServerData": function (url, data, callback) {
                    $.ajax({
                        "url": url,
                        "data": null,
                        "success": callback,
                        "dataType": "json",
                        "type": "POST",
                        "error": function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                        }
                    });
                }
            });
            $m('#PartnersGridInKind').DataTable().ajax.reload();
        });


        // ADD FILING TRANSACTION SHEDULE Q DATA INTO TABLE.
        // Button Click
        $("#btnSaveSchedQ").click(function (e) {
            e.preventDefault();
            // Save Schedule 'Q' transactions.
            $m("#DialogBoxSchedQForm").valid();
            if ($m("#DialogBoxSchedQForm").valid()) { // JQuery Validation // Insert
                $("#divLoading").show();//Show spinner for add and edit
                if (sessionStorage.getItem("UpdateFlagSchedQ").toString() != "Yes") { // Save
                    $.post("@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/SaveFlngTransNCHExpensesData/")", {
                        txtFilerId: $("#txtFilerID").val(),
                        lstElectionCycle: $("#lstElectionCycle option:selected").text(),
                        lstElectionCycleId: $("#lstElectionCycle option:selected").val(),
                        lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                        lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                        lstElectionType: $("#lstElectionType option:selected").val(),
                        lstElectionDate: $("#lstElectionDate option:selected").text(),
                        lstTransactionType: sessionStorage.getItem("TransactionType").toString(),
                        txtDateRcvd: $m("#txtCurrentDateSchedQ").val(),
                        txtPayorName: $m("#txtPayeeName").val(),
                        lstPurposeCode: $m("#lstPurposeCode option:selected").val(),
                        txtCountry: $m("#txtCountry").val(),
                        txtStreetName: $m("#txtStreetName").val(),
                        txtCity: $m("#txtCity").val(),
                        txtState: $m("#txtState").val(),
                        txtZipCode: $m("#txtZipCode").val(),
                        lstMethod: $m("#lstMethod option:selected").val(),
                        txtCheck: $m("#txtCheck").val(),
                        txtAmount: $m("#txtAmtSchedQ").val(),
                        txtExplanation: $m("#txtExplanationSchedQ").val(),
                        lstItemized: $m("#lstItemized").val(),
                        txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
                        chkCountry: $('#chkCountry').is(':checked').toString(),
                        lstFilingDate: $m("#lstFilingDate option:selected").text(),
                        txtReportPeriodDatesTo: sessionStorage.getItem("FilingDate").toString(),
                        lstResigTermType: $m("#lstResigTermType option:selected").val(),
                        lstElectionDateId: $("#lstElectionDate option:selected").val(),
                        lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
                    }, function (results) {
                        // Success
                        if (results.toString() != "") {
                            if (results == "Custom Error") {
                                $("#divLoading").hide();
                                ShowDialogBox('EFS', 'System Error found. Please try again.', 'Ok', '');
                                window.location.reload();
                            } else {
                                if (results == "0") {
                                    $("#divLoading").hide();
                                    ShowDialogBox('EFS', 'System Error Found. Please try again.', 'Ok', '');
                                    window.location.reload();
                                } else {
                                    $("#lstItemized").focus();

                                    window.status = "Transaction saved successfully";

                                    sessionStorage.setItem("TransNumber", results.toString());
                                    sessionStorage.setItem("PurposeCodeReimCCI", $("#lstPurposeCode option:selected").val().toString());
                                    sessionStorage.setItem("PayeeNameReimCCI", $("#txtPayeeName").val().toString());
                                    sessionStorage.setItem("FilingSchedDate", $("#txtCurrentDateSchedQ").val().toString());
                                    sessionStorage.setItem("ReimbursementOrgAmt", $("#txtAmtSchedQ").val().toString());
                                    sessionStorage.setItem("CreditCardPayOrgAmt", $("#txtAmtSchedQ").val().toString());

                                    // Clear the values.
                                    ClearDialogBoxValidationSchedQ();

                                    appCommonEFS_ClearLabeltextAndRemoveClassError(["txtCurrentDateSchedQ", "txtPayeeName", "lstPurposeCode", "txtAmtSchedQ"]);
                                    // Hide/Show
                                    $("#tdDateRcvdExpenditurePayments").show();
                                    $("#tdPayorNameExpenditurePayments").show();
                                    $("#divStreetAddress").show();
                                    $("#divCity").show();
                                    $("#divState").show();
                                    $("#divZip5").show();
                                    $("#tdPurposeCodeExpenditurePayments").show();
                                    $("#tdMethodNonHouseKeepingScheP").show();
                                    $("#tdCountryContributionChk").show();
                                    $("#tdCountryContributionTxt").show();
                                    // Hide/Show
                                    $("#tdCheck").hide();

                                    //Set up a function to run after we update the table.
                                    var doneFunction = function () {
                                        // HIDE THE PROCESSING....
                                        $("#divLoading").hide();

                                        //First check to see if this is not 11 = REIMBURSEMENT DETAILS or 29 CREDIT CARD ITEMIZATION
                                        if (["11", "29"].includes(sessionStorage.getItem("PurposeCodeReimCCI").toString()) != true) {
                                            ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');
                                        } else if (sessionStorage.getItem("PurposeCodeReimCCI").toString() == "11") { // REIMBURSEMENT DETAILS.
                                            dialog_Sched_Q_Reim.dialog("open");
                                            ClearDialogBoxValidationSchedQReim();

                                            // Add/Edit
                                            $("#btnSaveSchedQReim").show();
                                            $("#btnUpdateSchedQReim").hide();

                                            sessionStorage.setItem("UpdateFlagSchedQReim", "No");
                                            sessionStorage.setItem("ReimGridReferesh", "No");
                                            sessionStorage.setItem("SchedFPopuUpCloseMessageReim", "Yes");

                                            // Hide/Show
                                            $("#tdDatePaidReim").show();
                                            $("#tdOriginalPayeeName").show();
                                            $("#tdDetailsPayeeNameReim").show();
                                            $("#divStreetAddressReim").show();
                                            $("#divCityReim").show();
                                            $("#divStateReim").show();
                                            $("#divZip5Reim").show();
                                            $("#tdPurposeCodeReim").show();
                                            $("#tdAmtReim").show();
                                            $("#tdExplanationReim").show();
                                            $("#tdCountryContributionChkReim").show();
                                            $("#tdCountryContributionTxtReim").show();
                                            // Hide/Show
                                        } else if (sessionStorage.getItem("PurposeCodeReimCCI").toString() == "29") { // CREDIT CARD ITEMIZATION

                                            dialog_Sched_Q_CCI.dialog("open");
                                            ClearDialogBoxValidationSchedQCCI();

                                            // Add/Edit
                                            $("#btnSaveSchedQCCItem").show();
                                            $("#btnUpdateSchedQCCItem").hide();

                                            sessionStorage.setItem("UpdateFlagSchedQCCI", "No");
                                            sessionStorage.setItem("CCIGridReferesh", "No");
                                            sessionStorage.setItem("SchedFPopuUpCloseMessageCCI", "Yes");

                                            // Hide/Show
                                            $("#tdDatePaidCCI").show();
                                            $("#tdPayeeNameOrgCCI").show();
                                            $("#tdPayeeNameCCI").show();
                                            $("#divStreetAddressCCI").show();
                                            $("#divCityCCI").show();
                                            $("#divStateCCI").show();
                                            $("#divZip5CCI").show();
                                            $("#tdPurposeCodeItemization").show();
                                            $("#tdAmtCCI").show();
                                            $("#tdExplanationCCI").show();
                                            $("#tdCountryContributionChkCCI").show();
                                            $("#tdCountryContributionTxtCCI").show();
                                            // Hide/Show
                                        }
                                    }
                                    //Refresh the Data on Grid...
                                    GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);
                                    results = "Custom Error";
                                }
                            }
                        } else {//When results.toString() == ""
                            $("#divLoading").hide();
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                        }
                    }).fail(function () {
                        $("#divLoading").hide();//SaveFlngTransNCHExpensesData failed
                    });
                } else if (sessionStorage.getItem("UpdateFlagSchedQ").toString() == "Yes") { // Update

                    // Check the Updated Amount should be less than the Reimbursement Total Amount
                    $.post("@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/GetReimbursementDetailsTotalAmt/")", {
                        strTransNumber: sessionStorage.getItem("TransNumber").toString()
                    }, function (results) {
                       if (results.toString() != "0.00") {
                            // IF THEY ADDED DETAILS TRANSACTIONS...
                            // EITHER REIMBURSEMENT OR CREDIT CARD PAYMENT DETAILS...
                            // THEN WE HAVE TO CHECK THE 'DATE PAID' SHOULD NOT ME LATER THAT EXISTING DATE...
                            // ON EDIT WE HAVE TO CHECK.
                            var datePaidExists = sessionStorage.getItem("DatePaidVal").toString();
                            var d1 = new Date(datePaidExists);
                            var datePaidNew = $m("#txtCurrentDateSchedQ").val().toString();
                            var d2 = new Date(datePaidNew);
                            // CHECK DATE SHOULD BE LESS OR EQUAL TO EXISTING DATE.
                            if (d2 <= d1) {
                                // UPDATE TRANSACTION.
                                var totalReimDetailsAmt = results.toString();
                                var reimbursementAmt = $m("#txtAmtSchedQ").val().toString();
                                if (parseFloat(reimbursementAmt) >= parseFloat(totalReimDetailsAmt)) {
                                    // come here
                                    // ADD VALIDATION IF ANY EXPENDITURE REFUNDS THERE THEN...
                                    // THEY SHOULD NOT REDUCE LESSER THAN REFUNDS.
                                    $.post("@Url.Content("~/ExpenditurePaymentsSchedF/GetExpRefundedTotalAmt/")", {
                                        strTransNumber: sessionStorage.getItem("TransNumber").toString()
                                    }, function (resultRefundedAmt) {
                                        var updatedAmount = $("#txtAmtSchedQ").val().toString();
                                        // ON AMOUNT FOCUS OUT ITS VALIDATION REIMBURSEMENT AND CREDIT CARD PAYMENT DETAILS ADDED OR NOT.
                                        // IF ADDED THEN IT VALIDATE ON UPDATE AMOUNT SHOUDL NOT LESS THAN DETAILS AMOUNT.
                                        // ADDED THIS BECAUSE AFTER FOCUS OUT VALIDATION NOT WORKING. ADDED - 04/24/2020.
                                        if (updatedAmount.toString() != '') {
                                            if (parseFloat(updatedAmount) >= parseFloat(resultRefundedAmt.toString())) {

                                                $m.post("@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/UpdateFilingTransData/")", {
                                                    strTransNumber: sessionStorage.getItem("TransNumber").toString(),
                                                    strFilingEntId: sessionStorage.getItem("FilingEntityId").toString(),
                                                    lstPurposeCode: $m("#lstPurposeCode option:selected").val(),
                                                    txtCurrentDate: $m("#txtCurrentDateSchedQ").val(),
                                                    txtCheck: $m("#txtCheck").val(),
                                                    lstMethod: $m("#lstMethod option:selected").val(),
                                                    txtAmount: $m("#txtAmtSchedQ").val(),
                                                    txtExplanation: $m("#txtExplanationSchedQ").val(),
                                                    txtPayorName: $m("#txtPayeeName").val(),
                                                    txtCountry: $m("#txtCountry").val(),
                                                    txtStreetName: $m("#txtStreetName").val(),
                                                    txtCity: $m("#txtCity").val(),
                                                    txtState: $m("#txtState").val(),
                                                    txtZipCode: $m("#txtZipCode").val(),
                                                    lstItemized: $m("#lstItemized option:selected").val(),
                                                    txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
                                                    lstElectionType: $("#lstElectionType option:selected").val(),
                                                    txtReportPeriodDatesTo: sessionStorage.getItem("FilingDate").toString(),
                                                    lstFilingDate: $m("#lstFilingDate option:selected").text(),
                                                    chkCountry: $('#chkCountry').is(':checked').toString(),
                                                }, function (results) {
                                                    // Close Dialog Box.
                                                    dialog_Sched_Q.dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                                    window.status = "Transaction saved successfully";

                                                    $("#divDTInKind").show();
                                                    var doneFunction = function () {
                                                        // HIDE THE PROCESSING....
                                                        $("#divLoading").hide();
                                                        ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');
                                                    }
                                                    //Refresh the Data on Grid...
                                                    GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);

                                                    $("#tdButtonUpdate").hide();
                                                    $("#tdButtonSave").show();
                                                });
                                            } else {
                                                // HIDE THE PROCESSING....
                                                $("#divLoading").hide();
                                                ShowDialogBox('EFS', 'Expenditure Refunds (Increases Balance) Added for Non-Campaign Housekeeping Expenses Amount should not be less than Expenditure Refunds (Increases Balance) Amount $' + parseFloat(resultRefundedAmt).toFixed(2).toString(), 'Ok', '');
                                            }
                                        } else { //When updatedAmount.toString() == ''
                                            $("#divLoading").hide();
                                        }
                                    }).fail(function () {
                                        $("#divLoading").hide();//GetExpRefundedTotalAmt failed.
                                    });
                                } else {
                                    // HIDE THE PROCESSING....
                                    $("#divLoading").hide();
                                    ShowDialogBox('EFS', 'Amount should not be less than the Reimbursement Details/Credit Card Itemization Total Amount: $' + totalReimDetailsAmt.toString(), 'Ok', '');
                                }
                            } else {
                                // HIDE THE PROCESSING....
                                $("#divLoading").hide();
                                ShowDialogBox('EFS', 'Detail transactions exist, Date Paid cannot be later than existing Date Paid: ' + datePaidExists.toString(), 'Ok', '');
                                $m("#txtCurrentDateSchedQ").select();
                            }
                        } else {
                            // UPDATE TRANSACTION.
                            var totalReimDetailsAmt = results.toString();
                            var reimbursementAmt = $m("#txtAmtSchedQ").val().toString();
                            if (parseFloat(reimbursementAmt) >= parseFloat(totalReimDetailsAmt)) {
                                // ADD VALIDATION IF ANY EXPENDITURE REFUNDS THERE THEN...
                                // THEY SHOULD NOT REDUCE LESSER THAN REFUNDS.
                                $.post("@Url.Content("~/ExpenditurePaymentsSchedF/GetExpRefundedTotalAmt/")", {
                                    strTransNumber: sessionStorage.getItem("TransNumber").toString()
                                }, function (resultRefundedAmt) {
                                    var updatedAmount = $("#txtAmtSchedQ").val().toString();
                                    // ON AMOUNT FOCUS OUT ITS VALIDATION REIMBURSEMENT AND CREDIT CARD PAYMENT DETAILS ADDED OR NOT.
                                    // IF ADDED THEN IT VALIDATE ON UPDATE AMOUNT SHOUDL NOT LESS THAN DETAILS AMOUNT.
                                    // ADDED THIS BECAUSE AFTER FOCUS OUT VALIDATION NOT WORKING. ADDED - 04/24/2020.
                                    if (updatedAmount.toString() != '') {
                                        if (parseFloat(updatedAmount) >= parseFloat(resultRefundedAmt.toString())) {

                                            $m.post("@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/UpdateFilingTransData/")", {
                                                strTransNumber: sessionStorage.getItem("TransNumber").toString(),
                                                strFilingEntId: sessionStorage.getItem("FilingEntityId").toString(),
                                                lstPurposeCode: $m("#lstPurposeCode option:selected").val(),
                                                txtCurrentDate: $m("#txtCurrentDateSchedQ").val(),
                                                txtCheck: $m("#txtCheck").val(),
                                                lstMethod: $m("#lstMethod option:selected").val(),
                                                txtAmount: $m("#txtAmtSchedQ").val(),
                                                txtExplanation: $m("#txtExplanationSchedQ").val(),
                                                txtPayorName: $m("#txtPayeeName").val(),
                                                txtCountry: $m("#txtCountry").val(),
                                                txtStreetName: $m("#txtStreetName").val(),
                                                txtCity: $m("#txtCity").val(),
                                                txtState: $m("#txtState").val(),
                                                txtZipCode: $m("#txtZipCode").val(),
                                                lstItemized: $m("#lstItemized option:selected").val(),
                                                txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
                                                lstElectionType: $("#lstElectionType option:selected").val(),
                                                txtReportPeriodDatesTo: sessionStorage.getItem("FilingDate").toString(),
                                                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                                                chkCountry: $('#chkCountry').is(':checked').toString(),
                                            }, function (results) {

                                                // Close Dialog Box.
                                                dialog_Sched_Q.dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.

                                                window.status = "Transaction saved successfully";

                                                $("#divDTInKind").show();
                                                var doneFunction = function () {
                                                    // HIDE THE PROCESSING....
                                                    $("#divLoading").hide();
                                                    ShowDialogBox('EFS', "Transaction saved successfully", 'Ok', '');
                                                }
                                                // Refresh the Data on Grid...
                                                GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);

                                                $("#tdButtonUpdate").hide();
                                                $("#tdButtonSave").show();
                                            });
                                        } else {
                                            // HIDE THE PROCESSING....
                                            $("#divLoading").hide();
                                            ShowDialogBox('EFS', 'Expenditure Refunds (Increases Balance) Added for Non-Campaign Housekeeping Expenses Amount should not be less than Expenditure Refunds (Increases Balance) Amount $' + parseFloat(resultRefundedAmt).toFixed(2).toString(), 'Ok', '');
                                        }
                                    }
                                }).fail(function () {
                                    $("#divLoading").hide();//GetExpRefundedTotalAmt failed
                                });
                            } else {
                                // HIDE THE PROCESSING....
                                $("#divLoading").hide();
                                ShowDialogBox('EFS', 'Amount should not be less than the Reimbursement Details/Credit Card Itemization Total Amount: $' + totalReimDetailsAmt.toString(), 'Ok', '');
                            }
                        }
                    }).fail(function () {
                        $("#divLoading").hide();//GetReimbursementDetailsTotalAmt failed.
                    });
                } else {//We can't determine operation
                    $("#divLoading").hide();
                    ShowDialogBox('EFS', 'Error determining operation. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                }
            }
        });

        /**
         * Common function for upating
         * {String} updateType - allows us to chooese bettwen labels.
         */
        function GetReimbursementDetailsTotalAmtAndUpdateLabels(updateType) {
            var type = bUtilIsString(updateType) ? updateType : "";
            var sessionStorageKey = false;
            var labelSelector = false;
            switch (type.toLowerCase()) {
                case "creditcard":
                    sessionStorageKey = "CreditCardPayOrgAmt";
                    labelSelector = "#lblBalanceCCIAmt";
                    break;
                case "reimbursement":
                    sessionStorageKey = "ReimbursementOrgAmt";
                    labelSelector = "#lblReimbursementAmt";
                    break;
                default:
                    console.error("Error in GetReimbursementDetailsTotalAmtAndUpdateLabels. Unsuported updateType parameter of '" + updateType +"'.");
                    break;
            }
            if (sessionStorageKey && labelSelector) {
                // Outstanding Amount.
                $.post("@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/GetReimbursementDetailsTotalAmt/")", {
                    strTransNumber: sessionStorage.getItem("TransNumber").toString()
                }, function (results) {
                    if (results != "0.00") {
                        var totalReimDetailsAmt = results.toString();
                        var orgAmt = sessionStorage.getItem(sessionStorageKey).toString();
                        var resBalAmt = parseFloat(orgAmt) - parseFloat(totalReimDetailsAmt);
                        $(labelSelector).text("Outstanding Amount: $" + resBalAmt.toFixed(2).toString());
                    } else {
                        var reimAmount = parseFloat(sessionStorage.getItem(sessionStorageKey));
                        $(labelSelector).text("Outstanding Amount: $" + reimAmount.toFixed(2).toString());
                    }
                });
            }
        }

        // Button Save Reimbursement Details.
        $("#btnSaveSchedQReim").click(function (e) {
            e.preventDefault();
            if ($m("#DialogBoxSchedQReimForm").valid()) { // JQuery Validation // Insert
                $("#divLoading").show();
                // Get the total value for Reimbursement Details Amount.
                // Get Date Incurred Data.
                $.post("@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/GetReimbursementDetailsTotalAmt/")", {
                    strTransNumber: sessionStorage.getItem("TransNumber").toString()
                }, function (results) {
                    var orgAmt = sessionStorage.getItem("ReimbursementOrgAmt").toString();
                    var reimbursementAmt = $m("#txtAmtReim").val().toString();
                    // when using tofixed it is changing to string some time it is not checking condition.
                    reimbursementAmt = parseFloat(reimbursementAmt).toFixed(2);
                    if (results != "0.00") {
                        var totalReimDetailsAmt = results.toString();
                        orgAmt = parseFloat(orgAmt) - parseFloat(totalReimDetailsAmt);
                    }
                    orgAmt = parseFloat(orgAmt).toFixed(2);
                    if (parseFloat(reimbursementAmt) <= parseFloat(orgAmt)) {
                        var orgSchedDate = sessionStorage.getItem("FilingSchedDate").toString();
                        if (Date.parse($("#txtCurrentDateSchedQReim").val().toString()) >= Date.parse(orgSchedDate)) {
                            $.post("@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/SaveFlngTransNCHKExpensesReimbursementData/")", {
                                strTransNumber: sessionStorage.getItem("TransNumber").toString(),
                                strFilingSchedId: sessionStorage.getItem("TransactionType").toString(),
                                txtDateRcvd: $m("#txtCurrentDateSchedQReim").val(),
                                txtAmount: $m("#txtAmtReim").val(),
                                txtExplanation: $m("#txtExplanationSchedQReim").val(),
                                txtPayorName: $m("#txtDetailsPayeeNameReim").val(),
                                txtCountryReim: $m("#txtCountryReim").val(),
                                txtStreetName: $m("#txtStreetNameReim").val(),
                                txtCity: $m("#txtCityReim").val(),
                                txtState: $m("#txtStateReim").val(),
                                txtZipCode: $m("#txtZipCodeReim").val(),
                                lstPurposeCodeReim: $m("#lstPurposeCodeReim option:selected").val(),
                                strItemized: $m("#lstItemizedReim").val(),
                                lstElectionType: $("#lstElectionType option:selected").val(),
                                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                                txtReportPeriodDatesTo: sessionStorage.getItem("FilingDate").toString(),
                                txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
                                chkCountry: $('#chkCountryReim').is(':checked').toString(),
                            }, function (results) {
                                // Success
                                window.status = "Transaction saved successfully";
                                var doneFunction = function () {
                                    $("#divLoading").hide();
                                    ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');
                                }
                                // Refresh Rimbursement Details Grid and hide loading 
                                callGetReimbursementDataReinbursement(doneFunction);
                                ClearDialogBoxValidationSchedQReim();
                                // Hide/Show
                                $("#tdDatePaidReim").show();
                                $("#tdOriginalPayeeName").show();
                                $("#tdDetailsPayeeNameReim").show();
                                $("#divStreetAddressReim").show();
                                $("#divCityReim").show();
                                $("#divStateReim").show();
                                $("#divZip5Reim").show();
                                $("#tdPurposeCodeReim").show();
                                $("#tdAmtReim").show();
                                $("#tdExplanationReim").show();
                                $("#tdCountryContributionChkReim").show();
                                $("#tdCountryContributionTxtReim").show();
                                // Hide/Show
                                // Outstanding Amount.
                                GetReimbursementDetailsTotalAmtAndUpdateLabels("reimbursement");
                            }).fail(function () {
                                $("#divLoading").hide();// SaveFlngTransNCHKExpensesReimbursementData failed.
                            });
                        } else {//When Date.parse($("#txtCurrentDateSchedQReim").val().toString()) < Date.parse(orgSchedDate)
                            $("#divLoading").hide();
                            ShowDialogBox('EFS', 'Reimbursement Details Date Paid cannot be prior to Original transaction Date Paid', 'Ok', '');
                        }
                    } else {
                        $("#divLoading").hide();
                        ShowDialogBox('EFS', 'Reimbursement Details amount cannot be more than Outstanding Amount: $' + parseFloat(orgAmt).toFixed(2).toString(), 'Ok', '');
                    }
                }).fail(function () {
                    $("#divLoading").hide();// GetReimbursementDetailsTotalAmt failed.
                });
            }
        });

        // Update Reimbursement Details
        $("#btnUpdateSchedQReim").click(function (e) {
            e.preventDefault();
            if ($m("#DialogBoxSchedQReimForm").valid()) { // JQuery Validation // Update
                $("#divLoading").show()
                // Update REIMBURSEMENT DETAILS DATA.
                $.post("@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/GetReimbursementDetailsTotalAmt/")", {
                    strTransNumber: sessionStorage.getItem("TransNumber").toString()
                }, function (results) {
                    var totalReimDetailsAmt = results.toString();
                    var orgAmt = sessionStorage.getItem("ReimbursementOrgAmt").toString();
                    var orgReimAmt = sessionStorage.getItem("ReimOrgAmt").toString();

                    totalReimDetailsAmt = parseFloat(totalReimDetailsAmt) - parseFloat(orgReimAmt);
                    orgAmt = parseFloat(orgAmt) - parseFloat(totalReimDetailsAmt);
                    var reimbursementAmt = $m("#txtAmtReim").val().toString();
                    // when using tofixed it is changing to string some time it is not checking condition.
                    reimbursementAmt = parseFloat(reimbursementAmt).toFixed(2);
                    orgAmt = parseFloat(orgAmt).toFixed(2);
                    if (parseFloat(reimbursementAmt) <= parseFloat(orgAmt)) {
                        var orgSchedDate = sessionStorage.getItem("FilingSchedDate").toString();
                        if (Date.parse($("#txtCurrentDateSchedQReim").val().toString()) >= Date.parse(orgSchedDate)) {
                            $.post("@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/UpdateFlngTransNCHKExpensesReimbursementData/")", {
                                strTransNumber: sessionStorage.getItem("TransNumberReim").toString(),
                                strFilingEntityId: sessionStorage.getItem("FilingEntityId").toString(),
                                strFilingSchedId: sessionStorage.getItem("TransactionType").toString(),
                                txtDateRcvd: $m("#txtCurrentDateSchedQReim").val(),
                                txtAmount: $m("#txtAmtReim").val(),
                                txtExplanation: $m("#txtExplanationSchedQReim").val(),
                                txtPayorName: $m("#txtDetailsPayeeNameReim").val(),
                                txtCountryReim: $m("#txtCountryReim").val(),
                                txtStreetName: $m("#txtStreetNameReim").val(),
                                txtCity: $m("#txtCityReim").val(),
                                txtState: $m("#txtStateReim").val(),
                                txtZipCode: $m("#txtZipCodeReim").val(),
                                lstPurposeCode: $m("#lstPurposeCodeReim option:selected").val(),
                                strItemized: $m("#lstItemizedReim option:selected").val(),
                                lstElectionType: $("#lstElectionType option:selected").val(),
                                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                                txtReportPeriodDatesTo: sessionStorage.getItem("FilingDate").toString(),
                                txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
                                chkCountry: $('#chkCountryReim').is(':checked').toString(),
                            }, function (results) {
                                // Success
                                if (results) {
                                    dialog_Sched_Q_Reim.dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                    window.status = "Transaction saved successfully";
                                    var doneFunction = function () {
                                        $("#divLoading").hide();
                                        ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');
                                    }
                                    // Refresh Rimbursement Details Grid and hide loading
                                    callGetReimbursementDataReinbursement(doneFunction);

                                    // Outstanding Amount.
                                    GetReimbursementDetailsTotalAmtAndUpdateLabels("reimbursement");
                                } else {
                                    ("#divLoading").hide();
                                    ShowDialogBox('EFS', 'Payee Name not found in Outstanding Liability', 'Ok', '');
                                }
                            });
                        } else {
                            ("#divLoading").hide();
                            ShowDialogBox('EFS', 'Reimbursement Details Date Paid cannot be prior to Original transaction Date Paid', 'Ok', '');
                        }
                    } else {
                        ("#divLoading").hide();
                        ShowDialogBox('EFS', 'Reimbursement Details amount cannot be more than Outstanding Amount: $' + orgAmt.toString(), 'Ok', '');
                    }
                }).fail(function () {
                    $("#divLoading").hide();//GetReimbursementDetailsTotalAmt
                });
            }
        });


        /**
         * Common function for btnSaveSchedQCCItem click  event.
         *  - Calls SaveFlngTransNCHKExpensesReimbursementData 
         *  - Hides the loading
         *  - Also calls GetReimbursementDetailsTotalAmtAndUpdateLabels for credit card
         */
        function ajaxCallToSaveFlngTransNCHKExpensesReimbursementDataCredit() {
            $.post("@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/SaveFlngTransNCHKExpensesReimbursementData/")", {
                strTransNumber: sessionStorage.getItem("TransNumber").toString(),
                strFilingSchedId: sessionStorage.getItem("TransactionType").toString(),
                txtDateRcvd: $m("#txtCurrentDateSchedQCCI").val(),
                txtAmount: $m("#txtAmountCCI").val(),
                txtExplanation: $m("#txtExplanationCCI").val(),
                txtPayorName: $m("#txtDetailsPayeeNameCCI").val(),
                txtCountryReim: $m("#txtCountryCCI").val(),
                txtStreetName: $m("#txtStreetNameCCI").val(),
                txtCity: $m("#txtCityCCI").val(),
                txtState: $m("#txtStateCCI").val(),
                txtZipCode: $m("#txtZipCodeCCI").val(),
                lstPurposeCodeReim: $m("#lstPurposeCodeCCI option:selected").val(),
                strItemized: $m("#lstItemizedCCI").val(),
                lstElectionType: $("#lstElectionType option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtReportPeriodDatesTo: sessionStorage.getItem("FilingDate").toString(),
                txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
                chkCountry: $('#chkCountryCCI').is(':checked').toString(),
            }, function (results) {
                // Success
                window.status = "Transaction saved successfully";
                ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');
                // Clear the Values.
                ClearDialogBoxValidationSchedQCCI();
                // Hide/Show
                $("#tdDatePaidCCI").show();
                $("#tdPayeeNameOrgCCI").show();
                $("#tdPayeeNameCCI").show();
                $("#divStreetAddressCCI").show();
                $("#divCityCCI").show();
                $("#divStateCCI").show();
                $("#divZip5CCI").show();
                $("#tdPurposeCodeItemization").show();
                $("#tdAmtCCI").show();
                $("#tdExplanationCCI").show();
                $("#tdCountryContributionChkCCI").show();
                $("#tdCountryContributionTxtCCI").show();
                // Hide/Show
                // Outstanding Amount.
                GetReimbursementDetailsTotalAmtAndUpdateLabels("creditcard");
            }).always(function () {
                $("#divLoading").hide();// SaveFlngTransNCHKExpensesReimbursementData done.
            });
        }
        // Button Save CREDIT CARD ITEMIZATION DATA.
        //-------------------------------------------------------------------------------------------------------------------------------------------------
        $("#btnSaveSchedQCCItem").click(function (e) {
            e.preventDefault();
            if ($m("#DialogBoxSchedQCCIForm").valid()) { // JQuery Validation // Insert
                $("#divLoading").show();
                // Get the total value for Reimbursement Details Amount.
                // Get Date Incurred Data.
                $.post("@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/GetReimbursementDetailsTotalAmt/")", {
                    strTransNumber: sessionStorage.getItem("TransNumber").toString()
                }, function (results) {
                    var orgAmt = sessionStorage.getItem("CreditCardPayOrgAmt").toString();
                    var reimbursementAmt = $m("#txtAmountCCI").val().toString();
                    // when using tofixed it is changing to string some time it is not checking condition.
                    reimbursementAmt = parseFloat(reimbursementAmt).toFixed(2);
                    if (results != "0.00") {
                        var totalReimDetailsAmt = results.toString();
                        orgAmt = parseFloat(orgAmt) - parseFloat(totalReimDetailsAmt);
                    }
                    orgAmt = parseFloat(orgAmt).toFixed(2);
                    if (parseFloat(reimbursementAmt) <= parseFloat(orgAmt)) {
                        var orgSchedDate = sessionStorage.getItem("FilingSchedDate").toString();
                        if (Date.parse($("#txtCurrentDateSchedQCCI").val().toString()) >= Date.parse(orgSchedDate)) {
                            var doneFunction = function () {
                                $("#divLoading").hide();
                                ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');
                                ajaxCallToSaveFlngTransNCHKExpensesReimbursementDataCredit();
                            }
                            callGetReimbursementDataCreditCard(doneFunction);
                        } else {
                            $("#divLoading").hide();
                            ShowDialogBox('EFS', 'Credit Card Itemization Date Paid cannot be prior to Original transaction Date Paid', 'Ok', '');
                        }
                    } else {
                        $("#divLoading").hide();
                        ShowDialogBox('EFS', 'Credit Card Itemization amount cannot be more than Outstanding Amount: $' + parseFloat(orgAmt).toFixed(2).toString(), 'Ok', '');
                    }
                }).fail(function () {
                    $("#divLoading").hide();// GetReimbursementDetailsTotalAmt failed.
                });
            }
        });
        // Button Save CREDIT CARD ITEMIZATION DATA.
        //-------------------------------------------------------------------------------------------------------------------------------------------------

        // Button Update CREDIT CARD ITEMIZATION DATA.
        //-------------------------------------------------------------------------------------------------------------------------------------------------
        // Update Reimbursement Details
        $("#btnUpdateSchedQCCItem").click(function (e) {
            e.preventDefault();
            if ($m("#DialogBoxSchedQCCIForm").valid()) { // JQuery Validation // Update
                // Update REIMBURSEMENT DETAILS DATA.
                $("#divLoading").show();
                $.post("@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/GetReimbursementDetailsTotalAmt/")", {
                    strTransNumber: sessionStorage.getItem("TransNumber").toString()
                }, function (results) {
                    var totalReimDetailsAmt = results.toString();
                    var orgAmt = sessionStorage.getItem("CreditCardPayOrgAmt").toString();
                    var orgReimAmt = sessionStorage.getItem("CCIOrgAmt").toString();
                    totalReimDetailsAmt = parseFloat(totalReimDetailsAmt) - parseFloat(orgReimAmt);
                    orgAmt = parseFloat(orgAmt) - parseFloat(totalReimDetailsAmt);
                    var reimbursementAmt = $m("#txtAmountCCI").val().toString();
                    // when using tofixed it is changing to string some time it is not checking condition.
                    reimbursementAmt = parseFloat(reimbursementAmt).toFixed(2);
                    orgAmt = parseFloat(orgAmt).toFixed(2);
                    if (parseFloat(reimbursementAmt) <= parseFloat(orgAmt)) {
                        var orgSchedDate = sessionStorage.getItem("FilingSchedDate").toString();
                        if (Date.parse($("#txtCurrentDateSchedQCCI").val().toString()) >= Date.parse(orgSchedDate)) {
                            $.post("@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/UpdateFlngTransNCHKExpensesReimbursementData/")", {
                                strTransNumber: sessionStorage.getItem("TransNumberCCI").toString(),
                                strFilingEntityId: sessionStorage.getItem("FilingEntityId").toString(),
                                strFilingSchedId: sessionStorage.getItem("TransactionType").toString(),
                                txtDateRcvd: $m("#txtCurrentDateSchedQCCI").val(),
                                txtAmount: $m("#txtAmountCCI").val(),
                                txtExplanation: $m("#txtExplanationCCI").val(),
                                txtPayorName: $m("#txtDetailsPayeeNameCCI").val(),
                                txtCountryReim: $m("#txtCountryCCI").val(),
                                txtStreetName: $m("#txtStreetNameCCI").val(),
                                txtCity: $m("#txtCityCCI").val(),
                                txtState: $m("#txtStateCCI").val(),
                                txtZipCode: $m("#txtZipCodeCCI").val(),
                                lstPurposeCode: $m("#lstPurposeCodeCCI option:selected").val(),
                                strItemized: $m("#lstItemizedCCI option:selected").val(),
                                lstElectionType: $("#lstElectionType option:selected").val(),
                                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                                txtReportPeriodDatesTo: sessionStorage.getItem("FilingDate").toString(),
                                txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
                                chkCountry: $('#chkCountryCCI').is(':checked').toString(),
                            }, function (results) {
                                // Success
                                if (results) {
                                    dialog_Sched_Q_CCI.dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                    window.status = "Transaction saved successfully";
                                    var doneFunction = function () {
                                        $("#divLoading").hide();
                                        ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');
                                    }
                                    callGetReimbursementDataCreditCard(doneFunction);
                                    // Outstanding Amount.
                                    GetReimbursementDetailsTotalAmtAndUpdateLabels("creditcard");
                                } else {
                                    $("#divLoading").hide();
                                    ShowDialogBox('EFS', 'Payee Name not found in Outstanding Liability', 'Ok', '');
                                }
                            }).fail(function () {
                                $("#divLoading").hide();// UpdateFlngTransNCHKExpensesReimbursementData failed.
                            });
                        } else {
                            $("#divLoading").hide();
                            ShowDialogBox('EFS', 'Credit Card Itemization Date Paid cannot be prior to Original transaction Date Paid', 'Ok', '');
                        }
                    } else {
                        $("#divLoading").hide();
                        ShowDialogBox('EFS', 'Credit Card Itemization amount cannot be more than Outstanding Amount: $' + orgAmt.toFixed(2).toString(), 'Ok', '');
                    }
                }).fail(function () {
                    $("#divLoading").hide();// GetReimbursementDetailsTotalAmt failed.
                });
            }
        });
        // Button Update CREDIT CARD ITEMIZATION DATA.
        //-------------------------------------------------------------------------------------------------------------------------------------------------

        // EDIT FILING TRANSACTIONS GRID - REIMBURSEMENT DETAILS (REIMBURSEMENT)
        $m('#gridFilingTransactions tbody').on('click', 'a.editor_ReimbDetailsSchedQ', function (e) {
            e.preventDefault();

            $("#divShowReimbursement").show();

            //Hide Credit Card Itemization.
            $("#divShowCreditCardPayment").hide();

            sessionStorage.setItem("ReimGridReferesh", "Yes");
            sessionStorage.setItem("SchedFPopuUpCloseMessageReim", "No");

            sessionStorage.setItem("HideDetailsGridsQ", "Yes");

            var data = tableFilingTransactions.row($(this).parents('tr')).data();

            sessionStorage.setItem("TransIdReimbursement", data[42].toString());
            sessionStorage.setItem("TransNumber", data[42].toString());
            sessionStorage.setItem("FilingSchedId", data[1].toString());
            sessionStorage.setItem("FilingSchedDate", data[10].toString());
            sessionStorage.setItem("ReimbursementOrgAmt", data[24].toString());

            sessionStorage.setItem("PayeeNameReimCCI", data[13].toString());

            tableReimbursement = $m('#gridReimbursementSchedQ').DataTable({
                "bProcessing": true,
                "responsive": true,
                "deferRender": true,
                "retrieve": true,
                "columnDefs": [
                    {
                        "targets": [0, 1, 2, 17],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        "targets": [4],
                        "fnCreatedCell": function (cell) {
                            cell.setAttribute('aria-label', "Row Actions");
                        }
                    }
                ],
                "initComplete": function (settings, json) {
                    //Accessibility: Applies various Accessibility features to this dataTable.
                    makeDataTableAccessible($m('#gridReimbursementSchedQ').DataTable());
                },
                "fnRowCallback": function (nRow, aaData, iDisplayIndex) {
                    var uniqueID = generateUniqueRowIdForFnRowCallback(iDisplayIndex, nRow);
                    $m('td:eq(1)', nRow).html('<a class="editor_edit_ReimbursementSchedQ" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/edit.png" title="Edit Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_ReimbursementSchedQ" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/delete.png" title="Delete Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a>');
                },
                "fnServerData": function (url, data, callback) {
                    $.ajax({
                        "url": "@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/GetReimbursementData/")",
                        "data": {
                            strTransNumber: sessionStorage.getItem("TransIdReimbursement").toString()
                        },
                        "success": callback,
                        "dataType": "json",
                        "type": "POST",
                        "error": function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                        }
                    });
                },
                "order": [[0, "desc"]]
            });
            $m('#gridReimbursementSchedQ').DataTable().ajax.reload();
            tableReimbursement.search('').columns().search('').draw();
            tableReimbursement.columns.adjust().responsive.recalc();
            tableReimbursement.responsive.recalc();

            // Outstanding Amount.
            GetReimbursementDetailsTotalAmtAndUpdateLabels("reimbursement");

            $('html, body').animate({ scrollTop: $("#divShowReimbursement").offset().top }, 500);
        });


        // Update Reimbursement Details Data.
        $m('#gridReimbursementSchedQ tbody').on('click', 'a.editor_edit_ReimbursementSchedQ', function (e) {
            e.preventDefault();
            var dataReimbursement = tableReimbursement.row($(this).parents('tr')).data();
            //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                 txtFilerId: $("#txtFilerID").val(),
                 lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                 strElectionTypeId: $m("#lstElectionType option:selected").val(),
                 lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                 lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                 lstFilingDate: $m("#lstFilingDate option:selected").text(),
                 txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }, function (resultEditFlag) {
                if (resultEditFlag == "TRUE") {

                    sessionStorage.setItem("TransNumberReim", dataReimbursement[17].toString());
                    sessionStorage.setItem("FilingEntityId", dataReimbursement[1].toString());
                    sessionStorage.setItem("ReimOrgAmt", dataReimbursement[14].toString());
                    $("#divLoading").hide();
                    dialog_Sched_Q_Reim.dialog("open");

                    // Add/Edit
                    $("#btnSaveSchedQReim").hide();
                    $("#btnUpdateSchedQReim").show();

                    sessionStorage.setItem("flagUpdate", "null");
                    sessionStorage.setItem("Reimbursement", "Yes");

                    // Clear Dialogbox.
                    ClearDialogBoxValidationSchedQReim();

                    appCommonEFS_ClearLabeltextAndRemoveClassError(["txtCurrentDateSchedQReim", "txtDetailsPayeeNameReim", "lstPurposeCodeReim", "txtAmtReim"]);

                    sessionStorage.setItem("UpdateFlagSchedQReim", "Yes");

                    $("#lblExplanationReim").text("Explanation");

                    if (dataReimbursement[16].toString() == "Yes") { // Itemized.

                        $("#txtCurrentDateSchedQReim").val(dataReimbursement[5].toString());
                        if (dataReimbursement[5].toString() != "" || dataReimbursement[5].toString() != null) {
                            var MyDate = new Date($("#txtCurrentDateSchedQReim").val().toString());
                            var MyDateString;
                            MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                                + ('0' + MyDate.getDate()).slice(-2) + '/'
                                + MyDate.getFullYear();
                            $("#txtCurrentDateSchedQReim").val("");
                            $("#txtCurrentDateSchedQReim").val(MyDateString);
                            $("#txtCurrentDateSchedQReim").removeClass("watermarkHTMLTextBox");
                        }
                        $("#txtCurrentDateSchedQReim").focus();
                        $("#txtOriginalPayeeName").val(dataReimbursement[6].toString());
                        $("#txtDetailsPayeeNameReim").val(dataReimbursement[7].toString());
                        $("#txtCountryReim").val(dataReimbursement[8].toString());
                        $("#txtStreetNameReim").val(dataReimbursement[9].toString());
                        $("#txtCityReim").val(dataReimbursement[10].toString());
                        $("#txtStateReim").val(dataReimbursement[11].toString());
                        $("#txtZipCodeReim").val(dataReimbursement[12].toString());
                        if (dataReimbursement[12].toString() != "" || dataReimbursement[12].toString() != null) {
                            $("#txtZipCodeReim").removeClass("watermarkHTMLTextBox");
                        }
                        else {
                            if (dataReimbursement[12].toString() == "United States") {
                                $("#txtZipCodeReim").addClass("watermarkHTMLTextBox");
                                $("#txtZipCodeReim").blur();
                            }
                        }
                        if (dataReimbursement[12].toString() == "") {
                            $("#txtZipCodeReim").addClass("watermarkHTMLTextBox");
                            $("#txtZipCodeReim").blur();
                        }
                        $("#txtAmtReim").val(dataReimbursement[14].toString());
                        if (dataReimbursement[14].toString() != "" || dataReimbursement[14].toString() != null) {
                            $("#txtAmtReim").removeClass("watermarkHTMLTextBox");
                        }
                        $("#txtExplanationSchedQReim").val(dataReimbursement[15].toString());

                        if (dataReimbursement[8].toString() == "United States") {
                            $("#chkCountryReim").prop('checked', false);
                            $("#txtCountryReim").prop("disabled", true);
                            $("#txtStateReim").prop('maxLength', '2');
                        }
                        else { // Other Country
                            $("#chkCountryReim").prop('checked', true);
                            $("#txtCountryReim").prop("disabled", false);

                            $("#txtStateReim").prop('maxLength', '30');
                            $("#txtZipCodeReim").removeClass("watermarkHTMLTextBox");
                            $m('#txtZipCodeReim').attr("placeholder", "");
                        }

                        if (dataReimbursement[2].toString() == "30") {
                            $("#lblExplanationReim").text("* Explanation");
                        }

                        // Bind Purpose  Code
                        var options = {};
                        options.url = "@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/GetPurposeCodeReimData/")";
                        options.type = "POST";
                        options.data = null;
                        options.dataType = "json";
                        options.contentType = "application/json";
                        options.success = function (resultsCntrbType) {
                            $("#lstPurposeCodeReim").empty();
                            for (var i = 0; i < resultsCntrbType.length; i++) {
                                $("#lstPurposeCodeReim").append("<option value='" + resultsCntrbType[i].Value + "'>" + resultsCntrbType[i].Text + "</option>");
                            }
                            // Set Contributor Type
                            if (dataReimbursement[2].toString() != null || dataReimbursement[2].toString() != "") {
                                $m("#lstPurposeCodeReim option")
                                    .filter(function () { return $m(this).val() == dataReimbursement[2].toString(); })
                                    .attr('selected', 'selected');
                            }
                        };
                        options.error = function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                        };
                        $.ajax(options);

                        $("#lstItemizedReim").prop("disabled", true);
                        $("#lstItemizedReim")[0].selectedIndex = 0;

                        // Hide/Show
                        $("#tdDatePaidReim").show();
                        $("#tdOriginalPayeeName").show();
                        $("#tdDetailsPayeeNameReim").show();
                        $("#divStreetAddressReim").show();
                        $("#divCityReim").show();
                        $("#divStateReim").show();
                        $("#divZip5Reim").show();
                        $("#tdPurposeCodeReim").show();
                        $("#tdAmtReim").show();
                        $("#tdExplanationReim").show();
                        $("#tdCountryContributionChkReim").show();
                        $("#tdCountryContributionTxtReim").show();
                        // Hide/Show
                    } else { // Unitemized.

                        $("#txtCurrentDateSchedQReim").val(dataReimbursement[5].toString());
                        if (dataReimbursement[5].toString() != "" || dataReimbursement[5].toString() != null) {
                            var MyDate = new Date($("#txtCurrentDateSchedQReim").val().toString());
                            var MyDateString;
                            MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                                + ('0' + MyDate.getDate()).slice(-2) + '/'
                                + MyDate.getFullYear();
                            $("#txtCurrentDateSchedQReim").val("");
                            $("#txtCurrentDateSchedQReim").val(MyDateString);
                            $("#txtCurrentDateSchedQReim").removeClass("watermarkHTMLTextBox");
                        }
                        $("#txtCurrentDateSchedQReim").focus();
                        $("#txtOriginalPayeeName").val(dataReimbursement[6].toString());
                        $("#txtAmtReim").val(dataReimbursement[14].toString());
                        if (dataReimbursement[14].toString() != "" || dataReimbursement[14].toString() != null) {
                            $("#txtAmtReim").removeClass("watermarkHTMLTextBox");
                        }
                        $("#txtExplanationSchedQReim").val(dataReimbursement[15].toString());

                        $("#lstItemizedReim").prop("disabled", true);
                        $("#lstItemizedReim")[0].selectedIndex = 1;

                        // Hide/Show
                        $("#tdDatePaidReim").show();
                        $("#tdOriginalPayeeName").show();
                        $("#tdDetailsPayeeNameReim").hide();
                        $("#divStreetAddressReim").hide();
                        $("#divCityReim").hide();
                        $("#divStateReim").hide();
                        $("#divZip5Reim").hide();
                        $("#tdPurposeCodeReim").hide();
                        $("#tdAmtReim").show();
                        $("#tdExplanationReim").show();
                        $("#tdCountryContributionChkReim").hide();
                        $("#tdCountryContributionTxtReim").hide();
                        // Hide/Show
                    }
                } else {
                    $("#divLoading").hide();//When  resultEditFlag != "TRUE".
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before editing this Transaction.', 'Ok', '');
                }
            }).fail(function () {
                $("#divLoading").hide();// GetEditFlag failed.
            });
        });


        // EDIT CREDIT CARD ITMIZATION TRANSACTIONS.
        //------------------------------------------------------------------------------------------------------------------
        // Update Credit Card Itemization.
        $m('#gridCreditCardPaymentSchedF tbody').on('click', 'a.editor_edit_CreditCardItemSchedQ', function (e) {
            e.preventDefault();
            var dataCCItemization = tableCreditCardPayment.row($(this).parents('tr')).data();
            //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                txtFilerId: $("#txtFilerID").val(),
                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }, function (resultEditFlag) {
                if (resultEditFlag == "TRUE") {
                    sessionStorage.setItem("TransNumberCCI", dataCCItemization[17].toString());
                    sessionStorage.setItem("FilingEntityId", dataCCItemization[1].toString());
                    sessionStorage.setItem("CCIOrgAmt", dataCCItemization[14].toString());
                    $("#divLoading").hide();
                    dialog_Sched_Q_CCI.dialog("open");

                    // Add/Edit
                    $("#btnSaveSchedQCCItem").hide();
                    $("#btnUpdateSchedQCCItem").show();

                    // Clear Dialogbox.
                    ClearDialogBoxValidationSchedQCCI();

                    appCommonEFS_ClearLabeltextAndRemoveClassError(["txtCurrentDateSchedQCCI", "txtDetailsPayeeNameCCI", "lstPurposeCodeCCI", "txtAmountCCI"]);

                    sessionStorage.setItem("UpdateFlagSchedQCCI", "Yes");

                    $("#lblExplanationCCI").text("Explanation");

                    if (dataCCItemization[16].toString() == "Yes") { // Itemized.

                        $("#txtCurrentDateSchedQCCI").val(dataCCItemization[5].toString());
                        if (dataCCItemization[5].toString() != "" || dataCCItemization[5].toString() != null) {
                            var MyDate = new Date($("#txtCurrentDateSchedQCCI").val().toString());
                            var MyDateString;
                            MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                                + ('0' + MyDate.getDate()).slice(-2) + '/'
                                + MyDate.getFullYear();
                            $("#txtCurrentDateSchedQCCI").val("");
                            $("#txtCurrentDateSchedQCCI").val(MyDateString);
                            $("#txtCurrentDateSchedQCCI").removeClass("watermarkHTMLTextBox");
                        }
                        $("#txtCurrentDateSchedQCCI").focus();
                        $("#txtOriginalPayeeNameCCI").val(dataCCItemization[6].toString());
                        $("#txtDetailsPayeeNameCCI").val(dataCCItemization[7].toString());
                        $("#txtCountryCCI").val(dataCCItemization[8].toString());
                        $("#txtStreetNameCCI").val(dataCCItemization[9].toString());
                        $("#txtCityCCI").val(dataCCItemization[10].toString());
                        $("#txtStateCCI").val(dataCCItemization[11].toString());
                        $("#txtZipCodeCCI").val(dataCCItemization[12].toString());
                        if (dataCCItemization[12].toString() != "" || dataCCItemization[12].toString() != null) {
                            $("#txtZipCodeCCI").removeClass("watermarkHTMLTextBox");
                        } else {
                            if (dataCCItemization[12].toString() == "United States") {
                                $("#txtZipCodeCCI").addClass("watermarkHTMLTextBox");
                                $("#txtZipCodeCCI").blur();
                            }
                        }
                        if (dataCCItemization[12].toString() == "") {
                            $("#txtZipCodeCCI").addClass("watermarkHTMLTextBox");
                            $("#txtZipCodeCCI").blur();
                        }
                        $("#txtAmountCCI").val(dataCCItemization[14].toString());
                        if (dataCCItemization[14].toString() != "" || dataCCItemization[14].toString() != null) {
                            $("#txtAmountCCI").removeClass("watermarkHTMLTextBox");
                        }
                        $("#txtExplanationCCI").val(dataCCItemization[15].toString());

                        if (dataCCItemization[8].toString() == "United States") {
                            $("#chkCountryCCI").prop('checked', false);
                            $("#txtCountryCCI").prop("disabled", true);
                            $("#txtStateCCI").prop('maxLength', '2');
                        } else { // Other Country
                            $("#chkCountryCCI").prop('checked', true);
                            $("#txtCountryCCI").prop("disabled", false);

                            $("#txtStateCCI").prop('maxLength', '30');
                            $("#txtZipCodeCCI").removeClass("watermarkHTMLTextBox");
                            $m('#txtZipCodeCCI').attr("placeholder", "");
                        }

                        if (dataCCItemization[2].toString() == "30") {
                            $("#txtExplanationCCI").text("* Explanation");
                        }

                        // Bind Purpose  Code
                        var options = {};
                        options.url = "@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/GetPurposeCodeReimData/")";
                        options.type = "POST";
                        options.data = null;
                        options.dataType = "json";
                        options.contentType = "application/json";
                        options.success = function (resultsCntrbType) {
                            $("#lstPurposeCodeCCI").empty();
                            for (var i = 0; i < resultsCntrbType.length; i++) {
                                $("#lstPurposeCodeCCI").append("<option value='" + resultsCntrbType[i].Value + "'>" + resultsCntrbType[i].Text + "</option>");
                            }
                            // Set Contributor Type
                            if (dataCCItemization[2].toString() != null || dataCCItemization[2].toString() != "") {
                                $m("#lstPurposeCodeCCI option")
                                    .filter(function () { return $m(this).val() == dataCCItemization[2].toString(); })
                                    .attr('selected', 'selected');
                            }
                        };
                        options.error = function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                        };
                        $.ajax(options);

                        $("#lstItemizedCCI").prop("disabled", true);
                        $("#lstItemizedCCI")[0].selectedIndex = 0;

                        // Hide/Show
                        $("#tdDatePaidCCI").show();
                        $("#tdPayeeNameOrgCCI").show();
                        $("#tdPayeeNameCCI").show();
                        $("#divStreetAddressCCI").show();
                        $("#divCityCCI").show();
                        $("#divStateCCI").show();
                        $("#divZip5CCI").show();
                        $("#tdPurposeCodeItemization").show();
                        $("#tdAmtCCI").show();
                        $("#tdExplanationCCI").show();
                        $("#tdCountryContributionChkCCI").show();
                        $("#tdCountryContributionTxtCCI").show();
                        // Hide/Show
                    } else { // Unitemized.

                        $("#txtCurrentDateSchedQCCI").val(dataCCItemization[5].toString());
                        if (dataCCItemization[5].toString() != "" || dataCCItemization[5].toString() != null) {
                            var MyDate = new Date($("#txtCurrentDateSchedQCCI").val().toString());
                            var MyDateString;
                            MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                                + ('0' + MyDate.getDate()).slice(-2) + '/'
                                + MyDate.getFullYear();
                            $("#txtCurrentDateSchedQCCI").val("");
                            $("#txtCurrentDateSchedQCCI").val(MyDateString);
                            $("#txtCurrentDateSchedQCCI").removeClass("watermarkHTMLTextBox");
                        }
                        $("#txtCurrentDateSchedQCCI").focus();
                        $("#txtOriginalPayeeNameCCI").val(dataCCItemization[6].toString());
                        $("#txtAmountCCI").val(dataCCItemization[14].toString());
                        if (dataCCItemization[14].toString() != "" || dataCCItemization[14].toString() != null) {
                            $("#txtAmountCCI").removeClass("watermarkHTMLTextBox");
                        }
                        $("#txtExplanationCCI").val(dataCCItemization[15].toString());

                        $("#lstItemizedCCI").prop("disabled", true);
                        $("#lstItemizedCCI")[0].selectedIndex = 1;

                        // Hide/Show
                        $("#tdDatePaidCCI").show();
                        $("#tdPayeeNameOrgCCI").show();
                        $("#tdPayeeNameCCI").hide();
                        $("#divStreetAddressCCI").hide();
                        $("#divCityCCI").hide();
                        $("#divStateCCI").hide();
                        $("#divZip5CCI").hide();
                        $("#tdPurposeCodeItemization").hide();
                        $("#tdAmtCCI").show();
                        $("#tdExplanationCCI").show();
                        $("#tdCountryContributionChkCCI").hide();
                        $("#tdCountryContributionTxtCCI").hide();
                        // Hide/Show
                    }
                } else {//When resultDeleteFlag != "True"
                    $("#divLoading").hide();
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before editing this Transaction.', 'Ok', '');
                }
            }).fail(function () {
                $("#divLoading").hide();// GetEditFlag failed.
            });
        });
        // EDIT CREDIT CARD ITMIZATION TRANSACTIONS.
        //------------------------------------------------------------------------------------------------------------------


        // Delete REIMBURSEMENT DETAILS Data.
        $m('#gridReimbursementSchedQ tbody').on('click', 'a.editor_remove_ReimbursementSchedQ', function (e) {
            e.preventDefault();
            var dataTrans = tableReimbursement.row($(this).parents('tr')).data();
            //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                 txtFilerId: $("#txtFilerID").val(),
                 lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                 strElectionTypeId: $m("#lstElectionType option:selected").val(),
                 lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                 lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                 lstFilingDate: $m("#lstFilingDate option:selected").text(),
                 txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
             }, function (resultEditFlag) {
                 if (resultEditFlag == "TRUE") {
                     var resultsPartDel = "Are you sure you want to delete the reimbursement details transaction?";

                    $m('#modal_dialog').text(resultsPartDel);
                    $m("#modal_dialog").dialog({
                        resizable: false,
                        modal: true,
                        width: '400px',
                        height: 'auto',
                        bgiframe: false,
                        position: {
                            my: "center top",
                            at: "center top+400"
                        },
                        open: function (event, ui) {
                            $("#divLoading").hide();
                            hideDialogXButton(this);
                        },
                        buttons: {
                            "OK": function () {
                                // Close Confirm Box.
                                $m(this).dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                $("#divLoading").show();
                                $.post("@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/DeleteReimbursementData/")", {
                                    strTransNumber: dataTrans[17].toString()
                                }, function (results) {

                                    window.status = "Transaction deleted successfully";
                                    // Refresh Rimbursement Details Grid and hide loading 
                                    callGetReimbursementDataReinbursement();

                                    // Outstanding Amount.
                                    GetReimbursementDetailsTotalAmtAndUpdateLabels("reimbursement");
                                }).always(function () {
                                    $("#divLoading").hide();//DeleteReimbursementData completed.
                                });
                            },
                            "Cancel": function () {
                                $m(this).dialog("close");
                            }
                        }
                    });
                 } else {//When  resultEditFlag != "TRUE".
                     $("#divLoading").hide();
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before removing this Transaction.', 'Ok', '');
                 }
            }).fail(function () {
                $("#divLoading").hide();// GetEditFlag failed.
            });
        });


        // DELETE CREDIT CARD TRANSACTIONS DATA.
        //------------------------------------------------------------------------------------------------------------------------
        // Delete REIMBURSEMENT DETAILS Data.
        $m('#gridCreditCardPaymentSchedF tbody').on('click', 'a.editor_remove_CreditCardItemSchedQ', function (e) {
            e.preventDefault();
            var dataTrans = tableCreditCardPayment.row($(this).parents('tr')).data();
            //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                 txtFilerId: $("#txtFilerID").val(),
                 lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                 strElectionTypeId: $m("#lstElectionType option:selected").val(),
                 lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                 lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                 lstFilingDate: $m("#lstFilingDate option:selected").text(),
                 txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
             }, function (resultEditFlag) {
                 if (resultEditFlag == "TRUE") {

                    var resultsPartDel = "Are you sure you want to delete the Credit Card Itemization transaction?";

                    $m('#modal_dialog').text(resultsPartDel);
                    $m("#modal_dialog").dialog({
                        resizable: false,
                        modal: true,
                        width: '400px',
                        height: 'auto',
                        bgiframe: false,
                        position: {
                            my: "center top",
                            at: "center top+400"
                        },
                        open: function (event, ui) {
                            $("#divLoading").hide();
                            hideDialogXButton(this);
                        },
                        buttons: {
                            "OK": function () {
                                // Close Confirm Box.
                                $m(this).dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                $("#divLoading").show();
                                $.post("@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/DeleteReimbursementData/")", {
                                    strTransNumber: dataTrans[17].toString()
                                }, function (results) {

                                    window.status = "Transaction deleted successfully";

                                    callGetReimbursementDataCreditCard();

                                    // Outstanding Amount.
                                    GetReimbursementDetailsTotalAmtAndUpdateLabels("creditcard");
                                }).always(function () {
                                    $("#divLoading").hide();// DeleteReimbursementData is done.
                                });
                            },
                            "Cancel": function () {
                                $m(this).dialog("close");
                            }
                        }
                    });
                 } else {//When  resultEditFlag != "TRUE".
                     $("#divLoading").hide();
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before removing this Transaction.', 'Ok', '');
                }
            }).fail(function () {
                $("#divLoading").hide();// GetEditFlag failed.
            });
        });
        // DELETE CREDIT CARD TRANSACTIONS DATA.
        //------------------------------------------------------------------------------------------------------------------------
        // CREDIT CARD ITEMIZATION............
        // ----------------------------------------------------------------------------------------------------------------------
        // EDIT FILING TRANSACTIONS GRID - CREDIT CARD ITEMIZATION DETAILS (CREDIT CARD PAYMENT)
        $m('#gridFilingTransactions tbody').on('click', 'a.editor_CCItemizationSchedQ', function (e) {
            e.preventDefault();

            $("#divShowCreditCardPayment").show();

            // Hide Reimbursement Details.
            $("#divShowReimbursement").hide();

            sessionStorage.setItem("HideDetailsGridsQ", "Yes");

            sessionStorage.setItem("CCIGridReferesh", "Yes");
            sessionStorage.setItem("SchedFPopuUpCloseMessageCCI", "No");

            var dataTransCCI = tableFilingTransactions.row($(this).parents('tr')).data();

            var originalPayeeName = dataTransCCI[13].toString();

            $("#txtOriginalPayeeName").prop("disabled", true);
            $("#txtOriginalPayeeName").val(originalPayeeName);

            sessionStorage.setItem("CCITransID", dataTransCCI[42].toString());

            sessionStorage.setItem("TransNumber", dataTransCCI[42].toString());
            sessionStorage.setItem("FilingSchedId", dataTransCCI[1].toString());
            sessionStorage.setItem("FilingSchedDate", dataTransCCI[10].toString());
            sessionStorage.setItem("CreditCardPayOrgAmt", dataTransCCI[24].toString());
            sessionStorage.setItem("PayeeNameReimCCI", dataTransCCI[13].toString());

            tableCreditCardPayment = $m('#gridCreditCardPaymentSchedF').DataTable({
                "bProcessing": true,
                "responsive": true,
                "deferRender": true,
                "retrieve": true,
                "columnDefs": [
                    {
                        "targets": [0, 1, 2, 17],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        "targets": [4],
                        "fnCreatedCell": function (cell) {
                            cell.setAttribute('aria-label', "Row Actions");
                        }
                    },
                ],
                "initComplete": function (settings, json) {
                    //Accessibility: Applies various Accessibility features to this dataTable.
                    makeDataTableAccessible($m('#gridCreditCardPaymentSchedF').DataTable());
                },
                "fnRowCallback": function (nRow, aaData, iDisplayIndex) {
                    var uniqueID = generateUniqueRowIdForFnRowCallback(iDisplayIndex, nRow);
                    $m('td:eq(1)', nRow).html('<a class="editor_edit_CreditCardItemSchedQ" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/edit.png" title="Edit Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_CreditCardItemSchedQ" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/delete.png" title="Delete Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a>');
                },
                "fnServerData": function (url, data, callback) {
                    $.ajax({
                        "url": "@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/GetReimbursementData/")",
                        "data": {
                            strTransNumber: sessionStorage.getItem("CCITransID").toString()
                        },
                        "success": callback,
                        "dataType": "json",
                        "type": "POST",
                        "error": function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                        }
                    });
                },
                "order": [[0, "desc"]]
            });
            $m('#gridCreditCardPaymentSchedF').DataTable().ajax.reload();
            tableCreditCardPayment.search('').columns().search('').draw();
            tableCreditCardPayment.columns.adjust().responsive.recalc();
            tableCreditCardPayment.responsive.recalc();

            $.post("@Url.Content("~/ExpenditurePaymentsSchedF/GetCreditCardItemTotalAmt/")", {
                strTransNumber: sessionStorage.getItem("TransNumber").toString()
            }, function (results) {
                if (results != "") {
                    // Get the Total Reimbursement Amount.
                    var totalReimDetailsAmt = results.toString();
                    var reimbOrgAmt = sessionStorage.getItem("CreditCardPayOrgAmt").toString();

                    var resAmount = parseFloat(reimbOrgAmt) - parseFloat(totalReimDetailsAmt);

                    $("#lblBalanceCCIAmt").text("Outstanding Amount: $" + resAmount.toFixed(2).toString());
                    $("#lblBalanceCCIAmt").show();
                }
                else {
                    var reimbOrgAmt = sessionStorage.getItem("CreditCardPayOrgAmt").toString();

                    $("#lblBalanceCCIAmt").text("Outstanding Amount: $" + parseFloat(reimbOrgAmt).toFixed(2).toString());
                    $("#lblBalanceCCIAmt").show();

                    $("#btnAddNewCreditCardPayment").show();
                }

            });

            $('html, body').animate({ scrollTop: $("#divShowCreditCardPayment").offset().top }, 400);

        });


        // CREDIT CARD ITEMIZATION............
        // ----------------------------------------------------------------------------------------------------------------------

        // ROW SELECT YELLOW HIGHLIGHTED...
        $m('#gridFilingTransactions tbody').on('click', 'tr', function (e) {
            e.preventDefault();

            if ($(this).hasClass('selected') != true) {
                tableFilingTransactions.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
                // Bind Data
            }

            if (sessionStorage.getItem("HideDetailsGridsQ") != null) {
                if (sessionStorage.getItem("HideDetailsGridsQ").toString() == "No") {
                    // Hide Reimbursement Details.
                    $("#divShowReimbursement").hide();
                    // Hide Credit Card Itemization
                    $("#divShowCreditCardPayment").hide();
                } else {
                    sessionStorage.removeItem("HideDetailsGridsQ");
                }
            } else {
                // Hide Reimbursement Details.
                $("#divShowReimbursement").hide();
                // Hide Credit Card Itemization
                $("#divShowCreditCardPayment").hide();
            }
        });

        //==============================================================================================================================================
        // EDIT COMMON
        // ---------------------------------------------------------------------------------------------------------------------------------------------
        // Edit from Other Schedule functionality
        if (sessionStorage.getItem("EditFlag") != null) {
            if (sessionStorage.getItem("EditFlag").toString() == "True") {
                sessionStorage.setItem("UpdateFlagSchedQ", "Yes");

                $("#lstTransactionType option").each(function () {
                    if ($(this).val() == sessionStorage.getItem("ScheduleId").toString()) {
                        //$(this).attr('selected', 'selected');
                        $(this).prop("selected", true);
                    }
                });

                // BIND COMMON SESSION VARIABLE.
                sessionStorage.setItem("TransactionType", sessionStorage.getItem("ScheduleId").toString());

                $.post("@Url.Content("~/_UC_GridCommonControl/GetEditTransactionData/")", {
                    strTransNumber: sessionStorage.getItem("TransNumberEdit").toString()
                }, function (resultsEditData) {
                    $.each(resultsEditData, function (i, item) {

                        sessionStorage.setItem("TransNumber", item.TransNumber.toString());
                        sessionStorage.setItem("FilingSchedId", item.FilingSchedId.toString());
                        sessionStorage.setItem("FilingEntityId", item.FilingEntityId.toString());
                        sessionStorage.setItem("LibFlngEntyId", item.FilingEntityId.toString());

                        sessionStorage.setItem("Reimbursement", "No");
                        sessionStorage.setItem("flagUpdate", "true");

                        dialog_Sched_Q.dialog("open");

                        $("#divShowReimbursement").hide();

                        $("#txtDateRcvd1").hide();
                        $("#txtCurrentDateSchedQ").focus();

                        sessionStorage.setItem("UpdateFlagSchedQ", "Yes");

                        if (item.RItemized.toString() == "Yes") { // ITEMIZED

                            $("#lblExplanation").text("Explanation");

                            $("#lstItemized")[0].selectedIndex = 0;
                            $("#lstItemized").prop("disabled", true);
                            $("#lstPurposeCode").prop("disabled", true);

                            sessionStorage.setItem("DatePaidVal", item.SchedDate.toString());
                            $("#txtCurrentDateSchedQ").val(item.SchedDate.toString());
                            $("#txtCurrentDateSchedQ").removeClass('watermark');
                            if ($("#txtCurrentDateSchedQ").val().toString() != "MM/DD/YYYY") {

                                $("#txtCurrentDateSchedQ").removeClass('watermarkHTMLTextBox');
                                $("#txtCurrentDateSchedQ").removeClass("watermarkHTMLTextBox");
                                if (item.SchedDate.toString() != "" || item.SchedDate.toString() != null) {
                                    var MyDate = new Date($("#txtCurrentDateSchedQ").val().toString());
                                    var MyDateString;
                                    MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                                        + ('0' + MyDate.getDate()).slice(-2) + '/'
                                        + MyDate.getFullYear();
                                    $("#txtCurrentDateSchedQ").val("");
                                    $("#txtCurrentDateSchedQ").val(MyDateString);
                                    $("#txtCurrentDateSchedQ").removeClass("watermarkHTMLTextBox");
                                }
                            }
                            $("#txtCurrentDateSchedQ").focus();
                            $("#txtPayeeName").val(item.FilingEntityName.toString());
                            $("#txtStreetName").val(item.FilingStreetName.toString());
                            $("#txtCity").val(item.FilingCity.toString());
                            $("#txtState").val(item.FilingState.toString());
                            $("#txtZipCode").val(item.FilingZip.toString());
                            /// Country
                            $("#txtCountry").val(item.FilingCountry.toString());
                            if (item.FilingCountry.toString() == "United States") {
                                $("#chkCountry").prop('checked', false);
                                $("#txtCountry").prop("disabled", true);
                                $("#txtState").prop('maxLength', '2');
                            } else { // Other Country
                                $("#chkCountry").prop('checked', true);
                                $("#txtCountry").prop("disabled", false);
                                $("#txtState").prop('maxLength', '30');
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                                $m('#txtZipCode').attr("placeholder", "");
                            }
                            if (item.FilingZip.toString() != "") {
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            } else {
                                $("#txtZipCode").addClass("watermarkHTMLTextBox");
                                if (item.FilingCountry.toString() == "United States") {
                                    $("#txtZipCode").blur();
                                }
                            }
                            if (item.PaymentTypeId.toString() == "1") {
                                $("#tdCheck").show();
                                $("#txtCheck").val(item.PayNumber.toString());
                            } else {
                                $("#tdCheck").hide();
                            }
                            var originalAmount = item.OriginalAmount.toString()
                            $("#txtAmtSchedQ").val(originalAmount);
                            if (item.OriginalAmount.toString() != "") {
                                $("#txtAmtSchedQ").removeClass("watermarkHTMLTextBox");
                            }
                            $("#txtExplanationSchedQ").val(item.TransExplanation.toString());

                            if ($("#txtZipCode").val().toString() != "00000-0000") {
                                $("#txtZipCode").removeClass('watermark');
                            }

                            // Method - Other
                            if (item.PaymentTypeId.toString() == "7") {
                                $("#lblExplanation").text("* Explanation");
                            }
                            // Purpose Code - Other
                            if (item.PurposeCodeDesc.toString() == "Other") {
                                $("#lblExplanation").text("* Explanation");
                            }

                            // Bind Method Data
                            var options = {};
                            options.url = "@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/GetPaymentMethodData/")";
                            options.type = "POST";
                            options.data = null;
                            options.dataType = "json";
                            options.contentType = "application/json";
                            options.success = function (resultsMethod) {
                                $("#lstMethod").empty();
                                for (var i = 0; i < resultsMethod.length; i++) {
                                    $("#lstMethod").append("<option value='" + resultsMethod[i].Value + "'>" + resultsMethod[i].Text + "</option>");
                                }
                                // Set Method
                                if (item.PaymentTypeId.toString() != null || item.PaymentTypeId.toString() != "") {
                                    $m("#lstMethod option")
                                        .filter(function () { return $m(this).val() == item.PaymentTypeId.toString(); })
                                        .attr("selected", "selected");
                                }
                            };
                            options.error = function () {
                                ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                            };
                            $.ajax(options);

                            // Bind Purpose Code Data.
                            var options = {};
                            options.url = "@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/GetPurposeCodeData/")";
                            options.type = "POST";
                            options.data = null;
                            options.dataType = "json";
                            options.contentType = "application/json";
                            options.success = function (resultsMethod) {
                                $("#lstPurposeCode").empty();
                                for (var i = 0; i < resultsMethod.length; i++) {
                                    $("#lstPurposeCode").append("<option value='" + resultsMethod[i].Value + "'>" + resultsMethod[i].Text + "</option>");
                                }
                                // Set Method
                                if (item.PurposeCodeDesc.toString() != null || item.PurposeCodeDesc.toString() != "") {
                                    $m("#lstPurposeCode option")
                                        .filter(function () { return $m(this).text() == item.PurposeCodeDesc.toString(); })
                                        .attr("selected", "selected");
                                }
                            };
                            options.error = function () {
                                ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                            };
                            $.ajax(options);

                            // Hide/Show
                            $("#tdDatePaidReim").show();
                            $("#tdPayorNameExpenditurePayments").show();
                            $("#divStreetAddress").show();
                            $("#divCity").show();
                            $("#divState").show();
                            $("#divZip5").show();
                            $("#tdPurposeCodeExpenditurePayments").show();
                            $("#tdMethodNonHouseKeepingScheP").show();
                            $("#tdAmt").show();
                            $("#tdExplanation").show();
                            $("#tdCountryContributionChk").show();
                            $("#tdCountryContributionTxt").show();
                            // Hide/Show
                        } else { // UNITEMIZED TRANSACTIONS.
                            $("#lstItemized")[0].selectedIndex = 1;
                            $("#lstItemized").prop("disabled", true);

                            $("#txtCurrentDateSchedQ").val(item.SchedDate.toString());
                            $("#txtCurrentDateSchedQ").removeClass("watermarkHTMLTextBox");
                            if (item.SchedDate.toString() != "" || item.SchedDate.toString() != null) {
                                var MyDate = new Date($("#txtCurrentDateSchedQ").val().toString());
                                var MyDateString;
                                MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                                    + ('0' + MyDate.getDate()).slice(-2) + '/'
                                    + MyDate.getFullYear();
                                $("#txtCurrentDateSchedQ").val("");
                                $("#txtCurrentDateSchedQ").val(MyDateString);
                                $("#txtCurrentDateSchedQ").removeClass("watermarkHTMLTextBox");
                            }
                            $("#txtCurrentDateSchedQ").focus();
                            var originalAmount = item.OriginalAmount.toString();
                            $("#txtAmtSchedQ").val(originalAmount);
                            if (item.OriginalAmount.toString() != "") {
                                $("#txtAmtSchedQ").removeClass("watermarkHTMLTextBox");
                            }
                            $("#txtExplanationSchedQ").val(item.TransExplanation.toString());

                            $("#lblExplanation").text("Explanation");

                            // Hide/Show
                            $("#tdDatePaidReim").show();
                            $("#tdPayorNameExpenditurePayments").hide();
                            $("#divStreetAddress").hide();
                            $("#divCity").hide();
                            $("#divState").hide();
                            $("#divZip5").hide();
                            $("#tdPurposeCodeExpenditurePayments").hide();
                            $("#tdMethodNonHouseKeepingScheP").hide();
                            $("#tdAmt").show();
                            $("#tdExplanation").show();
                            $("#tdCountryContributionChk").hide();
                            $("#tdCountryContributionTxt").hide();
                            $("#tdCheck").hide();
                            // Hide/Show
                        }

                        // Common Code
                        sessionStorage.setItem("EditFlag", "False");
                    });
                });
            }
        }
        // ---------------------------------------------------------------------------------------------------------------------------------------------
        // EDIT COMMON
        //==============================================================================================================================================

        // EDIT FILING TRANSACTIONS RECORDS.
        $m('#gridFilingTransactions tbody').on('click', 'a.editor_edit_Sched_Q', function (e) {
            e.preventDefault();
            var data = tableFilingTransactions.row($(this).parents('tr')).data();
            //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                txtFilerId: $("#txtFilerID").val(),
                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }, function (resultEditFlag) {
                if (resultEditFlag == "TRUE") {

                    if (data[1].toString() == "17") { // Schedule Q

                        // Hide Reimbursement Details.
                        $("#divShowReimbursement").hide();
                        // Hide Credit Card Itemization
                        $("#divShowCreditCardPayment").hide();

                        sessionStorage.setItem("TransNumber", data[42].toString());
                        sessionStorage.setItem("FilingSchedId", data[1].toString());
                        sessionStorage.setItem("FilingEntityId", data[2].toString());
                        sessionStorage.setItem("LibFlngEntyId", data[2].toString());

                        sessionStorage.setItem("Reimbursement", "No");
                        sessionStorage.setItem("flagUpdate", "true");
                        $("#divShowReimbursement").hide();
                        $("#divLoading").hide();
                        dialog_Sched_Q.dialog("open");

                        // Clear Dialog box values.
                        ClearDialogBoxValidationSchedQ();

                        appCommonEFS_ClearLabeltextAndRemoveClassError(["txtCurrentDateSchedQ", "txtPayeeName", "lstPurposeCode", "txtAmtSchedQ"]);

                        sessionStorage.setItem("UpdateFlagSchedQ", "Yes");

                        $("#txtCurrentDateSchedQ").removeClass('watermark');

                        if (data[37].toString() == "Yes") { // ITEMIZED

                            $("#lblExplanation").text("Explanation");

                            $("#lstItemized")[0].selectedIndex = 0;
                            $("#lstItemized").prop("disabled", true);
                            $("#lstPurposeCode").prop("disabled", true);

                            $("#txtCurrentDateSchedQ").val(data[10].toString());
                            if ($("#txtCurrentDateSchedQ").val().toString() != "MM/DD/YYYY") {
                                $("#txtCurrentDateSchedQ").removeClass("watermarkHTMLTextBox");
                                if (data[10].toString() != "" || data[10].toString() != null) {
                                    var MyDate = new Date($("#txtCurrentDateSchedQ").val().toString());
                                    var MyDateString;
                                    MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                                        + ('0' + MyDate.getDate()).slice(-2) + '/'
                                        + MyDate.getFullYear();
                                    $("#txtCurrentDateSchedQ").val("");
                                    $("#txtCurrentDateSchedQ").val(MyDateString);
                                    $("#txtCurrentDateSchedQ").removeClass("watermarkHTMLTextBox");
                                }
                            }
                            sessionStorage.setItem("DatePaidVal", $("#txtCurrentDateSchedQ").val().toString());
                            $("#txtPayeeName").val(data[13].toString());
                            $("#txtStreetName").val(data[18].toString());
                            $("#txtCity").val(data[19].toString());
                            $("#txtState").val(data[20].toString());
                            $("#txtZipCode").val(data[21].toString());
                            $("#txtCountry").val(data[17].toString());
                            if (data[17].toString() == "United States") {
                                $("#chkCountry").prop('checked', false);
                                $("#txtCountry").prop("disabled", true);
                                $("#txtState").prop('maxLength', '2');
                            } else { // Other Country
                                $("#chkCountry").prop('checked', true);
                                $("#txtCountry").prop("disabled", false);
                                $("#txtState").prop('maxLength', '30');
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                                $m('#txtZipCode').attr("placeholder", "");
                            }
                            if (data[21].toString() != "") {
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            } else {
                                $("#txtZipCode").addClass("watermarkHTMLTextBox");
                                if (data[17].toString() == "United States") {
                                    $("#txtZipCode").blur();
                                }
                            }
                            if (data[5].toString() == "1") {
                                $("#tdCheck").show();
                                $("#txtCheck").val(data[23].toString());
                            } else {
                                $("#tdCheck").hide();
                            }
                            var originalAmount = data[24].toString();
                            $("#txtAmtSchedQ").val(originalAmount);
                            if ($("#txtAmtSchedQ").val().toString() != "" || $("#txtAmtSchedQ").val().toString() != "999999999.99") {
                                $("#txtAmtSchedQ").removeClass("watermarkHTMLTextBox");
                            }
                            $("#txtExplanationSchedQ").val(data[36].toString());

                            // Method - Other
                            if (data[5].toString() == "7") {
                                $("#lblExplanation").text("* Explanation");
                            }
                            // Purpose Code - Other
                            if (data[29].toString() == "Other") {
                                $("#lblExplanation").text("* Explanation");
                            }

                            // Bind Method Data
                            var options = {};
                            options.url = "@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/GetPaymentMethodData/")";
                            options.type = "POST";
                            options.data = null;
                            options.dataType = "json";
                            options.contentType = "application/json";
                            options.success = function (resultsMethod) {
                                $("#lstMethod").empty();
                                for (var i = 0; i < resultsMethod.length; i++) {
                                    $("#lstMethod").append("<option value='" + resultsMethod[i].Value + "'>" + resultsMethod[i].Text + "</option>");
                                }
                                // Set Method
                                if (data[5].toString() != null || data[5].toString() != "") {
                                    $m("#lstMethod option")
                                        .filter(function () { return $m(this).val() == data[5].toString(); })
                                        .attr("selected", "selected");
                                }
                            };
                            options.error = function () {
                                ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                            };
                            $.ajax(options);

                            // Bind Purpose Code Data.
                            var options = {};
                            options.url = "@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/GetPurposeCodeData/")";
                            options.type = "POST";
                            options.data = null;
                            options.dataType = "json";
                            options.contentType = "application/json";
                            options.success = function (resultsMethod) {
                                $("#lstPurposeCode").empty();
                                for (var i = 0; i < resultsMethod.length; i++) {
                                    $("#lstPurposeCode").append("<option value='" + resultsMethod[i].Value + "'>" + resultsMethod[i].Text + "</option>");
                                }
                                // Set Method
                                if (data[29].toString() != null || data[29].toString() != "") {
                                    $m("#lstPurposeCode option")
                                        .filter(function () { return $m(this).text() == data[29].toString(); })
                                        .attr("selected", "selected");
                                }
                            };
                            options.error = function () {
                                ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                            };
                            $.ajax(options);

                            // Hide/Show
                            $("#tdDatePaidReim").show();
                            $("#tdPayorNameExpenditurePayments").show();
                            $("#divStreetAddress").show();
                            $("#divCity").show();
                            $("#divState").show();
                            $("#divZip5").show();
                            $("#tdPurposeCodeExpenditurePayments").show();
                            $("#tdMethodNonHouseKeepingScheP").show();
                            $("#tdAmt").show();
                            $("#tdExplanation").show();
                            $("#tdCountryContributionChk").show();
                            $("#tdCountryContributionTxt").show();
                            // Hide/Show
                        } else { // UNITEMIZED TRANSACTIONS.
                            $("#lstItemized")[0].selectedIndex = 1;
                            $("#lstItemized").prop("disabled", true);

                            $("#txtCurrentDateSchedQ").val(data[10].toString());
                            $("#txtCurrentDateSchedQ").removeClass("watermarkHTMLTextBox");
                            if (data[10].toString() != "" || data[10].toString() != null) {
                                var MyDate = new Date($("#txtCurrentDateSchedQ").val().toString());
                                var MyDateString;
                                MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                                    + ('0' + MyDate.getDate()).slice(-2) + '/'
                                    + MyDate.getFullYear();
                                $("#txtCurrentDateSchedQ").val("");
                                $("#txtCurrentDateSchedQ").val(MyDateString);
                                $("#txtCurrentDateSchedQ").removeClass("watermarkHTMLTextBox");
                            }
                            var originalAmount = data[24].toString();
                            $("#txtAmtSchedQ").val(originalAmount);
                            if ($("#txtAmtSchedQ").val().toString() != "" || $("#txtAmtSchedQ").val().toString() != "999999999.99") {
                                $("#txtAmtSchedQ").removeClass("watermarkHTMLTextBox");
                            }
                            $("#txtExplanationSchedQ").val(data[36].toString());

                            $("#lblExplanation").text("Explanation");

                            // Hide/Show
                            $("#tdDatePaidReim").show();
                            $("#tdPayorNameExpenditurePayments").hide();
                            $("#divStreetAddress").hide();
                            $("#divCity").hide();
                            $("#divState").hide();
                            $("#divZip5").hide();
                            $("#tdPurposeCodeExpenditurePayments").hide();
                            $("#tdMethodNonHouseKeepingScheP").hide();
                            $("#tdAmt").show();
                            $("#tdExplanation").show();
                            $("#tdCountryContributionChk").hide();
                            $("#tdCountryContributionTxt").hide();
                            $("#tdCheck").hide();
                            // Hide/Show
                        }
                        $("#txtCurrentDateSchedQ").select();

                    } // Other Schedules
                    else if (["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "16", "17", "18"].includes(data[1].toString())) {
                        //Common code to determine redirect url and set session varialbes. Also hides $("#divLoading") on fail.
                        //Uses window.location.href
                        appCommonEFS_DetermineScheduleRedirect(data[1].toString(), data[42].toString());
                    }
                } else {
                    //resultEditFlag != "TRUE"
                    $("#divLoading").hide();
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before editing this Transaction.', 'Ok', '');
                }
            }).fail(function () {
                $("#divLoading").hide();// GetEditFlag failed.
            });
        });

        // Edit a record
        $m('#NonCompHKExpensesGrid tbody').on('click', 'a.editor_edit_NonCompExpenses', function (e) {
            e.preventDefault();
            var data = tableNonCompHKExpenses.row($(this).parents('tr')).data();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                 txtFilerId: $("#txtFilerID").val(),
                 lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                 strElectionTypeId: $m("#lstElectionType option:selected").val(),
                 lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                 lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                 lstFilingDate: $m("#lstFilingDate option:selected").text(),
                 txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
             }, function (resultEditFlag) {
                 if (resultEditFlag == "TRUE") {
                     $("#tdButtonUpdate").show();
                     $("#tdButtonSave").hide();

                     $("#btnCommonUpdate").show();
                     $("#btnCommonSave").hide();

                     sessionStorage.setItem("TransNumber", data[42].toString());
                     sessionStorage.setItem("FilingEntityId", data[2].toString());

                     var selectedTransactionType = data[1].toString();
                     var selectedContributorType = data[3].toString();
                     var selectedContributionType = data[4].toString();
                     var selectedPaymentTypeId = data[5].toString();

                     // Clear Data...
                     $("#txtDateRcvd").val("");
                     $("#txtFirstName").val("");
                     $("#txtMI").val("");
                     $("#txtLastName").val("");
                     $("#txtStreet").val("");
                     $("#txtStreetName").val("");
                     $("#txtCity").val("");
                     $("#txtState").val("");
                     $("#txtZip5").val("");
                     $("#txtZip4").val("");
                     $("#txtZip4").val("");
                     $("#txtCheck").val("");
                     $("#txtAmtSchedQ").val("");
                     $("#txtExplanationInKind").val("");


                     if (selectedTransactionType == "4") {
                         if (selectedContributorType == "1" || selectedContributorType == "2" || selectedContributorType == "3") {

                             $("#lstContributionNameInKind").val(selectedContributorType);
                             $("#lstContributionType").val(selectedContributionType);
                             $("#lstMethod").val(selectedPaymentTypeId);

                             $("#txtDateRcvd").val(data[6].toString());
                             $("#txtFirstName").val(data[9].toString());
                             $("#txtMI").val(data[10].toString());
                             $("#txtLastName").val(data[11].toString());
                             $("#txtStreet").val(data[12].toString());
                             $("#txtStreetName").val(data[13].toString());
                             $("#txtCity").val(data[14].toString());
                             $("#txtState").val(data[15].toString());
                             $("#txtZip5").val(data[16].toString());
                             if (data[17] == null)
                                 $("#txtZip4").val("");
                             else
                                 $("#txtZip4").val(data[17].toString());
                             $("#txtCheck").val(data[19].toString());
                             $("#txtAmtSchedQ").val(data[20].toString());
                             $("#txtExplanationInKind").val(data[30].toString());

                             //Show All TR
                             $("#thFirstNameInKind").show("slow");
                             $("#thMIInKind").show("slow");
                             $("#thLastNameInKind").show("slow");
                             $("#thStreetInKind").show("slow");
                             $("#thStreetNameInKind").show("slow");
                             $("#thCityInKind").show("slow");
                             $("#thStateInKind").show("slow");
                             $("#thZip5InKind").show("slow");
                             $("#thZip4InKind").show("slow");
                             $("#thContributionTypeInKind").show("slow");
                             $("#thMethodInKind").show("slow");
                             $("#thCheckInKind").show("slow");
                             $("#thAmtInKind").show("slow");
                             $("#thExplanationInKind").show("slow");

                             //Show All TD
                             $("#tdFirstNameInKind").show("slow");
                             $("#tdMIInKind").show("slow");
                             $("#tdLastNameInKind").show("slow");
                             $("#tdStreetInKind").show("slow");
                             $("#tdStreetNameInKind").show("slow");
                             $("#tdCityInKind").show("slow");
                             $("#tdStateInKind").show("slow");
                             $("#tdZip5InKind").show("slow");
                             $("#tdZip4InKind").show("slow");
                             $("#tdContributionTypeInKind").show("slow");
                             $("#tdMethodInKind").show("slow");
                             $("#tdCheck").show("slow");
                             $("#tAmtInKind").show("slow");
                             $("#tdExplanationInKind").show("slow");

                             $("#thParterShipNameInKind").hide("slow");
                             $("#tdPartnershipNameInKind").hide("slow");

                             $("#txtDateRcvd").focus().select();
                         }
                         else if (selectedContributorType == "8") {

                             // Bind Data
                             $("#txtDateRcvd").val(data[6].toString());
                             $("#txtAmtSchedQ").val(data[20].toString());
                             $("#txtExplanationInKind").val(data[30].toString());
                             $("#lstContributionNameInKind").val(selectedContributorType);


                             //Show All TR
                             $("#thAmtInKind").show("slow");
                             $("#thExplanationInKind").show("slow");

                             $("#thFirstNameInKind").hide("slow");
                             $("#thMIInKind").hide("slow");
                             $("#thLastNameInKind").hide("slow");
                             $("#thStreetInKind").hide("slow");
                             $("#thStreetNameInKind").hide("slow");
                             $("#thCityInKind").hide("slow");
                             $("#thStateInKind").hide("slow");
                             $("#thZip5InKind").hide("slow");
                             $("#thZip4InKind").hide("slow");
                             $("#thContributionTypeInKind").hide("slow");
                             $("#thMethodInKind").hide("slow");
                             $("#thCheckInKind").hide("slow");

                             //Show All TD
                             $("#tAmtInKind").show("slow");
                             $("#tdExplanationInKind").show("slow");

                             $("#tdFirstNameInKind").hide("slow");
                             $("#tdMIInKind").hide("slow");
                             $("#tdLastNameInKind").hide("slow");
                             $("#tdStreetInKind").hide("slow");
                             $("#tdStreetNameInKind").hide("slow");
                             $("#tdCityInKind").hide("slow");
                             $("#tdStateInKind").hide("slow");
                             $("#tdZip5InKind").hide("slow");
                             $("#tdZip4InKind").hide("slow");
                             $("#tdContributionTypeInKind").hide("slow");
                             $("#tdMethodInKind").hide("slow");
                             $("#tdCheck").hide("slow");

                             $("#thParterShipNameInKind").hide("slow");
                             $("#tdPartnershipNameInKind").hide("slow");

                             $("#txtDateRcvd").focus().select();

                         }
                         else if (selectedContributorType == "5") {

                             // Bind Data
                             $("#txtDateRcvd").val(data[6].toString());
                             $("#txtPartnerShipName").val(data[8].toString());
                             $("#txtStreet").val(data[12].toString());
                             $("#txtStreetName").val(data[13].toString());
                             $("#txtCity").val(data[14].toString());
                             $("#txtState").val(data[15].toString());
                             $("#txtZip5").val(data[16].toString());
                             if (data[17] == null)
                                 $("#txtZip4").val("");
                             else
                                 $("#txtZip4").val(data[17].toString());
                             $("#txtCheck").val(data[19].toString());
                             $("#txtAmtSchedQ").val(data[20].toString());
                             $("#txtExplanationInKind").val(data[30].toString());
                             $("#lstContributionNameInKind").val(selectedContributorType);

                             $("#thParterShipNameInKind").show("slow");
                             $("#tdPartnershipNameInKind").show("slow");

                             //Show All TR
                             $("#thFirstNameInKind").hide("slow");
                             $("#thMIInKind").hide("slow");
                             $("#thLastNameInKind").hide("slow");
                             $("#thStreetInKind").show("slow");
                             $("#thStreetNameInKind").show("slow");
                             $("#thCityInKind").show("slow");
                             $("#thStateInKind").show("slow");
                             $("#thZip5InKind").show("slow");
                             $("#thZip4InKind").show("slow");
                             $("#thContributionTypeInKind").show("slow");
                             $("#thMethodInKind").show("slow");
                             $("#thCheckInKind").show("slow");
                             $("#thAmtInKind").show("slow");
                             $("#thExplanationInKind").show("slow");

                             //Show All TD
                             $("#tdFirstNameInKind").hide("slow");
                             $("#tdMIInKind").hide("slow");
                             $("#tdLastNameInKind").hide("slow");
                             $("#tdStreetInKind").show("slow");
                             $("#tdStreetNameInKind").show("slow");
                             $("#tdCityInKind").show("slow");
                             $("#tdStateInKind").show("slow");
                             $("#tdZip5InKind").show("slow");
                             $("#tdZip4InKind").show("slow");
                             $("#tdContributionTypeInKind").show("slow");
                             $("#tdMethodInKind").show("slow");
                             $("#tdCheck").show("slow");
                             $("#tAmtInKind").show("slow");
                             $("#tdExplanationInKind").show("slow");

                             $("#txtDateRcvd").focus().select();
                         }
                     }
                } else {
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before editing this Transaction.', 'Ok', '');
                }
            });
        });

        //Contribution Name Selected index changed
        $("#lstContributionNameInKind").change(function () {
            var selectedlstContributionName = $("#lstContributionNameInKind option:selected").text();
            if (selectedlstContributionName == "Candidate/Candidate Spouse" || selectedlstContributionName == "Individual" || selectedlstContributionName == "Candidate Family Member") {
                //Show All TR
                $("#thFirstNameInKind").show("slow");
                $("#thMIInKind").show("slow");
                $("#thLastNameInKind").show("slow");
                $("#thStreetInKind").show("slow");
                $("#thStreetNameInKind").show("slow");
                $("#thCityInKind").show("slow");
                $("#thStateInKind").show("slow");
                $("#thZip5InKind").show("slow");
                $("#thZip4InKind").show("slow");
                $("#thContributionTypeInKind").show("slow");
                $("#thMethodInKind").show("slow");
                $("#thCheckInKind").show("slow");
                $("#thAmtInKind").show("slow");
                $("#thExplanationInKind").show("slow");

                //Show All TD
                $("#tdFirstNameInKind").show("slow");
                $("#tdMIInKind").show("slow");
                $("#tdLastNameInKind").show("slow");
                $("#tdStreetInKind").show("slow");
                $("#tdStreetNameInKind").show("slow");
                $("#tdCityInKind").show("slow");
                $("#tdStateInKind").show("slow");
                $("#tdZip5InKind").show("slow");
                $("#tdZip4InKind").show("slow");
                $("#tdContributionTypeInKind").show("slow");
                $("#tdMethodInKind").show("slow");
                $("#tdCheck").show("slow");
                $("#tAmtInKind").show("slow");
                $("#tdExplanationInKind").show("slow");

                $("#thParterShipNameInKind").hide("slow");
                $("#tdPartnershipNameInKind").hide("slow");

            } else if (selectedlstContributionName == "Unitemized") {
                //Show All TR
                $("#thAmtInKind").show("slow");
                $("#thExplanationInKind").show("slow");

                $("#thFirstNameInKind").hide("slow");
                $("#thMIInKind").hide("slow");
                $("#thLastNameInKind").hide("slow");
                $("#thStreetInKind").hide("slow");
                $("#thStreetNameInKind").hide("slow");
                $("#thCityInKind").hide("slow");
                $("#thStateInKind").hide("slow");
                $("#thZip5InKind").hide("slow");
                $("#thZip4InKind").hide("slow");
                $("#thContributionTypeInKind").hide("slow");
                $("#thMethodInKind").hide("slow");
                $("#thCheckInKind").hide("slow");

                //Show All TD
                $("#tAmtInKind").show("slow");
                $("#tdExplanationInKind").show("slow");

                $("#tdFirstNameInKind").hide("slow");
                $("#tdMIInKind").hide("slow");
                $("#tdLastNameInKind").hide("slow");
                $("#tdStreetInKind").hide("slow");
                $("#tdStreetNameInKind").hide("slow");
                $("#tdCityInKind").hide("slow");
                $("#tdStateInKind").hide("slow");
                $("#tdZip5InKind").hide("slow");
                $("#tdZip4InKind").hide("slow");
                $("#tdContributionTypeInKind").hide("slow");
                $("#tdMethodInKind").hide("slow");
                $("#tdCheck").hide("slow");

                $("#thParterShipNameInKind").hide("slow");
                $("#tdPartnershipNameInKind").hide("slow");

            } else if (selectedlstContributionName == "Partnership, including LLPs") {
                $("#thParterShipNameInKind").show("slow");
                $("#tdPartnershipNameInKind").show("slow");

                //Show All TR
                $("#thFirstNameInKind").hide("slow");
                $("#thMIInKind").hide("slow");
                $("#thLastNameInKind").hide("slow");
                $("#thStreetInKind").show("slow");
                $("#thStreetNameInKind").show("slow");
                $("#thCityInKind").show("slow");
                $("#thStateInKind").show("slow");
                $("#thZip5InKind").show("slow");
                $("#thZip4InKind").show("slow");
                $("#thContributionTypeInKind").show("slow");
                $("#thMethodInKind").show("slow");
                $("#thCheckInKind").show("slow");
                $("#thAmtInKind").show("slow");
                $("#thExplanationInKind").show("slow");

                //Show All TD
                $("#tdFirstNameInKind").hide("slow");
                $("#tdMIInKind").hide("slow");
                $("#tdLastNameInKind").hide("slow");
                $("#tdStreetInKind").show("slow");
                $("#tdStreetNameInKind").show("slow");
                $("#tdCityInKind").show("slow");
                $("#tdStateInKind").show("slow");
                $("#tdZip5InKind").show("slow");
                $("#tdZip4InKind").show("slow");
                $("#tdContributionTypeInKind").show("slow");
                $("#tdMethodInKind").show("slow");
                $("#tdCheck").show("slow");
                $("#tAmtInKind").show("slow");
                $("#tdExplanationInKind").show("slow");

            } else {
                //Show All TR
                $("#thFirstNameInKind").show("slow");
                $("#thMIInKind").show("slow");
                $("#thLastNameInKind").show("slow");
                $("#thStreetInKind").show("slow");
                $("#thStreetNameInKind").show("slow");
                $("#thCityInKind").show("slow");
                $("#thStateInKind").show("slow");
                $("#thZip5InKind").show("slow");
                $("#thZip4InKind").show("slow");
                $("#thContributionTypeInKind").show("slow");
                $("#thMethodInKind").show("slow");
                $("#thCheckInKind").show("slow");
                $("#thAmtInKind").show("slow");
                $("#thExplanationInKind").show("slow");

                //Show All TD
                $("#tdFirstNameInKind").show("slow");
                $("#tdMIInKind").show("slow");
                $("#tdLastNameInKind").show("slow");
                $("#tdStreetInKind").show("slow");
                $("#tdStreetNameInKind").show("slow");
                $("#tdCityInKind").show("slow");
                $("#tdStateInKind").show("slow");
                $("#tdZip5InKind").show("slow");
                $("#tdZip4InKind").show("slow");
                $("#tdContributionTypeInKind").show("slow");
                $("#tdMethodInKind").show("slow");
                $("#tdCheck").show("slow");
                $("#tAmtInKind").show("slow");
                $("#tdExplanationInKind").show("slow");

                $("#thParterShipNameInKind").hide("slow");
                $("#tdPartnershipNameInKind").hide("slow");
            }
        });

        //=================================================================================================================================================
        // Grid Common Code ///////////////////////////////////////////////////
        //=================================================================================================================================================
        // Grid Common Code ///////////////////////////////////////////////////
        //=================================================================================================================================================
        // CALL LOAD DATA FUNCTION
        LoadData();
        var tableFilingTransactions;
        // FUNCTION LOAD DATA
        function LoadData() {
            $("#divLoading").show();
            tableFilingTransactions = $m('#gridFilingTransactions').DataTable({
                "bProcessing": true,
                "responsive": true,
                "deferRender": true,
                "retrieve": true,
                "columnDefs": [
                    {
                        "targets": [0, 1, 2, 3, 4, 5, 6, 7, 38, 39, 41, 42, 43, 44],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        "targets": [9],
                        "fnCreatedCell": function (cell) {
                            cell.setAttribute('aria-label', "Row Actions");
                        }
                    }
                ],
                "initComplete": function (settings, json) {
                    //Accessibility: Applies various Accessibility features to this dataTable.
                    makeDataTableAccessible($m('#gridFilingTransactions').DataTable());
                },
                "fnRowCallback": function (nRow, aaData, iDisplayIndex) {
                    var uniqueID = generateUniqueRowIdForFnRowCallback(iDisplayIndex, nRow);
                    if (aaData[1] == "17") {
                        if (aaData[29] == "Reimbursement") {
                            $m('td:eq(1)', nRow).html('<a class="editor_edit_Sched_Q" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/edit.png" title="Edit Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_SchedQ" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/delete.png" style="background-repeat: no-repeat; " /></a><a class="editor_ReimbDetailsSchedQ lnkGird" href="" style="padding-left: 0.5em;" >Reimbursement Details</a>');
                        }
                        else if (aaData[29] == "Credit Card Payment") {
                            $m('td:eq(1)', nRow).html('<a class="editor_edit_Sched_Q" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/edit.png" title="Edit Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_SchedQ" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/delete.png" style="background-repeat: no-repeat; " /></a><a class="editor_CCItemizationSchedQ lnkGird" href="" style="padding-left: 0.5em;" >Credit Card Itemization</a>');
                        }
                        else {
                            $m('td:eq(1)', nRow).html('<a class="editor_edit_Sched_Q" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/edit.png" title="Edit Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_SchedQ" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/delete.png" title="Delete Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a>');
                        }
                    }
                    else if (aaData[1] == "14") {
                        $m('td:eq(1)', nRow).html('');
                    }
                    else if (aaData[1] == "11") { // LIABILITY/LOANS FORGIVEN
                        $m('td:eq(1)', nRow).html('<a class="editor_remove_SchedQ" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/delete.png" title="Delete Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a>');
                    }
                    else {
                        if (aaData[1] != "15") {
                            $m('td:eq(1)', nRow).html('<a class="editor_edit_Sched_Q" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/edit.png" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_SchedQ" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                        }
                        else { // SCHEDULE 15 LEGACY DATA NOT EDIT NO ADD ONLY DELETE.
                            $m('td:eq(1)', nRow).html('<a class="editor_remove_SchedQ" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                        }
                    }
                    return nRow;
                },
                "fnServerData": function (url, data, callback) {
                    var doneFunction = function () { $("#divLoading").hide(); }
                    //Refresh the Data on Grid.
                    GetAllTransactionTypesData(false, callback, false, doneFunction);
                }
            });
            tableFilingTransactions.columns.adjust().draw(true);
            $m('#gridFilingTransactions').DataTable().ajax.reload();
            if (@Session["COMM_TYPE_ID"] == "23") {
                tableFilingTransactions.column(46).visible(true);
                tableFilingTransactions.column(47).visible(true);
                tableFilingTransactions.column(48).visible(true);
                tableFilingTransactions.column(49).visible(true);
                tableFilingTransactions.column(50).visible(true);
                tableFilingTransactions.column(51).visible(true);
                tableFilingTransactions.column(52).visible(true);
                tableFilingTransactions.column(53).visible(true);
                tableFilingTransactions.column(54).visible(true);
            }
            else {
                tableFilingTransactions.column(46).visible(false);
                tableFilingTransactions.column(47).visible(false);
                tableFilingTransactions.column(48).visible(false);
                tableFilingTransactions.column(49).visible(false);
                tableFilingTransactions.column(50).visible(false);
                tableFilingTransactions.column(51).visible(false);
                tableFilingTransactions.column(52).visible(false);
                tableFilingTransactions.column(53).visible(false);
                tableFilingTransactions.column(54).visible(false);
            }

            if (@Session["COMM_TYPE_ID"] == "19") {
                tableFilingTransactions.column(55).visible(true);
            }
            else {
                tableFilingTransactions.column(55).visible(false);
            }

            tableFilingTransactions.columns.adjust().draw(false);
            tableFilingTransactions.order([40, 'desc']).draw();
            tableFilingTransactions.columns.adjust().responsive.recalc();
        }

        //Common Code for Set Preferences - Start
        //---------------------------------------------------------------------------------------------------------------------------------------
        //---------------------------------------------------------------------------------------------------------------------------------------
        $('#btnSetPreferences').click(function () {
            appCommonEFS_btnSetPrefrencesCommonCode($m("#ddlViewableColumn").multipleSelect("getSelects").toString(), tableFilingTransactions, "ddlViewableColumn", GetTableFilingTransactionsAjaxOptionsData());
        });

        //Commonly used values in this particular page.
        function GetTableFilingTransactionsAjaxOptionsData() {
            return {
                txtFilerID: $("#txtFilerID").val(),
                lstElectionCycle: $("#lstElectionCycle option:selected").val(),
                lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                lstElectionType: $("#lstElectionType option:selected").val(),
                lstElectionDateId: $("#lstElectionDate option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }
        }
        /**
        * Common code for invoking GetAllTransactionTypesData from controller.
        * reloadAndRecalc { boolean } reloads and recalculates the table. When we reload we will display the "divLoading" image until the ajax reload call is completed. This was created for ALM Defect 707 where users were intertacting with the table while the "Processing..." text was still visible.
        * dataTableInstanceToReload { function } The referecne to the datatable we will reload in the success callback.
        * dataOverides { ajax data params } pass to overwrite data values when making ajax call.
        * doneFunction { function } A function to be called if the ajax call is completed.
        */
        function GetAllTransactionTypesData(reloadAndRecalc, dataTableInstanceToReload, dataOverides, doneFunction) {
            var callback = dataTableInstanceToReload ? dataTableInstanceToReload : tableFilingTransactions;
            //Determine what data to use.
            var optionsData = bUtilIsObject(dataOverides) ? dataOverides : GetTableFilingTransactionsAjaxOptionsData();
            appCommonEFS_GetAllTransactionTypesDataCommon(reloadAndRecalc, callback, optionsData, doneFunction);
        }

        $.post("@Url.Content("~/_UC_GridCommonControl/GetSortName/")", {
        }, function (results) {
            HideColumn(results.toString().split(","));
        });

        /**
         * Use to adjust visible columns.
         * param {array} results an array of column names to help determine which columns to show or hide.
         */
        function HideColumn(results) {
            var rules = {
                "indexesToStartHidden": [0, 1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43],
                "indexesToAlwaysKeepUnhidden": [8, 9], //Will always unhide.
                "columnNamesToUnhide": results,//String to match.
                "columnNamesIndexMappings": appCommonEFS_GetGridColumnSettings("UC_GridCommonControl") //String in header, index to unhide
            }
            appCommonEFS_HideTableColumn(tableFilingTransactions, rules);
        }
        //Common Code for Set Preferences - End
        //---------------------------------------------------------------------------------------------------------------------------------------
        //---------------------------------------------------------------------------------------------------------------------------------------

        // Schedule 'Q' Form
        function ClearDialogBoxValidationSchedQ() {
            // Clear Form Validation. Schedule 'D'
            var validator = $m("#DialogBoxSchedQForm").validate();
            validator.resetForm();  // clear out the validation errors
            $m("#DialogBoxSchedQForm")[0].reset();   // clear out the form data

            // Set the default values for form.
            $("#txtCountry").val("United States");
            $("#txtCountry").prop("disabled", true);
            $("#chkCountry").prop('checked', false);
            $("#txtState").prop('maxLength', '2');
            $m("#txtCountry").valid();

            // Set the default values for form.
            $("#lblExplanation").text("Explanation");

            // Set the default values for form.
            $("#lstItemized").prop("disabled", false);
            $("#lstPurposeCode").prop("disabled", false);

            // Set the default values for form.
            $("#lstItemized")[0].selectedIndex = 0;
            $("#lstPurposeCode")[0].selectedIndex = 0;
            $("#lstMethod")[0].selectedIndex = 0;

            // Set the default values for form.
            $("#txtCurrentDateSchedQ").blur();
            $("#txtZipCode").blur();
            $("#txtAmtSchedQ").blur();

        }

        // Schedule 'Q' - Reimbursement Details Form.
        function ClearDialogBoxValidationSchedQReim() {
            // Clear Form Validation. Schedule 'D'
            var validator = $m("#DialogBoxSchedQReimForm").validate();
            validator.resetForm();  // clear out the validation errors
            $m("#DialogBoxSchedQReimForm")[0].reset();   // clear out the form data

            // Clear DATE
            $m("label[for=txtCurrentDateSchedQReim]").text('');
            $m("#txtCurrentDateSchedQReim").removeClass("error");

            // Set the default values for form.
            $("#txtCountryReim").val("United States");
            $("#txtCountryReim").prop("disabled", true);
            $("#chkCountryReim").prop('checked', false);
            $("#txtStateReim").prop('maxLength', '2');
            $m("#txtCountryReim").valid();

            // Set the default values for form.
            $("#lblExplanationReim").text("Explanation");

            // Set the default values for form.
            $("#lstItemizedReim").prop("disabled", false);
            $("#lstPurposeCodeReim").prop("disabled", false);

            $("#txtOriginalPayeeName").prop("disabled", true);

            // Set the default values for form.
            $("#lstItemizedReim")[0].selectedIndex = 0;
            $("#lstPurposeCodeReim")[0].selectedIndex = 0;

            // Set the default values for form.
            $("#txtCurrentDateSchedQReim").blur();
            $("#txtZipCodeReim").blur();
            $("#txtAmtReim").blur();

            $("#txtOriginalPayeeName").val(sessionStorage.getItem("PayeeNameReimCCI").toString());

        }

        // Schedule 'Q' - Credit Card Itemization Form.
        function ClearDialogBoxValidationSchedQCCI() {
            // Clear Form Validation. Schedule 'D'
            var validator = $m("#DialogBoxSchedQCCIForm").validate();
            validator.resetForm();  // clear out the validation errors
            $m("#DialogBoxSchedQCCIForm")[0].reset();   // clear out the form data

            // Clear DATE.
            $m("label[for=txtCurrentDateSchedQCCI]").text('');
            $m("#txtCurrentDateSchedQCCI").removeClass("error");

            // Set the default values for form.
            $("#txtCountryCCI").val("United States");
            $("#txtCountryCCI").prop("disabled", true);
            $("#chkCountryCCI").prop('checked', false);
            $("#txtStateCCI").prop('maxLength', '2');
            $m("#txtCountryCCI").valid();

            // Set the default values for form.
            $("#lblExplanationCCI").text("Explanation");

            // Set the default values for form.
            $("#lstItemizedCCI").prop("disabled", false);
            $("#lstPurposeCodeCCI").prop("disabled", false);

            $("#txtOriginalPayeeNameCCI").prop("disabled", true);

            // Set the default values for form.
            $("#lstItemizedCCI")[0].selectedIndex = 0;
            $("#lstPurposeCodeCCI")[0].selectedIndex = 0;

            // Set the default values for form.
            $("#txtCurrentDateSchedQCCI").blur();
            $("#txtZipCodeCCI").blur();
            $("#txtAmountCCI").blur();

            $("#txtOriginalPayeeNameCCI").val(sessionStorage.getItem("PayeeNameReimCCI").toString());

        }
    }); // Document END>>>> END>>>>>>
</script>