@{
    ViewBag.Title = ": Non Campaign Housekeeping Receipts Schedule P";
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
}

<form id="NonCampaignHousekeepingReceiptsSchedPForm">

    @Html.Partial("UserControls/_UC_Alert_Message")
    @Html.Partial("UserControls/_UC_Delete_Message")

    <div id="divMainNew" class="mainDiv">
        <div class="mainLowerDivCSSDesktop">
            <div id="divhide" class="hideShowButtonCSS">
                Filter
                <button id="btnCommonShowHide1" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonShowHide">
                    <img src="~/Content/Images/up20.png" alt="Up/Hide Filter Arrow" />
                </button>
            </div>
            <div id="divshow" class="hideShowButtonCSS">
                Filter
                <button id="btnCommonHideShow1" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonHideShow">
                    <img src="~/Content/Images/down20.png" alt="Down/Show Filter Arrow" />
                </button>
            </div>
        </div>
        <div class="mainLowerDivCSS">
            <div id="divhideForMobile" class="hideShowButtonCSS">
                File a New Disclosure Report
                <div class="paddingleft6emcss floatRight">
                    Filter
                    <button id="btnCommonShowHide2" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonShowHide">
                        <img src="~/Content/Images/up20.png" alt="Up/Hide Filter Arrow" />
                    </button>
                </div>
            </div>
            <div id="divshowForMobile" class="hideShowButtonCSS">
                File a New Disclosure Report
                <div class="paddingleft6emcss floatRight">
                    Filter
                    <button id="btnCommonHideShow2" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonHideShow">
                        <img src="~/Content/Images/down20.png" alt="Down/Show Filter Arrow" />
                    </button>
                </div>
            </div>
        </div>
        <div id="divTopSection">
            <div id="selectorItsRpt">
                <div class="divWidth">
                    <fieldset>
                        <legend class="visibleToScreenReaderOnly">Filter Controls Top</legend>
                        <div class="floatRightNew clsShowButtonClass">
                            <input type="button" id="btnCommonSearch1" class="btn btn-default clsCommonSearch clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Apply" title="Apply" style="font-size:12px;" />&nbsp;
                            <input type="button" id="btnCommonClear1" class="btn btn-default clsCommonClear ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />&nbsp;
                            <button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelp();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" class="ButtonImageCSS" title="Help" id="imgHelp1" /></button>
                        </div>
                    </fieldset>
                    <div class="requiredTextFilter">* marks required fields</div>
                    <div id="divFilerID">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilerID">* Filer ID</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("txtFilerID", ViewData["txtFilerID"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblFilerID" })
                        </div>
                    </div>
                    <div id="divFilerType">
                        <div class="verticalCSSDestop lblCSS"><span id="lblFilerType">* Filer Type</span></div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.TextBox("txtFilerType", null, new { id = "txtFilerType", @class = "txtWidth txtReportPeriodDatesFrom", aria_labelledby = "lblFilerType" })
                        </div>
                    </div>
                    <div id="divCommitteeName">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblCommitteeName">* Candidate/Committee Name</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("txtCommitteeName", ViewData["txtCommitteeName"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblCommitteeName" })
                        </div>
                    </div>
                    <div id="divElectionCycle">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblElectionCycle">* Report Year</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstElectionCycle", ViewData["lstElectionCycle"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblElectionCycle" })
                        </div>
                    </div>
                    <div id="divOfficeType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblOfficeType">* Election Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstUCOfficeType", null, "- Select -", new { id = "lstUCOfficeType", @class = "spanMobileWidth", aria_labelledby = "lblOfficeType" })
                        </div>
                    </div>
                    <div id="divCounty">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblCounty">* County</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstUCCounty", null, "- Select -", new { @class = "spanMobileWidth", aria_labelledby = "lblCounty" })
                        </div>
                    </div>
                    <div id="divMunicipality">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblMunicipality">* Municipality</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstUCMuncipality", null, "- Select -", new { @class = "spanMobileWidth", aria_labelledby = "lblMunicipality" })
                        </div>
                    </div>
                    <div id="divElectionType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblElectionType">* Report Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstElectionType", ViewData["lstElectionType"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblElectionType" })
                        </div>
                    </div>
                    <div id="divElectionDate">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblElectionDate">* Election Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstElectionDate", ViewData["lstElectionDate"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblElectionDate" })
                        </div>
                    </div>
                    <div id="divDisclosureType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblDisclosureType">* Disclosure Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstDisclosureType", ViewData["lstDisclosureType"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblDisclosureType" })
                        </div>
                    </div>
                    <div id="divDisclosurePeriod">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblDisclosurePeriod">* Disclosure Period</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstDisclosurePeriod", null, new { @class = "spanMobileWidth", aria_labelledby = "lblDisclosurePeriod" })
                        </div>
                    </div>
                    <div id="divReportPeriodDates">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblReportPeriodDatesFrom">* Cut off Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.TextBox("searchTerm", null, new { id = "txtReportPeriodDatesFrom", @class = "txtWidth", aria_labelledby = "lblReportPeriodDatesFrom" })
                        </div>
                    </div>
                    <div id="divFilingDateDropDown">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilingDate">* Filing Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstFilingDate", ViewData["lstFilingDate"] as SelectList, "- Select -", new { @class = "spanMobileWidth lstFilingDate", aria_labelledby = "lblFilingDate" })
                        </div>
                    </div>
                    <div id="divReportPeriodDatesTo">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblReportPeriodDatesTo">* Filing Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.TextBox("searchTerm", null, new { id = "txtReportPeriodDatesTo", @class = "txtWidth", aria_labelledby = "lblReportPeriodDatesTo" })
                        </div>
                    </div>

                    @* OFFICE CYCLE FILING DATE *@
                    <div id="divFilingDateOffCycle">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilingDateOffCycle">* New Filing Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            <input type="text" id="txtNewFilingDate" name="txtNewFilingDate" class="txtWidth txtCurrentDateCls" maxlength="10" aria-labelledby="lblFilingDateOffCycle" />
                        </div>
                    </div>
                    @* OFFICE CYCLE FILING DATE *@

                    <div id="divFilingReason">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblReasonforFiling">Resignation/Termination</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstResigTermType", ViewData["lstResigTermType"] as SelectList, "- Select -", new { @class = "spanMobileWidth lstResigTermType", aria_labelledby = "lblReasonforFiling" })
                        </div>
                    </div>
                    <div class="floatRightNew" style="padding-bottom: 2em;">
                        <fieldset>
                            <legend class="visibleToScreenReaderOnly">Filter Controls Bottom</legend>
                            <input type="button" id="btnCommonSearch2" class="btn btn-default clsCommonSearch ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Apply" title="Search" style="font-size:12px;" />&nbsp;
                            <input type="button" id="btnCommonClear2" class="btn btn-default clsCommonClear ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />&nbsp;
                            <button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelp();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" class="ButtonImageCSS" title="Help" id="imgHelp2" /></button>
                        </fieldset>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="floatRight paddingRight3em paddingTop0pt6em">
        <p><button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelpSchedP();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" class="ButtonImageCSS" title="Help Schedule P" id="imgHelp3" /></button></p>
    </div>

    <div id="divBreadCrumb" class="breadCrumbDivCSS" style="width: 46em;">
        <p id="pBreadCrumb" class="FontSizeCss displayInline">
            @Html.ActionLink("File a Disclosure Report", "ContributionsMonetary", "ContributionsMonetary", null, new { @class = "lnkLogout" }) &raquo; Non-Campaign Housekeeping Receipts
        </p>
        <div class="paddingtoppt5" style="width: 170%;">
            <h1>
                <span id="lblHeader1">File a Disclosure Report</span> -
                <span id="lblHEleYear">File a Disclosure Report</span> -
                <span id="lblHDisclPer">File a Disclosure Report</span>
            </h1>
        </div>
        <div class="paddingtoppt5 PageHeaderWidth">
            <div class="paddingTop0em2em DisplayInlineBlock">
                <h3><span id="lblHeader2">Non-Campaign Housekeeping Receipts</span></h3>
            </div>
        </div>
    </div>
    <div id="divGrid" class="divGridCSSTransferin">
        @Html.Partial("UserControls/_UC_Loding")
        @Html.Partial("UserControls/_UC_GridCommonControl")
    </div>
    <div id="divShowPartnerAdddataNCR" class="divGridCSS">
        <div class="paddingLeft2em paddingBottom2em paddingtop2em">
            <table>
                <tr>
                    <td><h3>Partner(s)</h3></td>
                    <td style="padding-left: 0.8em;">
                        <input type="button" id="btnAddNewAttribution" class="btn btn-default ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Add Partner" title="Add Partner" style="font-size:12px;" />
                    </td>
                </tr>
            </table>
        </div>
        <div style="float: right; margin-right: 4em;">
            <span id="lblPartnershipAmt" class="clsOutstandingAmt">Outstanding Amount:</span>
        </div>
        <div id="divPartnerNCR">
            <table id="PartnersGridShechA" class="table-bordered display nowrap" style="width:100%; border-spacing: 0px;">
                <thead id="thdGrid" class="header">
                    <tr>
                        <th class="never">Filing Trans Id</th> @* 0 *@
                        <th class="never">Filing Entity Id</th> @* 1 *@
                        <th></th> @* 2 *@
                        <th>Action</th> @* 3 *@
                        <th>Partnership Name</th> @* 4 *@
                        <th>Partner Name</th> @* 5 *@
                        <th>First Name</th> @* 6 *@
                        <th>Middle Name</th> @* 7 *@
                        <th>Last Name</th> @* 8 *@
                        <th>Country</th> @* 9 *@
                        <th>Street Address</th> @* 10 *@
                        <th>City</th> @* 11 *@
                        <th>State</th> @* 12 *@
                        <th>Zip Code</th> @* 13 *@
                        <th>Amount Attributed $</th> @* 14 *@
                        <th>Explanation</th> @* 15 *@
                        <th>Itemized</th> @* 16 *@
                        <th class="never">Trans Number</th> @* 17 *@
                        <th class="never">Trans Mapping</th> @* 18 *@
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>

    <div id="divShowAttributionSchedC" class="divGridCSS">
        <div class="paddingLeft2em paddingBottom2em paddingtop2em">
            <table role="presentation">
                <tr>
                    <td><h2>Attribution(s)</h2></td>
                    <td style="padding-left: 0.8em;">
                        <input type="button" id="btnAddNewAttributionSchedC" class="btn btn-default ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Add Attribution" title="Add Attribution" style="font-size:12px;" />
                    </td>
                </tr>
            </table>
        </div>
        <div style="float: right; margin-right: 4em;">
            <span id="lblAttributionAmt" class="clsOutstandingAmt">Outstanding Amount: </span>
        </div>
        <div id="divPartnerNCR2">
            <table id="AttributionGridShechC" class="table-bordered display nowrap" style="width:100%; border-spacing: 0px;">
                <thead id="thdGrid2" class="header">
                    <tr>
                        <th class="never">Filing Trans Id</th> @* 0 *@
                        <th class="never">Filing Entity Id</th> @* 1 *@
                        <th>Expand</th> @* 2 *@
                        <th>Action</th> @* 3 *@
                        <th>Contributor Name</th> @* 4 *@
                        <th>Member Name</th> @* 5 *@
                        <th>First Name</th> @* 6 *@
                        <th>Middle Name</th> @* 7 *@
                        <th>Last Name</th> @* 8 *@
                        <th>Country</th> @* 9 *@
                        <th>Street Address</th> @* 10 *@
                        <th>City</th> @* 11 *@
                        <th>State</th> @* 12 *@
                        <th>Zip Code</th> @* 13 *@
                        <th>Amount Attributed $</th> @* 14 *@
                        <th>Explanation</th> @* 15 *@
                        <th>Itemized</th> @* 16 *@
                        <th class="never">Trans Number</th> @* 17 *@
                        <th class="never">Trans Mapping</th> @* 18 *@
                        <th class="never">DateReceivedPrimary</th> @* 19 *@
                        <th>Is Contribution greater than or equal to $100 in the aggregate?</th> @* 20 *@
                        <th>Employer</th> @* 21 *@
                        <th>Occupation</th> @* 22 *@
                        <th>Employer Address</th> @* 23 *@
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>

</form>

<div id="dialog-form_Sched_P" title="Add/Edit Transaction">
    <form id="DialogBoxSchedPForm">
        <div class="divWidthSchedABC">
            <div class="dvWidth100pt">
                <div class="requiredTextDialogs">Required fields are marked with an *</div>
                <div id="dvUnitemized_DialogBoxSchedPForm">
                    <div class="verticalCSSDestopForLblLSC lblCSSAdd">
                        <span id="lblDatePaid">Is Transaction Itemized?</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxLSC DDLCSSAdd">
                        @Html.DropDownList("lstItemized", ViewData["lstItemized"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblDatePaid" })
                    </div>
                </div>

                <div id="tdDateRcvdNonHouseKeepingScheP">
                    <div id="txtCurrentDate_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblDateReceived">* Date Received</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        <input type="text" id="txtCurrentDate" name="txtCurrentDate" class="datepicker txtWidthForDateSched_ABC txtCurrentDateCls" maxlength="10" aria-labelledby = "lblDateReceived"  />
                    </div>
                </div>

                <div id="tdReceiptCodeNonHouseKeepingScheP">
                    <div id="lstReceiptCode_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblReceiptCode">* Receipt Code</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstReceiptCode", ViewData["lstReceiptCode"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblReceiptCode" })
                    </div>
                </div>

                <div id="tdContributorNameScheP">
                    <div id="txtContributorName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblReceiptContributorName">* Contributor Name</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtContributorName", null, new { id = "txtContributorName", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "40", aria_labelledby = "lblReceiptContributorName" })
                    </div>
                </div>

                <div id="tdFirstNameScheP">
                    <div id="txtFirstName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblFirstName">* First Name</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtFirstName", null, new { id = "txtFirstName", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "30", aria_labelledby = "lblFirstName" })
                    </div>
                </div>

                <div id="tdMIScheP">
                    <div id="txtMI_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblMiddleName_DialogBoxSchedPForm">Middle Name</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtMI", null, new { id = "txtMI", @class = "txtWidthForDialogSched_A", @maxlength = "30", aria_labelledby = "lblMiddleName_DialogBoxSchedPForm" })
                    </div>
                </div>

                <div id="tdLastNameScheP">
                    <div id="txtLastName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblLastName_DialogBoxSchedPForm">* Last Name</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtLastName", null, new { id = "txtLastName", @class = "txtWidthForDialogSched_A required", @maxlength = "30", aria_labelledby = "lblLastName_DialogBoxSchedPForm" })
                    </div>
                </div>

                <div id="tdCountryContributionChk">
                    <div class="verticalCSSDestopForLableSched_ABC lblCSSAdd">
                        <span id="lblOtherCountry">Other Country</span>
                    </div>
                    <div class="verticalCSSDestopForCheckBoxSched_ABC DDLCSSAdd">
                        @Html.CheckBox("chkCountry", false, new { @class = "txtWidthForDialogSched_ABC_CountryChkbox", aria_labelledby = "lblOtherCountry" })
                    </div>
                </div>
                <div id="tdCountryContributionTxt" class="divClearBoth">
                    <div id="txtCountry_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSched_ABC lblCSSAdd">
                        <span id="lblCountry">* Country</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSched_ABC DDLCSSAdd">
                        @Html.TextBox("txtCountry", null, new { id = "txtCountry", @class = "txtWidthForDialogSched_A required", @maxlength = "30", aria_labelledby = "lblCountry" })
                    </div>
                </div>

                <div id="divStreetAddress">
                    <div id="txtStreetName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblStreetName">* Street Address</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtStreetName", null, new { id = "txtStreetName", @class = "txtWidthForDialogSched_A", @maxlength = "60", aria_labelledby = "lblStreetName" })
                    </div>
                </div>

                <div id="divCity">
                    <div id="txtCity_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblCity_DialogBoxSchedPForm">* City</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtCity", null, new { id = "txtCity", @class = "txtWidthForDialogSched_A", @maxlength = "30", aria_labelledby = "lblCity_DialogBoxSchedPForm" })
                    </div>
                </div>

                <div id="divState">
                    <div id="txtState_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblState_DialogBoxSchedPForm">* State</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtState", null, new { id = "txtState", @class = "txtWidthForDialogSched_A", @maxlength = "2", aria_labelledby = "lblState_DialogBoxSchedPForm" })
                    </div>
                </div>

                <div id="divZip5">
                    <div id="txtZipCode_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblZip5_DialogBoxSchedPForm">* Zip Code</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtZipCode", null, new { id = "txtZipCode", @class = "txtWidthForDialogSched_A", @maxlength = "10", aria_labelledby = "lblZip5_DialogBoxSchedPForm" })
                    </div>
                </div>

                <div id="tdMethodNonHouseKeepingScheP">
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblMethod">* Method</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstMethod", ViewData["lstMethod"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblMethod" })
                    </div>
                </div>
                <div id="tdCheck">
                    <div id="txtCheck_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblCheck">* Check #</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtCheck", null, new { id = "txtCheck", @class = "txtWidthForDialogSched_A required", @maxlength = "30", aria_labelledby = "lblCheck" })
                    </div>
                </div>

                <div id="tAmtNonHouseKeepingScheP" class="divClearBoth">
                    <div id="txtAmtSchedP_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblAmount">* Amount $</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtAmtSchedP", null, new { id = "txtAmtSchedP", @class = "txtWidthForDialogSched_A required", @maxlength = "12", aria_required = "true", aria_labelledby = "lblAmount" })
                    </div>
                </div>

                <div id="tdExplanationNonHouseKeepingScheP">
                    <div id="txtExplanationSchedP_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblExplanation">Explanation</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtExplanationSchedP", null, new { id = "txtExplanationSchedP", @class = "txtWidthForDialogSched_A", @maxlength = "250", aria_labelledby = "lblExplanation" })
                    </div>
                </div>

                <div id="AddUpdateBtnIdSchedP" class="AddLeftCSSSchedABC">
                    <input type="button" id="btnSaveNCR" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Save" title="Save" style="font-size:12px;" />
                    <input type="button" id="btnClearDialog" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />
                    <input type="button" id="btnCloseDialog" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Close" title="Close" style="font-size:12px;" />
                </div>

            </div>
        </div>
    </form>
</div>

<div id="dialog-form_NCRPartner" title="Add/Edit Partner">
    <form id="DialogBoxSchedAPartnershipForm">
        <div class="divWidth">
            <div class="requiredTextDialogs">Required fields are marked with an *</div>
            <div id="dvUnitemized_DialogBoxSchedAPartnershipForm">
                <div class="verticalCSSDestopForLblLSC lblCSSAdd">
                    <span id="lblUnitemizedPart">Is Transaction Itemized?</span>
                </div>
                <div class="verticalCSSDestopForTextboxLSC DDLCSSAdd">
                    @Html.DropDownList("lstItemizedPart", ViewData["lstItemizedPart"] as SelectList, new { @class = "txtWidthForDialogSched_APartner", aria_labelledby = "lblUnitemizedPart" })
                </div>
            </div>
            <div id="dvPartIndividual" class="divClearBoth">
                <div class="verticalCSSDestopForLblLSC lblCSSAdd">
                    <span id="lblIndividualPart">Is Partner name an individual?</span>
                </div>
                <div class="verticalCSSDestopForTextboxLSC DDLCSSAdd">
                    @Html.DropDownList("lstIndividualPart", ViewData["lstIndividualPart"] as SelectList, new { @class = "txtWidthForDialogSched_APartner", aria_labelledby = "lblIndividualPart" })
                </div>
            </div>
            <div id="dvDateRcvdPartAttr">
                <div id="txtCurrentDatePartAttr_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                    <span id="lblDateReceived_DialogBoxSchedAPartnershipForm">* Date Received</span>
                </div>
                <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                    <input type="text" id="txtCurrentDatePartAttr" name="txtCurrentDatePartAttr" class="txtWidthForDialogSched_APartner txtCurrentDateCls" maxlength="10" aria-labelledby="lblDateReceived_DialogBoxSchedAPartnershipForm" required="required" />
                </div>
            </div>
            <div id="tdPartnershipNamePartner">
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblPartnershipName">Partnership Name</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("searchTerm", null, new { id = "txtPartshiptName", @class = "txtWidthForDialogSched_APartner", aria_labelledby = "lblPartnershipName" })
                </div>
            </div>
            <div id="tdPartnerName">
                <div id="txtPartnerName_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblPartnerName">* Partner Name</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartnerName", null, new { id = "txtPartnerName", @class = "txtWidthForDialogSched_APartner", @maxlength = "40", aria_labelledby = "lblPartnerName" })
                </div>
            </div>

            <div id="tdPartFirstName">
                <div id="txtPartFirstName_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblFirstName_DialogBoxSchedAPartnershipForm">* First Name</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartFirstName", null, new { id = "txtPartFirstName", @class = "txtWidthForDialogSched_APartner", @maxlength = "30", aria_labelledby = "lblFirstName_DialogBoxSchedAPartnershipForm" })
                </div>
            </div>

            <div id="tdPartMI">
                <div id="txtPartMI_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblMiddleName_DialogBoxSchedAPartnershipForm">Middle Name</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartMI", null, new { id = "txtPartMI", @class = "txtWidthForDialogSched_APartner", @maxlength = "30", aria_labelledby = "lblMiddleName_DialogBoxSchedAPartnershipForm" })
                </div>
            </div>

            <div id="tdPartLastName">
                <div id="txtPartLastName_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblLastName_DialogBoxSchedAPartnershipForm">* Last Name</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartLastName", null, new { id = "txtPartLastName", @class = "txtWidthForDialogSched_APartner", @maxlength = "30", aria_labelledby = "lblLastName_DialogBoxSchedAPartnershipForm" })
                </div>
            </div>

            <div id="tdCountryPartnershipChk">
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblOtherCountryPartnership">Other Country</span>
                </div>
                <div class="verticalCSSDestopForCheckBoxSched_ABC DDLCSSAdd">
                    @Html.CheckBox("chkCountryPartnership", false, new { @class = "txtWidthForDialogSched_ABC_CountryChkbox", aria_labelledby = "lblOtherCountryPartnership" })
                </div>
            </div>
            <div id="tdCountryPartnershipTxt" class="divClearBoth">
                <div id="txtCountryPartnership_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblCountryPartnership">* Country</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtCountryPartnership", null, new { id = "txtCountryPartnership", @class = "txtWidthForDialogSched_APartner", @maxlength = "30", aria_labelledby = "lblCountryPartnership" })
                </div>
            </div>

            <div id="tdPartStreetName">
                <div id="txtPartStreetName_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblStreetAddress">* Street Address</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartStreetName", null, new { id = "txtPartStreetName", @class = "txtWidthForDialogSched_APartner required", @maxlength = "60", aria_labelledby = "lblStreetAddress", required = "required" })
                </div>
            </div>

            <div id="tdPartCity">
                <div id="txtPartCity_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblCity_DialogBoxSchedAPartnershipForm">* City</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartCity", null, new { id = "txtPartCity", @class = "txtWidthForDialogSched_APartner required", @maxlength = "30", aria_labelledby = "lblCity_DialogBoxSchedAPartnershipForm", required = "required" })
                </div>
            </div>
            <div id="tdPartState">
                <div id="txtPartState_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblState_DialogBoxSchedAPartnershipForm">* State</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartState", null, new { id = "txtPartState", @class = "txtWidthForDialogSched_APartner required", @maxlength = "2", aria_labelledby = "lblState_DialogBoxSchedAPartnershipForm", required = "required" })
                </div>
            </div>
            <div id="tdPartZip5">
                <div id="txtPartZip5_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblZip5_DialogBoxSchedAPartnershipForm">* Zip Code</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartZip5", null, new { id = "txtPartZip5", @class = "txtWidthForDialogSched_APartner required", @maxlength = "10", aria_labelledby = "lblZip5_DialogBoxSchedAPartnershipForm", required = "required" })
                </div>
            </div>
            <div id="tdPartAmt" class="divClearBoth">
                <div id="txtPartAmtSchedP_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblAmtAttributed">* Amount Attributed $</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartAmtSchedP", null, new { id = "txtPartAmtSchedP", @class = "txtWidthForDialogSched_APartner", @maxlength = "12", aria_labelledby = "lblAmtAttributed" })
                </div>
            </div>

            <div id="tdPartExplanation">
                <div id="txtPartExplanationInKind_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblExplanationPart">Explanation</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartExplanationInKind", null, new { id = "txtPartExplanationInKind", @class = "txtWidthForDialogSched_APartner", @maxlength = "250", aria_labelledby = "lblExplanationPart" })
                </div>
            </div>

            <div id="AddUpdateBtnIdSchedAPart" class="AddLeftCSSPartnerSchedA">
                <br />
                <input type="button" id="btnSaveSchedAPartners" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Save" title="Save" style="font-size:12px;" />
                <input type="button" id="btnClearDialogPartner" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />
                <input type="button" id="btnCloseDialogPartner" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Close" title="Close" style="font-size:12px;" />
            </div>
        </div>
    </form>
</div>


<script>
    $m = jQuery.noConflict();

    function CallHelpSchedP() {

        var myWidth = 1050;
        var myHeight = 550;

        var left = (screen.width - myWidth) / 2;
        var top = (screen.height - myHeight) / 4;

        window.open("../../NonCampaignHousekeepingReceiptsSchedP/GetSchedulePHelpPopUp", "Help", 'width=550, height=600,scrollbars=1, width=' + myWidth + ', height=' + myHeight + ', top=' + top + ', left=' + left);
    }

    $('#menuNav').css('opacity', 0);
    $('#NonCampaignHousekeepingReceiptsSchedPForm').css('opacity', 0);
    $('#DialogBoxSchedPForm').css('opacity', 0);
    $('#DialogBoxSchedAPartnershipForm').css('opacity', 0);
    $('#divWelcomeBanner').css('opacity', 0);
    $(window).on('load', function () {
        $('#menuNav').css('opacity', 1);
        $('#NonCampaignHousekeepingReceiptsSchedPForm').css('opacity', 1);
        $('#DialogBoxSchedPForm').css('opacity', 1);
        $('#DialogBoxSchedAPartnershipForm').css('opacity', 1);
        $('#divWelcomeBanner').css('opacity', 1);
    });

    $m(document).ready(function () {

        $m("#txtAmtSchedP").attr('aria-required', true);

        // FORM VALIDATION SCHEDULE 'A' JQUERY VALIDATOR
        //----------------------------------------------------------------------------------------------------------------------------------------------

        // Common Function in EFS-Validation.js file - Start
        validatePage("DialogBoxSchedPForm");
        PartnershipValidation("DialogBoxSchedAPartnershipForm");
        LefthandFilterValues();
        // Common Function in EFS-Validation.js file - ENd
        // JQUERY VALIDATITON REGULAR EXPRESSIONS.
        //----------------------------------------------------------------------------------------------------------------------------------------------

        $("#divShowPartnerAdddataNCR").hide();
        $("#divShowAttributionSchedC").hide();
        

        var tablePartners = '';
        var tableAttribution = '';

        // Dialog Box Begin //////////////////////////////////////////////////////////
        var dialog_Sched_P
        var dialogPartner;

        // NCR Dialog Box.
        dialog_Sched_P = $m("#dialog-form_Sched_P").dialog({
            autoOpen: false,
            resizable: false,
            height: 'auto',
            width: 456,
            position: {
                my: "center top",
                at: "center top+200"
            },
            modal: true,
            resizable: false,
            closeOnEscape: false,
            open: function (event, ui) { hideDialogXButton(this); }
        });

        $(window).resize(function () {
            //// get the screen height and width
            if ($(window).width() < 500) {
                dialog_Sched_P = $m("#dialog-form_Sched_P").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 300,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });

            }
            else if ($(window).width() > 500 && $(window).width() <= 900) {
                dialog_Sched_P = $m("#dialog-form_Sched_P").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 450,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 900) {
                dialog_Sched_P = $m("#dialog-form_Sched_P").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 450,
                    modal: true,
                    dialogClass: 'DialogCustomStyle',
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
        }).resize();

        // Partners Dialog Box.
        dialogPartner = $m("#dialog-form_NCRPartner").dialog({
            autoOpen: false,
            resizable: false,
            height: 'auto',
            width: 456,
            position: {
                my: "center top",
                at: "center top+200"
            },
            modal: true,
            resizable: false,
            closeOnEscape: false,
            open: function (event, ui) { hideDialogXButton(this); }
        });

        $(window).resize(function () {
            //// get the screen height and width
            if ($(window).width() < 500) {
                dialogPartner = $m("#dialog-form_NCRPartner").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 300,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });

            }
            else if ($(window).width() > 500 && $(window).width() <= 900) {
                dialogPartner = $m("#dialog-form_NCRPartner").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 450,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 900) {
                dialogPartner = $m("#dialog-form_NCRPartner").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 450,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
        }).resize();

        //====================================================================================================================
        // Date picker validation based on Filing Type.
        if ($("#lstElectionType option:selected").val().toString() == "6") { // Off-Cycle
            if ($("#lstFilingDate option:selected").text().toString() == "- New Filing Date -") {
                sessionStorage.setItem("CuttOffDateForFiling", sessionStorage.getItem("FilingDate").toString());
            }
            else {
                sessionStorage.setItem("CuttOffDateForFiling", $("#lstFilingDate option:selected").text().toString());
            }
        }
        else {
            sessionStorage.setItem("CuttOffDateForFiling", sessionStorage.getItem("CutOffDate").toString());
        }

        // DATE FORMATE....///////////////////////////////////////////////
        // DATE PICKER CONTROL
        $m("#txtCurrentDate").datepicker({
            showOn: "button",
            buttonImage: "../../Content/Images/Calendar.png",
            buttonImageOnly: false,
            buttonText: "Select From Date",
            changeMonth: true,
            changeYear: true,
            numberOfMonths: 1,
            maxDate: sessionStorage.getItem("CuttOffDateForFiling").toString(),
            dateFormat: 'mm/dd/yy',
            onChange: function () {
                $m("#txtCurrentDate").valid();
            },
        }).datepicker();

        $m('.datepicker').attr("placeholder", "MM/DD/YYYY").datepicker();
        $("#txtCurrentDate").addClass("watermarkHTMLTextBox");
        $("#txtCurrentDate").focusin(function () {
            $("#txtCurrentDate").removeClass("watermarkHTMLTextBox");
        });

        // DATE FORMATE....///////////////////////////////////////////////
        $("#txtCurrentDate").focusout(function () {
            if ($("#txtCurrentDate").val().toString() != "") {
                if ($("#txtCurrentDate").val().toString() != "MM/DD/YYYY") {
                    var results = GetValidDate();

                    if (results == "") {
                        var MyDate = new Date($("#txtCurrentDate").val().toString());
                        var MyDateString;
                        MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                            + ('0' + MyDate.getDate()).slice(-2) + '/'
                            + MyDate.getFullYear();
                        $("#txtCurrentDate").val("");
                        $("#txtCurrentDate").val(MyDateString);
                    }
                }
            }
            else {
                $("#txtCurrentDate").addClass("watermarkHTMLTextBox");
            }
        });
        // DATE FORMATE....///////////////////////////////////////////////
        //====================================================================================================================



        /// AUTO COMPLETE SEARCH CODE //////////////////////////////////////////////////////////////////////////////////////
        //----------------------------------------------------------------------------------------------------------------------------------------
        // First Name - Auto Complete
        $m("#txtFirstName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/NonCampaignHousekeepingReceiptsSchedP/AutoCompleteFirsttName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();

                var selectedValue = ui.item.label;
                $.ajax({
                    url: "@Url.Content("~/NonCampaignHousekeepingReceiptsSchedP/GetAutoCompleteNameData/")",
                    dataType: "json",
                    data: {
                        strValue: selectedValue.toString()
                    },
                    success: function (results) {
                        $.each(results, function (i, item) {
                            $("#txtFirstName").val(item.FilingEntityFirstName.toString());
                            $("#txtMI").val(item.FilingEntityMiddleName.toString());
                            $("#txtLastName").val(item.FilingEntityLastName.toString());
                            $("#txtStreet").val(item.FilingEntityStreetNum.toString());
                            $("#txtStreetName").val(item.FilingEntityStreetName.toString());
                            $("#txtCity").val(item.FilingEntityCity.toString());
                            $("#txtState").val(item.FilingEntityState.toString());
                            $("#txtZipCode").val(item.FilingEntityZip.toString());
                            $("#txtCountry").val(item.FilingEntityCountry.toString());
                            if ($("#txtCountry").val().toString() == "United States") {
                                $("#chkCountry").prop('checked', false);
                                $("#txtCountry").prop("disabled", true);
                                $("#txtState").prop('maxLength', '2');
                                if (item.FilingEntityZip.toString() != "") {
                                    $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                                }
                                else {
                                    $("#txtZipCode").addClass("watermarkHTMLTextBox");
                                    $("#txtZipCode").blur();
                                }
                            } else {
                                $("#chkCountry").prop('checked', true);
                                $("#txtCountry").prop("disabled", false);
                                $("#txtState").prop('maxLength', '30');

                                $m('#txtZipCode').attr("placeholder", "");
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            }
                            $m("#txtFirstName").valid();
                            // Address validation
                            $m("#txtCountry").valid();
                            $m("#txtStreetName").valid();
                            $m("#txtCity").valid();
                            $m("#txtState").valid();
                            $m("#txtZipCode").valid();
                        });
                    }
                });
                $("#lstContributionType").focus();
            },
            change: function (event, ui) {
                if (ui.item) {
                    //// do whatever you want to when the item is found
                }
                else {
                    //// do whatever you want to when the item is not found
                }
            }
        });

        // Last Name - Auto Complete
        $m("#txtLastName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/NonCampaignHousekeepingReceiptsSchedP/AutoCompleteLastName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();

                var selectedValue = ui.item.label;
                $.ajax({
                    url: "@Url.Content("~/NonCampaignHousekeepingReceiptsSchedP/AutoCompleteLastName/")",
                    dataType: "json",
                    data: {
                        strValue: selectedValue.toString()
                    },
                    success: function (results) {
                        $.each(results, function (i, item) {
                            $("#txtFirstName").val(item.FilingEntityFirstName.toString());
                            $("#txtMI").val(item.FilingEntityMiddleName.toString());
                            $("#txtLastName").val(item.FilingEntityLastName.toString());
                            $("#txtStreet").val(item.FilingEntityStreetNum.toString());
                            $("#txtStreetName").val(item.FilingEntityStreetName.toString());
                            $("#txtCity").val(item.FilingEntityCity.toString());
                            $("#txtState").val(item.FilingEntityState.toString());
                            $("#txtZipCode").val(item.FilingEntityZip.toString());
                            $("#txtCountry").val(item.FilingEntityCountry.toString());
                            if ($("#txtCountry").val().toString() == "United States") {
                                $("#chkCountry").prop('checked', false);
                                $("#txtCountry").prop("disabled", true);
                                $("#txtState").prop('maxLength', '2');
                                if (item.FilingEntityZip.toString() != "") {
                                    $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                                }
                                else {
                                    $("#txtZipCode").addClass("watermarkHTMLTextBox");
                                    $("#txtZipCode").blur();
                                }
                            } else {
                                $("#chkCountry").prop('checked', true);
                                $("#txtCountry").prop("disabled", false);
                                $("#txtState").prop('maxLength', '30');

                                $m('#txtZipCode').attr("placeholder", "");
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            }
                            $m("#txtLastName").valid();
                            // Address validation
                            $m("#txtCountry").valid();
                            $m("#txtStreetName").valid();
                            $m("#txtCity").valid();
                            $m("#txtState").valid();
                            $m("#txtZipCode").valid();
                        });
                    }
                });
                $("#lstContributionType").focus();
            },
            change: function (event, ui) {
                if (ui.item) {
                    //// do whatever you want to when the item is found
                }
                else {
                    //// do whatever you want to when the item is not found
                }
            }
        });

        // Entity Name - Auto Complete
        $m("#txtContributorName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/NonCampaignHousekeepingReceiptsSchedP/AutoCompleteEntityName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();

                var selectedValue = ui.item.label;
                $.ajax({
                    url: "@Url.Content("~/NonCampaignHousekeepingReceiptsSchedP/GetAutoCompleteNameData/")",
                    dataType: "json",
                    data: {
                        strValue: selectedValue.toString()
                    },
                    success: function (results) {
                        $.each(results, function (i, item) {
                            $("#txtContributorName").val(item.FilingEntityName.toString());
                            $("#txtStreetName").val(item.FilingEntityStreetName.toString());
                            $("#txtCity").val(item.FilingEntityCity.toString());
                            $("#txtState").val(item.FilingEntityState.toString());
                            $("#txtZipCode").val(item.FilingEntityZip.toString());
                            $("#txtCountry").val(item.FilingEntityCountry.toString());
                            if ($("#txtCountry").val().toString() == "United States") {
                                $("#chkCountry").prop('checked', false);
                                $("#txtCountry").prop("disabled", true);
                                $("#txtState").prop('maxLength', '2');
                                if (item.FilingEntityZip.toString() != "") {
                                    $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                                }
                                else {
                                    $("#txtZipCode").addClass("watermarkHTMLTextBox");
                                    $("#txtZipCode").blur();
                                }
                            } else {
                                $("#chkCountry").prop('checked', true);
                                $("#txtCountry").prop("disabled", false);
                                $("#txtState").prop('maxLength', '30');

                                $m('#txtZipCode').attr("placeholder", "");
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            }
                            $m("#txtContributorName").valid();
                            // Address validation
                            $m("#txtCountry").valid();
                            $m("#txtStreetName").valid();
                            $m("#txtCity").valid();
                            $m("#txtState").valid();
                            $m("#txtZipCode").valid();
                        });
                    }
                });
                $("#lstMethod").focus();
            },
            change: function (event, ui) {
                if (ui.item) {
                    //// do whatever you want to when the item is found
                }
                else {
                    //// do whatever you want to when the item is not found
                }
            }
        });

        // Attribution Partners First Name
        $m("#txtPartFirstName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/NonCampaignHousekeepingReceiptsSchedP/AutoCompleteFirsttName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();

                var selectedValue = ui.item.label;
                $.ajax({
                    url: "@Url.Content("~/NonCampaignHousekeepingReceiptsSchedP/GetAutoCompleteNameData/")",
                    dataType: "json",
                    data: {
                        strValue: selectedValue.toString()
                    },
                    success: function (results) {
                        $.each(results, function (i, item) {
                            $("#txtPartFirstName").val(item.FilingEntityFirstName.toString());
                            $("#txtPartMI").val(item.FilingEntityMiddleName.toString());
                            $("#txtPartLastName").val(item.FilingEntityLastName.toString());
                            $("#txtPartStreetName").val(item.FilingEntityStreetName.toString());
                            $("#txtPartCity").val(item.FilingEntityCity.toString());
                            $("#txtPartState").val(item.FilingEntityState.toString());
                            $("#txtPartZip5").val(item.FilingEntityZip.toString());
                            $("#txtCountryPartnership").val(item.FilingEntityCountry.toString());
                            if ($("#txtCountryPartnership").val().toString() == "United States") {
                                $("#chkCountryPartnership").prop('checked', false);
                                $("#txtCountryPartnership").prop("disabled", true);
                                $("#txtPartState").prop('maxLength', '2');
                                if (item.FilingEntityZip.toString() != "") {
                                    $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                                }
                                else {
                                    $("#txtPartZip5").addClass("watermarkHTMLTextBox");
                                    $("#txtPartZip5").blur();
                                }
                            } else {
                                $("#chkCountryPartnership").prop('checked', true);
                                $("#txtCountryPartnership").prop("disabled", false);
                                $("#txtPartState").prop('maxLength', '30');

                                $m('#txtPartZip5').attr("placeholder", "");
                                $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                            }
                            $m("#txtPartFirstName").valid();
                            // Address validation
                            $m("#txtCountryPartnership").valid();
                            $m("#txtPartStreetName").valid();
                            $m("#txtPartCity").valid();
                            $m("#txtPartState").valid();
                            $m("#txtPartZip5").valid();
                        });
                        $("#txtPartAmtSchedP").focus();
                    }
                });
            },
            change: function (event, ui) {
                if (ui.item) {
                    //// do whatever you want to when the item is found
                }
                else {
                    //// do whatever you want to when the item is not found
                }
            }
        });

        // Attribution Partners Last Name
        $m("#txtPartLastName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/NonCampaignHousekeepingReceiptsSchedP/AutoCompleteLastName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();

                var selectedValue = ui.item.label;
                $.ajax({
                    url: "@Url.Content("~/NonCampaignHousekeepingReceiptsSchedP/GetAutoCompleteNameData/")",
                    dataType: "json",
                    data: {
                        strValue: selectedValue.toString()
                    },
                    success: function (results) {
                        $.each(results, function (i, item) {
                            $("#txtPartFirstName").val(item.FilingEntityFirstName.toString());
                            $("#txtPartMI").val(item.FilingEntityMiddleName.toString());
                            $("#txtPartLastName").val(item.FilingEntityLastName.toString());
                            $("#txtPartStreetName").val(item.FilingEntityStreetName.toString());
                            $("#txtPartCity").val(item.FilingEntityCity.toString());
                            $("#txtPartState").val(item.FilingEntityState.toString());
                            $("#txtPartZip5").val(item.FilingEntityZip.toString());
                            $("#txtCountryPartnership").val(item.FilingEntityCountry.toString());
                            if ($("#txtCountryPartnership").val().toString() == "United States") {
                                $("#chkCountryPartnership").prop('checked', false);
                                $("#txtCountryPartnership").prop("disabled", true);
                                $("#txtPartState").prop('maxLength', '2');
                                if (item.FilingEntityZip.toString() != "") {
                                    $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                                }
                                else {
                                    $("#txtPartZip5").addClass("watermarkHTMLTextBox");
                                    $("#txtPartZip5").blur();
                                }
                            } else {
                                $("#chkCountryPartnership").prop('checked', true);
                                $("#txtCountryPartnership").prop("disabled", false);
                                $("#txtPartState").prop('maxLength', '30');

                                $m('#txtPartZip5').attr("placeholder", "");
                                $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                            }
                            $m("#txtPartLastName").valid();
                            // Address validation
                            $m("#txtCountryPartnership").valid();
                            $m("#txtPartStreetName").valid();
                            $m("#txtPartCity").valid();
                            $m("#txtPartState").valid();
                            $m("#txtPartZip5").valid();
                        });
                        $("#txtPartAmtSchedP").focus();
                    }
                });
            },
            change: function (event, ui) {
                if (ui.item) {
                    //// do whatever you want to when the item is found
                }
                else {
                    //// do whatever you want to when the item is not found
                }
            }
        });

        // Partner Name Auto Complete.
        $m("#txtPartnerName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/NonCampaignHousekeepingReceiptsSchedP/AutoCompleteEntityName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();

                var selectedValue = ui.item.label;
                $.ajax({
                    url: "@Url.Content("~/NonCampaignHousekeepingReceiptsSchedP/GetAutoCompleteNameData/")",
                    dataType: "json",
                    data: {
                        strValue: selectedValue.toString()
                    },
                    success: function (results) {
                        $.each(results, function (i, item) {
                            $("#txtPartnerName").val(item.FilingEntityName.toString());
                            $("#txtPartStreetName").val(item.FilingEntityStreetName.toString());
                            $("#txtPartCity").val(item.FilingEntityCity.toString());
                            $("#txtPartState").val(item.FilingEntityState.toString());
                            $("#txtPartZip5").val(item.FilingEntityZip.toString());
                            $("#txtCountryPartnership").val(item.FilingEntityCountry.toString());
                            if ($("#txtCountryPartnership").val().toString() == "United States") {
                                $("#chkCountryPartnership").prop('checked', false);
                                $("#txtCountryPartnership").prop("disabled", true);
                                $("#txtPartState").prop('maxLength', '2');
                                if (item.FilingEntityZip.toString() != "") {
                                    $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                                }
                                else {
                                    $("#txtPartZip5").addClass("watermarkHTMLTextBox");
                                    $("#txtPartZip5").blur();
                                }
                            } else {
                                $("#chkCountryPartnership").prop('checked', true);
                                $("#txtCountryPartnership").prop("disabled", false);
                                $("#txtPartState").prop('maxLength', '30');

                                $m('#txtPartZip5').attr("placeholder", "");
                                $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                            }
                            $m("#txtPartnerName").valid();
                            // Address validation
                            $m("#txtCountryPartnership").valid();
                            $m("#txtPartStreetName").valid();
                            $m("#txtPartCity").valid();
                            $m("#txtPartState").valid();
                            $m("#txtPartZip5").valid();
                        });
                        $("#txtPartAmtSchedP").focus();
                    }
                });
            },
            change: function (event, ui) {
                if (ui.item) {
                    //// do whatever you want to when the item is found
                }
                else {
                    //// do whatever you want to when the item is not found
                }
            }
        });

        /// AUTO COMPLETE SEARCH CODE //////////////////////////////////////////////////////////////////////////////////////
        //----------------------------------------------------------------------------------------------------------------------------------------

        $m("#btnAddNewTransaction").button().on("click", function () {
            event.preventDefault();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                 txtFilerId: $("#txtFilerID").val(),
                 lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                 strElectionTypeId: $m("#lstElectionType option:selected").val(),
                 lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                 lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                 lstFilingDate: $m("#lstFilingDate option:selected").text(),
                 txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
             }, function (resultEditFlag) { 
                 if (resultEditFlag == "TRUE") {
                     $("#divShowPartnerAdddataNCR").hide();
                     $("#divShowAttributionSchedC").hide();

                     sessionStorage.setItem("UpdateFlagSchedP", "No");

                     dialog_Sched_P.dialog("open");

                     var validator = $m("#DialogBoxSchedPForm").validate();
                     validator.resetForm();  // clear out the validation errors
                     $m("#DialogBoxSchedPForm")[0].reset();   // clear out the form data

                     $("#tdDateRcvdNonHouseKeepingScheP").show("slow");
                     $("#tdReceiptCodeNonHouseKeepingScheP").show("slow");
                     $("#tdContributorNameScheP").hide("slow");
                     $("#tdFirstNameScheP").show("slow");
                     $("#tdMIScheP").show("slow");
                     $("#tdLastNameScheP").show("slow");
                     $("#divStreetAddress").show("slow");
                     $("#divCity").show("slow");
                     $("#divState").show("slow");
                     $("#divZip5").show("slow");
                     $("#tdMethodNonHouseKeepingScheP").show("slow");
                     $("#tdAmtNonHouseKeepingScheP").show("slow");
                     $("#tdExplanationNonHouseKeepingScheP").show("slow");
                     $("#tdCountryContributionChk").show("slow");
                     $("#tdCountryContributionTxt").show("slow");

                     $("#tdCheck").hide("slow");

                     $("#lstReceiptCode")[0].selectedIndex = 0;
                     $("#lstMethod")[0].selectedIndex = 0;

                     $("#lstReceiptCode").prop("disabled", false);

                     $("#lstItemized").prop("disabled", false);
                     $("#lstItemized")[0].selectedIndex = 0;

                     $("#lblExplanation").text("Explanation");

                     $("#txtCurrentDate").blur();
                     $("#txtZipCode").blur();
                     $("#txtAmtSchedP").blur();

                     $("#txtCountry").val("United States");
                     $("#txtCountry").prop("disabled", true);
                     $("#chkCountry").prop('checked', false);
                     $("#txtState").prop('maxLength', '2');

                     appCommonEFS_ClearLabeltextAndRemoveClassError(["txtCheck", "txtCurrentDate"]);
                     $m("#lstItemized").focus();
             }
                 else {
                     ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before adding this Transaction.', 'Ok', '');
                 } 
            });
        });

        $m("#btnAddNewAttribution").button().on("click", function () {
            event.preventDefault();
            $("#divLoading").show();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                 txtFilerId: $("#txtFilerID").val(),
                 lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                 strElectionTypeId: $m("#lstElectionType option:selected").val(),
                 lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                 lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                 lstFilingDate: $m("#lstFilingDate option:selected").text(),
                 txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
             }, function (resultEditFlag) { 
                 if (resultEditFlag == "TRUE") {
                                          
                     $("#dvDateRcvdPartAttr").hide();                                         
                     
                     $("#lblIndividualPart").text("Is Partner name an individual?");
                     $("#lblPartnershipName").text("Partnership Name");
                     $("#lblPartnerName").text("* Partner Name");

                     dialogPartner.dialog("open");

                     sessionStorage.setItem("UpdateFlagSchedAPart", "No");

                     var validator = $m("#DialogBoxSchedAPartnershipForm").validate();
                     validator.resetForm();  // clear out the validation errors
                     $m("#DialogBoxSchedAPartnershipForm")[0].reset();   // clear out the form data

                     $("#lstItemizedPart").select();
                     $("#txtPartshiptName").focus();

                     // Fill the Auto fill data.
                     $("#txtPartshiptName").prop("disabled", true);
                     $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());

                     $("#lblExplanationPart").text("Explanation");

                     $("#txtCountryPartnership").val("United States");
                     $("#txtCountryPartnership").prop("disabled", true);
                     $("#txtPartState").prop('maxLength', '2');

                     $("#txtPartZip5").blur();
                     $("#txtPartAmtSchedP").blur();

                     appCommonEFS_ClearLabeltextAndRemoveClassError(["txtPartFirstName", "txtPartLastName", "txtPartAmtSchedP"]);

                     $("#txtPartFirstName").removeClass("ui-state-error error");

                     $("#lstItemizedPart")[0].selectedIndex = 0;
                     $("#lstIndividualPart")[0].selectedIndex = 0;

                     $("#lstItemizedPart").prop("disabled", false);
                     $("#lstIndividualPart").prop("disabled", false);

                     $("#tdPartnerName").hide();

                     $("#tdPartFirstName").show("slow");
                     $("#tdPartMI").show("slow");
                     $("#tdPartLastName").show("slow");

                     $("#dvPartIndividual").show("slow");
                     $("#tdPartnershipNamePartner").show("slow");
                     $("#tdPartStreetName").show("slow");
                     $("#tdPartCity").show("slow");
                     $("#tdPartState").show("slow");
                     $("#tdPartZip5").show("slow");
                     $("#tdPartCity").show("slow");
                     $("#tdCountryPartnershipChk").show("slow");
                     $("#tdCountryPartnershipTxt").show("slow");

                 }
                 else {
                     ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before adding this Transaction.', 'Ok', '');
                 } 
            }).always(function () {
                $("#divLoading").hide();
            });
        });

        $m("#btnCloseDialog").button().on("click", function () {

            var valid = true;
            if (sessionStorage.getItem("UpdateFlagSchedP").toString() == "No") { // Only New Transactions

                if ($("#lstReceiptCode option:selected").val().toString() != "0"
                    || (["2", "3", "6", "7", "8"].includes($("#lstReceiptCode option:selected").val().toString()) && $("#txtContributorName").val().toString().length >= 1)) {
                    valid = false;
                }

                if ($("#lstReceiptCode option:selected").val().toString() != "1" ||
                    $("#lstReceiptCode option:selected").val().toString() != "4") {
                    if ($("#txtFirstName").val().toString().length >= 1
                        || $("#txtMI").val().toString().length >= 1
                        || $("#txtLastName").val().toString().length >= 1) {
                        valid = false;
                    }
                }

                if ($("#txtCurrentDate").val().toString().length >= 1
                    || $("#lstItemized option:selected").val().toString() == "N"
                    || ($('#chkCountry').is(':checked') /* Other COUNTRY*/ && $("#txtCountry").val().toString().length >= 1)
                    || $("#txtStreetName").val().toString().length >= 1
                    || $("#txtCity").val().toString().length >= 1
                    || $("#txtState").val().toString().length >= 1
                    || $("#txtZipCode").val().toString().length >= 1
                    || $("#lstMethod option:selected").val().toString() != "0"
                    || ($("#lstMethod option:selected").val().toString() == "1" && $("#txtCheck").val().toString().length >= 1)
                    || ($("#txtAmtSchedP").val().toString().length >= 1 || $("#txtExplanationSchedP").val().toString().length >= 1)) {
                    valid = false;
                }
            } else {
                valid = false;
            }

            if (valid) {
                // Close Dialog
                dialog_Sched_P.dialog("close");
                // For Defect 707 You don't Refresh the Data on Grid because you just canceled the edit or save function.
            } else {
                // Get confirmation Close the DialogBox or Not.
                var resultsCloseSchedA = "All unsaved data will be lost if you navigate away from this page. Are you sure you want to continue?";

                $m('#modal_dialog').text(resultsCloseSchedA);
                $m("#modal_dialog").dialog({
                    resizable: false,
                    modal: true,
                    width: '400px',
                    height: 'auto',
                    bgiframe: false,
                    closeOnEscape: false,
                    open: function (event, ui) {
                        hideDialogXButton(this);
                    },
                    buttons: {
                        "OK": function () {
                            //Close Confirm Box.
                            $m(this).dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                            // Close the DialogBox
                            dialog_Sched_P.dialog("close");
                            // For Defect 707 You don't Refresh the Data on Grid because you just canceled the edit or save function.
                        },
                        "Cancel": function () {
                            $m(this).dialog("close");
                        }
                    }
                });
            }
        });

        // Clear Button.
        $("#btnClearDialog").click(function () {

            sessionStorage.setItem("ItemizedYorN", $("#lstItemized option:selected").val().toString());

            var validator = $m("#DialogBoxSchedPForm").validate();
            validator.resetForm();  // clear out the validation errors
            $m("#DialogBoxSchedPForm")[0].reset();   // clear out the form data

            if (sessionStorage.getItem("UpdateFlagSchedP").toString() != "Yes") { // Add New transactions

                $("#lblPartnershipName").text("* Partnership Name");

                appCommonEFS_ClearLabeltextAndRemoveClassError(["txtPartFirstName", "txtPartLastName"]);

                $("#tdDateRcvdNonHouseKeepingScheP").show("slow");
                $("#tdReceiptCodeNonHouseKeepingScheP").show("slow");
                $("#tdContributorNameScheP").hide("slow");
                $("#tdFirstNameScheP").show("slow");
                $("#tdMIScheP").show("slow");
                $("#tdLastNameScheP").show("slow");
                $("#divStreetAddress").show("slow");
                $("#divCity").show("slow");
                $("#divState").show("slow");
                $("#divZip5").show("slow");
                $("#tdMethodNonHouseKeepingScheP").show("slow");
                $("#tdAmtNonHouseKeepingScheP").show("slow");
                $("#tdExplanationNonHouseKeepingScheP").show("slow");
                $("#tdCountryContributionChk").show("slow");
                $("#tdCountryContributionTxt").show("slow");

                $("#tdCheck").hide();

                $("#lstReceiptCode")[0].selectedIndex = 0;
                $("#lstMethod")[0].selectedIndex = 0;

                $("#lstItemized").prop("disabled", false);
                $("#lstItemized")[0].selectedIndex = 0;

                $("#lblExplanation").text("Explanation");

                $("#txtCountry").val("United States");
                $("#txtCountry").prop("disabled", true);
                $("#chkCountry").prop('checked', false);
                $("#txtState").prop('maxLength', '2');

                $("#txtCurrentDate").blur();
                $("#txtZipCode").blur();
                $("#txtAmtSchedP").blur();

                $("#lstItemized").select();
            }
            else { // Edit Transactions
                if (sessionStorage.getItem("ItemizedYorN").toString() == "N") { // Unitemized

                    $("#txtCurrentDate").blur();
                    $("#txtAmtSchedP").blur();

                    $("#lstItemized")[0].selectedIndex = 1;

                    $("#txtCurrentDate").focus();
                }
                else { // Itemized

                    $("#txtCurrentDate").blur();
                    $("#txtAmtSchedP").blur();

                    $("#lstMethod")[0].selectedIndex = 0;
                    $("#tdCheck").hide();

                    $("#lblExplanation").text("Explanation");

                    $("#txtCountry").val("United States");
                    $("#txtCountry").prop("disabled", true);
                    $("#chkCountry").prop('checked', false);
                    $("#txtState").prop('maxLength', '2');
                    $("#txtZipCode").blur();

                    $("#txtCurrentDate").focus();
                }
            }

            $m("#lstItemized")[0].focus();

        });

        @*/**
         * Common funciton to the call ~/ContributionsCandIndFamily/GetSchedAPartnersData/
         * successCallback { callback } Function to back on the successful ajax call.
         * param {boolean} reloadAndRecalc
         * param {function} doneFunction - function to call after GetSchedAPartnersData.
         */
        function GetSchedAPartnersData(successCallBack, reloadAndRecalc, doneFunction) {
            // Refresh the Data on Grid...
            $m.ajax({
                "url": "@Url.Content("~/ContributionsCandIndFamily/GetSchedAPartnersData/")",
                "data": {
                    strTransNumber: sessionStorage.getItem("TransIdPartnership").toString(),
                    strFilerId: $("#txtFilerID").val()
                },
                "success": successCallBack,
                "dataType": "json",
                "type": "POST",
                "error": function () {
                    ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                }
            }).always(function () {
                if (bUtilIsFunction(doneFunction)) {
                    doneFunction();
                }
            });
            if (reloadAndRecalc == true) { 
                if (sessionStorage.getItem("LoadAttributionTable").toString() == "Yes") {
                    $m('#AttributionGridShechC').DataTable().ajax.reload();
                    tableAttribution.responsive.recalc();
                }
                else {
                    $m('#PartnersGridShechA').DataTable().ajax.reload();
                    tablePartners.responsive.recalc();
                }
            }
        }*@

        /**
         * Common funciton to the call ~/ContributionsCandIndFamily/GetSchedAPartnersData/
         * successCallback { callback } Function to back on the successful ajax call.
         * param {boolean} reloadAndRecalc
         * param {function} doneFunction - function to call after GetSchedAPartnersData.
         */
        function GetSchedAPartnersData(reloadAndRecalc, dataTableInstanceToReload, dataOverides, doneFunction) {            
            var data;
            if (dataOverides) {                
                //Use different values if they were provided.
                data = dataOverides;
            } else {
                //Commonly used values in this particular page.
                data = {
                    strTransNumber: sessionStorage.getItem("TransIdPartnership").toString(),
                    strFilerId: $("#txtFilerID").val()
                }
            }
            var functionObject = {
                "reloadAndRecalc": reloadAndRecalc,// Reloads and recalculates the table. When true it display the "divLoading" and tell the table to reload the data.
                "successCallbackFunction": dataTableInstanceToReload, //Function to be called if the request succeeds.
                "data": data, //Data values when making ajax call.
                "doneFunction": doneFunction,//Function to be called if the ajax call is completed.
                "ajaxUrl": "@Url.Content("~/ContributionsCandIndFamily/GetSchedAPartnersData/")",//Url to make ajax call.
            }
            appCommonEFS_MakeAjaxCallForDataTableGrid(dataTableInstanceToReload, functionObject, false);
        }

        /**
         * Common function
         * Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
         * {string} targetLabel which can be "#lblAttributionAmt" or "#lblPartnershipAmt".
         * {bool} displayBtnAddNewAttribution will show $("#btnAddNewAttribution") when the ammount is not $0.00.
         */
        function GetPartnershipTotAmt(targetLabel, displayBtnAddNewAttribution) {
            $.post("@Url.Content("~/ContributionsCandIndFamily/GetPartnershipTotAmt/")", {
                                strTransNumber: sessionStorage.getItem("TransIdPartnership")
            }, function (result) {
                var expSubContrAmount = '0';                
                if (result != "") {                    
                    var subContTotalAmt = result.toString();
                    var expSubContrAmount = sessionStorage.getItem("IndFamPartnershipAmt").toString();

                    var resBalAmt = parseFloat(expSubContrAmount) - parseFloat(subContTotalAmt);

                    $(targetLabel).text("Outstanding Amount: $" + resBalAmt.toFixed(2).toString());
                    if (displayBtnAddNewAttribution == true && resBalAmt.toFixed(2).toString() != "0.00") {
                        $("#btnAddNewAttribution").show();
                    }
                }
                else {
                    var expSubContrAmount = parseFloat(sessionStorage.getItem("IndFamPartnershipAmt"));
                    $(targetLabel).text("Outstanding Amount: $" + expSubContrAmount.toFixed(2).toString());
                    if (displayBtnAddNewAttribution == true && expSubContrAmount.toFixed(2).toString() != "0.00") {
                        $("#btnAddNewAttribution").show();
                    }
                }
                $(targetLabel).show();
            });
        }
        // Get Partners Data.
        $m("#btnCloseDialogPartner").button().on("click", function () {
            var valid = true;

            if (sessionStorage.getItem("UpdateFlagSchedAPart").toString() == "No") {
                if ($("#lstItemizedPart option:selected").val().toString() == "N"
                    || $("#lstIndividualPart option:selected").val().toString() == "N" 
                    || ($("#lstIndividualPart option:selected").val().toString() == "N" && $("#txtPartshiptName").val().toString().length >= 1)
                    || ($("#lstIndividualPart option:selected").val().toString() == "Y" && ($("#txtPartFirstName").val().toString().length >= 1 || $("#txtPartMI").val().toString().length >= 1 || $("#txtPartLastName").val().toString().length >= 1))
                    || ($('#chkCountryPartnership').is(':checked') && $("#txtCountryPartnership").val().toString().length >= 1)/*Other COUNTRY Partnership*/
                    || $("#txtPartStreetName").val().toString().length >= 1
                    || $("#txtPartCity").val().toString().length >= 1
                    || $("#txtPartState").val().toString().length >= 1
                    || $("#txtPartZip5").val().toString().length >= 1
                    || $("#txtPartAmtSchedP").val().toString().length >= 1
                    || $("#txtPartExplanationInKind").val().toString().length >= 1) {
                    valid = false;
                }
            } else {
                valid = false;
            }
            if (valid) {
                // Close DialgoBox
                dialogPartner.dialog("close");

                // For Defect 707 You don't Refresh the Data on Grid because you just canceled the edit or save function.

                // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
                if ($("#lblPartnershipName").text().toString() == "LLC Name")
                    GetPartnershipTotAmt("#lblAttributionAmt", true);
                else
                    GetPartnershipTotAmt("#lblPartnershipAmt", true);
            } else {
                // Get confirmation Close the DialogBox or Not.
                var resultsClose = "All unsaved data will be lost if you navigate away from this page. Are you sure you want to continue?";

                $m('#modal_dialog').text(resultsClose);
                $m("#modal_dialog").dialog({
                    resizable: false,
                    modal: true,
                    width: '400px',
                    height: 'auto',
                    bgiframe: false,
                    closeOnEscape: false,
                    open: function (event, ui) { hideDialogXButton(this); },
                    buttons: {
                        "OK": function () {
                            //Close Confirm Box.
                            $m(this).dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                            // Close DialgoBox
                            dialogPartner.dialog("close");

                            // For Defect 707 You don't Refresh the Data on Grid because you just canceled the edit or save function.

                            // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
                            if ($("#lblPartnershipName").text().toString() == "LLC Name")
                                GetPartnershipTotAmt("#lblAttributionAmt", true);
                            else
                                GetPartnershipTotAmt("#lblPartnershipAmt", false);

                        }, // confirm close
                        "Cancel": function () {
                            $m(this).dialog("close");
                        }
                    }
                });
            }
        });
        // Dialog Box End /////////////////////////////////////////////////

        // Method Change
        // ------------------------------------------------------------------------------------------------------------------------------------------
        $("#lstMethod").change(function () {

            $("#txtCheck").val("");

            $m("label[for=txtExplanationSchedP]").text('');
            $m("#txtExplanationSchedP").removeClass("error");

            if ($("#lstMethod option:selected").val().toString() == "1") { // CHECK
                $("#tdCheck").show();

                if ($("#lstReceiptCode option:selected").val().toString() == "9") {
                    $("#lblExplanation").text("* Explanation");
                }
                else {
                    $("#lblExplanation").text("Explanation");

                    $m("label[for=txtExplanationSchedP]").text('');
                    $m("#txtExplanationSchedP").removeClass("error");
                }
            }
            else if ($("#lstMethod option:selected").val().toString() == "7") { // OTHER
                // EXPLANATION MANADATORY
                $("#lblExplanation").text("* Explanation");
                $("#tdCheck").hide();
            }
            else {
                $("#lblExplanation").text("Explanation");
                $("#tdCheck").hide();

                $m("label[for=txtExplanationSchedP]").text('');
                $m("#txtExplanationSchedP").removeClass("error");
            }

            if ($("#lstReceiptCode option:selected").val().toString() == "9") {
                $("#lblExplanation").text("* Explanation");
            }

            $m("label[for=txtCheck]").text('');
            $m("#txtCheck").removeClass("error");
        });
        // Method Change
        // ------------------------------------------------------------------------------------------------------------------------------------------

        // Unitemzied then hide controls
        $("#lstItemized").change(function () {

            var selectedUnitemzied = $("#lstItemized option:selected").val();

            if (selectedUnitemzied == "N") {

                var validator = $m("#DialogBoxSchedPForm").validate();
                validator.resetForm();  // clear out the validation errors
                $m("#DialogBoxSchedPForm")[0].reset();   // clear out the form data

                $("#txtCurrentDate").blur();
                $("#txtAmtSchedP").blur();

                $("#txtCountry").val("United States");
                $("#lstItemized")[0].selectedIndex = 1;

                $("#lstMethod")[0].selectedIndex = 0;
                $("#lblExplanation").text("Explanation");

                $m("label[for=txtCurrentDate]").text('');
                $m("#txtCurrentDate").removeClass("error");

                // Unitemized.
                $("#tdDateRcvdNonHouseKeepingScheP").show("slow");
                $("#tdReceiptCodeNonHouseKeepingScheP").hide("slow");
                $("#tdContributorNameScheP").hide("slow");
                $("#tdFirstNameScheP").hide("slow");
                $("#tdMIScheP").hide("slow");
                $("#tdLastNameScheP").hide("slow");
                $("#divStreetAddress").hide("slow");
                $("#divCity").hide("slow");
                $("#divState").hide("slow");
                $("#divZip5").hide("slow");$("#tdMethodNonHouseKeepingScheP").hide("slow");
                $("#tdCheck").hide("slow");
                $("#tAmtNonHouseKeepingScheP").show("slow");
                $("#tdExplanationNonHouseKeepingScheP").show("slow");
                $("#tdCountryContributionChk").hide("slow");
                $("#tdCountryContributionTxt").hide("slow");

            }
            else { // 'Y'

                var validator = $m("#DialogBoxSchedPForm").validate();
                validator.resetForm();  // clear out the validation errors
                $m("#DialogBoxSchedPForm")[0].reset();   // clear out the form data

                $("#lstItemized").select();

                $("#txtCurrentDate").blur();
                $("#txtZipCode").blur();
                $("#txtAmtSchedP").blur();

                $("#txtCountry").val("United States");
                $("#lblExplanation").text("Explanation");

                $("#txtCountry").val("United States");
                $("#txtCountry").prop("disabled", true);
                $("#chkCountry").prop('checked', false);
                $("#txtState").prop('maxLength', '2');

                $("#lstReceiptCode")[0].selectedIndex = 0;
                $("#lstMethod")[0].selectedIndex = 0;

                appCommonEFS_ClearLabeltextAndRemoveClassError(["txtCurrentDate", "lstReceiptCode", "txtFirstName", "txtLastName", "txtCheck"]);

                //Hide/Show Controls
                $("#tdDateRcvdNonHouseKeepingScheP").show("slow");
                $("#tdReceiptCodeNonHouseKeepingScheP").show("slow");
                $("#tdContributorNameScheP").hide("slow");
                $("#tdFirstNameScheP").show("slow");
                $("#tdMIScheP").show("slow");
                $("#tdLastNameScheP").show("slow");
                $("#divStreetAddress").show("slow");
                $("#divCity").show("slow");
                $("#divState").show("slow");
                $("#divZip5").show("slow");
                $("#tdMethodNonHouseKeepingScheP").show("slow");
                $("#tAmtNonHouseKeepingScheP").show("slow");
                $("#tdExplanationNonHouseKeepingScheP").show("slow");
                $("#tdCountryContributionChk").show("slow");
                $("#tdCountryContributionTxt").show("slow");

                $("#tdCheck").hide("slow");
            }
        });

        // Unitemized Partnership.
        $("#lstItemizedPart").change(function () {
            if ($("#lstItemizedPart option:selected").val().toString() == "N") { // UNITEMIZED

                var validator = $m("#DialogBoxSchedAPartnershipForm").validate();
                validator.resetForm();  // clear out the validation errors
                $m("#DialogBoxSchedAPartnershipForm")[0].reset();   // clear out the form data

                // Fill the Auto fill data.
                $("#txtPartshiptName").prop("disabled", true);
                $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());

                // Fill the Auto fill data.
                $("#txtCurrentDatePartAttr").prop("disabled", true);
                $("#txtCurrentDatePartAttr").val(sessionStorage.getItem("DateReceivedAttr").toString());

                $("#txtCurrentDate").blur();
                $("#txtPartAmtSchedP").blur();
                $("#lstItemizedPart").select();

                $("#txtCountryPartnership").val("United States");
                $("#txtCountryPartnership").prop("disabled", true);

                $("#lstIndividualPart")[0].selectedIndex = 0;

                $("#lstItemizedPart")[0].selectedIndex = 1;

                //$("#tdPartnershipNamePartner").hide();

                // Hide/Show Controls
                $("#dvPartIndividual").hide("slow");
                $("#tdPartnerName").hide("slow");
                $("#tdPartFirstName").hide("slow");
                $("#tdPartMI").hide("slow");
                $("#tdPartLastName").hide("slow");
                $("#tdPartStreetName").hide("slow");
                $("#tdPartCity").hide("slow");
                $("#tdPartState").hide("slow");
                $("#tdPartZip5").hide("slow");
                $("#tdPartCity").hide("slow");
                $("#tdCountryPartnershipChk").hide("slow");
                $("#tdCountryPartnershipTxt").hide("slow");
            }
            else {
                // Clear Form data
                var validator = $m("#DialogBoxSchedAPartnershipForm").validate();
                validator.resetForm();  // clear out the validation errors
                $m("#DialogBoxSchedAPartnershipForm")[0].reset();   // clear out the form data

                // Fill the Auto fill data.
                $("#txtPartshiptName").prop("disabled", true);
                $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());

                // Fill the Auto fill data.
                $("#txtCurrentDatePartAttr").prop("disabled", true);
                $("#txtCurrentDatePartAttr").val(sessionStorage.getItem("DateReceivedAttr").toString());

                $("#txtCurrentDate").blur();
                $("#txtPartZip5").blur();
                $("#txtPartAmtSchedP").blur();
                $("#lstItemizedPart").select();

                $("#lblExplanationPart").text("Explanation");

                $("#txtCountryPartnership").val("United States");
                $("#txtCountryPartnership").prop("disabled", true);

                $("#lstIndividualPart")[0].selectedIndex = 0;
                $("#lstItemizedPart")[0].selectedIndex = 0;

                $("#tdPartnershipNamePartner").show();

                $("#tdPartFirstName").show("slow");
                $("#tdPartMI").show("slow");
                $("#tdPartLastName").show("slow");

                $("#dvPartIndividual").show("slow");
                $("#tdPartStreetName").show("slow");
                $("#tdPartCity").show("slow");
                $("#tdPartState").show("slow");
                $("#tdPartZip5").show("slow");
                $("#tdPartCity").show("slow");
                $("#tdCountryPartnershipChk").show("slow");
                $("#tdCountryPartnershipTxt").show("slow");

                appCommonEFS_ClearLabeltextAndRemoveClassError(["txtPartFirstName", "txtPartMI", "txtPartLastName"]);
            }
        });

        // Partnership Individual Yes or No.
        $("#lstIndividualPart").change(function () {
            if ($("#lstIndividualPart option:selected").val().toString() == "Y") {

                // Fill the Auto fill data.
                $("#txtPartshiptName").prop("disabled", true);
                $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());
                $("#txtPartFirstName").focus();

                //$("#lstIndividualPart")[0].selectedIndex = 0;

                $("#tdPartFirstName").show("slow");
                $("#tdPartMI").show("slow");
                $("#tdPartLastName").show("slow");

                $("#tdPartnerName").hide("slow");

                $("#txtPartFirstName").val("");
                $("#txtPartMI").val("");
                $("#txtPartLastName").val("");

                appCommonEFS_ClearLabeltextAndRemoveClassError(["txtPartFirstName", "txtPartMI", "txtPartLastName"]);
            }
            else {

                // Fill the Auto fill data.
                $("#txtPartshiptName").prop("disabled", true);
                $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());
                $("#txtPartFirstName").focus();

                //$("#lstIndividualPart")[0].selectedIndex = 1;

                $("#tdPartFirstName").hide("slow");
                $("#tdPartMI").hide("slow");
                $("#tdPartLastName").hide("slow");

                $("#tdPartnerName").show("slow");

                $("#txtPartnerName").val("");

                $m("label[for=txtPartnerName]").text('');
                $m("#txtPartnerName").removeClass("error");
            }
        });

        //==============================================================================================================================================
        // COMMON CODE FOR BUTTON CLEAR AND IT WILL GO TO MAIN PAGE CONTRIBUTION MONETARY.
        //Bind Clear Click
        $(".clsCommonClear").bind('click', function () {
            $("#divGridMonetary").show();
            sessionStorage.setDataTable = "true";
            $("#divShowHideHelp").removeClass("clsShowHideHelpSec");
            $("#divShowHideHelp").addClass("clsShowHideHelpSecInMobileTablet");

            sessionStorage.setItem("FilerId", $("#txtFilerID option:selected").val());
            sessionStorage.setItem("CommitteeName", $("#txtCommitteeName option:selected").val());
            sessionStorage.setItem("ElectionCycle", $("#lstElectionCycle option:selected").val());
            sessionStorage.setItem("ElectionType", $("#lstElectionType option:selected").val());
            sessionStorage.setItem("ElectionDate", $("#lstElectionDate option:selected").val());
            sessionStorage.setItem("DisclosureType", $("#lstDisclosureType option:selected").val());
            sessionStorage.setItem("DisclosurePeriod", $("#lstDisclosurePeriod option:selected").val());
            sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesFrom").val());
            if ($("#lstElectionType option:selected").val() == "6") {
                sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
            }
            else {
                sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
            }
            sessionStorage.setItem("TransactionType", $("#lstTransactionType option:selected").val());
            sessionStorage.setItem("lstResigTermType", $("#lstResigTermType option:selected").val());
            sessionStorage.setItem("lstFilingDate", $("#lstFilingDate option:selected").val());

            sessionStorage.setItem("TransactionTypeId", "true");

            var urlContrHome = "@Url.Content("~/ContributionsMonetary/ContributionsMonetary/")";

            window.location.href = urlContrHome;
        });
        // COMMON CODE FOR BUTTON CLEAR AND IT WILL GO TO MAIN PAGE CONTRIBUTION MONETARY.
        //==============================================================================================================================================

        $("#divShowPartnerAdddataNCR").hide();
        $("#divShowAttributionSchedC").hide();

        $("#divPartnerNCR").hide();
        $("#PartnersGridNCR").addClass("Per100hideShowButtonCSS");

        // Add/Edit Transactions.
        //----------------------------------------------------------------------------------------------------------------------------------------------
        // Button Click
        $("#btnSaveNCR").click(function (e) {
            e.preventDefault();

            // If Valid then either Insert or Update Data.
            $m('#DialogBoxSchedPForm').valid();
            if ($m('#DialogBoxSchedPForm').valid()) {

                var paramsUpdateFilingTransNonCompHKReceipts = {
                    strTransNumber: sessionStorage.getItem("TransNumber"),
                    strFilingEntId: sessionStorage.getItem("FilingEntityId"),
                    lstReceiptCode: $m("#lstReceiptCode option:selected").val(),
                    txtCurrentDate: $m("#txtCurrentDate").val(),
                    txtCheck: $m("#txtCheck").val(),
                    lstMethod: $m("#lstMethod option:selected").val(),
                    txtAmtNonHouseKeepingScheP: $m("#txtAmtSchedP").val(),
                    txtExplanationNonHouseKeepingScheP: $m("#txtExplanationSchedP").val(),
                    txtContributorName: $m("#txtContributorName").val(),
                    txtFirstName: $m("#txtFirstName").val(),
                    txtMI: $m("#txtMI").val(),
                    txtLastName: $m("#txtLastName").val(),
                    txtCountry: $m("#txtCountry").val(),
                    txtStreetName: $m("#txtStreetName").val(),
                    txtCity: $m("#txtCity").val(),
                    txtState: $m("#txtState").val(),
                    txtZipCode: $m("#txtZipCode").val().toString(),
                    lstItemized: $m("#lstItemized option:selected").val(),
                    txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
                    lstElectionType: $("#lstElectionType option:selected").val(),
                    txtReportPeriodDatesTo: sessionStorage.getItem("FilingDate").toString(),
                    lstFilingDate: $m("#lstFilingDate option:selected").text(),
                    chkCountry: $('#chkCountry').is(':checked').toString(),
                };
                //Shared update code.
                var NCRDeterminePartneshipMessageAndUpdateGrid = function () {
                    var successMessage = "";
                    if ($("#lstReceiptCode option:selected").val().toString() == "7") {// LIMITED LIABILITY COMPANY (LLC).
                        successMessage = "Transaction saved successfully. Note that LLCs are limited to an aggregate $5,000 annual contribution limit. Any amount received over $5,000 must be refunded. Contributions of any amount from an LLC must be attributed to the member owners. Entering member owner details is mandatory. ";
                    }
                    else {
                        successMessage = "Transaction saved successfully";
                    }
                    
                    // OVER $2500 PARTNERSHIP MESSAGE.
                    // Update Grid...
                    if ($("#lstReceiptCode option:selected").val().toString() == "2") {
                        var varAmount = parseFloat($m("#txtAmtSchedP").val().toString()).toFixed(2);
                        var valAmount = parseFloat("2500").toFixed(2);
                        if (varAmount > valAmount) {
                            successMessage = 'Transaction saved successfully. The Contribution amount of this Partnership transaction is greater than $2500. Entering Partner details is mandatory.';
                        }
                    }
                    var doneFunction = function () {
                        $("#divLoading").hide();
                        ShowDialogBox('EFS', successMessage, 'Ok', '');
                    }
                    GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);
                };

                if (sessionStorage.getItem("UpdateFlagSchedP").toString() == "No") { // Save
                    // SHOW THE PROCESSING....
                    $("#divLoading").show();
                    //Perform Save
                    $.post("@Url.Content("~/NonCampaignHousekeepingReceiptsSchedP/SaveFilingTransNonCompReceipts/")", {
                        txtFilerId: $("#txtFilerID").val(),
                        lstElectionCycle: $("#lstElectionCycle option:selected").text(),
                        lstElectionCycleId: $("#lstElectionCycle option:selected").val(),
                        lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                        lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                        lstElectionType: $("#lstElectionType option:selected").val(),
                        lstElectionDate: $("#lstElectionDate option:selected").text(),
                        lstContrInKindTranType: sessionStorage.getItem("TransactionType").toString(),
                        txtDateRcvd: $m("#txtCurrentDate").val(),
                        lstReceiptCode: $m("#lstReceiptCode option:selected").val(),
                        txtContributorName: $m("#txtContributorName").val(),
                        txtFirstName: $m("#txtFirstName").val(),
                        txtMI: $m("#txtMI").val(),
                        txtLastName: $m("#txtLastName").val(),
                        txtCountry: $m("#txtCountry").val(),
                        txtStreetName: $m("#txtStreetName").val(),
                        txtCity: $m("#txtCity").val(),
                        txtState: $m("#txtState").val(),
                        txtZipCode: $m("#txtZipCode").val(),
                        lstMethod: $m("#lstMethod option:selected").val(),
                        txtCheck: $m("#txtCheck").val(),
                        txtAmtNonHouseKeepingScheP: $m("#txtAmtSchedP").val(),
                        txtExplanationNonHouseKeepingScheP: $m("#txtExplanationSchedP").val(),
                        lstItemized: $m("#lstItemized option:selected").val(),
                        txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
                        chkCountry: $('#chkCountry').is(':checked').toString(),
                        lstFilingDate: $m("#lstFilingDate option:selected").text(),
                        txtReportPeriodDatesTo: sessionStorage.getItem("FilingDate").toString(),
                        lstResigTermType: $m("#lstResigTermType option:selected").val(),
                        lstElectionDateId: $("#lstElectionDate option:selected").val(),
                        lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
                    }, function (results) {
                            if (results.Errors == null) {
                                if (results == "Custom Error") {
                                    $("#divLoading").hide();
                                    ShowDialogBox('EFS', 'System Error found. Please try again.', 'Ok', '');
                                    window.location.reload();
                                } else {
                                    if (results == "0") {
                                        $("#divLoading").hide();
                                        ShowDialogBox('EFS', 'System Error Found. Please try again.', 'Ok', '');
                                        window.location.reload();
                                    } else {
                                        results = "Custom Error";

                                        $("#lstItemized").focus();
                                        window.status = "Transaction saved successfully";

                                        // OVER $2500 PARTNERSHIP MESSAGE.
                                        // Update Grid...
                                        NCRDeterminePartneshipMessageAndUpdateGrid()

                                        $("#divDTInKind").show();
                                        //// Clear Values...
                                        var validator = $m("#DialogBoxSchedPForm").validate();
                                        validator.resetForm(); // clear out the validation errors
                                        $m("#DialogBoxSchedPForm")[0].reset(); // clear out the form data

                                        // Set to Default
                                        $("#tdDateRcvdNonHouseKeepingScheP").show("slow");
                                        $("#tdReceiptCodeNonHouseKeepingScheP").show("slow");
                                        $("#tdContributorNameScheP").hide("slow");
                                        $("#tdFirstNameScheP").show("slow");
                                        $("#tdMIScheP").show("slow");
                                        $("#tdLastNameScheP").show("slow");
                                        $("#divStreetAddress").show("slow");
                                        $("#divCity").show("slow");
                                        $("#divState").show("slow");
                                        $("#divZip5").show("slow");
                                        $("#tdMethodNonHouseKeepingScheP").show("slow");
                                        $("#tdAmtNonHouseKeepingScheP").show("slow");
                                        $("#tdExplanationNonHouseKeepingScheP").show("slow");
                                        $("#tdCountryContributionChk").show("slow");
                                        $("#tdCountryContributionTxt").show("slow");
                                        $("#tdCheck").hide("slow");
                                        // Set to Default

                                        $("#lstReceiptCode")[0].selectedIndex = 0;
                                        $("#lstMethod")[0].selectedIndex = 0;

                                        $("#lstReceiptCode").prop("disabled", false);

                                        $("#lstItemized").prop("disabled", false);
                                        $("#lstItemized")[0].selectedIndex = 0;

                                        $("#lblExplanation").text("Explanation");

                                        $("#txtCurrentDate").blur();
                                        $("#txtZipCode").blur();
                                        $("#txtAmtSchedP").blur();

                                        appCommonEFS_ClearLabeltextAndRemoveClassError(["txtFirstName", "txtLastName", "txtMI", "txtExplanationSchedP", "txtCheck", "txtCurrentDate"]);

                                        $("#txtCountry").val("United States");
                                        $("#txtCountry").prop("disabled", true);
                                        $("#chkCountry").prop('checked', false);
                                        $("#txtState").prop('maxLength', '2');
                                    }
                                }
                        } else if (results.Errors.length >= 0) {
                            $m("#divLoading").hide();
                            ClearServerSideErrors(); // Server Side Validation Clear
                            AppendCustomErrorLabels(results.Errors);
                        }
                    }).fail(function () {
                        $m("#divLoading").hide(); //SaveFilingTransNonCompReceipts failed
                        ShowDialogBox('EFS', 'System Error Found while updating Non-Campaign Housekeeping Receipts. Please try again.', 'Ok', '');
                    });
                } else if (sessionStorage.getItem("UpdateFlagSchedP").toString() == "Yes") { // Update
                    // Update transactions.
                    if ($("#lstReceiptCode option:selected").val().toString() == "2" || $("#lstReceiptCode option:selected").val().toString() == "7") { // Schedule 'P' With Partnership.
                        $("#divLoading").show();
                        $.post("@Url.Content("~/ContributionsCandIndFamily/GetPartnershipTotAmt/")", {
                            strTransNumber: sessionStorage.getItem("TransNumber").toString()
                        }, function (result) {
                            if (result != "") {
                                var resultsPartnershipAmt = result.toString();
                                var originalAmt = $m("#txtAmtSchedP").val().toString();
                                if (parseFloat(originalAmt) >= parseFloat(resultsPartnershipAmt)) {
                                    // Update data.
                                    $m.post("@Url.Content("~/NonCampaignHousekeepingReceiptsSchedP/UpdateFilingTransNonCompHKReceipts/")", paramsUpdateFilingTransNonCompHKReceipts
                                    , function (results) {
                                        if (results) {
                                            // Close Dialogbox.
                                            dialog_Sched_P.dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                            // OVER $2500 PARTNERSHIP MESSAGE.
                                            // Update Grid...
                                            NCRDeterminePartneshipMessageAndUpdateGrid();
                                        }
                                    }).fail(function () {
                                        $m("#divLoading").hide();//UpdateFilingTransNonCompHKReceipts failed.
                                    });
                                } else {
                                    // HIDE THE PROCESSING....
                                    $("#divLoading").hide();
                                    ShowDialogBox('EFS', 'Amount cannot be less than partnership details amount $' + parseFloat(resultsPartnershipAmt).toFixed(2).toString(), 'Ok', '');
                                }
                            } else {
                                // Update data.
                                $m.post("@Url.Content("~/NonCampaignHousekeepingReceiptsSchedP/UpdateFilingTransNonCompHKReceipts/")", paramsUpdateFilingTransNonCompHKReceipts
                                , function (results) {
                                    if (results) {
                                        // Close Dialogbox.
                                        dialog_Sched_P.dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                        // OVER $2500 PARTNERSHIP MESSAGE.
                                        // Update Grid...
                                        NCRDeterminePartneshipMessageAndUpdateGrid();
                                    }
                                }).fail(function () {
                                    $m("#divLoading").hide();//UpdateFilingTransNonCompHKReceipts failed.
                                    ShowDialogBox('EFS', 'System Error Found while updating Non-Campaign Housekeeping Receipts filings. Please try again.', 'Ok', '');
                                });
                            }
                        }).fail(function () {
                            $m("#divLoading").hide();//GetPartnershipTotAmt failed.
                            ShowDialogBox('EFS', 'System Error Found while getting the partnership ammount. Please try again.', 'Ok', '');
                        });
                    } else {
                        // Update data.
                        $("#divLoading").show();
                        $m.post("@Url.Content("~/NonCampaignHousekeepingReceiptsSchedP/UpdateFilingTransNonCompHKReceipts/")", paramsUpdateFilingTransNonCompHKReceipts
                        , function (results) {
                            if (results) {
                                // Close Dialogbox.
                                dialog_Sched_P.dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                window.status = "Transaction saved successfully";
                                // Update Grid...
                                var doneFunction = function () {
                                    $("#divLoading").hide();
                                    ShowDialogBox('EFS', "Transaction saved successfully", 'Ok', '');
                                }
                                GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);
                            }
                        }).fail(function () {
                            $m("#divLoading").hide();//UpdateFilingTransNonCompHKReceipts failed.
                            ShowDialogBox('EFS', 'System Error Found while updating Non-Campaign Housekeeping Receipts filings. Please try again.', 'Ok', '');
                        });
                    }
                }
            }
        });
        // Add/Edit Transactions.
        //----------------------------------------------------------------------------------------------------------------------------------------------

        // ROW SELECT YELLOW HIGHLIGHTED...
        $m('#gridFilingTransactions tbody').on('click', 'tr', function (e) {
            e.preventDefault();

            if ($(this).hasClass('selected') == false) {
                tableFilingTransactions.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
                // Bind Data
            }

            if (sessionStorage.getItem("HideDetailsGridsP") != null && sessionStorage.getItem("HideDetailsGridsP").toString() == "Yes") {
                sessionStorage.removeItem("HideDetailsGridsP");
                $("#divShowPartnerAdddataNCR").show();                
            } else {
                sessionStorage.removeItem("HideDetailsGridsP"); 
                $("#divShowPartnerAdddataNCR").hide();                
            }

            if (sessionStorage.getItem("HideDetailsGridsPAttr") != null && sessionStorage.getItem("HideDetailsGridsPAttr").toString() == "Yes") {
                sessionStorage.removeItem("HideDetailsGridsPAttr");                
                $("#divShowAttributionSchedC").show();
            } else {
                sessionStorage.removeItem("HideDetailsGridsPAttr");                
                $("#divShowAttributionSchedC").hide();
            }                        
        });

        // Save Schedule 'A' Partnership Data.
        $m("#btnSaveSchedAPartners").click(function () {
            $m('#DialogBoxSchedAPartnershipForm').valid();
            if ($m('#DialogBoxSchedAPartnershipForm').valid()) {
                // Save Data....
                if (sessionStorage.getItem("UpdateFlagSchedAPart").toString() == "No") { // Save
                    var updatePartnerTable = function () {
                        var doneFunction = function () {
                            $("#divLoading").hide();
                            ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');

                        }
                        // Refresh the Data on Grid...
                        if ($("#lblPartnershipName").text().toString() == "LLC Name")
                            GetSchedAPartnersData(true, tableAttribution, false, doneFunction);
                        else
                            GetSchedAPartnersData(true, tablePartners, false, doneFunction);
                        
                        // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
                        if ($("#lblPartnershipName").text().toString() == "LLC Name")
                            GetPartnershipTotAmt("#lblAttributionAmt", false);
                        else
                            GetPartnershipTotAmt("#lblPartnershipAmt", false);
                    };

                    var paramsSaveSchedAPartnersData = {
                        strTransNumber: sessionStorage.getItem("TransIdPartnership").toString(),
                        strFilingSchedId: sessionStorage.getItem("FilingSchedId").toString(),
                        strFilingSchedDate: sessionStorage.getItem("FilingSchedDate").toString(),
                        txtFilerId: $("#txtFilerID").val(),
                        lstElectionCycle: $("#lstElectionCycle option:selected").text(),
                        lstElectionCycleId: $("#lstElectionCycle option:selected").val(),
                        lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                        lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                        lstElectionType: $("#lstElectionType option:selected").val(),
                        lstElectionDate: $("#lstElectionDate option:selected").text(),
                        txtPartnerName: $("#txtPartnerName").val(),
                        txtPartFirstName: $("#txtPartFirstName").val(),
                        txtPartMI: $m("#txtPartMI").val(),
                        txtPartLastName: $m("#txtPartLastName").val(),
                        txtPartStreetName: $m("#txtPartStreetName").val(),
                        txtPartCity: $m("#txtPartCity").val(),
                        txtPartState: $m("#txtPartState").val(),
                        txtPartZip5: $m("#txtPartZip5").val(),
                        txtPartAmt: $m("#txtPartAmtSchedP").val(),
                        txtPartExplanationInKind: $m("#txtPartExplanationInKind").val(),
                        lstItemizedPart: $("#lstItemizedPart option:selected").val(),
                        txtCountryPartnership: $m("#txtCountryPartnership").val(),
                        lstIndividualPart: $("#lstIndividualPart option:selected").val(),
                        chkCountryPartnership: $('#chkCountryPartnership').is(':checked').toString(),
                        outOrginalAmount: sessionStorage.getItem("IndFamPartnershipAmt").toString(),
                        recordCount: sessionStorage.getItem("PartnershipRecCount").toString()
                    };
                    //Show processing
                    $("#divLoading").show();
                    $.post("@Url.Content("~/ContributionsCandIndFamily/GetPartnershipTotAmt/")", {
                        strTransNumber: sessionStorage.getItem("TransIdPartnership")
                    }, function (result) {
                        if (result != "") {
                            var expPartAmount = sessionStorage.getItem("IndFamPartnershipAmt").toString();
                            var expPayAmount = $("#txtPartAmtSchedP").val().toString();
                            expPartAmount = parseFloat(expPartAmount) - parseFloat(result);
                            if (parseFloat(expPayAmount) <= parseFloat(expPartAmount).toFixed(2)) {
                                $.post("@Url.Content("~/ContributionsCandIndFamily/SaveSchedAPartnersData/")", paramsSaveSchedAPartnersData, function (results) {
                                    if (results.Errors == null) {
                                        window.status = "Transaction saved successfully";

                                        var validator = $m("#DialogBoxSchedAPartnershipForm").validate();
                                        validator.resetForm();  // clear out the validation errors
                                        $m("#DialogBoxSchedAPartnershipForm")[0].reset();   // clear out the form data

                                        $("#txtCountryPartnership").val("United States");
                                        $("#txtCountryPartnership").prop("disabled", true);
                                        $("#chkCountryPartnership").prop('checked', false);
                                        $("#txtSttxtPartStateate").prop('maxLength', '2');

                                        $("#txtCurrentDate").blur();
                                        $("#txtPartZip5").blur();
                                        $("#txtPartAmtSchedP").blur();

                                        appCommonEFS_ClearLabeltextAndRemoveClassError(["txtPartFirstName", "txtPartLastName", "txtPartAmtSchedP"]);

                                        // Fill the Auto fill data.
                                        $("#txtPartshiptName").prop("disabled", true);
                                        $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());

                                        // Fill the Auto fill data.
                                        $("#txtCurrentDatePartAttr").prop("disabled", true);
                                        $("#txtCurrentDatePartAttr").val(sessionStorage.getItem("DateReceivedAttr").toString());

                                        $("#lstItemizedPart")[0].selectedIndex = 0;
                                        $("#lstIndividualPart")[0].selectedIndex = 0;
                                        $("#tdPartnerName").hide();

                                        $("#tdPartFirstName").show("slow");
                                        $("#tdPartMI").show("slow");
                                        $("#tdPartLastName").show("slow");

                                        $("#tdPartnershipNamePartner").show("slow");
                                        $("#dvPartIndividual").show("slow");
                                        $("#tdPartnershipName").show("slow");
                                        $("#tdPartStreetName").show("slow");
                                        $("#tdPartCity").show("slow");
                                        $("#tdPartState").show("slow");
                                        $("#tdPartZip5").show("slow");
                                        $("#tdPartCity").show("slow");
                                        $("#tdCountryPartnershipChk").show("slow");
                                        $("#tdCountryPartnershipTxt").show("slow");

                                        $("#lstItemizedPart").focus();

                                        updatePartnerTable();//Calls GetSchedAPartnersData and GetPartnershipTotAmt.
                                    } else if (results.Errors.length >= 0) {
                                        $("#divLoading").hide();
                                        ClearServerSideErrorsPartnership(); // Server Side Validation Clear
                                        AppendCustomErrorLabels(results.Errors);
                                        var hasAmountError = AppendCustomErrorLabels(results.Errors);
                                        if (hasAmountError == true) {
                                            ShowDialogBox('EFS', 'Partnership Amount cannot be more than Outstanding Amount $' + parseFloat(expPartAmount).toFixed(2).toString(), 'Ok', '');
                                        }
                                    }
                                }).fail(function () {
                                    $("#divLoading").hide();//SaveSchedAPartnersData failed 
                                });
                            } else {
                                $("#divLoading").hide();
                                ShowDialogBox('EFS', 'Partnership Amount cannot be more than Outstanding Amount $' + parseFloat(expPartAmount).toFixed(2).toString(), 'Ok', '');
                            }
                        } else {
                            var partnershipAmount = sessionStorage.getItem("IndFamPartnershipAmt").toString();
                            if ($("#txtPartAmtSchedP").val().toString() == "999999999.99" || $("#txtPartAmtSchedP").val().toString() == "") {
                                var expPayAmount = "0";
                            } else {
                                var expPayAmount = $("#txtPartAmtSchedP").val().toString();
                            }
                            var expPayAmount = $("#txtPartAmtSchedP").val().toString();
                            if (parseFloat(expPayAmount) <= parseFloat(partnershipAmount).toFixed(2)) {
                                $.post("@Url.Content("~/ContributionsCandIndFamily/SaveSchedAPartnersData/")", 
                                    paramsSaveSchedAPartnersData, function (results) {
                                    if (results.Errors == null) {
                                        window.status = "Transaction saved successfully";
                                        var validator = $m("#DialogBoxSchedAPartnershipForm").validate();
                                        validator.resetForm();  // clear out the validation errors
                                        $m("#DialogBoxSchedAPartnershipForm")[0].reset();   // clear out the form data

                                        $("#txtCountryPartnership").val("United States");
                                        $("#txtCountryPartnership").prop("disabled", true);
                                        $("#chkCountryPartnership").prop('checked', false);
                                        $("#txtSttxtPartStateate").prop('maxLength', '2');

                                        $("#txtCurrentDate").blur();
                                        $("#txtPartZip5").blur();
                                        $("#txtPartAmtSchedP").blur();

                                        appCommonEFS_ClearLabeltextAndRemoveClassError(["txtPartFirstName", "txtPartLastName", "txtPartAmtSchedP"]);

                                        // Fill the Auto fill data.
                                        $("#txtPartshiptName").prop("disabled", true);
                                        $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());

                                        // Fill the Auto fill data.
                                        $("#txtCurrentDatePartAttr").prop("disabled", true);
                                        $("#txtCurrentDatePartAttr").val(sessionStorage.getItem("DateReceivedAttr").toString());

                                        $("#lstItemizedPart")[0].selectedIndex = 0;
                                        $("#lstIndividualPart")[0].selectedIndex = 0;
                                        $("#tdPartnerName").hide();

                                        $("#tdPartFirstName").show("slow");
                                        $("#tdPartMI").show("slow");
                                        $("#tdPartLastName").show("slow");

                                        $("#tdPartnershipNamePartner").show("slow");
                                        $("#dvPartIndividual").show("slow");
                                        $("#tdPartnershipName").show("slow");
                                        $("#tdPartStreetName").show("slow");
                                        $("#tdPartCity").show("slow");
                                        $("#tdPartState").show("slow");
                                        $("#tdPartZip5").show("slow");
                                        $("#tdPartCity").show("slow");
                                        $("#tdCountryPartnershipChk").show("slow");
                                        $("#tdCountryPartnershipTxt").show("slow");

                                        $("#lstItemizedPart").focus();

                                        updatePartnerTable();//Calls GetSchedAPartnersData and GetPartnershipTotAmt.
                                    } else if (results.Errors.length >= 0) {
                                        $("#divLoading").hide();
                                        ClearServerSideErrorsPartnership(); // Server Side Validation Clear
                                        var hasAmountError = AppendCustomErrorLabels(results.Errors);
                                        if (hasAmountError == true) {
                                            ShowDialogBox('EFS', 'Partnership Amount cannot be more than Outstanding Amount $' + parseFloat(expPartAmount).toFixed(2).toString(), 'Ok', '');
                                        }
                                    }
                                }).fail(function () {
                                    $("#divLoading").hide();//SaveSchedAPartnersData failed
                                });
                            } else {
                                $("#divLoading").hide();// expPayAmount) > parseFloat(partnershipAmount).toFixed(2).
                                ShowDialogBox('EFS', 'Partnership Amount cannot be more than Outstanding Amount $' + parseFloat(sessionStorage.getItem("IndFamPartnershipAmt").toString()).toFixed(2).toString(), 'Ok', '');
                            }
                        }
                    }).fail(function () {
                        $("#divLoading").hide();// GetPartnershipTotAmt failed.
                    });
                } else if (sessionStorage.getItem("UpdateFlagSchedAPart").toString() == "Yes") { /// Update PARTNERSHIP DATA.
                    //Show processing
                    $("#divLoading").show();
                    $.post("@Url.Content("~/ContributionsCandIndFamily/GetPartnershipTotAmt/")", {
                        strTransNumber: sessionStorage.getItem("TransIdPartnership")
                    }, function (result) {
                        if (result != "") {
                            var partnershipAmount = sessionStorage.getItem("IndFamPartnershipAmt").toString();
                            var partnershipAttrAmount = sessionStorage.getItem("PartnershipAttrAmount").toString();
                            result = parseFloat(result) - parseFloat(partnershipAttrAmount);
                            var totalExpPayAmt = parseFloat(partnershipAmount) - parseFloat(result);
                            var expPayAmount = $("#txtPartAmtSchedP").val().toString();
                            if (parseFloat(expPayAmount) <= parseFloat(totalExpPayAmt).toFixed(2)) {
                                $.post("@Url.Content("~/ContributionsCandIndFamily/UpdateSchedAPartnersData/")", {
                                    strTransNumber: sessionStorage.getItem("TransNumberPartnership").toString(),
                                    strFilingEntityId: sessionStorage.getItem("FilingEntityIdPartner").toString(),
                                    txtPartshiptName: $("#txtPartnerName").val().toString(),
                                    txtPartFirstName: $("#txtPartFirstName").val(),
                                    txtPartMI: $m("#txtPartMI").val(),
                                    txtPartLastName: $m("#txtPartLastName").val(),
                                    txtPartStreetName: $m("#txtPartStreetName").val(),
                                    txtPartCity: $m("#txtPartCity").val(),
                                    txtPartState: $m("#txtPartState").val(),
                                    txtPartZip5: $m("#txtPartZip5").val(),
                                    txtPartAmt: $m("#txtPartAmtSchedP").val(),
                                    txtPartExplanationInKind: $m("#txtPartExplanationInKind").val(),
                                    txtCountryPartnership: $m("#txtCountryPartnership").val(),
                                    lstItemizedPart: $("#lstItemizedPart option:selected").val(),
                                    lstIndividualPart: $("#lstIndividualPart option:selected").val(),
                                    chkCountryPartnership: $('#chkCountryPartnership').is(':checked').toString(),
                                    outOrginalAmount: sessionStorage.getItem("IndFamPartnershipAmt").toString(),
                                    recordCount: sessionStorage.getItem("PartnershipRecCount").toString(),
                                    existingAmount: sessionStorage.getItem("PartnershipAttrAmount").toString(),
                                    strFilingSchedId: sessionStorage.getItem("ScheduleCSchedId").toString()
                                }, function (results) {
                                    if (results.Errors == null) {
                                        dialogPartner.dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                        window.status = "Transaction saved successfully";
                                        var doneFunction = function () {
                                            $("#divLoading").hide();
                                            ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');
                                        }
                                        // Reload Partners Grid
                                        // Refresh the Data on Grid...
                                        if ($("#lblPartnershipName").text().toString() == "LLC Name")
                                            GetSchedAPartnersData(true, tableAttribution, false, doneFunction);
                                        else
                                            GetSchedAPartnersData(true, tablePartners, false, doneFunction);
                                        

                                        // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
                                        if ($("#lblPartnershipName").text().toString() == "LLC Name")
                                            GetPartnershipTotAmt("#lblAttributionAmt", true);
                                        else
                                            GetPartnershipTotAmt("#lblPartnershipAmt", true);;
                                    }
                                    else if (results.Errors.length >= 0) {
                                        $("#divLoading").hide();
                                        ClearServerSideErrorsPartnership(); // Server Side Validation Clear
                                        var hasAmountError = AppendCustomErrorLabels(results.Errors);
                                        if (hasAmountError == true) {
                                            ShowDialogBox('EFS', 'Partnership Amount cannot be more than Outstanding Amount $' + parseFloat(totalExpPayAmt).toFixed(2).toString(), 'Ok', '');
                                        }
                                    }
                                }).fail(function () {
                                    $("#divLoading").hide();// UpdateSchedAPartnersData failed.
                                });
                            } else {//parseFloat(expPayAmount) > parseFloat(totalExpPayAmt).toFixed(2)
                                $("#divLoading").hide();
                                ShowDialogBox('EFS', 'Partnership Amount cannot be more than Outstanding Amount $' + parseFloat(totalExpPayAmt).toFixed(2).toString(), 'Ok', '');
                            }
                        } else {
                            $("#divLoading").hide();// result == "".
                        }
                    }).fail(function () {
                        $("#divLoading").hide();// GetPartnershipTotAmt failed.
                    });
                }
            }
        });

        // Update Partnership Data...
        $m('#PartnersGridShechA tbody').on('click', 'a.editor_edit_PartnerSchedA', function (e) {
            e.preventDefault();
            var dataPartners = tablePartners.row($(this).parents('tr')).data();
            //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                 txtFilerId: $("#txtFilerID").val(),
                 lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                 strElectionTypeId: $m("#lstElectionType option:selected").val(),
                 lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                 lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                 lstFilingDate: $m("#lstFilingDate option:selected").text(),
                 txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
             }, function (resultEditFlag) { 
                 if (resultEditFlag == "TRUE") {
                     $("#divLoading").hide();
                     dialogPartner.dialog("open");

                     var validator = $m("#DialogBoxSchedAPartnershipForm").validate();
                     validator.resetForm();  // clear out the validation errors
                     $m("#DialogBoxSchedAPartnershipForm")[0].reset();   // clear out the form data

                     // EDIT SCHEDULE C '&' VALIDATION.
                     sessionStorage.setItem("ScheduleCSchedId", "1");
                     sessionStorage.setItem("FilingEntityIdPartner", dataPartners[1].toString());
                     sessionStorage.setItem("TransNumberPartnership", dataPartners[17].toString());

                     // Subcontractor input fields to clrear.
                     var inputIdArray = [
                         "txtPartFirstName",
                         "txtPartLastName",
                         "txtPartnerName",
                         "txtPartAmtSchedP"];
                     appCommonEFS_ClearLabeltextAndRemoveClassError(inputIdArray);

                     $("#txtPartAmtSchedP").addClass("watermarkHTMLTextBox");

                     var attAmt = dataPartners[14].toString();
                     sessionStorage.setItem("PartnershipAttrAmount", attAmt.toString());

                     sessionStorage.setItem("UpdateFlagSchedAPart", "Yes");

                     if (dataPartners[16].toString() == "No") {
                         $("#lblExplanationPart").text("Explanation");
                     }
                     else {
                         $("#lblExplanationPart").text("Explanation");
                         $("#tdPartnershipNamePartner").show();
                     }

                     $("#lstItemizedPart option")
                         .filter(function () { return $.trim($(this).text()) == dataPartners[16].toString(); })
                         .attr("selected", "selected");

                     if (dataPartners[5].toString() == "") {
                         // Individual
                         $("#lstIndividualPart")[0].selectedIndex = 0;
                     }
                     else {
                         // Individual
                         $("#lstIndividualPart")[0].selectedIndex = 1;
                     }

                     if (dataPartners[9].toString() == "United States") {
                         $("#chkCountryPartnership").prop('checked', false);
                         $("#txtCountryPartnership").prop("disabled", true);
                         $("#txtPartState").prop('maxLength', '2');
                     }
                     else { // Other Country
                         $("#chkCountryPartnership").prop('checked', true);
                         $("#txtCountryPartnership").prop("disabled", false);

                         $("#txtPartState").prop('maxLength', '30');
                         $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                         $m('#txtPartZip5').attr("placeholder", "");
                     }
                     var clearCommonLabels = function () {
                         var inputIdArray = [
                             "txtPartFirstName",
                             "txtPartLastName",
                             "txtPartnerName",
                             "txtPartAmtSchedP"];
                         appCommonEFS_ClearLabeltextAndRemoveClassError(inputIdArray);
                     };
                     if (dataPartners[16].toString() == "Yes") {

                         $("#lstItemizedPart")[0].selectedIndex = 0;

                         if (dataPartners[5].toString() != "") { // Individual No
                             $("#lstItemizedPart").prop("disabled", true);
                             $("#lstIndividualPart").prop("disabled", true);

                             $("#tdPartnerName").show();
                             clearCommonLabels();
                             $("#tdPartFirstName").hide("slow");
                             $("#tdPartMI").hide("slow");
                             $("#tdPartLastName").hide("slow");

                             $("#dvPartIndividual").show("slow");
                             $("#tdPartnershipNamePartner").show("slow");
                             $("#tdPartStreetName").show("slow");
                             $("#tdPartCity").show("slow");
                             $("#tdPartState").show("slow");
                             $("#tdPartZip5").show("slow");
                             $("#tdPartCity").show("slow");
                             $("#tdCountryPartnershipChk").show("slow");
                             $("#tdCountryPartnershipTxt").show("slow");

                             $("#txtPartFirstName").val("");
                             $("#txtPartMI").val("");
                             $("#txtPartLastName").val("");

                             $("#txtPartshiptName").val(dataPartners[4].toString());
                             $("#txtPartnerName").val(dataPartners[5].toString());
                             $("#txtCountryPartnership").val(dataPartners[9].toString());
                             $("#txtPartStreetName").val(dataPartners[10].toString());
                             $("#txtPartCity").val(dataPartners[11].toString());
                             $("#txtPartState").val(dataPartners[12].toString());
                             $("#txtPartZip5").val(dataPartners[13].toString());
                             var varAmt = dataPartners[14].toString();

                             $("#txtPartAmtSchedP").val(varAmt);
                             if (dataPartners[14].toString() != "") {
                                 $("#txtPartAmtSchedP").removeClass("watermarkHTMLTextBox");
                             }

                             if (dataPartners[13].toString() != "") {
                                 $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                             }
                             else {
                                 $("#txtPartZip5").addClass("watermarkHTMLTextBox");
                                 if (dataPartners[9].toString() == "United States") {
                                     $("#txtPartZip5").blur();
                                 }
                             }

                             $("#txtPartExplanationInKind").val(dataPartners[15].toString());

                             $("#txtPartnerName").focus();
                         }
                         else { // Individual Yes
                             $("#lstItemizedPart").prop("disabled", true);
                             $("#lstIndividualPart").prop("disabled", true);

                             $("#tdPartnerName").hide();

                             $("#tdPartFirstName").show("slow");
                             $("#tdPartMI").show("slow");
                             $("#tdPartLastName").show("slow");

                             clearCommonLabels();

                             $("#dvPartIndividual").show("slow");
                             $("#tdPartnershipNamePartner").show("slow");
                             $("#tdPartStreetName").show("slow");
                             $("#tdPartCity").show("slow");
                             $("#tdPartState").show("slow");
                             $("#tdPartZip5").show("slow");
                             $("#tdPartCity").show("slow");
                             $("#tdCountryPartnershipChk").show("slow");
                             $("#tdCountryPartnershipTxt").show("slow");

                             $("#txtPartnerName").val("");

                             $("#txtPartshiptName").val(dataPartners[4].toString());
                             $("#txtPartFirstName").val(dataPartners[6].toString());
                             $("#txtPartMI").val(dataPartners[7].toString());
                             $("#txtPartLastName").val(dataPartners[8].toString());
                             $("#txtCountryPartnership").val(dataPartners[9].toString());
                             $("#txtPartStreetName").val(dataPartners[10].toString());
                             $("#txtPartCity").val(dataPartners[11].toString());
                             $("#txtPartState").val(dataPartners[12].toString());
                             $("#txtPartZip5").val(dataPartners[13].toString());
                             var varAmt = dataPartners[14].toString();

                             $("#txtPartAmtSchedP").val(varAmt);
                             if ($("#txtPartAmtSchedP").val().toString() != "" || $("#txtPartAmtSchedP").val().toString() != "999999999.99") {
                                 $("#txtPartAmtSchedP").removeClass("watermarkHTMLTextBox");
                             }

                             if (dataPartners[13].toString() != "") {
                                 $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                             }
                             else {
                                 $("#txtPartZip5").addClass("watermarkHTMLTextBox");
                                 if (dataPartners[9].toString() == "United States") {
                                     $("#txtPartZip5").blur();
                                 }
                             }

                             $("#txtPartExplanationInKind").val(dataPartners[15].toString());

                             $("#txtPartFirstName").focus();
                         }
                     }
                     else { // Unitemized
                         $("#lstItemizedPart").prop("disabled", true);
                         $("#lstItemizedPart")[0].selectedIndex = 1;

                         $("#tdPartnerName").hide();

                         $("#tdPartFirstName").hide("slow");
                         $("#tdPartMI").hide("slow");
                         $("#tdPartLastName").hide("slow");

                         $("#dvPartIndividual").hide("slow");
                         $("#tdPartStreetName").hide("slow");
                         $("#tdPartCity").hide("slow");
                         $("#tdPartState").hide("slow");
                         $("#tdPartZip5").hide("slow");
                         $("#tdPartCity").hide("slow");
                         $("#tdCountryPartnershipChk").hide("slow");
                         $("#tdCountryPartnershipTxt").hide("slow");

                         clearCommonLabels();

                         $("#txtPartshiptName").val(dataPartners[4].toString());
                         var varAmt = dataPartners[14].toString();
                         $("#txtPartAmtSchedP").val(varAmt);
                         if ($("#txtPartAmtSchedP").val().toString() != "" || $("#txtPartAmtSchedP").val().toString() != "999999999.99") {
                             $("#txtPartAmtSchedP").removeClass("watermarkHTMLTextBox");
                         }
                         $("#txtPartExplanationInKind").val(dataPartners[15].toString());

                         $("#txtPartAmtSchedP").focus();
                     }
                 } else {
                     ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before editing this Transaction.', 'Ok', '');
                 }
            }).fail(function () {
                $("#divLoading").hide();// GetEditFlag failed.
            });
        });

        // Delete Filing Transaction Schedull 'P' transaction.
        // Delete Record FILING TRANSACTIONS.
        $m('#gridFilingTransactions tbody').on('click', 'a.editor_remove_Sched_P', function (e) {
            e.preventDefault();
            var dataTrans = tableFilingTransactions.row($(this).parents('tr')).data();
            //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                txtFilerId: $("#txtFilerID").val(),
                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }, function (resultEditFlag) {
                if (resultEditFlag == "TRUE") {

                    $.post("@Url.Content("~/_UC_GridCommonControl/GetDeleteFlag/")", {
                    }, function (resultDeleteFlag) {
                        if (resultDeleteFlag == "True") {

                            // LOAN RECEIVED DELETE CHECK
                            $.post("@Url.Content("~/LoanReceivedSchedI/ValidateDelete_LoanReceived/")", {
                                loan_Lib_Number: dataTrans[41].toString(),
                            }, function (resultDeleteFlagSchedI) {

                                // CHECK THE VALIDATION IF ANY CONTRIBUTION REFUNDS (SCHEDULE 'M') EXISTS OR NOT.
                                // IF SCHEDULE 'M' EXISTS FOR EITHER SCHEDULE 'A', SCHEUDLE 'B', OR SCHEDULE 'C'...
                                // THEN SHOULD NOT DELETE UNTIL CHILD RECORDS DELETE.
                                $.post("@Url.Content("~/ContributionsCandIndFamily/ContributionsRefundSchedMExists/")", {
                                    strTransNumber: dataTrans[42].toString()
                                }, function (resultDelSchedABC) {

                                    // CHECK THE VALIDATION IF ANY EXPENDITURE REFUNDS (SCHEDULE 'L') EXISTS OR NOT.
                                    // IF SCHEDULE 'L' EXITS THEN SCHEDULE 'F' SHOULD NOT DELETE UNTLI CHILD DELETE ALL.
                                    $.post("@Url.Content("~/ExpenditurePaymentsSchedF/ExpenditureRefundSchedLExists/")", {
                                        strTransNumber: dataTrans[42].toString()
                                    }, function (resultDelSchedF) {

                                        $("#divShowPartnerAdddataNCR").hide();
                                        $("#divShowAttributionSchedC").hide();
                                        var deleteData = {
                                            resultDeleteFlagSchedI: resultDeleteFlagSchedI,
                                            resultDelSchedABC: resultDelSchedABC,
                                            resultDelSchedF: resultDelSchedF
                                        }

                                        var resultsDelete = "Are you sure you want to delete this transaction?";
                                        var deleteURL = "";
                                        //Determine if you can
                                        var veredict = appCommonEFS_DetermineScheduleDelete(dataTrans, deleteData);
                                        if (!veredict || !bUtilIsObject(veredict)) {
                                            $("#divLoading").hide();
                                            return false;
                                        } else {
                                            var resultsDelete = veredict.alertMessageForOperation;
                                            var deleteURL = veredict.deleteURL;
                                        }

                                        $m('#modal_dialog').text(resultsDelete);
                                        $m("#modal_dialog").dialog({
                                            resizable: false,
                                            modal: true,
                                            width: '400px',
                                            height: 'auto',
                                            bgiframe: false,
                                            closeOnEscape: false,
                                            open: function (event, ui) {
                                                $("#divLoading").hide();
                                                hideDialogXButton(this);
                                            },
                                            buttons: {
                                                "OK": function () {
                                                    //Close Confirm Box.
                                                    $m(this).dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                                    var options = {};
                                                    options.url = deleteURL;
                                                    options.type = "GET";
                                                    options.data = {
                                                        strLoanLiabNumberOrg: dataTrans[41].toString(),
                                                        strTransNumber: dataTrans[42].toString(),
                                                        strRLiability: dataTrans[6].toString()
                                                    };
                                                    options.dataType = "json";
                                                    options.contentType = "application/json";
                                                    options.success = function (results) {
                                                        // Successfully Deleted.
                                                        window.status = "Record deleted successfully";
                                                        //Update the table... hides the loading too!
                                                        GetAllTransactionTypesData(true, tableFilingTransactions, false, false);
                                                    };
                                                    options.error = function () {
                                                        $("#divLoading").hide();// Call to method in deleteURL failed.
                                                        ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                                                    };
                                                    $.ajax(options);
                                                },
                                                "Cancel": function () {
                                                    $m(this).dialog("close");
                                                }
                                            }
                                        });
                                    }).fail(function () {
                                        $("#divLoading").hide();// ExpenditureRefundSchedLExists failed.
                                    });
                                }).fail(function () {
                                    $("#divLoading").hide();// ContributionsRefundSchedMExists failed.
                                });
                            }).fail(function () {
                                $("#divLoading").hide();// ValidateDelete_LoanReceived failed.
                            });
                        } else {//When resultDeleteFlag != "True"
                            $("#divLoading").hide();
                            ShowDialogBox('EFS', 'The last transaction cannot be deleted.  To delete the Disclosure report, a deletion request must be submitted to cfinfo@elections.ny.gov', 'Ok', '');
                        }
                    }).fail(function () {
                        $("#divLoading").hide();// GetDeleteFlag failed.
                    });
                } else {//When  resultEditFlag != "TRUE".
                    $("#divLoading").hide();
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before removing this Transaction.', 'Ok', '');
                }
            }).fail(function () {
                $("#divLoading").hide();// GetEditFlag failed.
            });
        });

        // Clear Attribution Dialog Box..
        $("#btnClearDialogPartner").click(function () {

            sessionStorage.setItem("ItemizedPartYorN", $("#lstItemizedPart option:selected").val().toString());
            sessionStorage.setItem("IndividualPartYorN", $("#lstIndividualPart option:selected").val().toString());
            sessionStorage.setItem("CountryPartVal", $("#txtCountryPartnership").val().toString());
            sessionStorage.setItem("PartnershipNameEdit", $("#txtPartshiptName").val().toString());
            sessionStorage.setItem("DateReceivedAttribution", $("#txtCurrentDatePartAttr").val().toString());
                        
            var validator = $m("#DialogBoxSchedAPartnershipForm").validate();
            validator.resetForm();  // clear out the validation errors
            $m("#DialogBoxSchedAPartnershipForm")[0].reset();   // clear out the form data

            if (sessionStorage.getItem("UpdateFlagSchedAPart").toString() != "Yes") { // Add Transactions

                $("#txtPartZip5").blur();
                $("#txtPartAmtSchedP").blur();

                // Fill the Auto fill data.
                $("#txtPartshiptName").prop("disabled", true);
                $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());                      

                $("#txtCountryPartnership").val("United States");
                $("#txtCountryPartnership").prop("disabled", true);
                $("#chkCountryPartnership").prop('checked', false);
                $("#txtPartState").prop('maxLength', '2');

                $("#lstItemizedPart")[0].selectedIndex = 0;
                $("#lstIndividualPart")[0].selectedIndex = 0;

                $("#lstItemizedPart").prop("disabled", false);
                $("#lstIndividualPart").prop("disabled", false);

                $("#tdPartnerName").hide();
                $("#tdPartFirstName").show("slow");
                $("#tdPartMI").show("slow");
                $("#tdPartLastName").show("slow");
                $("#dvPartIndividual").show("slow");
                $("#tdPartnershipName").show("slow");
                $("#tdPartStreetName").show("slow");
                $("#tdPartCity").show("slow");
                $("#tdPartState").show("slow");
                $("#tdPartZip5").show("slow");
                $("#tdPartCity").show("slow");
                $("#tdCountryPartnershipChk").show("slow");
                $("#tdCountryPartnershipTxt").show("slow");

                $m("label[for=txtPartFirstName]").text('');
                $m("#txtPartFirstName").removeClass("error");

                $m("#lstItemizedPart")[0].focus();


                // ATTRIBUTION DATE RECEIVED VLAUE.
                if ($("#lblPartnershipName").text().toString() == "LLC Name")
                    $("#txtCurrentDatePartAttr").val(sessionStorage.getItem("DateReceivedAttribution").toString());
            }
            else { // Edit Transactions
                if (sessionStorage.getItem("ItemizedPartYorN").toString() == "N") { // Unitemized Edit Transactions
                    $("#lstItemizedPart")[0].selectedIndex = 1;
                    $("#txtCurrentDate").blur();
                    $("#txtPartAmtSchedP").blur();
                    $("#txtCurrentDate").focus();
                    $("#lstItemizedPart").prop("disabled", true);
                    $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());
                }
                else { // Itemized Edit Transactions
                    $("#txtCurrentDate").blur();
                    $("#txtPartAmtSchedP").blur();
                    $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipNameEdit").toString());
                    if (sessionStorage.getItem("IndividualPartYorN").toString() == "Y") {
                        $("#lstIndividualPart")[0].selectedIndex = 0;
                        $("#txtPartFirstName").focus();
                    }
                    else {
                        $("#lstIndividualPart")[0].selectedIndex = 1;
                        $("#txtPartnerName").focus();
                    }

                    $("#lstItemizedPart").prop("disabled", true);
                    $("#lstIndividualPart").prop("disabled", true);

                    $("#txtCountryPartnership").val("United States");
                    $("#txtCountryPartnership").prop("disabled", true);
                    $("#chkCountryPartnership").prop('checked', false);
                    $("#txtPartState").prop('maxLength', '2');
                    $("#txtPartZip5").blur();

                }

                // ATTRIBUTION DATE RECEIVED VLAUE.
                if ($("#lblPartnershipName").text().toString() == "LLC Name")
                    $("#txtCurrentDatePartAttr").val(sessionStorage.getItem("DateReceivedAttribution").toString());
            }

        });

        sessionStorage.removeItem("HideDetailsGridsP");
        sessionStorage.removeItem("HideDetailsGridsPAttr");
        // EDIT FILING TRANSACTIONS GRID
        $m('#gridFilingTransactions tbody').on('click', 'a.editor_AttributionSchedA', function (e) {
            e.preventDefault();

            $("#divShowPartnerAdddataNCR").show();
            $("#tdButtonUpdatePartners").hide();
            $("#tdButtonSavePartners").show();

            $("#divShowAttributionSchedC").hide();

            var data = tableFilingTransactions.row($(this).parents('tr')).data();

            sessionStorage.setItem("HideDetailsGridsP", "Yes");
            sessionStorage.setItem("TransIdPartnership", data[42].toString());
            sessionStorage.setItem("TransNumberDel", data[42].toString());
            sessionStorage.setItem("TransNumber", data[42].toString());
            sessionStorage.setItem("FilingSchedId", data[1].toString());
            sessionStorage.setItem("FilingSchedDate", data[7].toString());
            var varAmt = data[24].toString()

            sessionStorage.setItem("IndFamPartnershipAmt", varAmt);

            var partnershipName = data[13].toString();
            sessionStorage.setItem("PartnershipName", data[13].toString());

            $("#txtPartshiptName").prop("disabled", true);
            $("#txtPartshiptName").val(partnershipName);
            $("#txtPartFirstName").focus();

            $("#divPartnerNCR").show();

            tablePartners = $m('#PartnersGridShechA').DataTable({
                "bProcessing": true,
                "responsive": true,
                "deferRender": true,
                "retrieve": true,
                "columnDefs": [
                    {
                        "targets": [0, 1, 17, 18, 19],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        "targets": [3],
                        "fnCreatedCell": function (cell) {
                            cell.setAttribute('aria-label', "Row Actions");
                        }
                    }
                ],
                "initComplete": function (settings, json) {
                    //Accessibility: Applies various Accessibility features to this dataTable.
                    makeDataTableAccessible($m('#PartnersGridShechA').DataTable());
                },
                "fnRowCallback": function (nRow, aaData, iDisplayIndex) {
                    var uniqueID = generateUniqueRowIdForFnRowCallback(iDisplayIndex, nRow);
                    $m('td:eq(1)', nRow).html('<a class="editor_edit_PartnerSchedA" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_PartnerSchedA" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a>');
                },
                "fnDrawCallback": function (oSettings) {
                    var oSettings = this.fnSettings();
                    var iTotalRecords = oSettings.fnRecordsTotal();
                    sessionStorage.setItem("PartnershipRecCount", iTotalRecords);
                },
                "fnServerData": function (url, data, callback) {
                    GetSchedAPartnersData(false, callback, false, false);
                },
                "order": [[0, "desc"]]
            });
            $m('#PartnersGridShechA').DataTable().ajax.reload();
            tablePartners.search('').columns().search('').draw();
            tablePartners.responsive.recalc();

            // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
            GetPartnershipTotAmt("#lblPartnershipAmt", true);

            $('html, body').animate({ scrollTop: $("#divShowPartnerAdddataNCR").offset().top }, 500);
        });


        // Delete Partnership Data.
        $m('#PartnersGridShechA tbody').on('click', 'a.editor_remove_PartnerSchedA', function (e) {
            e.preventDefault();

            var dataTrans = tablePartners.row($(this).parents('tr')).data();
            //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                 txtFilerId: $("#txtFilerID").val(),
                 lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                 strElectionTypeId: $m("#lstElectionType option:selected").val(),
                 lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                 lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                 lstFilingDate: $m("#lstFilingDate option:selected").text(),
                 txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
             }, function (resultEditFlag) { 
                 if (resultEditFlag == "TRUE") {
                    var results = "Are you sure you want to delete the partnership details?";
                    $m('#modal_dialog').text(results);
                    $m("#modal_dialog").dialog({
                        resizable: false,
                        modal: true,
                        width: '400px',
                        height: 'auto',
                        bgiframe: false,
                        closeOnEscape: false,
                        open: function (event, ui) {
                            $("#divLoading").hide();
                            hideDialogXButton(this);
                        },
                        buttons: {
                            "OK": function () {
                                //Close Confirm Box.
                                $m(this).dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.

                                $.post("@Url.Content("~/ContributionsCandIndFamily/DeleteSchedAPartnersData/")", {
                                    strTransNumber: dataTrans[17].toString()
                                }, function (resultsDel) {

                                    if (resultsDel) {
                                        window.status = "Record deleted successfully";
                                        if ($("#lblPartnershipName").text().toString() == "LLC Name")
                                            GetSchedAPartnersData(true, tableAttribution, false, false);
                                        else
                                            GetSchedAPartnersData(true, tablePartners, false, false);                                        

                                        // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
                                        if ($("#lblPartnershipName").text().toString() == "LLC Name")
                                            GetPartnershipTotAmt("#lblAttributionAmt", false);
                                        else
                                            GetPartnershipTotAmt("#lblPartnershipAmt", false);
                                    }
                                });
                            },
                            "Cancel": function () {
                                $m(this).dialog("close");
                            }
                        }
                     });
                 } else {//resultEditFlag != "TRUE"
                     $("#divLoading").hide();
                     ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before removing this Transaction.', 'Ok', '');
                 } 
            }).fail(function () {
                $("#divLoading").hide();// GetEditFlag failed.
            });
        });

        sessionStorage.removeItem("LoadAttributionTable");
        sessionStorage.removeItem("AttrLink");
        // EDIT FILING TRANSACTIONS GRID SCHEDULE C ATTRIBUTION
        $m('#gridFilingTransactions tbody').on('click', 'a.editor_AttributionSchedC', function (e) {
            e.preventDefault();

            $("#divShowPartnerAdddataNCR").hide();
            $("#divShowAttributionSchedC").show();
            $("#tdButtonUpdatePartners").hide();
            $("#tdButtonSavePartners").show();

            var data = tableFilingTransactions.row($(this).parents('tr')).data();

            sessionStorage.setItem("AttrLink", "Yes");

            sessionStorage.setItem("LoadAttributionTable", "Yes");

            sessionStorage.setItem("HideDetailsGridsPAttr", "Yes");

            var transNumber = data[42].toString();                        

            sessionStorage.setItem("TransIdPartnership", data[42].toString());

            sessionStorage.setItem("TransNumberDel", data[42].toString());

            sessionStorage.setItem("TransNumber", data[42].toString());
            sessionStorage.setItem("FilingSchedId", data[1].toString());
            sessionStorage.setItem("FilingSchedDate", data[7].toString());
            var varAmt = data[24].toString();
            sessionStorage.setItem("IndFamPartnershipAmt", varAmt);

            var attributionDateReceived = data[10].toString();
            sessionStorage.setItem("DateReceivedAttr", data[10].toString());

            var partnershipName = data[13].toString();
            sessionStorage.setItem("PartnershipName", data[13].toString());
            //Date REceived.

            $("#txtPartshiptName").prop("disabled", true);
            $("#txtPartshiptName").val(partnershipName);
            $("#txtPartFirstName").focus();

            $("#txtCurrentDatePartAttr").prop("disabled", true);
            $("#txtCurrentDatePartAttr").val(attributionDateReceived);

            $("div[id^='divPartnerNCR']").show();

            tableAttribution = $m('#AttributionGridShechC').DataTable({
                "bProcessing": true,
                "responsive": true,
                "deferRender": true,
                "retrieve": true,
                "columnDefs": [
                    {
                        "targets": [0, 1, 17, 18],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        "targets": [3],
                        "fnCreatedCell": function (cell) {
                            cell.setAttribute('aria-label', "Row Actions");
                        }
                    }
                ],
                "initComplete": function (settings, json) {
                    //Accessibility: Applies various Accessibility features to this dataTable.
                    makeDataTableAccessible($m('#AttributionGridShechC').DataTable());
                },
                "fnRowCallback": function (nRow, aaData, iDisplayIndex) {
                    var uniqueID = generateUniqueRowIdForFnRowCallback(iDisplayIndex, nRow);
                    $m('td:eq(1)', nRow).html('<a class="editor_edit_AttrSchedC" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_AttrSchedC" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                },
                "fnDrawCallback": function (oSettings) {
                    var oSettings = this.fnSettings();
                    var iTotalRecords = oSettings.fnRecordsTotal();
                    sessionStorage.setItem("PartnershipRecCount", iTotalRecords);
                },
                "fnServerData": function (url, data, callback) {
                    GetSchedAPartnersData(false, callback, false, false);
                },
                "order": [[0, "desc"]],
            });

            $m('#AttributionGridShechC').DataTable().ajax.reload();

            if (@Session["COMM_TYPE_ID"] == "23") {
                tableAttribution.column(20).visible(true);
                tableAttribution.column(21).visible(true);
                tableAttribution.column(22).visible(true);
                tableAttribution.column(23).visible(true);
            }
            else {
                tableAttribution.column(20).visible(false);
                tableAttribution.column(21).visible(false);
                tableAttribution.column(22).visible(false);
                tableAttribution.column(23).visible(false);
            }

            tableAttribution.search('').columns().search('').draw();
            tableAttribution.responsive.recalc();

            // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
            GetPartnershipTotAmt("#lblAttributionAmt", true);

            $('html, body').animate({ scrollTop: $("#divShowAttributionSchedC").offset().top }, 500);

        }); // END END ATTRITUBITON SCHEDULE P LINK.


        // Button Add New Partnership SCHEDULE 'C'
        //---------------------------------------------------------------------------------------------------------------------------
        $m("#btnAddNewAttributionSchedC").button().on("click", function () {
            $("#divLoading").show();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                txtFilerId: $("#txtFilerID").val(),
                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }, function (resultEditFlag) {
                if (resultEditFlag == "TRUE") {
                    // CHECK IF ITS FOR SCHEDULE 'A' PARTERNSHIP OR ITS SCHEDULE 'C' ATTRIBUTION.
                    // SAME DIALOGBOX USING FOR SCHEDULE 'A' AND SCHEDULE 'C' DETAILS DIALOGBOX.
                    $("#dvDateRcvdPartAttr").show();
                    $("#lblIndividualPart").text("Is LLC Member owner an Individual?");
                    $("#lblPartnershipName").text("LLC Name");
                    $("#lblPartnerName").text("* Member Name");

                    $("#ui-id-2").text("Add/Edit Attribution Details");

                    $("#helpPLLCsLLCsScheduleC").show();

                    dialogPartner.dialog("open");

                    sessionStorage.setItem("UpdateFlagSchedAPart", "No");                                        

                    sessionStorage.setItem("UpdateFlagSchedPAttr", "No");                                        

                    var validator = $m("#DialogBoxSchedAPartnershipForm").validate();
                    validator.resetForm();  // clear out the validation errors
                    $m("#DialogBoxSchedAPartnershipForm")[0].reset();   // clear out the form data

                    $("#lstItemizedPart").focus(); // ADDED THIS ON 05.19.2021 USER REPORTED ISSUE.

                    // Fill the Auto fill data.
                    $("#txtPartshiptName").prop("disabled", true);
                    $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());

                    // Fill the Auto fill data.
                    $("#txtCurrentDatePartAttr").prop("disabled", true);
                    $("#txtCurrentDatePartAttr").val(sessionStorage.getItem("DateReceivedAttr").toString());

                    $("#lblExplanationPart").text("Explanation");

                    $("#txtCountryPartnership").val("United States");
                    $("#txtCountryPartnership").prop("disabled", true);
                    $("#txtPartState").prop('maxLength', '2');

                    $("#txtPartZip5").blur();
                    $("#txtPartAmtSchedP").blur();

                    $m("label[for=txtPartFirstName]").text('');
                    $m("#txtPartFirstName").removeClass("error");

                    $m("label[for=txtPartMI]").text('');
                    $m("#txtPartMI").removeClass("error");

                    $m("label[for=txtPartLastName]").text('');
                    $m("#txtPartLastName").removeClass("error");

                    $m("label[for=txtPartAmtSchedP]").text('');
                    $m("#txtPartAmtSchedP").removeClass("error");

                    $("#txtPartFirstName").removeClass("ui-state-error error");

                    $("#lstItemizedPart")[0].selectedIndex = 0;
                    $("#lstIndividualPart")[0].selectedIndex = 0;

                    $("#lstItemizedPart").prop("disabled", false); // ADDED THIS ON 05.19.2021 USER REPORTED ISSUE.
                    $("#lstIndividualPart").prop("disabled", false);

                    $("#txtPartState").val("NY");

                    $("#tdPartnerName").hide();

                    $("#tdPartFirstName").show("slow");
                    $("#tdPartMI").show("slow");
                    $("#tdPartLastName").show("slow");

                    $("#dvPartIndividual").show("slow");
                    $("#tdPartnershipNamePartner").show("slow");
                    $("#tdPartStreetName").show("slow");
                    $("#tdPartCity").show("slow");
                    $("#tdPartState").show("slow");
                    $("#tdPartZip5").show("slow");
                    $("#tdPartCity").show("slow");
                    $("#tdCountryPartnershipChk").show("slow");
                    $("#tdCountryPartnershipTxt").show("slow");

                    if (@Session["COMM_TYPE_ID"] == "23") {
                        $("#lstItemizedPart").prop("disabled", true);
                        $("#tdPartRContributions").show();
                        //$("#lstPartRContributions")[0].selectedIndex = 1;
                        $("#tdPartEmployer").hide();
                        $("#tdPartOccupation").hide();
                        $("#divPartContStreetAddress").hide();
                        $("#divPartContCity").hide();
                        $("#divPartContState").hide();
                        $("#divPartContZip5").hide();
                    }
                    else {
                        $("#lstItemizedPart").prop("disabled", false);
                        $("#tdPartRContributions").hide();
                        //$("#lstPartRContributions")[0].selectedIndex = 1;
                        $("#tdPartEmployer").hide();
                        $("#tdPartOccupation").hide();
                        $("#divPartContStreetAddress").hide();
                        $("#divPartContCity").hide();
                        $("#divPartContState").hide();
                        $("#divPartContZip5").hide();
                    }
                } else {
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before adding this Transaction.', 'Ok', '');
                }
            }).always(function () {
                $("#divLoading").hide();// GetEditFlag.
            });
        });
        // Button Add New Partnership
        //---------------------------------------------------------------------------------------------------------------------------

        // Update Attribution Data.
        $m('#AttributionGridShechC tbody').on('click', 'a.editor_edit_AttrSchedC', function (e) {
            e.preventDefault();
            //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            var dataPartners = tableAttribution.row($(this).parents('tr')).data();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                txtFilerId: $("#txtFilerID").val(),
                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }, function (resultEditFlag) {
                if (resultEditFlag == "TRUE") {
                    dialogPartner.dialog("open");

                    var validator = $m("#DialogBoxSchedAPartnershipForm").validate();
                    validator.resetForm();  // clear out the validation errors
                    $m("#DialogBoxSchedAPartnershipForm")[0].reset();   // clear out the form data

                    //==============================================================
                    // CLEAR THE ERRORS ON EDIT DIALOGBOX.
                    $m("label[for=txtPartshiptName]").text('');
                    $m("#txtPartshiptName").removeClass("error");

                    $m("label[for=txtPartnerName]").text('');
                    $m("#txtPartnerName").removeClass("error");

                    $m("label[for=txtPartnerName]").text('');
                    $m("#txtPartnerName").removeClass("error");

                    $m("label[for=txtPartFirstName]").text('');
                    $m("#txtPartFirstName").removeClass("error");

                    $m("label[for=txtPartMI]").text('');
                    $m("#txtPartMI").removeClass("error");

                    $m("label[for=txtPartLastName]").text('');
                    $m("#txtPartLastName").removeClass("error");

                    $m("label[for=txtCountryPartnership]").text('');
                    $m("#txtCountryPartnership").removeClass("error");

                    $m("label[for=txtPartStreetName]").text('');
                    $m("#txtPartStreetName").removeClass("error");

                    $m("label[for=txtPartCity]").text('');
                    $m("#txtPartCity").removeClass("error");

                    $m("label[for=txtPartState]").text('');
                    $m("#txtPartState").removeClass("error");

                    $m("label[for=txtPartZip5]").text('');
                    $m("#txtPartZip5").removeClass("error");

                    $m("label[for=txtPartAmtSchedP]").text('');
                    $m("#txtPartAmtSchedP").removeClass("error");

                    $m("label[for=txtPartExplanationInKind]").text('');
                    $m("#txtPartExplanationInKind").removeClass("error");

                    // CLEAR THE ERRORS ON EDIT DIALOGBOX.
                    //==============================================================

                    $("#ui-id-2").text("Add/Edit Attribution Details");

                    $("#helpPLLCsLLCsScheduleC").show();

                    $("#dvDateRcvdPartAttr").show();
                    $("#lblIndividualPart").text("Is LLCC Member owner an Individual?");
                    $("#lblPartnershipName").text("LLC Name");
                    $("#lblPartnerName").text("* Member Name");

                    sessionStorage.setItem("FilingEntityIdPartner", dataPartners[1].toString());
                    sessionStorage.setItem("TransNumberPartnership", dataPartners[17].toString());

                    // EDIT SCHEDULE C '&' VALIDATION.
                    sessionStorage.setItem("ScheduleCSchedId", "3");

                    $("#txtPartAmtSchedP").addClass("watermarkHTMLTextBox");

                    var attAmt = dataPartners[14].toString();
                    sessionStorage.setItem("PartnershipAttrAmount", attAmt.toString());

                    sessionStorage.setItem("UpdateFlagSchedAPart", "Yes");

                    if (dataPartners[16].toString() == "No") {
                        $("#lblExplanationPart").text("Explanation");
                        $("#tdPartnershipNamePartner").hide();
                    }
                    else {
                        $("#lblExplanationPart").text("Explanation");
                        $("#tdPartnershipNamePartner").show();
                    }

                    $("#lstItemizedPart option")
                        .filter(function () { return $.trim($(this).text()) == dataPartners[16].toString(); })
                        .attr("selected", "selected");

                    if (dataPartners[5].toString() == "") {
                        $("#lstIndividualPart")[0].selectedIndex = 0;
                    }
                    else {
                        $("#lstIndividualPart")[0].selectedIndex = 1;
                    }

                    if (dataPartners[9].toString() == "United States") {
                        $("#chkCountryPartnership").prop('checked', false);
                        $("#txtCountryPartnership").prop("disabled", true);
                        $("#txtPartState").prop('maxLength', '2');
                    }
                    else { // Other Country
                        $("#chkCountryPartnership").prop('checked', true);
                        $("#txtCountryPartnership").prop("disabled", false);

                        $("#txtPartState").prop('maxLength', '30');
                        $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                        $m('#txtPartZip5').attr("placeholder", "");
                    }

                    if (dataPartners[16].toString() == "Yes") { // [16] ITEMIZED OR NOT.

                        $("#lstItemizedPart")[0].selectedIndex = 0;

                        if (dataPartners[5].toString() != "") { // Individual No
                            $("#lstItemizedPart").prop("disabled", true);
                            $("#lstIndividualPart").prop("disabled", true);

                            $("#tdPartnerName").show();

                            $m("label[for=txtPartFirstName]").text('');
                            $m("#txtPartFirstName").removeClass("error");

                            $m("label[for=txtPartLastName]").text('');
                            $m("#txtPartLastName").removeClass("error");

                            $m("label[for=txtPartAmtSchedP]").text('');
                            $m("#txtPartAmtSchedP").removeClass("error");

                            $("#tdPartFirstName").hide("slow");
                            $("#tdPartMI").hide("slow");
                            $("#tdPartLastName").hide("slow");

                            $("#dvPartIndividual").show("slow");
                            $("#tdPartnershipNamePartner").show("slow");
                            $("#tdPartStreetName").show("slow");
                            $("#tdPartCity").show("slow");
                            $("#tdPartState").show("slow");
                            $("#tdPartZip5").show("slow");
                            $("#tdPartCity").show("slow");
                            $("#tdCountryPartnershipChk").show("slow");
                            $("#tdCountryPartnershipTxt").show("slow");

                            $("#txtPartFirstName").val("");
                            $("#txtPartMI").val("");
                            $("#txtPartLastName").val("");

                            $("#txtCurrentDatePartAttr").val(dataPartners[19].toString());
                            $("#txtPartshiptName").val(dataPartners[4].toString());
                            $("#txtPartnerName").val(dataPartners[5].toString());
                            $("#txtCountryPartnership").val(dataPartners[9].toString());
                            $("#txtPartStreetName").val(dataPartners[10].toString());
                            $("#txtPartCity").val(dataPartners[11].toString());
                            $("#txtPartState").val(dataPartners[12].toString());
                            $("#txtPartZip5").val(dataPartners[13].toString());
                            var varAmt = dataPartners[14].toString();
                            $("#txtPartAmtSchedP").val(varAmt);
                            if (dataPartners[14].toString() != "") {
                                $("#txtPartAmtSchedP").removeClass("watermarkHTMLTextBox");
                            }

                            if (dataPartners[13].toString() != "") {
                                $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                            }
                            else {
                                $("#txtPartZip5").addClass("watermarkHTMLTextBox");
                                if (dataPartners[9].toString() == "United States") {
                                    $("#txtPartZip5").blur();
                                }
                            }

                            $("#txtPartExplanationInKind").val(dataPartners[15].toString());

                            $("#txtPartnerName").focus();
                            $("#tdPartRContributions").hide();
                            $("#tdPartEmployer").hide();
                            $("#tdPartOccupation").hide();
                            $("#divPartContStreetAddress").hide();
                            $("#divPartContCity").hide();
                            $("#divPartContState").hide();
                            $("#divPartContZip5").hide();
                        }
                        else { // Individual Yes
                            $("#lstItemizedPart").prop("disabled", true);
                            $("#lstIndividualPart").prop("disabled", true);

                            $("#tdPartnerName").hide();

                            $("#tdPartFirstName").show("slow");
                            $("#tdPartMI").show("slow");
                            $("#tdPartLastName").show("slow");

                            $m("label[for=txtPartFirstName]").text('');
                            $m("#txtPartFirstName").removeClass("error");

                            $m("label[for=txtPartLastName]").text('');
                            $m("#txtPartLastName").removeClass("error");

                            $m("label[for=txtPartAmtSchedP]").text('');
                            $m("#txtPartAmtSchedP").removeClass("error");

                            $("#dvPartIndividual").show("slow");
                            $("#tdPartnershipNamePartner").show("slow");
                            $("#tdPartStreetName").show("slow");
                            $("#tdPartCity").show("slow");
                            $("#tdPartState").show("slow");
                            $("#tdPartZip5").show("slow");
                            $("#tdPartCity").show("slow");
                            $("#tdCountryPartnershipChk").show("slow");
                            $("#tdCountryPartnershipTxt").show("slow");

                            $("#txtPartnerName").val("");

                            $("#txtCurrentDatePartAttr").val(dataPartners[19].toString());
                            $("#txtPartshiptName").val(dataPartners[4].toString());
                            $("#txtPartFirstName").val(dataPartners[6].toString());
                            $("#txtPartMI").val(dataPartners[7].toString());
                            $("#txtPartLastName").val(dataPartners[8].toString());
                            $("#txtCountryPartnership").val(dataPartners[9].toString());
                            $("#txtPartStreetName").val(dataPartners[10].toString());
                            $("#txtPartCity").val(dataPartners[11].toString());
                            $("#txtPartState").val(dataPartners[12].toString());
                            $("#txtPartZip5").val(dataPartners[13].toString());
                            var varAmt = dataPartners[14].toString();
                            $("#txtPartAmtSchedP").val(varAmt);
                            if ($("#txtPartAmtSchedP").val().toString() != "" || $("#txtPartAmtSchedP").val().toString() != "999999999.99") {
                                $("#txtPartAmtSchedP").removeClass("watermarkHTMLTextBox");
                            }

                            if (dataPartners[13].toString() != "") {
                                $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                            }
                            else {
                                $("#txtPartZip5").addClass("watermarkHTMLTextBox");
                                if (dataPartners[9].toString() == "United States") {
                                    $("#txtPartZip5").blur();
                                }
                            }

                            $("#txtPartExplanationInKind").val(dataPartners[15].toString());

                            $("#txtPartFirstName").focus();

                            if (@Session["COMM_TYPE_ID"] == "23") {
                                if ($("#lstIndividualPart option:selected").val() == "N") {
                                    $("#tdPartRContributions").hide();
                                    $("#tdPartEmployer").hide();
                                    $("#tdPartOccupation").hide();
                                    $("#divPartContStreetAddress").hide();
                                    $("#divPartContCity").hide();
                                    $("#divPartContState").hide();
                                    $("#divPartContZip5").hide();
                                }
                                else {
                                    $("#tdPartRContributions").show();
                                    $m("#lstPartRContributions option").each(function () {
                                        if ($(this).text() == dataPartners[20].toString()) {
                                            $(this).prop('selected', true).trigger('change');

                                            if ($(this).text() == "Yes") {
                                                $("#tdPartEmployer").show();
                                                $("#tdPartOccupation").show();
                                                $("#divPartContStreetAddress").show();
                                                $("#divPartContCity").show();
                                                $("#divPartContState").show();
                                                $("#divPartContZip5").show();
                                                $("#txtPartEmployer").val(dataPartners[21].toString());
                                                $("#txtPartOccupation").val(dataPartners[22].toString());
                                                $("#txtPartContStreetName").val(dataPartners[24].toString());
                                                $("#txtPartContCity").val(dataPartners[25].toString());
                                                $("#txtPartContState").val(dataPartners[26].toString());
                                                $("#txtPartContZipCode").val(dataPartners[27].toString());
                                            }
                                            else {
                                                $("#tdPartEmployer").hide();
                                                $("#tdPartOccupation").hide();
                                                $("#divPartContStreetAddress").hide();
                                                $("#divPartContCity").hide();
                                                $("#divPartContState").hide();
                                                $("#divPartContZip5").hide();
                                            }
                                        }
                                    });
                                }
                            }
                            else {
                                $("#tdPartRContributions").hide();
                                $("#tdPartEmployer").hide();
                                $("#tdPartOccupation").hide();
                                $("#divPartContStreetAddress").hide();
                                $("#divPartContCity").hide();
                                $("#divPartContState").hide();
                                $("#divPartContZip5").hide();
                            }
                        }
                    }
                    else { // Unitemized
                        $("#lstItemizedPart").prop("disabled", true);
                        $("#lstItemizedPart")[0].selectedIndex = 1;

                        $("#tdPartnerName").hide();

                        $("#tdPartFirstName").hide("slow");
                        $("#tdPartMI").hide("slow");
                        $("#tdPartLastName").hide("slow");

                        $("#dvPartIndividual").hide("slow");
                        $("#tdPartnershipNamePartner").show("slow");
                        $("#tdPartStreetName").hide("slow");
                        $("#tdPartCity").hide("slow");
                        $("#tdPartState").hide("slow");
                        $("#tdPartZip5").hide("slow");
                        $("#tdPartCity").hide("slow");
                        $("#tdCountryPartnershipChk").hide("slow");
                        $("#tdCountryPartnershipTxt").hide("slow");

                        $m("label[for=txtPartFirstName]").text('');
                        $m("#txtPartFirstName").removeClass("error");

                        $m("label[for=txtPartLastName]").text('');
                        $m("#txtPartLastName").removeClass("error");

                        $m("label[for=txtPartAmtSchedP]").text('');
                        $m("#txtPartAmtSchedP").removeClass("error");

                        $("#txtCurrentDatePartAttr").val(dataPartners[19].toString());
                        $("#txtPartshiptName").val(dataPartners[4].toString());
                        var varAmt = dataPartners[14].toString();
                        $("#txtPartAmtSchedP").val(varAmt);
                        if ($("#txtPartAmtSchedP").val().toString() != "" || $("#txtPartAmtSchedP").val().toString() != "999999999.99") {
                            $("#txtPartAmtSchedP").removeClass("watermarkHTMLTextBox");
                        }
                        $("#txtPartExplanationInKind").val(dataPartners[15].toString());

                        $("#txtPartAmtSchedP").focus();
                        $("#tdPartRContributions").hide();
                        $("#tdPartEmployer").hide();
                        $("#tdPartOccupation").hide();
                        $("#divPartContStreetAddress").hide();
                        $("#divPartContCity").hide();
                        $("#divPartContState").hide();
                        $("#divPartContZip5").hide();
                    }
                }
                else {
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before editing this Transaction.', 'Ok', '');
                }
            }).always(function () {
                $("#divLoading").hide();
            });
        });

        // Delete Attribution Data.
        $m('#AttributionGridShechC tbody').on('click', 'a.editor_remove_AttrSchedC', function (e) {
            e.preventDefault();
            //Because response time can be delayed always show/hide the loadingthe attribution cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            var dataPartners = tableAttribution.row($(this).parents('tr')).data();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                txtFilerId: $("#txtFilerID").val(),
                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }, function (resultEditFlag) {
                if (resultEditFlag == "TRUE") {
                    var results = "Are you sure you want to delete the attribution details?";
                    $m('#modal_dialog').text(results);
                    $m("#modal_dialog").dialog({
                        resizable: false,
                        width: '400px',
                        height: 'auto',
                        bgiframe: false,
                        closeOnEscape: false,
                        open: function (event, ui) { hideDialogXButton(this); },
                        buttons: {
                            "OK": function () {
                                // Close Confirm Box.
                                $m(this).dialog("close");//Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                $("#divLoading").show();
                                var options = {};
                                options.url = "@Url.Content("~/ContributionsCandIndFamily/DeleteSchedAPartnersData/")";
                                options.type = "GET";
                                options.data = {
                                    strTransNumber: dataPartners[17].toString()
                                };
                                options.dataType = "json";
                                options.contentType = "application/json";
                                options.success = function (resultsDel) {
                                    $("#divLoading").hide();
                                    if (resultsDel) {
                                        window.status = "Record deleted successfully";
                                        GetSchedAPartnersData(true, tableAttribution, false, false);

                                        // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
                                        GetPartnershipTotAmt("#lblAttributionAmt");
                                    }
                                };
                                options.error = function () {
                                    ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                                    $("#divLoading").hide();
                                };
                                $.ajax(options);
                            },
                            "Cancel": function () {
                                $m(this).dialog("close");
                            }
                        }
                    });
                }
                else {
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before editing this Transaction.', 'Ok', '');
                }
            }).always(function () {
                $("#divLoading").hide();
            });
        });


        //==============================================================================================================================================
        // EDIT COMMON
        // ---------------------------------------------------------------------------------------------------------------------------------------------
        // Edit from Other Schedule functionality
        if (sessionStorage.getItem("EditFlag") != null) {
            if (sessionStorage.getItem("EditFlag").toString() == "True") {

                sessionStorage.setItem("UpdateFlagSchedP", "Yes");

                $("#lstTransactionType option").each(function () {
                    if ($(this).val() == sessionStorage.getItem("ScheduleId").toString()) {
                        //$(this).attr('selected', 'selected');
                        $(this).prop("selected", true);
                    }
                });

                // BIND COMMON SESSION VARIABLE.
                sessionStorage.setItem("TransactionType", sessionStorage.getItem("ScheduleId").toString());        

                $("#tdButtonUpdate").show();
                $("#tdButtonSave").hide();

                $("#btnCommonUpdate").show();
                $("#btnCommonSave").hide();

                $("#txtDateRcvd1").hide();

                // Clear Data...
                $("#txtCurrentDate").val("");
                $("#txtContributorName").val("");
                $("#txtFirstName").val("");
                $("#txtMI").val("");
                $("#txtLastName").val("");
                $("#txtStreet").val("");
                $("#txtStreetName").val("");
                $("#txtCity").val("");
                $("#txtState").val("");
                $("#txtZipCode").val("");
                $("#txtCheck").val("");
                $("#txtAmtSchedP").val("");
                $("#txtExplanationSchedP").val("");
                $("#lstReceiptCode")[0].selectedIndex = 0;
                // Clear Data...

                //Hide Error Messages..........
                $("#lblDateRcvdVal").hide();
                $("#txtCurrentDate").removeClass("ui-state-error");
                $("#lblContrCodeVal").hide();
                $("#txtContributorName").removeClass("ui-state-error");
                $("#lblFirstNameVal").hide();
                $("#txtFirstName").removeClass("ui-state-error");
                $("#lblMiddleNameVal").hide();
                $("#txtMI").removeClass("ui-state-error");
                $("#lblLastNameVal").hide();
                $("#txtLastName").removeClass("ui-state-error");
                $("#lblStreetNameVal").hide();
                $("#txtStreetName").removeClass("ui-state-error");
                $("#lblCityVal").hide();
                $("#txtCity").removeClass("ui-state-error");
                $("#lblStateVal").hide();
                $("#txtState").removeClass("ui-state-error");
                $("#lblZipCodeVal").hide();
                $("#txtZipCode").removeClass("ui-state-error");
                $("#lblCheckVal").hide();
                $("#txtCheck").removeClass("ui-state-error");
                $("#lblAmountVal").hide();
                $("#txtAmtSchedP").removeClass("ui-state-error");
                $("#lblExplanationVal").hide();
                $("#txtExplanationSchedP").removeClass("ui-state-error");
                //Hide Error Messages..........

                $.post("@Url.Content("~/_UC_GridCommonControl/GetEditTransactionData/")", {
                    strTransNumber: sessionStorage.getItem("TransNumberEdit").toString()
                }, function (resultsEditData) {
                    $.each(resultsEditData, function (i, item) {

                        var selectedMethod = item.PaymentTypeDesc.toString();

                        if (selectedMethod == "Check") {
                            $("#tdCheck").show();
                            $("#lblCheckNumber").show();
                        }
                        else {
                            $("#tdCheck").hide();
                            $("#lblCheckNumber").hide();
                        }

                        dialog_Sched_P.dialog("open");

                        sessionStorage.setItem("TransNumber", item.TransNumber.toString());
                        sessionStorage.setItem("FilingEntityId", item.FilingEntityId.toString());

                        var selectedReceiptCode = item.ReceiptCodeDesc.toString();

                        $("#txtCurrentDate").val(item.SchedDate.toString());
                        if ($("#txtCurrentDate").val().toString() != "MM/DD/YYYY") {
                            $("#txtCurrentDate").removeClass('watermarkHTMLTextBox');
                        }
                        $("#txtContributorName").val(item.FilingEntityName.toString());
                        $("#txtFirstName").val(item.FilingFirstName.toString());
                        $("#txtMI").val(item.FilingMiddleName.toString());
                        $("#txtLastName").val(item.FilingLastName.toString());
                        $("#txtStreetName").val(item.FilingStreetName.toString());
                        $("#txtCity").val(item.FilingCity.toString());
                        $("#txtState").val(item.FilingState.toString());
                        $("#txtZipCode").val(item.FilingZip.toString());
                        /// Country
                        $("#txtCountry").val(item.FilingCountry.toString());
                        if (item.FilingCountry.toString() == "United States") {
                            $("#chkCountry").prop('checked', false);
                            $("#txtCountry").prop("disabled", true);
                            $("#txtState").prop('maxLength', '2');
                        }
                        else { // Other Country
                            $("#chkCountry").prop('checked', true);
                            $("#txtCountry").prop("disabled", false);
                            $("#txtState").prop('maxLength', '30');
                            $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            $m('#txtZipCode').attr("placeholder", "");
                        }
                        if (item.FilingZip.toString() != "") {
                            $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                        }
                        else {
                            $("#txtZipCode").addClass("watermarkHTMLTextBox");
                            if (item.FilingCountry.toString() == "United States") {
                                $("#txtZipCode").blur();
                            }
                        }
                        if (item.PaymentTypeId.toString() == "1") {
                            $("#tdCheck").show();
                            $("#txtCheck").val(item.PayNumber.toString());
                        }
                        else {
                            $("#tdCheck").hide();
                        }
                        var varAmount = item.OriginalAmount.toString();
                        $("#txtAmtSchedP").val(varAmount);
                        if (item.OriginalAmount.toString() != "") {
                            $("#txtAmtSchedP").removeClass("watermarkHTMLTextBox");
                        }
                        $("#txtExplanationSchedP").val(item.TransExplanation.toString());

                        if (item.PaymentTypeId.toString() == "7") {
                            $("#lblExplanation").text("* Explanation");
                        }

                        if (selectedReceiptCode == "Other") {
                            $("#lblExplanation").text("* Explanation");
                        }

                        if ($("#txtCurrentDate").val().toString() != "MM/DD/YYYY") {
                            $("#txtCurrentDate").removeClass('watermark');
                        }

                        if ($("#txtZipCode").val().toString() != "00000-0000") {
                            $("#txtZipCode").removeClass('watermark');
                        }

                        $("#lstMethod option").each(function () {
                            if ($(this).text() == item.PaymentTypeDesc.toString()) {
                                //$(this).attr('selected', 'selected');
                                $(this).prop("selected", true);
                            }
                        });

                        if (item.PaymentTypeId.toString() == "1") {
                            $("#tdCheck").show();
                            $("#txtCheck").val(item.PayNumber.toString());
                        }
                        else {
                            $("#tdCheck").hide();
                        }

                        $("#lstReceiptCode option").each(function () {
                            if ($(this).text() == selectedReceiptCode) {
                                //$(this).attr('selected', 'selected');
                                $(this).prop("selected", true);
                            }
                        });

                        $("#lstReceiptCode").prop("disabled", true);

                        if (item.RItemized.toString() == "No") { // Unitemized Transactions.

                            $("#lstItemized")[0].selectedIndex = 1;
                            $("#lstItemized").prop("disabled", true);

                            // Unitemized.
                            $("#tdDateRcvdNonHouseKeepingScheP").show("slow");
                            $("#tdReceiptCodeNonHouseKeepingScheP").hide("slow");
                            $("#tdContributorNameScheP").hide("slow");
                            $("#tdFirstNameScheP").hide("slow");
                            $("#tdMIScheP").hide("slow");
                            $("#tdLastNameScheP").hide("slow");
                            $("#divStreetAddress").hide("slow");
                            $("#divCity").hide("slow");
                            $("#divState").hide("slow");
                            $("#divZip5").hide("slow");
                            $("#tdMethodNonHouseKeepingScheP").hide("slow");
                            $("#tdCheck").hide("slow");
                            $("#tAmtNonHouseKeepingScheP").show("slow");
                            $("#tdExplanationNonHouseKeepingScheP").show("slow");
                            $("#tdCountryContributionChk").hide("slow");
                            $("#tdCountryContributionTxt").hide("slow");

                        }
                        else { // Itemized Transactions.

                            $("#lstItemized")[0].selectedIndex = 0;
                            $("#lstItemized").prop("disabled", true);

                            if (selectedReceiptCode == "Individual") {

                                //Show All TD
                                $("#tdDateRcvdNonHouseKeepingScheP").show("slow");
                                $("#tdReceiptCodeNonHouseKeepingScheP").show("slow");
                                $("#tdContributorNameScheP").hide("slow");
                                $("#tdFirstNameScheP").show("slow");
                                $("#tdMIScheP").show("slow");
                                $("#tdLastNameScheP").show("slow");
                                $("#divStreetAddress").show("slow");
                                $("#divCity").show("slow");
                                $("#divState").show("slow");
                                $("#divZip5").show("slow");
                                $("#tdMethodNonHouseKeepingScheP").show("slow");
                                $("#tAmtNonHouseKeepingScheP").show("slow");
                                $("#tdExplanationNonHouseKeepingScheP").show("slow");
                                $("#tdCountryContributionChk").show("slow");
                                $("#tdCountryContributionTxt").show("slow");

                            } else if (selectedReceiptCode == "Corporation" || selectedReceiptCode == "Partnership including LLPs"
                                || selectedReceiptCode == "Political Action Committee" || selectedReceiptCode == "Limited Liability Company"
                                || selectedReceiptCode == "Unions" || selectedReceiptCode == "Political Committee") {

                                //Show All TD
                                $("#tdDateRcvdNonHouseKeepingScheP").show("slow");
                                $("#tdReceiptCodeNonHouseKeepingScheP").show("slow");
                                $("#tdContributorNameScheP").show("slow");
                                $("#tdFirstNameScheP").hide("slow");
                                $("#tdMIScheP").hide("slow");
                                $("#tdLastNameScheP").hide("slow");
                                $("#dvErrorLastName").hide("slow");
                                $("#divStreetAddress").show("slow");
                                $("#divCity").show("slow");
                                $("#divState").show("slow");
                                $("#divZip5").show("slow");
                                $("#tdMethodNonHouseKeepingScheP").show("slow");
                                $("#tAmtNonHouseKeepingScheP").show("slow");
                                $("#tdExplanationNonHouseKeepingScheP").show("slow");
                                $("#tdCountryContributionChk").show("slow");
                                $("#tdCountryContributionTxt").show("slow");

                            }
                            else if (selectedReceiptCode == "Other") {
                                //Show All TD
                                $("#tdDateRcvdNonHouseKeepingScheP").show("slow");
                                $("#tdReceiptCodeNonHouseKeepingScheP").show("slow");
                                $("#tdContributorNameScheP").show("slow");
                                $("#tdFirstNameScheP").hide("slow");
                                $("#tdMIScheP").hide("slow");
                                $("#tdLastNameScheP").hide("slow");
                                $("#dvErrorLastName").hide("slow");
                                $("#divStreetAddress").show("slow");
                                $("#divCity").show("slow");
                                $("#divState").show("slow");
                                $("#divZip5").show("slow");
                                $("#tdMethodNonHouseKeepingScheP").show("slow");
                                $("#tAmtNonHouseKeepingScheP").show("slow");
                                $("#tdExplanationNonHouseKeepingScheP").show("slow");
                                $("#tdCountryContributionChk").show("slow");
                                $("#tdCountryContributionTxt").show("slow");
                            }
                        }

                        // Common Code
                        sessionStorage.setItem("EditFlag", "False");
                    });
                });
            }
        }
        // ---------------------------------------------------------------------------------------------------------------------------------------------
        // EDIT COMMON
        //==============================================================================================================================================

        // Edit a record
        $m('#gridFilingTransactions tbody').on('click', 'a.editor_edit_Sched_P', function (e) {
            e.preventDefault();
            var data = tableFilingTransactions.row($(this).parents('tr')).data();
            //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                txtFilerId: $("#txtFilerID").val(),
                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }, function (resultEditFlag) {
                if (resultEditFlag == "TRUE") {
                    
                    if (data[1].toString() == "16") { // Schedule P

                        $("#divShowPartnerAdddataNCR").hide(); 
                        $("#divShowAttributionSchedC").hide();
                        $("#tdButtonSavePartners").hide();
                        $("#divLoading").hide();
                        dialog_Sched_P.dialog("open");

                        sessionStorage.setItem("UpdateFlagSchedP", "Yes");

                        var validator = $m("#DialogBoxSchedPForm").validate();
                        validator.resetForm();  // clear out the validation errors
                        $m("#DialogBoxSchedPForm")[0].reset();   // clear out the form data

                        $("#lblExplanation").text("Explanation");

                        // Bind Method Data
                        var options = {};
                        options.url = "@Url.Content("~/NonCampaignHousekeepingReceiptsSchedP/GetPaymentMethodData/")";
                        options.type = "POST";
                        options.data = null;
                        options.dataType = "json";
                        options.contentType = "application/json";
                        options.success = function (resultsMethod) {
                            $("#lstMethod").empty();
                            for (var i = 0; i < resultsMethod.length; i++) {
                                $("#lstMethod").append("<option value='" + resultsMethod[i].Value + "'>" + resultsMethod[i].Text + "</option>");
                            }
                            // Set Method
                            if (data[5].toString() != null || data[5].toString() != "") {
                                $m("#lstMethod option")
                                    .filter(function () { return $m(this).val() == data[5].toString(); })
                                    .attr("selected", "selected");
                            }
                        };
                        options.error = function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                        };
                        $.ajax(options);


                        // Bind Reciept Codes Data
                        var options = {};
                        options.url = "@Url.Content("~/NonCampaignHousekeepingReceiptsSchedP/GetReceiptCodeData/")";
                        options.type = "POST";
                        options.data = null;
                        options.dataType = "json";
                        options.contentType = "application/json";
                        options.success = function (resultsReceiptCode) {
                            $("#lstReceiptCode").empty();
                            for (var i = 0; i < resultsReceiptCode.length; i++) {
                                $("#lstReceiptCode").append("<option value='" + resultsReceiptCode[i].Value + "'>" + resultsReceiptCode[i].Text + "</option>");
                            }
                            // Set Receipt Code
                            if (data[30].toString() != null || data[30].toString() != "") {
                                $m("#lstReceiptCode option")
                                    .filter(function () { return $m(this).text() == data[30].toString(); })
                                    .attr("selected", "selected");
                            }
                            $("#lstReceiptCode").prop("disabled", true);
                        };
                        options.error = function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                        };
                        $.ajax(options);


                        sessionStorage.setItem("TransNumber", data[42].toString());
                        sessionStorage.setItem("FilingEntityId", data[2].toString());

                        var selectedReceiptCode = data[30].toString();

                        $("#lstReceiptCode").prop("disabled", true);

                        $("#txtCurrentDate").val(data[10].toString());
                        $("#txtCurrentDate").removeClass("watermarkHTMLTextBox");
                        if (data[10].toString() != "" || data[10].toString() != null) {
                            var MyDate = new Date($("#txtCurrentDate").val().toString());
                            var MyDateString;
                            MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                                + ('0' + MyDate.getDate()).slice(-2) + '/'
                                + MyDate.getFullYear();
                            $("#txtCurrentDate").val("");
                            $("#txtCurrentDate").val(MyDateString);
                            $("#txtCurrentDate").removeClass("watermarkHTMLTextBox");
                        }
                        $("#txtContributorName").val(data[13].toString());
                        $("#txtFirstName").val(data[14].toString());
                        $("#txtMI").val(data[15].toString());
                        $("#txtLastName").val(data[16].toString());
                        $("#txtStreetName").val(data[18].toString());
                        $("#txtCity").val(data[19].toString());
                        $("#txtState").val(data[20].toString());
                        $("#txtZipCode").val(data[21].toString());
                        $("#txtCountry").val(data[17].toString());
                        if (data[17].toString() == "United States") {
                            $("#chkCountry").prop('checked', false);
                            $("#txtCountry").prop("disabled", true);
                            $("#txtState").prop('maxLength', '2');
                        }
                        else { // Other Country
                            $("#chkCountry").prop('checked', true);
                            $("#txtCountry").prop("disabled", false);
                            $("#txtState").prop('maxLength', '30');
                            $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            $m('#txtZipCode').attr("placeholder", "");
                        }
                        if (data[21].toString() != "") {
                            $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                        }
                        else {
                            $("#txtZipCode").addClass("watermarkHTMLTextBox");
                            if (data[17].toString() == "United States") {
                                $("#txtZipCode").blur();
                            }
                        }
                        if (data[5].toString() == "1") {
                            $("#tdCheck").show();
                            $("#txtCheck").val(data[23].toString());
                        }
                        else {
                            $("#tdCheck").hide();
                        }

                        if (data[5].toString() == "7") {
                            $("#lblExplanation").text("* Explanation");
                        }

                        if (data[30].toString() == "Other") {
                            $("#lblExplanation").text("* Explanation");
                        }

                        var varAmount = data[24].toString();
                        $("#txtAmtSchedP").val(varAmount);
                        if ($("#txtAmtSchedP").val().toString() != "" || $("#txtAmtSchedP").val().toString() != "999999999.99") {
                            $("#txtAmtSchedP").removeClass("watermarkHTMLTextBox");
                        }
                        $("#txtExplanationSchedP").val(data[36].toString());

                        if ($("#txtCurrentDate").val().toString() != "MM/DD/YYYY") {
                            $("#txtCurrentDate").removeClass('watermark');
                        }

                        if ($("#txtZipCode").val().toString() != "00000-0000") {
                            $("#txtZipCode").removeClass('watermark');
                        }

                        if (data[37].toString() == "No") { // Unitemized Transactions.

                            $("#lstItemized")[0].selectedIndex = 1;
                            $("#lstItemized").prop("disabled", true);

                            // Unitemized.
                            $("#tdDateRcvdNonHouseKeepingScheP").show("slow");
                            $("#tdReceiptCodeNonHouseKeepingScheP").hide("slow");
                            $("#tdContributorNameScheP").hide("slow");
                            $("#tdFirstNameScheP").hide("slow");
                            $("#tdMIScheP").hide("slow");
                            $("#tdLastNameScheP").hide("slow");
                            $("#divStreetAddress").hide("slow");
                            $("#divCity").hide("slow");
                            $("#divState").hide("slow");
                            $("#divZip5").hide("slow");
                            $("#tdMethodNonHouseKeepingScheP").hide("slow");
                            $("#tdCheck").hide("slow");
                            $("#tAmtNonHouseKeepingScheP").show("slow");
                            $("#tdExplanationNonHouseKeepingScheP").show("slow");
                            $("#tdCountryContributionChk").hide("slow");
                            $("#tdCountryContributionTxt").hide("slow");

                        }
                        else { // Itemized Transactions.

                            $("#lstItemized")[0].selectedIndex = 0;
                            $("#lstItemized").prop("disabled", true);

                            if (selectedReceiptCode == "Individual") {

                                //Show All TD
                                $("#tdDateRcvdNonHouseKeepingScheP").show("slow");
                                $("#tdReceiptCodeNonHouseKeepingScheP").show("slow");
                                $("#tdContributorNameScheP").hide("slow");
                                $("#tdFirstNameScheP").show("slow");
                                $("#tdMIScheP").show("slow");
                                $("#tdLastNameScheP").show("slow");
                                $("#divStreetAddress").show("slow");
                                $("#divCity").show("slow");
                                $("#divState").show("slow");
                                $("#divZip5").show("slow");
                                $("#tdMethodNonHouseKeepingScheP").show("slow");
                                $("#tAmtNonHouseKeepingScheP").show("slow");
                                $("#tdExplanationNonHouseKeepingScheP").show("slow");
                                $("#tdCountryContributionChk").show("slow");
                                $("#tdCountryContributionTxt").show("slow");

                            } else if (selectedReceiptCode == "Corporation" || selectedReceiptCode == "Partnership including LLPs"
                                || selectedReceiptCode == "Political Action Committee" || selectedReceiptCode == "Limited Liability Company"
                                || selectedReceiptCode == "Unions" || selectedReceiptCode == "Political Committee") {

                                //Show All TD
                                $("#tdDateRcvdNonHouseKeepingScheP").show("slow");
                                $("#tdReceiptCodeNonHouseKeepingScheP").show("slow");
                                $("#tdContributorNameScheP").show("slow");
                                $("#tdFirstNameScheP").hide("slow");
                                $("#tdMIScheP").hide("slow");
                                $("#tdLastNameScheP").hide("slow");
                                $("#dvErrorLastName").hide("slow");
                                $("#divStreetAddress").show("slow");
                                $("#divCity").show("slow");
                                $("#divState").show("slow");
                                $("#divZip5").show("slow");
                                $("#tdMethodNonHouseKeepingScheP").show("slow");
                                $("#tAmtNonHouseKeepingScheP").show("slow");
                                $("#tdExplanationNonHouseKeepingScheP").show("slow");
                                $("#tdCountryContributionChk").show("slow");
                                $("#tdCountryContributionTxt").show("slow");

                            }
                            else if (selectedReceiptCode == "Other") {
                                //Show All TD
                                $("#tdDateRcvdNonHouseKeepingScheP").show("slow");
                                $("#tdReceiptCodeNonHouseKeepingScheP").show("slow");
                                $("#tdContributorNameScheP").show("slow");
                                $("#tdFirstNameScheP").hide("slow");
                                $("#tdMIScheP").hide("slow");
                                $("#tdLastNameScheP").hide("slow");
                                $("#dvErrorLastName").hide("slow");
                                $("#divStreetAddress").show("slow");
                                $("#divCity").show("slow");
                                $("#divState").show("slow");
                                $("#divZip5").show("slow");
                                $("#tdMethodNonHouseKeepingScheP").show("slow");
                                $("#tAmtNonHouseKeepingScheP").show("slow");
                                $("#tdExplanationNonHouseKeepingScheP").show("slow");
                                $("#tdCountryContributionChk").show("slow");
                                $("#tdCountryContributionTxt").show("slow");
                            }
                        }
                        $("#txtCurrentDate").select();
                    } // Other Schedules
                    else if (["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "16", "17", "18"].includes(data[1].toString())) {
                            //Common code to determine redirect url and set session varialbes. Also hides $("#divLoading") on fail.
                            //Uses window.location.href
                            appCommonEFS_DetermineScheduleRedirect(data[1].toString(), data[42].toString());
                    }
                } else { //resultEditFlag != "TRUE"
                    $("#divLoading").hide();
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before editing this Transaction.', 'Ok', '');
                }
            }).fail(function () {
                $("#divLoading").hide();// GetEditFlag failed.
            });
        });

        // Receipt Code Changes.
        // ======================================================================================================================================
        $("#lstReceiptCode").change(function () {
            var selectedlstReceiptCode = $("#lstReceiptCode option:selected").val().toString();

            $m("#txtContributorName").val("");
            $m("#txtFirstName").val("");
            $m("#txtLastName").val("");
            $m("#txtMI").val("");

            if (selectedlstReceiptCode == "1") {

                //Show All TD
                $("#tdContributorNameScheP").hide("slow");
                $("#tdFirstNameScheP").show("slow");
                $("#tdMIScheP").show("slow");
                $("#tdLastNameScheP").show("slow");

                appCommonEFS_ClearLabeltextAndRemoveClassError(["txtFirstName", "txtLastName", "txtMI", "txtExplanationSchedP"]);

                $("#lblExplanation").text("Explanation");
            }
            else if (selectedlstReceiptCode == "3" || selectedlstReceiptCode == "2"
                || selectedlstReceiptCode == "6" || selectedlstReceiptCode == "7"
                || selectedlstReceiptCode == "8" || selectedlstReceiptCode == "4") {

                //Show All TD
                $("#tdContributorNameScheP").show("slow");
                $("#tdFirstNameScheP").hide("slow");
                $("#tdMIScheP").hide("slow");
                $("#tdLastNameScheP").hide("slow");

                appCommonEFS_ClearLabeltextAndRemoveClassError(["txtContributorName", "txtExplanationSchedP"]);

                $("#lblExplanation").text("Explanation");
            }
            else if (selectedlstReceiptCode == "9") {
                $("#lblExplanation").text("* Explanation");

                //Show All TD
                $("#tdContributorNameScheP").show("slow");
                $("#tdFirstNameScheP").hide("slow");
                $("#tdMIScheP").hide("slow");
                $("#tdLastNameScheP").hide("slow");
            }
            else {
                // Hide/Show Controls
                $("#tdContributorNameScheP").hide("slow");
                $("#tdFirstNameScheP").show("slow");
                $("#tdMIScheP").show("slow");
                $("#tdLastNameScheP").show("slow");

                $m("label[for=txtExplanationSchedP]").text('');
                $m("#txtExplanationSchedP").removeClass("error");

                $("#lblExplanation").text("Explanation");
            }

            $m("label[for=txtExplanationSchedP]").text('');
            $m("#txtExplanationSchedP").removeClass("error");

            if ($("#lstMethod option:selected").val().toString() == "7") { // OTHER
                // EXPLANATION MANADATORY
                $("#lblExplanation").text("* Explanation");
            }
        });
        // Receipt Code Changes.
        // ======================================================================================================================================

        //=================================================================================================================================================
        // Grid Common Code ///////////////////////////////////////////////////
        //=================================================================================================================================================
        // Grid Common Code ///////////////////////////////////////////////////
        //=================================================================================================================================================
        // CALL LOAD DATA FUNCTION
        LoadData();

        // FUNCTION LOAD DATA
        function LoadData() {
            $("#divLoading").show();
            tableFilingTransactions = $m('#gridFilingTransactions').DataTable({
                "bProcessing": true,
                "responsive": true,
                "deferRender": true,
                "retrieve": true,
                "columnDefs": [
                    {
                        "targets": [0, 1, 2, 3, 4, 5, 6, 7, 38, 39, 41, 42, 43, 44],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        "targets": [9],
                        "fnCreatedCell": function (cell) {
                            cell.setAttribute('aria-label', "Row Actions");
                        }
                    }
                ],
                "initComplete": function (settings, json) {
                    //Accessibility: Applies various Accessibility features to this dataTable.
                    makeDataTableAccessible($m('#gridFilingTransactions').DataTable());
                },
                "fnRowCallback": function (nRow, aaData, iDisplayIndex) {
                    var uniqueID = generateUniqueRowIdForFnRowCallback(iDisplayIndex, nRow);
                    if (aaData[1] == "16") {
                        if (aaData[30] == "Partnership including LLPs") {
                            $m('td:eq(1)', nRow).html('<a class="editor_edit_Sched_P" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_Sched_P" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_AttributionSchedA lnkGird" href="">Partnership</a>');
                        }
                        else if (aaData[30] == "Limited Liability Company") { // Schedule P - Limited Liability Company (LLC).
                            $m('td:eq(1)', nRow).html('<a class="editor_edit_Sched_P" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_Sched_P" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_AttributionSchedC lnkGird" href="">Attribution</a>');
                        }
                        else {
                            $m('td:eq(1)', nRow).html('<a class="editor_edit_Sched_P" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_Sched_P" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a>');
                        }                                                
                    }
                    else if (aaData[1] == "14") {
                        $m('td:eq(1)', nRow).html('');
                    }
                    else if (aaData[1] == "11") { // LIABILITY/LOANS FORGIVEN 
                        $m('td:eq(1)', nRow).html('<a class="editor_remove_Sched_P" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a>');
                    }
                    else {
                        if (aaData[1] != "15") {
                            $m('td:eq(1)', nRow).html('<a class="editor_edit_Sched_P" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_Sched_P" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                        }
                        else { // SCHEDULE 15 LEGACY DATA NOT EDIT NO ADD ONLY DELETE.
                            $m('td:eq(1)', nRow).html('<a class="editor_remove_Sched_P" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                        }
                    }
                    return nRow;
                },
                "fnDrawCallback": function () {
                    $("#divLoading").hide();
                },
                "fnServerData": function (url, data, callback) {
                    GetAllTransactionTypesData(false, callback, false, false);
                }
            });
            tableFilingTransactions.columns.adjust().draw(true);
            $m('#gridFilingTransactions').DataTable().ajax.reload();
            if (@Session["COMM_TYPE_ID"] == "23") {
                tableFilingTransactions.column(46).visible(true);
                tableFilingTransactions.column(47).visible(true);
                tableFilingTransactions.column(48).visible(true);
                tableFilingTransactions.column(49).visible(true);
                tableFilingTransactions.column(50).visible(true);
                tableFilingTransactions.column(51).visible(true);
                tableFilingTransactions.column(52).visible(true);
                tableFilingTransactions.column(53).visible(true);
                tableFilingTransactions.column(54).visible(true);
            }
            else {
                tableFilingTransactions.column(46).visible(false);
                tableFilingTransactions.column(47).visible(false);
                tableFilingTransactions.column(48).visible(false);
                tableFilingTransactions.column(49).visible(false);
                tableFilingTransactions.column(50).visible(false);
                tableFilingTransactions.column(51).visible(false);
                tableFilingTransactions.column(52).visible(false);
                tableFilingTransactions.column(53).visible(false);
                tableFilingTransactions.column(54).visible(false);
            }

            if (@Session["COMM_TYPE_ID"] == "19") {
                tableFilingTransactions.column(55).visible(true);
            }
            else {
                tableFilingTransactions.column(55).visible(false);
            }

            tableFilingTransactions.columns.adjust().draw(false);
            tableFilingTransactions.order([40, 'desc']).draw();
            tableFilingTransactions.columns.adjust().responsive.recalc();
            $("#divLoading").show();
        }

        //Common Code for Set Preferences - Start
        //---------------------------------------------------------------------------------------------------------------------------------------
        //---------------------------------------------------------------------------------------------------------------------------------------
        $('#btnSetPreferences').click(function () {
            $("#divLoading").show();
            var options = {};            
            options.url = "@Url.Content("~/_UC_GridCommonControl/UpdateColumnValue/")";
            options.type = "GET";
            options.data = {
                uniqueValue: $m("#ddlViewableColumn").multipleSelect("getSelects").toString()
            };
            options.dataType = "json";
            options.contentType = "application/json";
            options.success = function (results) {
                window.status = "Transaction saved successfully";
                //Bind Grid hides the loading too!
                GetAllTransactionTypesData(true, tableFilingTransactions, false, false);
                HideColumn($m("#ddlViewableColumn").multipleSelect("getSelects", "text").toString().split(","));
            };
            options.error = function () {
                ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ?(518) 474-8200 ', 'Ok', '');
            };
            $.ajax(options);

        });

        $.post("@Url.Content("~/_UC_GridCommonControl/GetSortName/")", {
        }, function (results) {
            HideColumn(results.toString().split(","));
        });

        function HideColumn(results) {
            var rules = {
                "indexesToStartHidden": [0, 1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43],
                "indexesToAlwaysKeepUnhidden": [8, 9], //Will always unhide.
                "columnNamesToUnhide": results,//String to match.
                "columnNamesIndexMappings": appCommonEFS_GetGridColumnSettings("UC_GridCommonControl") //String in header, index to unhide
            }
            appCommonEFS_HideTableColumn(tableFilingTransactions, rules);
        }
        /**
         * Appends label text to _validate elementys based on a list of custom errors returned from the server.
         * It won't do anyting to handle "AmmountError" keys but it will return true if it sees one in the list.
          * param {reuslt.Errors} errorList
          * Replaces this type of code basically:
             for (var i = 0; i < results.Errors.length; i++) {
                 if (results.Errors[i].Key == "txtPartAmt") {
                     $("#txtPartAmtSchedD_validate").append('<label for="txtPartAmtSchedD" class="error">' + results.Errors[i].Value + '</label>');
                 }
                 if (results.Errors[i].Key == "txtPartExplanationInKind") {
                     $("#txtPartExplanationInKind_validate").append('<label for="txtPartExplanationInKind" class="error">' + results.Errors[i].Value + '</label>');
                 }
                 if (results.Errors[i].Key == "AmountError") {
                     ShowDialogBox('EFS', 'Partnership Amount cannot be more than Outstanding Amount $' + parseFloat(expPartAmount).toFixed(2).toString(), 'Ok', '');
                 }
             }
        */
        function AppendCustomErrorLabels(errorList) {
            //You can define special error conditions using  new Map([["txtAmt", "txtAmtABC"], ["txtPartAmt", "txtPartAmtAC"]])
            var errorLabelDiscrepancies = new Map([["lstContributionName", "lstReceiptCode"], ["txtPartnerShipName", "txtContributorName"], ["txtPartAmt", "txtPartAmtSchedP"], ["txtAmt", "txtAmtSchedP"], ["txtExplanation", "txtExplanationSchedP"]]);
            return appCommonEFS_AppendCustomErrorLabelsForAmmountError(errorList, errorLabelDiscrepancies);
        }

        //Commonly used values in this particular page.
        function GetTableFilingTransactionsAjaxOptionsData() {
            return {
                txtFilerID: $("#txtFilerID").val(),
                lstElectionCycle: $("#lstElectionCycle option:selected").val(),
                lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                lstElectionType: $("#lstElectionType option:selected").val(),
                lstElectionDateId: $("#lstElectionDate option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }
        }

        /**Common code for invoking GetAllTransactionTypesData from controller.
         * reloadAndRecalc { boolean } reloads and recalculates the table. When we reload we will display the "divLoading" image until the ajax reload call is completed. This was created for ALM Defect 707 where users were intertacting with the table while the "Processing..." text was still visible.
         * dataTableInstanceToReload { function } The referecne to the datatable we will reload in the success callback..
         * dataOverides { ajax data params } pass to overwrite data values when making ajax call.
         * doneFunction { function } A function to be called if the ajax call is completed.
         */
        function GetAllTransactionTypesData(reloadAndRecalc, dataTableInstanceToReload, dataOverides, doneFunction) {
            var callback = dataTableInstanceToReload ? dataTableInstanceToReload : tableFilingTransactions;
            //Determine what data to use.
            var optionsData = bUtilIsObject(dataOverides) ? dataOverides : GetTableFilingTransactionsAjaxOptionsData();
            appCommonEFS_GetAllTransactionTypesDataCommon(reloadAndRecalc, callback, optionsData, doneFunction);
        }
        //Common Code for Set Preferences - End
        //---------------------------------------------------------------------------------------------------------------------------------------
        //---------------------------------------------------------------------------------------------------------------------------------------

    }); // Document END>>>> END>>>>>>

    function ClearServerSideErrors() {
        //removing error class and error messages in search form
        $("#txtCurrentDate_validate").empty();
        $("#lstContributionName_validate").empty();
        $("#txtPartnerShipName_validate").empty();
        $("#txtFirstName_validate").empty();
        $("#txtMI_validate").empty();
        $("#txtLastName_validate").empty();
        $("#txtCountry_validate").empty();
        $("#txtStreetName_validate").empty();
        $("#txtCity_validate").empty();
        $("#txtState_validate").empty();
        $("#txtZipCode_validate").empty();
        $("#txtCheck_validate").empty();
        $("#txtAmtSchedP_validate").empty();
        $("#txtExplanation_validate").empty();
    }

    function ClearServerSideErrorsPartnership() {
        //removing error class and error messages in search form
        $("#txtPartnerName_validate").empty();
        $("#txtPartFirstName_validate").empty();
        $("#txtPartMI_validate").empty();
        $("#txtPartLastName_validate").empty();
        $("#txtCountryPartnership_validate").empty();
        $("#txtPartStreetName_validate").empty();
        $("#txtPartCity_validate").empty();
        $("#txtPartState_validate").empty();
        $("#txtPartZip5_validate").empty();
        $("#txtPartAmtSchedP_validate").empty();
        $("#txtPartExplanationInKind_validate").empty();
    }

</script>
