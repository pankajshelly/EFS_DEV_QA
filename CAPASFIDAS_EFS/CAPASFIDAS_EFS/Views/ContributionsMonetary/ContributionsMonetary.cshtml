@{
    ViewBag.Title = ": File a Disclosure Report";
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
}
<form id="ContributionsMonetaryForm">
    @Html.Partial("UserControls/_UC_Alert_Message")
    @Html.Partial("UserControls/_UC_Delete_Message")
    @Html.Partial("UserControls/_UC_Loding")
    <div id="divMainNew" class="mainDiv">
        <fieldset>
            <legend class="visibleToScreenReaderOnly">Search Filter Fields</legend>
            <div class="mainLowerDivCSSDesktop">
                <div id="divhide" class="hideShowButtonCSS">
                    <span role="heading" aria-level="1">Filter</span>
                    <button id="btnCommonShowHide1" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonShowHide" aria-expanded="true">
                        <img src="~/Content/Images/up20.png" alt="Up/Hide Filter Arrow" />
                    </button>
                </div>
                <div id="divshow" class="hideShowButtonCSS">
                    <span role="heading" aria-level="1">Filter</span>
                    <button id="btnCommonHideShow1" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonHideShow" aria-expanded="false">
                        <img src="~/Content/Images/down20.png" alt="Down/Show Filter Arrow" />
                    </button>
                </div>
            </div>
            <div class="mainLowerDivCSS">
                <div id="divhideForMobile" class="hideShowButtonCSS">
                    File a New Disclosure Report
                    <div class="paddingleft6emcss floatRight">
                        Filter
                        <button id="btnCommonShowHide2" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonShowHide">
                            <img src="~/Content/Images/up20.png" alt="Up/Hide Filter Arrow" />
                        </button>
                    </div>
                </div>
                <div id="divshowForMobile" class="hideShowButtonCSS">
                    File a New Disclosure Report
                    <div class="paddingleft6emcss floatRight">
                        Filter
                        <button id="btnCommonHideShow2" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonHideShow">
                            <img src="~/Content/Images/down20.png" alt="Down/Show Filter Arrow" />
                        </button>
                    </div>
                </div>
            </div>
            <div id="divTopSection">
                <div id="selectorItsRpt">
                    <div class="divWidth">
                        <div class="requiredTextFilter">* marks required fields</div>
                        <div class="floatRightNew clsShowButtonClass">
                            <fieldset>
                                <legend class="visibleToScreenReaderOnly">Filter Controls Top</legend>
                                <input type="button" id="btnCommonSearch1" class="btn btn-default clsCommonSearch ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Apply" title="Apply" style="font-size:12px;" />&nbsp;
                                <input type="button" id="btnCommonClear1" class="btn btn-default clsCommonClear ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />&nbsp;
                                <button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelpFilter();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" class="ButtonImageCSS" title="Help" id="imgHelp1" /></button>
                            </fieldset>
                        </div>
                        <div id="divFilerID">
                            <div id="lblFilerID" class="verticalCSSDestop lblCSS">* Filer Id</div>
                            <div class="verticalCSSDestop DDLCSS">
                                @Html.DropDownList("txtFilerID", Enumerable.Empty<SelectListItem>(), "-Select-", new { @class = "spanMobileWidth txtFilerID", @id = "txtFilerID", aria_labelledby = "lblFilerID", aria_describedby = "descriptionForTxtFilerID", required = "required" })
                            </div>
                            <span id="descriptionForTxtFilerID" class="visibleToScreenReaderOnly">
                                Changing the filer ID will trigger the page to reload.
                            </span>
                        </div>
                        <div id="divFilerType">
                            <div class="verticalCSSDestop lblCSS"><span id="lblFilerType">* Filer Type</span></div>
                            <div class="verticalCSSDestop DDLCSS">
                                @Html.TextBox("txtFilerType", null, new { id = "txtFilerType", @class = "txtWidth txtReportPeriodDatesFrom", aria_labelledby = "lblFilerType", required = "required" })
                            </div>
                        </div>
                        <div id="divCommitteeName">
                            <div id="lblCommitteeName" class="verticalCSSDestop lblCSS">* Candidate/Committee Name</div>
                            <div class="verticalCSSDestop DDLCSS">
                                @Html.TextBox("txtCommitteeName", null, new { id = "txtCommitteeName", @class = "txtWidth txtReportPeriodDatesFrom", aria_labelledby = "txtCommitteeName", required = "required" })
                            </div>
                        </div>
                        <div id="divElectionCycle">
                            <div id="lblElectionCycle" class="verticalCSSDestop lblCSS">* Report Year</div>
                            <div class="verticalCSSDestop DDLCSS">
                                @Html.DropDownList("lstElectionCycle", ViewData["lstElectionCycle"] as SelectList, "- Select -", new { @class = "spanMobileWidth lstElectionCycle", aria_labelledby = "lblElectionCycle", aria_describedby = "descriptionForCascadingChange", required = "required" })
                            </div>
                            <span id="descriptionForCascadingChange" class="visibleToScreenReaderOnly">
                                Changing selected value in this field will trigger changes in the fields that follow and in some cases add or remove fields.
                            </span>
                        </div>
                        <div id="divOfficeType">
                            <div id="lblOfficeType" class="verticalCSSDestop lblCSS">* Election Type </div>
                            <div class="verticalCSSDestop DDLCSS">
                                @Html.DropDownList("lstUCOfficeType", ViewData["lstUCOfficeType"] as SelectList, "- Select -", new { id = "lstUCOfficeType", @class = "spanMobileWidth lstUCOfficeType", aria_labelledby = "lblOfficeType", aria_describedby = "descriptionForCascadingChange", required = "required" })
                            </div>
                        </div>
                        <div id="divCounty">
                            <div id="lblCounty" class="verticalCSSDestop lblCSS">* County</div>
                            <div class="verticalCSSDestop DDLCSS">
                                @Html.DropDownList("lstUCCounty", ViewData["lstUCCounty"] as SelectList, "- Select -", new { @class = "spanMobileWidth lstUCCounty", aria_labelledby = "lblCounty", aria_describedby = "descriptionForCascadingChange", required = "required" })
                            </div>
                        </div>
                        <div id="divMunicipality">
                            <div id="lblMunicipality" class="verticalCSSDestop lblCSS">* Municipality</div>
                            <div class="verticalCSSDestop DDLCSS">
                                @Html.DropDownList("lstUCMuncipality", ViewData["lstUCMuncipality"] as SelectList, "- Select -", new { @class = "spanMobileWidth lstUCMuncipality", aria_labelledby = "lblMunicipality", aria_describedby = "descriptionForCascadingChange", required = "required" })
                            </div>
                        </div>
                        <div id="divElectionType">
                            <div id="lblElectionType" class="verticalCSSDestop lblCSS">* Report Type</div>
                            <div class="verticalCSSDestop DDLCSS">
                                @Html.DropDownList("lstElectionType", ViewData["lstElectionType"] as SelectList, "- Select -", new { @class = "spanMobileWidth lstElectionType", aria_labelledby = "lblElectionType", aria_describedby = "descriptionForCascadingChange", required = "required" })
                            </div>
                        </div>
                        <div id="divElectionDate">
                            <div id="lblElectionDate" class="verticalCSSDestop lblCSS">* Election Date</div>
                            <div class="verticalCSSDestop DDLCSS">
                                @Html.DropDownList("lstElectionDate", ViewData["lstElectionDate"] as SelectList, "- Select -", new { @class = "spanMobileWidth lstElectionDate", aria_labelledby = "lblElectionDate", aria_describedby = "descriptionForCascadingChange", required = "required" })
                            </div>
                        </div>
                        <div id="divDisclosureType">
                            <div id="lblDisclosureType" class="verticalCSSDestop lblCSS">* Disclosure Type</div>
                            <div class="verticalCSSDestop DDLCSS">
                                @Html.DropDownList("lstDisclosureType", ViewData["lstDisclosureType"] as SelectList, new { @class = "spanMobileWidth lstDisclosureType", aria_labelledby = "lblDisclosureType", aria_describedby = "descriptionForCascadingChange", required = "required" })
                            </div>
                        </div>
                        <div id="divDisclosurePeriod">
                            <div id="lblDisclosurePeriod" class="verticalCSSDestop lblCSS">* Disclosure Period</div>
                            <div class="verticalCSSDestop DDLCSS">
                                @Html.DropDownList("lstDisclosurePeriod", ViewData["lstDisclosurePeriod"] as SelectList, "- Select -", new { @class = "spanMobileWidth lstDisclosurePeriod", aria_labelledby = "lblDisclosurePeriod", aria_describedby = "descriptionForCascadingChange", required = "required" })
                            </div>
                        </div>
                        @* MOVED RESIGNATION/TERMINATION TYPE HERE TO LAST.... *@
                        <div id="divReportPeriodDates">
                            <div id="lblReportPeriodDatesFrom" class="verticalCSSDestop lblCSS">* Cut off Date</div>
                            <div class="verticalCSSDestop DDLCSS">
                                @Html.TextBox("searchTerm", null, new { id = "txtReportPeriodDatesFrom", @class = "txtWidth txtReportPeriodDatesFrom", aria_labelledby = "lblReportPeriodDatesFrom", required = "required" })
                            </div>
                        </div>
                        <div id="divFilingDateDropDown">
                            <div id="lblFilingDate" class="verticalCSSDestop lblCSS">* Filing Date</div>
                            <div class="verticalCSSDestop DDLCSS">
                                @Html.DropDownList("lstFilingDate", ViewData["lstFilingDate"] as SelectList, new { @class = "spanMobileWidth lstFilingDate", aria_labelledby = "lblFilingDate", required = "required" })
                            </div>
                        </div>
                        <div id="divReportPeriodDatesTo">
                            <div id="lblReportPeriodDatesTo" class="verticalCSSDestop lblCSS">* Filing Date</div>
                            <div class="verticalCSSDestop DDLCSS">
                                @Html.TextBox("txtReportPeriodDatesTo", null, new { id = "txtReportPeriodDatesTo", @class = "txtWidth txtReportPeriodDatesTo required", @maxlength = "10", aria_labelledby = "lblReportPeriodDatesTo", required = "required" })
                            </div>
                        </div>
                        @* OFFICE CYCLE FILING DATE *@
                        <div id="divFilingDateOffCycle">
                            <div id="lblFilingDateOffCycle" class="verticalCSSDestop lblCSS">* New Filing Date</div>
                            <div class="verticalCSSDestop DDLCSS">
                                <input type="text" id="txtNewFilingDate" name="txtNewFilingDate" class="datepicker txtWidthForNewFilingDate txtCurrentDateCls watermarkHTMLTextBox" maxlength="10" aria-labelledby="lblFilingDateOffCycle" required="required" />
                            </div>
                        </div>
                        @* OFFICE CYCLE FILING DATE *@
                        <div id="divFilingReason">
                            <div id="lblReasonforFiling" class="verticalCSSDestop lblCSS">Resignation/Termination"</div>
                            <div class="verticalCSSDestop DDLCSS">
                                @Html.DropDownList("lstResigTermType", ViewData["lstResigTermType"] as SelectList, "- Not Applicable -", new { @class = "spanMobileWidth lstResigTermType", aria_labelledby = "lblReasonforFiling" })
                            </div>
                        </div>
                        <div class="floatRightNew" style="padding-bottom: 2em;">
                            <fieldset>
                                <legend class="visibleToScreenReaderOnly">Filter Controls Bottom</legend>
                                <input type="button" id="btnCommonSearch2" class="btn btn-default clsCommonSearch ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Apply" title="Apply" style="font-size:12px;" />&nbsp;
                                <input type="button" id="btnCommonClear2" class="btn btn-default clsCommonClear ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />&nbsp;
                                <button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelpFilter();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" class="ButtonImageCSS" title="Help" id="imgHelp2" /></button>
                            </fieldset>
                        </div>
                    </div>
                </div>
            </div>
        </fieldset>
    </div>
    <div id="divBreadCrumb" class="breadCrumbDivCSS breadCrumbDvWidthCss">
        <nav aria-label="Breadcrumbs">
            <ol class="breadcrumb">
                <li class="active">File a Disclosure Report</li>
            </ol>
        </nav>
        <div id="divHeader" class="paddingtoppt5" style="width: 205%;">
            <h1>
                <span id="lblHeader">File a Disclosure Report</span>
                <span id="spnEleYear">
                    <span>-</span>
                    <span id="lblHEleYear">File a Disclosure Report</span>
                </span>
                <span id="spnDiclPerd">
                    <span>-</span>
                    <span id="lblHDisclPer">File a Disclosure Report</span>
                </span>
            </h1>
        </div>
        <br />
        <fieldset>
            <legend class="visibleToScreenReaderOnly" id="legendTransactionType">Transaction Type Selection</legend>
            <div id="divTransactionType" class="paddingTop0emTransactionType">
                <div id="lblTransactionType" class="clsMobWidth clspaddingBottom0pt5 lblCSS">Transaction Type</div>
                <div class="clsMobWidth DDLCSS">
                    @Html.DropDownList("lstTransactionType", ViewData["lstTransactionType"] as SelectList, "- Select -", new { @class = "spanMobileWidth", aria_labelledby = "lblTransactionType" })&nbsp;&nbsp;
                </div>
                <div class="clsMobWidth DDLCSS clspaddingleft1em">
                    <input type="button" id="btnSeachApply" class="btn btn-default clsSearchApply ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Apply" title="Apply" style="font-size:12px;" />
                </div>
            </div>
            <div id="divTransactionTypeNonItemized" class="paddingTop0emTransactionType">
                <div id="lblTransactionTypeNonItem" class="clsMobWidth clspaddingBottom0pt5 lblCSS">Transaction Type</div>
                <div class="clsMobWidth DDLCSS">
                    @Html.DropDownList("lstTransactionTypeNonItem", ViewData["lstTransactionTypeNonItem"] as SelectList, "- Select -", new { @class = "spanMobileWidth", aria_labelledby = "lblTransactionTypeNonItem" })
                </div>
                <div class="clsMobWidth DDLCSS clspaddingleft1em">
                    <input type="button" id="btnApplyForTrans" class="btn btn-default clsApplyForTrans24HN ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Apply" title="Apply" style="font-size:12px;" />
                </div>
            </div>
            <div id="divTransactionTypeNonItemWeeklyExp" class="paddingTop0emTransactionType">
                <div id="lblTransactionTypeNonItemWeeklyExp" class="verticalCSSDestop lblCSS">Transaction Type</div>
                <div class="clsMobWidth DDLCSS">
                    @Html.DropDownList("lstTransTypeNonItemWeeklyExp", ViewData["lstTransTypeNonItemWeeklyExp"] as SelectList, "- Select -", new { @class = "spanMobileWidth", aria_labelledby = "lblTransactionTypeNonItemWeeklyExp" })
                </div>
                <div class="clsMobWidth DDLCSS clspaddingleft1em">
                    <input type="button" id="btnApplyForTrans_WeeklyExp" class="btn btn-default clsApplyForTransIE ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Apply" title="Apply" style="font-size:12px;" />
                </div>
            </div>
        </fieldset>
    </div>
    <div id="divMainCenterBottom" class="divMainCenterWidth85">
        <div id="divShowHideHelp" class="clsShowHideHelpSec paddingTop0emFP">
            <table class="clsHelp" role="presentation">
                <tr>
                    <td class="clsHelpSpan">
                        Step 1
                    </td>
                    <td class="paddingLeft0pt5em">
                        Select Report Year and Election Type for the disclosure period you would like to file.
                    </td>
                </tr>
            </table>
            <br />
            <table class="clsHelp" role="presentation">
                <tr>
                    <td class="clsHelpSpan">
                        Step 2
                    </td>
                    <td class="paddingLeft0pt5em">
                        Select the Election Date.
                    </td>
                </tr>
            </table>
            <br />
            <table class="clsHelp" role="presentation">
                <tr>
                    <td class="clsHelpSpan">
                        Step 3
                    </td>
                    <td class="paddingLeft0pt5em">
                        Select disclosure type and disclosure period for the required report.
                    </td>
                </tr>
            </table>
            <br />
            <table class="clsHelp" role="presentation">
                <tr>
                    <td class="clsHelpSpan">
                        Step 4
                    </td>
                    <td class="paddingLeft0pt5em">
                        Cut off date and Filing Date will be displayed and Click on Apply button.
                    </td>
                </tr>
            </table>
            <br />
        </div>
    </div>
</form>

<div id="dialog-form_Itemized_IE_Trans" title="Independent Expenditure transactions to be included in selected Disclosure Period">
    <form id="DialogBoxItemizedIETransForm">
        <div class="divWidthItemizedIETrans">
            <div style="width: 100%;">
                <div id="divGridTransactionsGrid">
                    <div class="divGridCSSItemIETrans paddingTop1em">
                        @Html.Partial("UserControls/_UC_Itemized_IE_Transactions_Grid")
                    </div>
                    <div id="lblOkItemizedIETransTxt" class="dvItemIETransTxt">Itemized IE Transactions</div>
                    <div class="AddLeftCSSItemIETrans">
                        <input type="button" id="btnOkItemizedIETrans" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Ok" title="Ok" style="font-size:12px;" aria-labelledby="lblOkItemizedIETransTxt" />
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<div id="dialog-form_WeeklyClaimSub" title="Weekly Claim Submission Transaction(s) To Be Included In Disclosure Report">
    <form id="DialogBoxWCSorm">
        <div class="divWidthItemizedIETrans">
            <div style="width: 100%;">
                <div id="divGridIETransactionsWCS">
                    <div class="divGridCSSItemIETrans paddingTop1em">
                        <table id="gridIETransactionsWCS" class="table-bordered display nowrap" style="width:100%; border-spacing: 0px;">
                            <thead class="header">
                                <tr>
                                    <th class="never">FilingTransId</th> @* 0 *@
                                    <th>Expand</th> @* 1 *@
                                    <th>Disclosure Type</th> @* 2 *@
                                    <th class="never">Treasurer Name</th> 
                                    <th>Contributor Name</th> @* 4 *@
                                    <th class="never">City</th> @* 5 *@
                                    <th class="never">State</th> @* 6 *@
                                    <th>Transaction Date</th> @* 7 *@
                                    <th class="never">IE Description</th> @* 8 *@
                                    <th class="never">Candidate Name/Ballot Proposal Reference</th> @* 9 *@
                                    <th>Amount $</th> @* 10 *@
                                    <th>Explanation</th> @* 11 *@
                                    <th>Created Date</th> @* 12 *@
                                    <th class="never">LoanLiabilityNumber</th> @* 13 *@
                                    <th class="never">TransNumber</th> @* 14 *@
                                    <th class="never">TransMapping</th> @* 15 *@
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                    <div id="lblItemizedIETransTxt" class="dvItemIETransTxt">Weekly Claim Submission Transactions</div>
                    <div class="AddLeftCSSItemIETrans">
                        <input type="button" id="btnOkWCS" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Ok" title="Ok" style="font-size:12px;" aria-labelledby="lblItemizedIETransTxt" />
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<div id="dialog-form_24hours" title="24-Hour Notice Transaction(s) To Be Included In Disclosure Report">
    <form id="DialogBox24HoursForm">
        <div class="divWidthItemizedIETrans">
            <div style="width: 100%;">
                <div id="divGridIETransactions24Hours">
                    <div class="divGridCSSItemIETrans paddingTop1em">
                        <table id="gridIETransactions24Hours" class="table-bordered display nowrap" style="width:100%; border-spacing: 0px;">
                            <thead class="header">
                                <tr>
                                    <th class="never">FilingTransId</th> @* 0 *@
                                    <th>Expand</th> @* 1 *@
                                    <th>Disclosure Type</th> @* 2 *@
                                    <th>Contributor Name</th> @* 3 *@
                                    <th>Transaction Date</th> @* 4 *@
                                    <th>Amount $</th> @* 5 *@
                                    <th>Explanation</th> @* 6 *@
                                    <th>Created Date</th> @* 7 *@
                                    <th class="never">LoanLiabilityNumber</th> @* 8 *@
                                    <th class="never">TransNumber</th> @* 9 *@
                                    <th class="never">TransMapping</th> @* 10 *@
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                    <div id="lblItemizedIETransTxt24Hours" class="dvItemIETransTxt">Weekly Claim Submission Transactions</div>
                    <div class="AddLeftCSSItemIETrans">
                        <input type="button" id="btnOk24Hours" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Ok" title="Ok" style="font-size:12px;" aria-labelledby="lblItemizedIETransTxt24Hours" />
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<script>
    $m = jQuery.noConflict();

    $('#menuNav').css('opacity', 0);
    $('#ContributionsMonetaryForm').css('opacity', 0);
    $('#divWelcomeBanner').css('opacity', 0);
    $(window).on('load', function () {
        $('#menuNav').css('opacity', 1);
        $('#ContributionsMonetaryForm').css('opacity', 1);
        $('#divWelcomeBanner').css('opacity', 1);
    });

    //Toggle common control visibility.
    function HideDivUC() {
        $("#divUC_InLieuOfStatements").hide();
        $("#divUC_24HourNotice").hide();
        $("#divUC_IndependentExpenditure").hide();
        $("#divUC_NoActivityReport").hide();
        $("#divUC_NoticeofNonParticipation").hide();
    };

    //Common code repeated multiple times.
    function ClearBranding(){
        $("#lblHeader,#lblHeader1,#lblHeader2").text("File a Disclosure Report");
        $("#spnEleYear").hide();
        $("#spnDiclPerd").hide();
        $("#lblHEleYear").text("");
        $("#lblHDisclPer").text("");
    };

    /**Common code repeated multiple times.
     * Makes call to "~/ContributionsMonetary/GetTransactionTypeBind/" and sets options to lstTransactionType
     * @@param {boolean} useAlwaysFunction if true it will show divTransactionType and focus lstTransactionType.
     * @@param {boolean} showErrorPopUp if true it will display error message pop up when ajax call fails.
    */
    function BindLstTransactionTypeWithContributionsMonetaryGetTransactionTypeBind(useAlwaysFunction, showErrorPopUp) {
        // BIND THE DISCLOSURE TYPES.
        var options = {};
        options.url = "@Url.Content("~/ContributionsMonetary/GetTransactionTypeBind/")";
        options.type = "POST";
        options.dataType = "json";
        options.contentType = "application/json";
        options.success = function (TranTypes) {
            $("#lstTransactionType").empty();
            $("#lstTransactionType").append("<option>" + "- Select -" + "</option>");
            for (var i = 0; i < TranTypes.length; i++) {
                $("#lstTransactionType").append("<option value='" + TranTypes[i].Value + "'>" + TranTypes[i].Text + "</option>");
            }
        };
        options.error = function () {
            if (showErrorPopUp) {
                ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
            }
        };
        $.ajax(options).always(function () {
            if (useAlwaysFunction) {
                // SHOW THE TRANSACTIONS TYPE EITHER RECORDS EXISTS OR NOT.
                $("#divTransactionType").show();
                $("#lstTransactionType").focus();
                $("#divLoading").hide();
            }
        });
    };

    /**Common code repeated multiple times.
     * Makes call to "~/ContributionsMonetary/GetFilingDateIEWeekly" and sets options to lstFilingDate
     * @@param {boolean} sessionStorageDisclosureTypeForStrFilingCatId, if set to true it will use
     * strFilingCatId: sessionStorage.getItem("DisclosureType").toString(),
     * else it uses the lsit value:
     * strFilingCatId: $("#lstDisclosureType option:selected").val(),
     * @@param {boolean} setTheFilingDateValueFromSessionStorage if true it will set the filing date from session storage.
    */
    function BindLstFilingDateWithContributionsMonetaryGetFilingDateIEWeekly(sessionStorageDisclosureTypeForStrFilingCatId, setTheFilingDateValueFromSessionStorage) {
        //Option 1: Pick the value you want to use.
        var valueForStrFilingCatId = sessionStorageDisclosureTypeForStrFilingCatId ? sessionStorage.getItem("DisclosureType").toString() : $("#lstDisclosureType option:selected").val();

        // BIND FILING DATE DATA FOR IE WEEKLY NON-ITEMIZED TRANSACTION.
        var options = {};
        options.url = "@Url.Content("~/ContributionsMonetary/GetFilingDateIEWeekly/")";
        options.type = "POST";
        options.data = JSON.stringify(
            {
                strElectionYearId: $("#lstElectionCycle option:selected").val().toString(),
                strOfficeTypeId: $("#lstUCOfficeType option:selected").val().toString(),
                strFilerId: $m("#txtFilerID option:selected").val(),
                strElectionTypeId: $("#lstElectionType option:selected").val(),
                strFilingCatId: valueForStrFilingCatId,
                strElectionDateId: $("#lstElectionDate option:selected").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            });
        options.dataType = "json";
        options.contentType = "application/json";
        options.success = function (results) {
            $("#lstFilingDate").empty();
            $("#lstFilingDate").append("<option>" + "- Select -" + "</option>");
            $("#lstFilingDate").append("<option>" + "- New Filing Date -" + "</option>");
            for (var i = 0; i < results.length; i++) {
                $("#lstFilingDate").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
            }
            //Option 2: Set session storage.
            if (setTheFilingDateValueFromSessionStorage) {
                // SET THE FILING DATE
                $("#lstFilingDate").val(sessionStorage.getItem("lstFilingDate").toString());
                if ($("#lstFilingDate option:selected").text().toString() == "- New Filing Date -") {
                    $("#txtNewFilingDate").val(sessionStorage.getItem("FilingDate").toString())
                    $("#divFilingDateOffCycle").show();
                }
                else {
                    $("#divFilingDateOffCycle").hide();
                }
            }
        };
        options.error = function () {
        };
        $.ajax(options);
    };

    function BindLstFilingDateWithCMGetFilingDateWeeklyClaimSubmission(sessionStorageDisclosureTypeForStrFilingCatId, setTheFilingDateValueFromSessionStorage) {
        //Option 1: Pick the value you want to use.
        var valueForStrFilingCatId = sessionStorageDisclosureTypeForStrFilingCatId ? sessionStorage.getItem("DisclosureType").toString() : $("#lstDisclosureType option:selected").val();

        // BIND FILING DATE DATA FOR IE WEEKLY NON-ITEMIZED TRANSACTION.
        var options = {};
        options.url = "@Url.Content("~/ContributionsMonetary/GetFilingCutOffDateData_PCF_WCS/")";
        options.type = "POST";
        options.data = JSON.stringify(
            {
                lstElectionCycle: $("#lstElectionCycle option:selected").val().toString(),
                lstElectionType: $("#lstElectionType option:selected").val(),
                lstUCOfficeType: $("#lstUCOfficeType option:selected").val().toString()
            });
        options.dataType = "json";
        options.contentType = "application/json";
        options.success = function (results) {
            $("#lstFilingDate").empty();
            $("#lstFilingDate").append("<option>" + "- Select -" + "</option>");            
            for (var i = 0; i < results.length; i++) {
                $("#lstFilingDate").append("<option value='" + results[i].FilingDueDate + "'>" + results[i].PriGenDate + "</option>");
            }
            ////Option 2: Set session storage.
            //if (setTheFilingDateValueFromSessionStorage) {
            //    // SET THE FILING DATE
            //    $("#lstFilingDate").val(sessionStorage.getItem("lstFilingDate").toString());
            //    if ($("#lstFilingDate option:selected").text().toString() == "- New Filing Date -") {
            //        $("#txtNewFilingDate").val(sessionStorage.getItem("FilingDate").toString())
            //        $("#divFilingDateOffCycle").show();
            //    }
            //    else {
            //        $("#divFilingDateOffCycle").hide();
            //    }
            //}
        };
        options.error = function () {
        };
        $.ajax(options);
    };

    /**Common code repeated multiple times.
     * Makes call to "~/ContributionsMonetary/GetElectionType" and sets options to lstElectionType
    */
    function BindLstElectionTypeWithContributionsMonetaryGetElectionType() {
            // Bind Election Type
            var options = {};
            options.beforeSend = function () { $("#divLoading").show();},
            options.url = "@Url.Content("~/ContributionsMonetary/GetElectionType/")";
            options.type = "POST";
            options.data = JSON.stringify(
                {
                    lstElectionCycle: $("#lstElectionCycle").val().toString(),
                    lstOfficeType: $("#lstUCOfficeType").val().toString(),
                    lstCounty: $("#lstUCCounty").val(),
                    lstMunicipality: $("#lstUCMuncipality").val()
                });
            options.dataType = "json";
            options.contentType = "application/json";
            options.success = function (results) {
                $("#lstElectionType").empty();
                $("#lstElectionType").append("<option>" + "- Select -" + "</option>");
                for (var i = 0; i < results.length; i++) {
                    $("#lstElectionType").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                }
            };
            options.error = function () {
                ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
            };
            $.ajax(options).always(function () {
                $("#divLoading").hide();
            });
    };

    /**Common code repeated multiple times.
    * Makes call to "~/ContributionsMonetary/GetDisclosurePeriod" and sets options to lstDisclosurePeriod
    */
    function BindLstDisclosurePeriodWithContributionsMonetaryGetDisclosurePeriod() {
        // BY DEFAULT.
        // BIND DISCLOSURE PERIOD. //
        var options = {};
        options.url = "@Url.Content("~/ContributionsMonetary/GetDisclosurePeriod/")";
        options.type = "POST";
        options.data = JSON.stringify(
            {
                lstElectionType: $("#lstElectionType").val().toString(),
                lstElectionDate: $("#lstElectionDate option:selected").text().toString()
            });
        options.dataType = "json";
        options.contentType = "application/json";
        options.success = function (results) {
            if (results.length.toString() == "1") {
                $("#lstDisclosurePeriod").empty();
            }
            else {
                $("#lstDisclosurePeriod").empty();
                $("#lstDisclosurePeriod").append("<option>" + "- Select -" + "</option>");
            }
            for (var i = 0; i < results.length; i++) {

                // NEW LOGIC CHANGE ON 10-DAY POST PRIMARY ON PRIMARY ELECTION
                // WE ARE NOT SHOWING FOR YEAR 2021 AND ABOVE THE 10-DAY POST PRIMARY IN DISCLOSURE PERIOD DROPDOWN.
                // WE ARE NOT CHANGING FOR YEAR 2020 AND BELOW NO CHANGES.
                var eleType = $("#lstElectionType").val().toString();
                var eleYear = parseInt($("#lstElectionCycle option:selected").text().toString());
                var valYear = parseInt("2021");
                if (eleType == "2")  { // IF PRIMARY.
                    if (eleYear >= valYear) { // IF 2021 AND ABOVE NO - 10-DAY POST PRIMARY.
                        // REMOVE 10-DAY POST PRIMARY FOR PRIMARY.
                        if (results[i].Value.toString() != "3") {
                            $("#lstDisclosurePeriod").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                        }
                    }
                    else {
                        $("#lstDisclosurePeriod").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                    }
                }
                else if (eleType == "1") { // IF Special.                    
                    if ($("#lstElectionDate option:selected").text().toString() == '02/13/2024') {
                        // REMOVE 32-DAY Pre Special                         
                        if (results[i].Value.toString() != "7") {
                            $("#lstDisclosurePeriod").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                        }
                    }
                    else {
                        $("#lstDisclosurePeriod").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                    }
                }
                else {
                    $("#lstDisclosurePeriod").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                }

                if (results.length.toString() == "1") {
                    $("#lstDisclosurePeriod")[0].selectedIndex = 0;
                }
            }
        };
        options.error = function () {
        };
        $.ajax(options);
    }

    /**Common code repeated multiple times.
     * Makes call to "~/ContributionsMonetary/GetResgTermTypeData" and sets options to lstResigTermType
    */
    function BindLstResigTermTypeWithGetResgTermTypeData() {
        // BIND DEFAULT VALUES THEN SET THE DATABASE VALUE.
        $.post("@Url.Content("~/ContributionsMonetary/GetResgTermTypeData/")", {
        }, function (results) {
            $("#lstResigTermType").empty();
            $("#lstResigTermType").append("<option>" + "- Not Applicable -" + "</option>");
            for (var i = 0; i < results.length; i++) {
                $("#lstResigTermType").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
            }
        });
    };

    /**Common code repeated multiple times.
     * Makes call to "~/ContributionsMonetary/GetDisclosureTypesDefault" and sets options to lstDisclosureType
    */
    function BindLstElectionTypeWithGetDisclosureTypesDefault() {
        // BIND DISCLOSURE TYPE.
        var options = {};
        options.url = "@Url.Content("~/ContributionsMonetary/GetDisclosureTypesDefault/")";
        options.type = "POST";
        options.data = JSON.stringify(
            {
                lstElectionType: $("#lstElectionType").val().toString(),
                lstElectionCycle: $("#lstElectionCycle option:selected").text().toString()
            });
        options.dataType = "json";
        options.contentType = "application/json";
        options.success = function (results) {
            $("#lstDisclosureType").empty();
            $("#lstDisclosureType").append("<option>" + "- Select -" + "</option>");
            for (var i = 0; i < results.length; i++) {
                $("#lstDisclosureType").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
            }
        };
        options.error = function () {
        };
        $.ajax(options);
        // DISCLOSURE TYPE END END END.
    };

    /**Common code repeated multiple times.
     * Makes call to "~/ContributionsMonetary/GetElectionDate/" and sets options to lstElectionDate
    */
    function BindLstElectionDateWithGetElectionDate() {
        $("#lstElectionDate").empty();
        $("#lstElectionDate").append("<option>" + "- Select -" + "</option>");
        var options = {};
        options.url = "@Url.Content("~/ContributionsMonetary/GetElectionDate/")";
        options.type = "POST";
        options.data = JSON.stringify(
            {
                lstElectionCycle: $("#lstElectionCycle").val().toString(),
                lstElectionType: $("#lstElectionType").val().toString(),
                lstOfficeType: $("#lstUCOfficeType").val().toString(),
                strCounty: $("#lstUCCounty option:selected").val(),
                strMunicipality: $("#lstUCMuncipality option:selected").val()
            });
        options.dataType = "json";
        options.contentType = "application/json";
        options.success = function (electionDate) {
            for (var i = 0; i < electionDate.length; i++) {
                //// Date Format
                var eleDate = electionDate[i].Text.toString();
                var MyDate = new Date(eleDate);
                var MyDateString;
                MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                    + ('0' + MyDate.getDate()).slice(-2) + '/'
                    + MyDate.getFullYear();
                var dateFormat = MyDateString.toString();
                // Date Format
                $("#lstElectionDate").append("<option value='" + electionDate[i].Value + "'>" + dateFormat.toString() + "</option>");
            }
            if (electionDate.length.toString() == "1") {
                $("#lstElectionDate")[0].selectedIndex = 1;
            }
        };
        options.error = function () {};
        $.ajax(options);
    };

    /**Common code repeated multiple times.
     * Makes an ajax call and populates any specified list.
     * @@param {string} url, to make the ajax call.
     * @@param {Object} data, to pass to the ajax call.
     * @@param {string} lstId, the id for the select that we want to populate
     * @@param {string} sessionStorageValue, if we need to get a storage value to set the select.
     * @@param {boolean} skipOptions, Will leave the select blank without options.
    */
    function BindSelectListSimple(url, data, lstId, sessionStorageValue, skipOptions) {
        var options = {};
        options.url = url;
        options.type = "POST";
        if (data) {
            options.data = data;
        }
        options.dataType = "json";
        options.contentType = "application/json";
        options.success = function (results) {
            $("#" + lstId).empty();
            $("#" + lstId).append("<option>" + "- Select -" + "</option>");
            if (skipOptions) {
                for (var i = 0; i < results.length; i++) {
                    $("#" + lstId).append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                }
            }
            if (sessionStorageValue) {
                $("#" + lstId).val(sessionStorage.getItem(sessionStorageValue).toString());
            }
        };
        options.error = function () {
        };
        $.ajax(options);
    }

    /** Common code repeated multiple times.
     * Ensure we display the loading spinner when we move to a different location and displays the window loader.
     * @@param {String} headerText, text to set in elements with id "#lblHeader,#lblHeader1,#lblHeader2".
     * @@param {String} destinationUrl, to pass to the ajax call.
    */
    function SetHeaderAndNewWindowLocationHref(headerText, destinationUrl) {
        $("#lblHeader,#lblHeader1,#lblHeader2").text(headerText);
        $m("#divLoading").show();
        window.location.href = destinationUrl;
    }

    /**Common code repeated multiple times.
     * Sets the session storage to filter values.
    */
    function SetCommonSessionStorageValues() {
        sessionStorage.setItem("FilerId", $("#txtFilerID option:selected").val());
        sessionStorage.setItem("FilerTypeId", $("#txtFilerType").val());
        sessionStorage.setItem("CommitteeName", $("#txtCommitteeName").val());
        sessionStorage.setItem("ElectionCycle", $("#lstElectionCycle option:selected").val());
        sessionStorage.setItem("OfficeType", $("#lstUCOfficeType option:selected").val());
        sessionStorage.setItem("County", $("#lstUCCounty option:selected").val());
        sessionStorage.setItem("Municipality", $("#lstUCMuncipality option:selected").val());
        sessionStorage.setItem("ElectionType", $("#lstElectionType option:selected").val());
        sessionStorage.setItem("ElectionDate", $("#lstElectionDate option:selected").val());
        sessionStorage.setItem("DisclosureType", $("#lstDisclosureType option:selected").val());
        sessionStorage.setItem("DisclosureTypeText", $("#lstDisclosureType option:selected").text());
        sessionStorage.setItem("ElectionCycleText", $("#lstElectionCycle option:selected").text());
    };

    $m(document).ready(function () {

        // TOOLTIP FOR COMMITTEE NAME.
        $("#txtCommitteeName").attr('title', '@ViewBag.txtCommitteeName');

        //There were 2 label objects with the same id of "lblItemizedIETransTxt" so I had to fix the duplicate id issue by changing one to "lblOkItemizedIETransTxt". I don't know which one this code aimed to fix but it should work the same now and be accessible. Jorge Diaz 4/24/2023.
        $("#lblOkItemizedIETransTxt").text("Selecting ‘OK’ button will include the above Independent Expenditure transaction(s) as itemized transactions in the selected disclosure report.");
        $("#lblItemizedIETransTxt").text("Selecting ‘OK’ button will include the above Weekly Claim transaction(s) as itemized transactions in the selected disclosure report.");
        $("#lblItemizedIETransTxt24Hours").text("Selecting ‘OK’ button will include the above 24-Hour Notice transaction(s) in the disclosure report.");

        $("#txtFilerID")[0].selectedIndex = 0;
        $("#txtCommitteeName").val("@ViewBag.txtCommitteeName");
        $("#txtCommitteeName").prop("disabled", true);

        $("#txtFilerType").attr('title', '@ViewBag.txtFilerType');
        $("#txtFilerType").val("@ViewBag.txtFilerType");
        $("#txtFilerType").prop("disabled", true);

        // HIDE NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
        $("#divFilingDateOffCycle").hide();
        // SHOW TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
        $("#divReportPeriodDatesTo").show();
        //$("#dialog-form_WeeklyClaimSub").hide();
        
        // Validation Filter
        FilterValidation("ContributionsMonetaryForm");

        // RESIGNATION/TERMINATION NOT MANDAITORY OTHER THAN OFF-CYCLE
        $("#lblReasonforFiling").text("Resignation/Termination");

        // OTHER THAN OFF-CYCLE FILING DATE
        $("#lblReportPeriodDatesTo").text("* Filing Date");

        HideDivUC();

        $("#divDisclosurePeriod").show();
        $("#divFilingReason").show();
        $("#divReportPeriodDatesTo").show();

        $('#divTransactionType').hide();

        $("#divCounty").hide();
        $("#divMunicipality").hide();

        $("#spnEleYear").hide();
        $("#spnDiclPerd").hide();

        $("#divDisclosurePeriod").show();
        $("#divReportPeriodDatesTo").show();

        $("#txtReportPeriodDatesFrom").prop("disabled", true);
        $("#txtReportPeriodDatesTo").prop("disabled", true);

        // Hide Transaction Type for Non-Itemized Transactions.
        $("#divTransactionTypeNonItemized").hide();
        $("#divTransactionType").hide();
        $("#divTransactionTypeNonItemWeeklyExp").hide();

        // Hide Filing Date for Off Cycle
        $("#divFilingDateDropDown").hide();

        // FOCUS ON FIRST DROPDOWN.
        $("#txtFilerID").focus();

        LoadFilerId();
        function LoadFilerId() {
            var optionHtml = "";
            var selected = "";
                var options = {};
                options.url = "@Url.Content("~/ContributionsMonetary/GetFilerIdData/")";
                options.type = "POST";
                options.data = null;
                options.dataType = "json";
                options.contentType = "application/json";
                options.success = function (results) {
                    $("#txtFilerID").empty();
                    for (var i = 0; i < results.length; i++) {
                        if (@Session["FilerID"] == null) {
                            selected = '';
                        }
                        else {
                            if (@Session["FilerID"] == results[i].Text) {
                                selected = " selected";
                            }
                            else {
                                selected = '';
                            }
                        }

                        optionHtml += '<option value="' + results[i].Value + '"' + selected + '>' + results[i].Text + '</option>';
                    }
                    $("#txtFilerID").html(optionHtml);
                };
                options.error = function () {
                };
            $.ajax(options);
        }

        // ======================================================================================================================================
        /// Dialog Box Code /////////////////////////////////////////////////////////////////////
        var dialog_Itemized_IE_Trans;

        dialog_Itemized_IE_Trans = $m("#dialog-form_Itemized_IE_Trans").dialog({
            autoOpen: false,
            resizable: false,
            height: 'auto',
            width: 800,
            position: {
                my: "center top",
                at: "center top+250"
            },
            modal: true,
            resizable: false,
            closeOnEscape: false,
            open: function (event, ui) { hideDialogXButton(this); }
        });

        $(window).resize(function () {
            //// get the screen height and width
            if ($(window).width() < 500) {
                dialog_Itemized_IE_Trans = $m("#dialog-form_Itemized_IE_Trans").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 300,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 500 && $(window).width() <= 900) {
                dialog_Itemized_IE_Trans = $m("#dialog-form_Itemized_IE_Trans").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 456,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 900) {
                dialog_Itemized_IE_Trans = $m("#dialog-form_Itemized_IE_Trans").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 1111,
                    modal: true,
                    dialogClass: 'DialogCustomStyleNonItemIE',
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
        }).resize();
        // ======================================================================================================================================
        /// Dialog Box Code /////////////////////////////////////////////////////////////////////

        // ======================================================================================================================================
        /// Dialog Box Code /////////////////////////////////////////////////////////////////////
        var dialog_Itemized_WCS;

        dialog_Itemized_WCS = $m("#dialog-form_WeeklyClaimSub").dialog({
            autoOpen: false,
            resizable: false,
            height: 'auto',
            width: 800,
            position: {
                my: "center top",
                at: "center top+250"
            },
            modal: true,
            resizable: false,
            closeOnEscape: false,
            open: function (event, ui) { hideDialogXButton(this); }
        });

        $(window).resize(function () {
            //// get the screen height and width
            if ($(window).width() < 500) {
                dialog_Itemized_WCS = $m("#dialog-form_WeeklyClaimSub").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 300,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 500 && $(window).width() <= 900) {
                dialog_Itemized_WCS = $m("#dialog-form_WeeklyClaimSub").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 456,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 900) {
                dialog_Itemized_WCS = $m("#dialog-form_WeeklyClaimSub").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 1111,
                    modal: true,
                    dialogClass: 'DialogCustomStyleNonItemIE',
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
        }).resize();
        // ======================================================================================================================================
        /// Dialog Box Code /////////////////////////////////////////////////////////////////////

        /// Dialog Box Code /////////////////////////////////////////////////////////////////////
        var dialog_Itemized_24Hours;

        dialog_Itemized_24Hours = $m("#dialog-form_24hours").dialog({
            autoOpen: false,
            resizable: false,
            height: 'auto',
            width: 800,
            position: {
                my: "center top",
                at: "center top+250"
            },
            modal: true,
            resizable: false,
            closeOnEscape: false,
            open: function (event, ui) { hideDialogXButton(this); }
        });

        $(window).resize(function () {
            //// get the screen height and width
            if ($(window).width() < 500) {
                dialog_Itemized_24Hours = $m("#dialog-form_24hours").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 300,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 500 && $(window).width() <= 900) {
                dialog_Itemized_24Hours = $m("dialog-form_24hours").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 456,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 900) {
                dialog_Itemized_24Hours = $m("#dialog-form_24hours").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 1111,
                    modal: true,
                    dialogClass: 'DialogCustomStyleNonItemIE',
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
        }).resize();
        // ======================================================================================================================================
        /// Dialog Box Code /////////////////////////////////////////////////////////////////////


        //====================================================================================================================
        // DATE FORMATE....///////////////////////////////////////////////

        sessionStorage.setItem("FromDateVal", "01/01/2014");
        sessionStorage.setItem("ToDateVal", "01/01/2018");

        // DATE FORMATE....///////////////////////////////////////////////
        //====================================================================================================================

        //====================================================================================================================
        // DATE FORMATE....///////////////////////////////////////////////
        // DATE PICKER CONTROL
        $m("#txtNewFilingDate").datepicker({
            showOn: "button",
            buttonImage: "../../Content/Images/Calendar.png",
            buttonImageOnly: false,
            buttonText: "Select From Date",
            changeMonth: true,
            changeYear: true,
            numberOfMonths: 1,
            minDate: sessionStorage.getItem("FromDateVal").toString(),
            maxDate: sessionStorage.getItem("ToDateVal").toString(),
            dateFormat: 'mm/dd/yy',
            //onChange: function () {
            //"ShowDialogBox('EFS', 'hi...', 'Ok', '');
            //    $m("#txtNewFilingDate").valid();
            //},
            onSelect: function () {
                $m("#txtNewFilingDate").removeClass("watermarkHTMLTextBox");
                $m("#txtNewFilingDate").valid();
            }
        }).datepicker();


        $m('.datepicker').attr("placeholder", "MM/DD/YYYY").datepicker();
        $("#txtNewFilingDate").addClass("watermarkHTMLTextBox");
        $("#txtNewFilingDate").blur();

        $m("#txtNewFilingDate").focusin(function () {

            $("#lstResigTermType")[0].selectedIndex = 0;

            if ($("#txtNewFilingDate").val().toString() != "MM/DD/YYYY") {
                $m("#txtNewFilingDate").removeClass("watermarkHTMLTextBox");
            }
            else {
                $m("#txtNewFilingDate").removeClass("watermarkHTMLTextBox");
            }
        });

        // Watermark TextBox. ////////////////////////////////////////////////////

        // DATE FORMATE....///////////////////////////////////////////////
        $("#txtNewFilingDate").focusout(function () {
            if ($("#txtNewFilingDate").val().toString() != "") {
                if ($("#txtNewFilingDate").val().toString() != "MM/DD/YYYY") {
                    var results = GetValidDateFilter();

                    if (results == "") {
                        var MyDate = new Date($("#txtNewFilingDate").val().toString());
                        var MyDateString;
                        MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                            + ('0' + MyDate.getDate()).slice(-2) + '/'
                            + MyDate.getFullYear();
                        $("#txtNewFilingDate").val("");
                        $("#txtNewFilingDate").val(MyDateString);
                    }

                    // CHECK THE FILING DATE ENTERED EXISTS OR NOT.
                    $.post("@Url.Content("~/ContributionsMonetary/GetFilingDateExists/")", {
                        strNewFilingDate: $("#txtNewFilingDate").val()
                    }, function (results) {
                        if (results.toString() == "True") {

                            $("#txtNewFilingDate").val("");
                            $("#txtNewFilingDate").blur();
                            $("#divLoading").hide();
                            // SUCCESS MESSAGE.
                            ShowDialogBox('EFS', 'Filing Date already exists, select the existing date from the list in Filing Date field to proceed.', 'Ok', '');
                        }
                        else {
                        }
                    });
                }
            }
            else {
                $("#txtNewFilingDate").addClass("watermarkHTMLTextBox");
            }
        });

        // DATE FORMATE....///////////////////////////////////////////////
        //====================================================================================================================

        //=======================================================================================================================================
        // IT WILL DECIDE WEATHER ITS COMING FROM SCHEDULE PAGE OR ITS COMMING DIRECT NEW PAGE WITHOUT ANY SESSION VALUE
        // Bind based on new page or coming from defferent transaction type page.
        // WE ARE NOT CHECKING THIS SESSION VALUES TO KEEP FILTER WHEN USER COMING FROM ANY SCHEDULE.
        // USER HAS TO SELECT AGAIN. IT WILL NOT RESTORE THE FILTER VALUES WHEN COMING FROM DIFFERENT SCHEDULES.
        // ADDED ON - 02.19.2021.
        if (sessionStorage.getItem("TransactionTypeIdTemp") != null) {

            // DISCLOSURE TYPE BINDING.
            if (sessionStorage.getItem("ElectionType").toString() == "6" || sessionStorage.getItem("ElectionType").toString() == "4") {
                // BIND DISCLOSURE TYPE.
                BindSelectListSimple(
                    "@Url.Content("~/ContributionsMonetary/GetDisclosureTypesData/")",
                    JSON.stringify({lstElectionType: sessionStorage.getItem("ElectionType").toString()}),
                    "lstDisclosureType", "DisclosureType", false);
                // BIND DISCLOSURE TYPE.
            }
            else if (sessionStorage.getItem("ElectionType").toString() == "8") {
                // BIN DISCLOSURE TYPE FOR PRIMARY AND GENERAL ELECTION.
                BindSelectListSimple(
                    "@Url.Content("~/ContributionsMonetary/DisclosureTypesPrimAndGenNoticeOfNP/")",
                    JSON.stringify({lstElectionType: sessionStorage.getItem("ElectionType").toString()}),
                    "lstDisclosureType", "DisclosureType", false);
                // BIN DISCLOSURE TYPE PRIMARY AND GENERAL ELECTION.
            }
            else {
                // BIND DISCLOSURE TYPE.
                BindSelectListSimple(
                    "@Url.Content("~/ContributionsMonetary/GetDisclosureTypesDefault/")",
                    JSON.stringify({
                        lstElectionType: sessionStorage.getItem("ElectionType").toString(),
                        lstElectionCycle: $("#lstElectionCycle option:selected").text().toString()}),
                    "lstDisclosureType", "DisclosureType", false);
                // DISCLOSURE TYPE END END END.
            }

            $('#txtFilerID').val(sessionStorage.getItem("FilerId").toString());
            $('#txtCommitteeName').val(sessionStorage.getItem("CommitteeName").toString());
            $('#lstElectionCycle').val(sessionStorage.getItem("ElectionCycle").toString());
            if (sessionStorage.getItem("OfficeType") != null) {
                $('#lstUCOfficeType').val(sessionStorage.getItem("OfficeType").toString());
            }
            else {
                $('#lstUCOfficeType').val('');
            }

            $('#lstElectionType').val(sessionStorage.getItem("ElectionType").toString());
            $('#lstElectionDate').val(sessionStorage.getItem("ElectionDate").toString());

            // BIND DISCLOSURE PERIOD AND SET THE VALUE.
            // BIND DISCLOSURE PERIOD.
            BindSelectListSimple(
                    "@Url.Content("~/ContributionsMonetary/GetDisclosurePeriod/")",
                    JSON.stringify({
                    lstElectionType: $("#lstElectionType").val().toString(),
                    lstElectionDate: $("#lstElectionDate option:selected").text().toString()
                    }),
                    "lstDisclosurePeriod", "DisclosurePeriod", false);

            if (sessionStorage.getItem("ScheduleId") != null) {
                $("#lstTransactionType option").each(function () {
                    if ($(this).val() == sessionStorage.getItem("ScheduleId").toString()) {
                        $(this).prop("selected", true);
                    }
                });
            }

            if (sessionStorage.getItem("ElectionType").toString() == "6") {

                // RESIGNATION/TERMINATION MANDATORY WHEN OFF-CYCLE.
                $("#lblReasonforFiling").text("* Resignation/Termination");
                // HIDE ELECTION DATE
                $("#divElectionDate").hide();
                // HIDE CUTT OF DATE
                $("#divReportPeriodDates").hide();
                // Show Filing Date - Off Cycle.
                $("#divFilingDateDropDown").show();

                $("#divTransactionTypeNonItemized").hide();
                $("#divTransactionType").hide();

                if (sessionStorage.getItem("lstFilingDate").toString() == "- New Filing Date -") {
                    // OFF-CYCLE NEW FILING DATE
                    $("#lblReportPeriodDatesTo").text("* New Filing Date");

                    $("#txtReportPeriodDatesTo").val("");
                    $("#txtReportPeriodDatesTo").blur();

                    $m("label[for=txtNewFilingDate]").text('');
                    $m("#txtNewFilingDate").removeClass("error");

                    // SHOW FILING DATE.
                    $("#divReportPeriodDatesTo").show();
                    // ALLOW USER TO ENTER FILING DATE WITH IN THE ELECTION YEAR.
                    $("#txtReportPeriodDatesTo").prop("disabled", false);
                    // ======================================================================================================================================
                    // DATE VALIDATION FOR DATE RECEIVED FOR NON-ITEMIZED IE-WEEKLY CONTRIBUTION.
                    var electionYear = $("#lstElectionCycle option:selected").text().toString();

                    var fromDate = '01' + '/' + '01' + '/' + electionYear;
                    var toDate = '12' + '/' + '31' + '/' + electionYear;

                    sessionStorage.setItem("FromDateVal", fromDate.toString());
                    sessionStorage.setItem("ToDateVal", toDate.toString());
                    // DATE VALIDATION FOR DATE RECEIVED FOR NON-ITEMIZED IE-WEEKLY CONTRIBUTION.
                    // ======================================================================================================================================

                    // SET THE MIN DATE AND MAX DATE FOR DATE PICKER BASED ON REPORT YEAR SELECTION.
                    $m('#txtNewFilingDate').datepicker('option', {
                        minDate: new Date(sessionStorage.getItem("FromDateVal").toString()),
                        maxDate: new Date(sessionStorage.getItem("ToDateVal").toString())
                    });

                    // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
                    $("#divFilingDateOffCycle").show();
                    // HIDE TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
                    $("#divReportPeriodDatesTo").hide();
                }
                else {

                    // OTHER THAN OFF-CYCLE FILING DATE
                    $("#lblReportPeriodDatesTo").text("* Filing Date");

                    // HIDE FILING DATE.
                    // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
                    $("#divFilingDateOffCycle").hide();
                    // HIDE TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
                    $("#divReportPeriodDatesTo").hide();

                    $("#txtNewFilingDate").val();
                    $("#txtNewFilingDate").blur();

                    $m("label[for=txtNewFilingDate]").text('');
                    $m("#txtNewFilingDate").removeClass("error");
                }

                // SET THE RESIGNATION/TERMINATION TYPE SELECTED VALUE.
                $.post("@Url.Content("~/ContributionsMonetary/GetResgTermTypeData/")", {
                }, function (results) {
                    $("#lstResigTermType").empty();
                    $("#lstResigTermType").append("<option>" + "- Not Applicable -" + "</option>");
                    for (var i = 0; i < results.length; i++) {
                        $("#lstResigTermType").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                    }

                    if (sessionStorage.getItem("DisclosureType").toString() != "4" && sessionStorage.getItem("DisclosureType").toString() != "6" && sessionStorage.getItem("DisclosureType").toString() != "11") {
                        // SET THE VALUE.
                        if (sessionStorage.getItem("lstResigTermType") != null) {
                            if (sessionStorage.getItem("lstResigTermType").toString() == "- Not Applicable -") {
                                $("#lstResigTermType option")
                                    .filter(function () { return $.trim($(this).text()) == sessionStorage.getItem("lstResigTermType").toString(); })
                                    .attr("selected", "selected");
                            }
                            else {
                                $("#lstResigTermType option")
                                    .filter(function () { return $.trim($(this).val()) == sessionStorage.getItem("lstResigTermType").toString(); })
                                    .attr("selected", "selected");
                            }
                        }
                    }
                });

                $("#lstFilingDate").val(sessionStorage.getItem("lstFilingDate").toString());
                $('#txtNewFilingDate').val(sessionStorage.getItem("FilingDate").toString());
                if ($("#txtNewFilingDate").val().toString() != "MM/DD/YYYY") {
                    $("#txtNewFilingDate").removeClass("watermarkHTMLTextBox");
                }
            }
            else { // IF NOT OFF-CYCLE...

                if (sessionStorage.getItem("DisclosureType").toString() != "4" && sessionStorage.getItem("DisclosureType").toString() != "8" && sessionStorage.getItem("DisclosureType").toString() != "11" && sessionStorage.getItem("DisclosureType").toString() != "6" && sessionStorage.getItem("DisclosureType").toString() != "7" && sessionStorage.getItem("DisclosureType").toString() != "10" && sessionStorage.getItem("DisclosureType").toString() != "9" && sessionStorage.getItem("DisclosureType").toString() != "12") {

                    // RESIGNATION/TERMINATION MANDATORY WHEN OFF-CYCLE.
                    $("#lblReasonforFiling").text("Resignation/Termination");
                    if (sessionStorage.getItem("ElectionType").toString() == "4") { // PERIODIC
                        // HIDE ELECTION DATE
                        $("#divElectionDate").hide();
                    }
                    else {
                        // SHOW  ELECTION DATE
                        $("#divElectionDate").show();
                    }
                    // HIDE CUTT OF DATE
                    $("#divReportPeriodDates").show();
                    // Hide Filing Date for Off Cycle.
                    $("#divFilingDateDropDown").hide();
                    // Disable Filing Date for Off-Cycle.
                    $("#txtReportPeriodDatesTo").prop("disabled", true);

                    // SET THE RESIGNATION/TERMINATION TYPE SELECTED VALUE.
                    $.post("@Url.Content("~/ContributionsMonetary/GetResgTermTypeData/")", {
                    }, function (results) {
                        $("#lstResigTermType").empty();
                        $("#lstResigTermType").append("<option>" + "- Not Applicable -" + "</option>");
                        for (var i = 0; i < results.length; i++) {
                            $("#lstResigTermType").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                        }

                        // SET THE VALUE.
                        if (sessionStorage.getItem("lstResigTermType") != null) {
                            if (sessionStorage.getItem("lstResigTermType").toString() == "- Not Applicable -") {
                                $("#lstResigTermType option")
                                    .filter(function () { return $.trim($(this).text()) == sessionStorage.getItem("lstResigTermType").toString(); })
                                    .attr("selected", "selected");
                            }
                            else {
                                $("#lstResigTermType option")
                                    .filter(function () { return $.trim($(this).val()) == sessionStorage.getItem("lstResigTermType").toString(); })
                                    .attr("selected", "selected");
                            }
                        }

                    });
                    $('#txtReportPeriodDatesTo').val(sessionStorage.getItem("FilingDate").toString());
                    $('#txtReportPeriodDatesFrom').val(sessionStorage.getItem("CutOffDate").toString());
                }
                else {

                    if (sessionStorage.getItem("ElectionType").toString() == "4") { // PERIODIC
                        // HIDE ELECTION DATE
                        $("#divElectionDate").hide();
                    }
                    else {
                        // SHOW  ELECTION DATE
                        $("#divElectionDate").show();
                    }

                    $("#txtReportPeriodDatesFrom").prop("disabled", true);
                    $("#txtReportPeriodDatesTo").prop("disabled", true);

                    $("#lblReportPeriodDatesFrom").text("* From Date");
                    $("#lblReportPeriodDatesTo").text("* To Date");

                    $('#txtReportPeriodDatesTo').val(sessionStorage.getItem("FilingDate").toString());
                    $('#txtReportPeriodDatesFrom').val(sessionStorage.getItem("CutOffDate").toString());

                    $("#divDisclosurePeriod").hide();
                    $("#divFilingReason").hide();
                    $("#divTransactionTypeNonItemized").hide();
                    $("#divTransactionType").hide();
                }
            }

            if (sessionStorage.getItem("DisclosureType").toString() != "4" && sessionStorage.getItem("DisclosureType").toString() != "19" && sessionStorage.getItem("DisclosureType").toString() != "11" && sessionStorage.getItem("DisclosureType").toString() != "6") {
                /*On occasion the  transaction type is not available so we must  avoid java script errors that break the page.*/
                try {
                    $('#lstTransactionType').val(sessionStorage.getItem("TransactionType").toString());
                } catch (e) {
                    console.error("Unable to access Transaction type!");
                    $('#lstTransactionType').val("Error fetching value");
                }
                try {
                    $('#lstTransactionType1').val(sessionStorage.getItem("TransactionType").toString());
                } catch (e) {
                    console.error("Unable to access Transaction type!");
                    $('#lstTransactionType1').val("Error fetching value");
                }
            }

            var selectedlstDisclosureType = sessionStorage.getItem("DisclosureType").toString();
            $('#divTransactionType').hide();
            if (selectedlstDisclosureType == "1") { // Itemized
                $("#lblHeader,#lblHeader1,#lblHeader2").text("Itemized");
            }
            else if (selectedlstDisclosureType == "3") { // In-Lieu-Of Statement
                $("#lblHeader,#lblHeader1,#lblHeader2").text("In-Lieu-Of Statement");
            }
            else if (selectedlstDisclosureType == "2") { // No Activity
                $("#lblHeader,#lblHeader1,#lblHeader2").text("No-Activity Report");
            }
            else if (selectedlstDisclosureType == "4") { // 24-Hour Notice
                $("#lblHeader,#lblHeader1,#lblHeader2").text("24-Hour Notice");;
            }
            else if (selectedlstDisclosureType == "5") { //Notice of Non-Participation
                $("#lblHeader,#lblHeader1,#lblHeader2").text("Notice of Non-Participation");
            }
            else if (selectedlstDisclosureType == "7") { // Independent Expenditure Weekly Contribution
                $("#lblHeader,#lblHeader1,#lblHeader2").text("Independent Expenditure - Weekly Contribution/Loan");
            }
            else if (selectedlstDisclosureType == "8") {  // Independent Expenditure 24 Hour Contribution
                $("#lblHeader,#lblHeader1,#lblHeader2").text("Independent Expenditure - 24 Hour Contribution/Loan");
            }
            else if (selectedlstDisclosureType == "9") { // Independent Expenditure Weekly Expenditure
                $("#lblHeader,#lblHeader1,#lblHeader2").text("Independent Expenditure - Weekly Expenditure");
            }
            else if (selectedlstDisclosureType == "10") { // Independent Expenditure Weekly Liabilities Incurred
                $("#lblHeader,#lblHeader1,#lblHeader2").text("Independent Expenditure - Weekly Liabilities Incurred");
            }
            else if (selectedlstDisclosureType == "11") { // Independent Expenditure 24 Hour Expenditure
                $("#lblHeader,#lblHeader1,#lblHeader2").text("Independent Expenditure - 24 Hour Expenditure");
            }
            else if (selectedlstDisclosureType == "12") { // Independent Expenditure Weekly Expenditure - PIDA
                $("#lblHeader,#lblHeader1,#lblHeader2").text("Independent Expenditure - Weekly Expenditure - PIDA");
                
            } else {
                $('#divTransactionType').show();
            }

            if (sessionStorage.getItem("DisclosureType").toString() != "4" && sessionStorage.getItem("DisclosureType").toString() != "8" && sessionStorage.getItem("DisclosureType").toString() != "11" && sessionStorage.getItem("DisclosureType").toString() != "6" && sessionStorage.getItem("DisclosureType").toString() != "7" && sessionStorage.getItem("DisclosureType").toString() != "10" && sessionStorage.getItem("DisclosureType").toString() != "12" && sessionStorage.getItem("DisclosureType").toString() != "9") {

                if ($("#txtFilerID option:selected").text() == "- Select -") {
                    ShowDialogBox('EFS', "Select Filer Id", 'Ok', '');
                }
                else if ($("#lstElectionCycle option:selected").text() == "- Select -"
                    || $("#lstElectionType option:selected").text() == "- Select -"
                    || $("#lstElectionDate option:selected").text() == "- Select -"
                    || $("#lstElectionDate option:selected").text() == "- Select -"
                    || $("#lstDisclosurePeriod option:selected").text() == "- Select -") {
                    console.log("Do nothing");
                }
                else {

                    var options = {};
                    options.url = "@Url.Content("~/ContributionsMonetary/GetTransactionTypeBind/")";
                    options.type = "POST";
                    options.dataType = "json";
                    options.contentType = "application/json";
                    options.success = function (TranTypes) {
                        $("#lstTransactionType").empty();
                        $("#lstTransactionType").append("<option>" + "- Select -" + "</option>");
                        for (var i = 0; i < TranTypes.length; i++) {
                            $("#lstTransactionType").append("<option value='" + TranTypes[i].Value + "'>" + TranTypes[i].Text + "</option>");
                        }
                        if (TranTypes.length > 1) {
                            $("#divTransactionType").show();
                            $("#divTransactionType").focus();
                        }
                    };
                    options.error = function () {
                    };
                    $.ajax(options).always(function () {
                        $("#divShowHideHelp").hide();
                        $("#divLoading").hide();
                    });
                }
            }
            else if (sessionStorage.getItem("DisclosureType").toString() == "7" || sessionStorage.getItem("DisclosureType").toString() == "10" || sessionStorage.getItem("DisclosureType").toString() == "12" || sessionStorage.getItem("DisclosureType").toString() == "9") {
                // IE - WEEKLY CONTRIBUTION.

                // BIND FILING DATE DATA FOR IE WEEKLY NON-ITEMIZED TRANSACTION.
                BindLstFilingDateWithContributionsMonetaryGetFilingDateIEWeekly(true, true);

                // HIDE CUTT OF DATE
                $("#divReportPeriodDates").hide();
                $("#divReportPeriodDatesTo").hide();
                // Show Filing Date - Off Cycle.
                $("#divFilingDateDropDown").show();
                // FOR IE - WEEKLIES OFF-CYCLE HAS TO SHOW RESIGNATION/TERMINATION TYPE BUT ITS NOT MANDATORY.
                // IT WILL BE OPTIONAL VALUE FOR IE - WEEKLY - OFF-CYCLE. CHANGED ON 07/07/2020.
                if ($("#lstElectionType option:selected").val().toString() == "6") {
                    $("#divFilingReason").show();
                }
                else {
                    $("#divFilingReason").hide();
                }

                $("#divDisclosurePeriod").hide();
                $("#divTransactionTypeNonItemized").hide();
                $("#divTransactionType").hide();
                // HIDE TRANSACTION TYPE DROPDOWN.
                $("#divTransactionTypeNonItemized").hide();

                $("#divShowHideHelp").hide();
            }
            else {
                $("#divShowHideHelp").hide();
            }

            if (sessionStorage.getItem("DisclosureType").toString() == "6") {
                $m("#divReportPeriodDates").hide();
                $m("#divReportPeriodDatesTo").hide();
            }
        }
        else { // IF ITS FIRST TIME LOADING AND IF USER CLICKS ON MENU ITEM 'FILE A DISCLOSURE REPORT' THEN IT WILL CLEAR...
            //  ....THE SESSION AND IT WILL LOAD AS FIRST TIME.

            $("#divDisclosurePeriod").show();
            $("#divReportPeriodDatesTo").show();

            $("#divShowHideHelp").show();
            $("#divTransactionType").hide();

            BindLstTransactionTypeWithContributionsMonetaryGetTransactionTypeBind(false, false);

            //=================================
            // OTHER THAN OFF-CYCLE FILING DATE
            $("#lblReportPeriodDatesTo").text("* Filing Date");

            // RESIGNATION/TERMINATION NOT MANDAITORY OTHER THAN OFF-CYCLE
            $("#lblReasonforFiling").text("Resignation/Termination");

            $("#divFilingDateDropDown").hide();
            $("#divElectionDate").show();
            $("#divReportPeriodDates").show();
            $("#divReportPeriodDatesTo").show();
            $("#txtReportPeriodDatesTo").prop("disabled", true);
            $("#txtReportPeriodDatesFrom").prop("disabled", true);

            // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
            $("#divFilingDateOffCycle").hide();
            // HIDE TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
            $("#divReportPeriodDatesTo").show();

            $("#txtReportPeriodDatesTo").addClass("txtWidth");
            $("#txtReportPeriodDatesTo").removeClass("txtWidthOffCycleFilingDate");

            // BIND DISCLOSURE TYPE.
            BindSelectListSimple(
                "@Url.Content("~/ContributionsMonetary/GetDisclosureTypesData/")", false, "lstDisclosureType", false, true);
            // DISCLOSURE TYPE END END END.

            // BIND DISCLOSURE PERIOD.
            BindSelectListSimple(
                "@Url.Content("~/ContributionsMonetary/GetDisclosurePeriod/")", false, "lstDisclosurePeriod", false, true);
            // DISCLOSURE PERIOD END END END.

            var validator = $m("#ContributionsMonetaryForm").validate();
            validator.resetForm();  // clear out the validation errors
            $m("#ContributionsMonetaryForm")[0].reset();   // clear out the form data

            // Remove Disabled
            $("#lstElectionCycle").prop("disabled", false);
            $("#lstElectionType").prop("disabled", false);
            $("#lstElectionDate").prop("disabled", false);
            $("#lstDisclosureType").prop("disabled", false);
            $("#lstDisclosurePeriod").prop("disabled", false);
            $("#txtReportPeriodDatesFrom").prop("disabled", true);
            $("#txtReportPeriodDatesTo").prop("disabled", true);

            // DEFAULT DROPDOWNS.
            $("#txtFilerID")[0].selectedIndex = 0;
            //$("#txtCommitteeName")[0].selectedIndex = 0;
            $("#lstElectionCycle")[0].selectedIndex = 0;
            $("#lstElectionType")[0].selectedIndex = 0;
            $("#lstElectionDate")[0].selectedIndex = 0;
            $("#lstDisclosureType")[0].selectedIndex = 0;
            $("#lstDisclosurePeriod")[0].selectedIndex = 0;
            $("#txtReportPeriodDatesFrom")[0].selectedIndex = 0;
            $("#txtReportPeriodDatesTo")[0].selectedIndex = 0;
            // DEFAULT DROPDOWNS.

            // ERROR CLEAR
            $m("label[for=txtReportPeriodDatesTo]").text('');
            $m("#txtReportPeriodDatesTo").removeClass("error");

            // Hide Transactions Types for Itemized and Non-Itemized.
            $("#divTransactionType").hide();
            $("#divTransactionTypeNonItemized").hide();
            $("#divTransactionTypeNonItemWeeklyExp").hide();

            // Clear the Headig for Filter.
            ClearBranding();
            $("#divShowHideHelp").show();

            //==============================================================================================
            // FIRST TIME PAGE LOAD THEN LOAD ONLY SELECT IN DROPDOWNS IF NOT FROM FIRST TIME....
            // IF ITS COMING FROM ANY SCHEDULE TO MAIN PAGE THEN LOAD DEFAULT VALUES AND RETAIN THE VALUES.
            // FILER TYPE
            $("#lstUCOfficeType").empty();
            $("#lstUCOfficeType").append("<option>" + "- Select -" + "</option>");
            // ELECTION TYPE
            $("#lstElectionType").empty();
            $("#lstElectionType").append("<option>" + "- Select -" + "</option>");
            // ELECTION DATE
            $("#lstElectionDate").empty();
            $("#lstElectionDate").append("<option>" + "- Select -" + "</option>");
            // DISCLOSURE TYPE
            $("#lstDisclosureType").empty();
            $("#lstDisclosureType").append("<option>" + "- Select -" + "</option>");
            // DISCLOSURE PERIOD
            $("#lstDisclosurePeriod").empty();
            $("#lstDisclosurePeriod").append("<option>" + "- Select -" + "</option>");
            // RESIGNATION/TERMINATION
            $("#lstResigTermType").empty();
            $("#lstResigTermType").append("<option>" + "- Not Applicable -" + "</option>");
        }
        //=======================================================================================================================================
        // IT WILL DECIDE WEATHER ITS COMING FROM SCHEDULE PAGE OR ITS COMMING DIRECT NEW PAGE WITHOUT ANY SESSION VALUE

        $("#lstTransactionType")[0].selectedIndex = 0;

        $("#divUC_ABCO_ContributionUnitemized").hide();
        $("#divUC_D_ContributionInKind").hide();
        $("#divUC_G_TransferIn").hide();
        $("#divUC_I_LoanReceived").hide();
        $("#divUC_L_ExpenditureRefunds").hide();
        $("#divUC_P_HousekeepingReceipts").hide();
        $("#divUC_E_OtherReceipts").hide();
        $("#divUC_F_ExpenditurePayments").hide();
        $("#divUC_H_TransferOut").hide();
        $("#divUC_J_LoanRepayments").hide();
        $("#divUC_M_ContributionRefunded").hide();
        $("#divUC_Q_NonHousekeepingExpenses").hide();
        $("#divUC_K_LoanLiabilitiesForgiven").hide();
        $("#divUC_N_OutstandingLiabilities").hide();
        $("#divUC_R_AmountAllocated").hide();
        HideDivUC();

        sessionStorage.setDataTable = null;

        // FILTER CODE // FILTER CODE // FILTER CODE

        //Show Hide Lookups
        $("#divshow").hide();
        $("#divshowForMobile").hide();

        $m(".clsbtnCommonHideShow").bind('click', function (e) {
            if (sessionStorage.getItem('setDataTable') != "null") {
                $m('#ContributionsMonetaryGrid').DataTable().ajax.reload();
                $m('#PartnersGrid').DataTable().ajax.reload();
            }

            $("#selectorItsRpt").toggle("slow");
            $("#divhide").show("slow");
            $("#divshow").hide("slow");

            $("#divhideForMobile").show("slow");
            $("#divshowForMobile").hide("slow");

            $("div[id^='divGrid']").addClass("Per80hideShowButtonCSS");
            $("div[id^='divGrid']").removeClass("Per100hideShowButtonCSS");

            $("#divGridLoanReceived").addClass("Per80hideShowButtonCSS");
            $("#divGridLoanReceived").removeClass("Per100hideShowButtonCSS");

            $(".divGridCSS").addClass("Per80hideShowButtonCSS");
            $(".divGridCSS").removeClass("Per100hideShowButtonCSS");
        });

        $("#btnShowHide").click(function () {
            if ($("#divShowHide").is(":hidden")) {
                $("#divMainNew").removeClass("mainDivNew");
                $("#divMainNew").addClass("mainDiv");

            } else {
                $("#divMainNew").removeClass("mainDiv");
                $("#divMainNew").addClass("mainDivNew");
            }
        });

        $m(".clsbtnCommonShowHide").bind('click', function (e) {
            if (sessionStorage.getItem('setDataTable') != "null") {
                $m('#ContributionsMonetaryGrid').DataTable().ajax.reload();
                $m('#PartnersGrid').DataTable().ajax.reload();
            }
            $("#selectorItsRpt").toggle("slow");
            $("#divhide").hide("slow");
            $("#divshow").show("slow");

            $("#divhideForMobile").hide("slow");
            $("#divshowForMobile").show("slow");

            $("div[id^='divGrid']").addClass("Per100hideShowButtonCSS");
            $("div[id^='divGrid']").removeClass("Per80hideShowButtonCSS");

            $("#ContributionsMonetaryGrid").addClass("Per100hideShowButtonCSS");
            $("#ContributionsMonetaryGrid").removeClass("Per80hideShowButtonCSS");

            $("#divGridLoanReceived").addClass("Per100hideShowButtonCSS");
            $("#divGridLoanReceived").removeClass("Per80hideShowButtonCSS");

            $("#thdGrid").addClass("Per100hideShowButtonCSS");
            $("#thdGrid").removeClass("Per80hideShowButtonCSS");

            $(".divGridCSS").addClass("Per100hideShowButtonCSS");
            $(".divGridCSS").removeClass("Per80hideShowButtonCSS");

        });

        var tableItemizedIETransactions = "undefined";
        var tableItemizedIETransactions24Hours = "undefined";

        ////=======================================================================================================================================
        // APPLY BUTTON IT WILL SHOW THE TRANSACTION TYPE BASED ON ITEMIZED OR NON-ITEMIZED TRANSACTIONS.
        // Apply Button - APPLY BUTTON FOR ITEMIZED TRANSACTIONS & NON-ITEMIZED TRANSACTIONS.
        $m(".clsCommonSearch").bind('click', function () {

            $("#divLoading").show();

            HideDivUC();

            // HIDE TRANSACTIONS TYPE
            $("#divTransactionType").hide();
            $("#divTransactionTypeNonItemized").hide();
            $("#divTransactionTypeNonItemWeeklyExp").hide();

            //Accessibility: Don't hide #divShowHideHelp" when search button is pressed.

            // added for latest jquery files to check 2 times.
            $m('#ContributionsMonetaryForm').valid();
            // Validation Filter.
            if ($m('#ContributionsMonetaryForm').valid()) { // UNCOMMENT AFTER SERVER SIDE VALIDATION ONE.

                // CALL METHOD TO VERIFY SERVER SIDE VALIDATIONS.
                $.post("@Url.Content("~/ContributionsMonetary/GetValidateFilter/")", {
                    strFilerId: $("#txtFilerID option:selected").val(),
                    txtCommitteeName: $("#txtCommitteeName").val(),
                    strElectionYearId: $("#lstElectionCycle option:selected").val(),
                    strElectionYear: $("#lstElectionCycle option:selected").text(),
                    strOfficeTypeId: $("#lstUCOfficeType option:selected").val(),
                    lstUCCounty: $("#lstUCCounty option:selected").val(),
                    lstUCMuncipality: $("#lstUCMuncipality option:selected").val(),
                    strElectionTypeId: $("#lstElectionType option:selected").val(),
                    strElectionDateId: $("#lstElectionDate option:selected").val(),
                    lstDisclosureType: $("#lstDisclosureType option:selected").val(),
                    lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                    txtReportPeriodDatesFrom: $("#txtReportPeriodDatesFrom").val(),
                    txtReportPeriodDatesTo: $("#txtReportPeriodDatesTo").val(),
                    lstResigTermType: $("#lstResigTermType option:selected").val(),
                    lstFilingDate: $("#lstFilingDate option:selected").val(),
                    txtNewFilingDate: $("#txtNewFilingDate").val(),
                }, function (results) {

                    if (results.Errors == null) {

                        // CHECK THE ELECTION EXISTING OR NOT FOR THE SELECTED FILING PERIOD.
                        // IF NOT EXISTS THEN THROW POPUP MESSAGE SAYING THAT ELECTION NOT CREATED.
                        $.post("@Url.Content("~/ContributionsMonetary/GetElectionExists/")", {
                            strElectionYearId: $("#lstElectionCycle option:selected").val(),
                            strElectionTypeId: $("#lstElectionType option:selected").val(),
                            strOfficeTypeId: $("#lstUCOfficeType option:selected").val(),
                            strElectionDateId: $("#lstElectionDate option:selected").val(),
                            strCounty: $("#lstUCCounty option:selected").val(),
                            strMunicipality: $("#lstUCMuncipality option:selected").val()
                        }, function (results) {
                            if (results) {
                                // IF NEW FILING DATE THEN CHECK FILING DATE EXISTS OR NOT.
                                if ($("#lstFilingDate option:selected").text().toString() == "- New Filing Date -") {
                                    // CHECK THE FILING DATE ENTERED EXISTS OR NOT.
                                    $.post("@Url.Content("~/ContributionsMonetary/GetFilingDateExists/")", {
                                        strNewFilingDate: $("#txtNewFilingDate").val()
                                    }, function (results) {
                                        if (results.toString() == "True") {
                                            $("#txtNewFilingDate").val("");
                                            $("#txtNewFilingDate").blur();
                                            sessionStorage.setItem("FilingDateExistsNew", "True");
                                            $("#divLoading").hide();
                                            // SUCCESS MESSAGE.
                                            ShowDialogBox('EFS', 'Filing Date already exists, select the existing date from the list in Filing Date field to proceed.', 'Ok', '');
                                        }
                                        else {
                                            sessionStorage.removeItem("FilingDateExistsNew");
                                            CallCommonSearchAndHideLoading();
                                        }
                                    }).fail(function () {
                                        $("#divLoading").hide();
                                    });
                                }
                                else {
                                    sessionStorage.removeItem("FilingDateExistsNew");
                                    CallCommonSearchAndHideLoading();
                                }
                            }
                            else { // IF NOT EXISTS THEN SHOW MESSAGE ELECTION NOT CREATED.
                                // MESSAGE.
                                $("#divLoading").hide();
                                ShowDialogBox('EFS', 'Election is not created for the selected combination, Filing cannot be created', 'Ok', '');
                            }
                        }).fail(function () {
                            $("#divLoading").hide();
                        });
                    }
                    else if (results.Errors.length >= 0) {
                        $("#divLoading").hide();
                        ClearServerSideErrors(); // Server Side Validation Clear
                        for (var i = 0; i < results.Errors.length; i++) {

                            if (results.Errors[i].Key == "txtFilerID") {
                                $('<label for="txtFilerID" class="error">' + results.Errors[i].Value + '</label>').insertBefore('.txtFilerID');
                            }
                            if (results.Errors[i].Key == "txtCommitteeName") {
                                $('<label for="txtCommitteeName" class="error">' + results.Errors[i].Value + '</label>').insertBefore('.txtCommitteeName');
                            }
                            if (results.Errors[i].Key == "lstElectionCycle") {
                                $('<label for="lstElectionCycle" class="error">' + results.Errors[i].Value + '</label>').insertBefore('.lstElectionCycle');
                            }
                            if (results.Errors[i].Key == "lstUCOfficeType") {
                                $('<label for="lstUCOfficeType" class="error">' + results.Errors[i].Value + '</label>').insertBefore('.lstUCOfficeType');
                            }
                            if (results.Errors[i].Key == "lstUCCounty") {
                                $('<label for="lstUCCounty" class="error">' + results.Errors[i].Value + '</label>').insertBefore('.lstUCCounty');
                            }
                            if (results.Errors[i].Key == "lstUCMuncipality") {
                                $('<label for="lstUCMuncipality" class="error">' + results.Errors[i].Value + '</label>').insertBefore('.lstUCMuncipality');
                            }
                            if (results.Errors[i].Key == "lstElectionType") {
                                $('<label for="lstElectionType" class="error">' + results.Errors[i].Value + '</label>').insertBefore('.lstElectionType');
                            }
                            if (results.Errors[i].Key == "lstElectionDate") {
                                $('<label for="lstElectionDate" class="error">' + results.Errors[i].Value + '</label>').insertBefore('.lstElectionDate');
                            }
                            if (results.Errors[i].Key == "lstDisclosureType") {
                                $('<label for="lstDisclosureType" class="error">' + results.Errors[i].Value + '</label>').insertBefore('.lstDisclosureType');
                            }
                            if (results.Errors[i].Key == "lstDisclosurePeriod") {
                                $('<label for="lstDisclosurePeriod" class="error">' + results.Errors[i].Value + '</label>').insertBefore('.lstDisclosurePeriod');
                            }
                            if (results.Errors[i].Key == "txtReportPeriodDatesFrom") {
                                $('<label for="txtReportPeriodDatesFrom" class="error">' + results.Errors[i].Value + '</label>').insertBefore('.txtReportPeriodDatesFrom');
                            }
                            if (results.Errors[i].Key == "txtReportPeriodDatesTo") {
                                $('<label for="txtReportPeriodDatesTo" class="error">' + results.Errors[i].Value + '</label>').insertBefore('.txtReportPeriodDatesTo');
                            }
                        }
                    }
                }).fail(function () {
                    $("#divLoading").hide();
                });
            } // VALIDATION END END END END.
            else {
                $("#divLoading").hide();
            }
        });
        // APPLY BUTTON IT WILL SHOW THE TRANSACTION TYPE BASED ON ITEMIZED OR NON-ITEMIZED TRANSACTIONS.
        ////=======================================================================================================================================

        // FUNCTION TO CALL APPLY/SEARCH BUTTON.
        ////=======================================================================================================================================
        function CallCommonSearchAndHideLoading() {

            // IF USER SELECTING NEW FILING DATE AND ENTERING EXISTING FILING DATE.
            // THEN SYSTEM WILL THROUGH POP UP MESSAGE SAYING THAT ENTER DIFFERENT FILING DATE.
            if (sessionStorage.getItem("FilingDateExistsNew") == null) {

                // IF EXISTS ELECTION THEN CONTINUE...
                //Rever the PCFB monthly filings
                // IF THE RESIGNATION/TERMINATION TYPE DIFFERENT FROM SELECT AND DATABASE THEN IT WILL POP-UP BOX
                // ... OTHER WISE IT WON'T POP-UP ANYTHING.

                // CHECK IF FILINGS ALREADY EXISTS OR NOT.
                // IF EXISTS CHECK THE DROP DOWN SELECTED VALUE AND EXISTING DATABASE VALUE...
                // IF BOTH DIFFERENT THEN SHOW POP UP MESSAGE SAYING THAT WEATHER YOU WANT TO UPDATE OR NOT....
                // IF THEY WANT UPDATE THEN UPDATE THE FILINGS RESIGNATION/TERMATION TYPE...
                if (sessionStorage.getItem("ResgTermTypeFilingsId") != null) {
                    if (sessionStorage.getItem("ResgTermTypeFilingsId").toString() != "") {

                        var valResgTermType = $("#lstResigTermType option:selected").val().toString();

                        if (valResgTermType.toString() == "- Not Applicable -") {
                            valResgTermType = "";
                        }

                        if (valResgTermType != sessionStorage.getItem("ResgTermTypeId").toString()) {

                            $("#divLoading").hide();

                            // ADD THE POP UP DIALOG BOX FOR RESIGNATION/TERMINATION TYPE UPDATE OR NOT.
                            var resultsResgTermType = "Resignation/Termination value is changed. Do you want to continue?";

                            $m('#modal_dialog').text(resultsResgTermType);
                            $m("#modal_dialog").dialog({
                                resizable: false,
                                modal: true,
                                width: '400px',
                                height: 'auto',
                                bgiframe: false,
                                closeOnEscape: false,
                                open: function (event, ui) { hideDialogXButton(this); },
                                buttons: {
                                    "OK": function () { // OK THEN UPDATE VALUE
                                        // Close Confirm Box.
                                        $m(this).dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                        $.post("@Url.Content("~/ContributionsMonetary/UpdateResgTermTypeValue/")", {
                                            lstResigTermType: $("#lstResigTermType option:selected").val(),
                                        }, function (results) {
                                            if (results) {
                                                // SUCCESS MESSAGE.
                                                ShowDialogBox('EFS', 'Resignation/Termination value is updated', 'Ok', '');

                                                // CALL COMMON SEARCH OR APPLY FUNCTION.
                                                CommonSearchFunctionality();
                                            }
                                        });
                                    },
                                    "Cancel": function () { // CANCEL THEN DON'T UPDATE THE VALUE.
                                        // CLOSE WINDOW
                                        $m(this).dialog("close");

                                        // BIND DEFAULT VALUES THEN SET THE DATABASE VALUE.
                                        $.post("@Url.Content("~/ContributionsMonetary/GetResgTermTypeData/")", {
                                        }, function (results) {
                                            $("#lstResigTermType").empty();
                                            $("#lstResigTermType").append("<option>" + "- Not Applicable -" + "</option>");
                                            for (var i = 0; i < results.length; i++) {
                                                $("#lstResigTermType").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                                            }

                                            // IF BLANK EXISTS BUT NULL NOTHING.
                                            if (sessionStorage.getItem("ResgTermTypeFilingsId").toString() == "") {

                                                // SET THE DEFAULT VALUE.
                                                $("#lstResigTermType option")
                                                    .filter(function () { return $.trim($m("#lstResigTermType").text()) == "- Not Applicable -" })
                                                    .attr("selected", "selected");
                                            }
                                            else {
                                                if (sessionStorage.getItem("ResgTermTypeId").toString() != "") {
                                                    $m("#lstResigTermType").val(sessionStorage.getItem("ResgTermTypeId").toString());
                                                }
                                                else {

                                                    //SET THE DEFAULT VALUE.
                                                    $("#lstResigTermType option")
                                                        .filter(function () { return $.trim($m("#lstResigTermType").text()) == "- Not Applicable -" })
                                                        .attr("selected", "selected");
                                                }
                                            }
                                        });
                                        // NO UPDATE RESIGNATION/TERMINATION TYPE VALUE IN DATABASE.
                                        // CALL COMMON SEARCH OR APPLY FUNCTION.
                                        CommonSearchFunctionality();
                                    }
                                }
                            });
                        }
                        else { // RESIGNATION/TERMINATION TYPE NOT DIFFERENT FROM DATABASE AND DROPDOWN THEN CALL THE FUNCTION.
                            // NO UPDATE RESIGNATION/TERMINATION TYPE VALUE IN DATABASE.
                            // CALL COMMON SEARCH OR APPLY FUNCTION.
                            CommonSearchFunctionality();
                        }
                    }
                    else { // RESIGNATION/TERMINATION TYPE NOT DIFFERENT FROM DATABASE AND DROPDOWN THEN CALL THE FUNCTION.
                        // NO UPDATE RESIGNATION/TERMINATION TYPE VALUE IN DATABASE.
                        // CALL COMMON SEARCH OR APPLY FUNCTION.
                        CommonSearchFunctionality();
                    }
                }
                else {
                    // NO RESIGNATION/TERMINATION TYPE.
                    CommonSearchFunctionality();
                }
            }
        }
        ////=======================================================================================================================================

        // FUCTION CALLING FOR RESIGNATION/TERMINATION TYPE EXISTS OR NOT IF EXISTS ITS DIFFERENT FROM DATABASE AND DROPDOWN.
        function CommonSearchFunctionality() { // FUNCTION START HERE
            // SHOW APPLY BUTTON ON TRANSACTION TYPE DROPDOWN.
            $(".clsApplyForTransIE").show();
            //==============================================================================================
            // INSERT SET PREFERENCES FOR NON-ITEMIZED...
            // 24 HOUR NOTICE.
            // IE - WEEKLY CONTRIBUTION.
            // IE - 24 HOUR CONTRIBUTION.
            // IE - WEEKLY EXPENDITURE.
            // IE - WEEKLY LIABILITY INCURRED.
            // IE - 24 HOUR EXPENDITURE.
            // IE - WEEKLY EXPENDITURE PIDA.
            // THIS ONE TESTING WE ARE USING ONCE WE IMPLEMENTED IN FIDAS WHILE CREATING FILER ID THAT TIME...
            /// .. IT WILL INSERT NON-ITEMIZED SET PREFERENCES COLUMNS IN TABLE.
            $.post("@Url.Content("~/ContributionsMonetary/AddNonItemizedSetPrefPerFilerId/")", {
                strFilerId: $("#txtFilerID option:selected").val(),
                strFilingTypeId: $("#lstDisclosureType option:selected").val().toString(),
            }, function (results) {
            });
            //==============================================================================================
            // MOVE ALL CODE INTO
            if ($("#lstDisclosureType option:selected").val().toString() == "1" || $("#lstDisclosureType option:selected").val().toString() == "2") {

                if ($("#lstDisclosurePeriod option:selected").text() == "- Select -") {
                    ShowDialogBox('EFS', "Select Disclosure Period", 'Ok', '');
                }
                else {
                    //Accessibility: Don't hide #divShowHideHelp" when search button is pressed.
                    var selectedlstDisclosureType = $("#lstDisclosureType option:selected").val().toString();

                    if (selectedlstDisclosureType == "1") { // Itemized
                        //START - TRANSFER ALL LOAN OUTSTANDING BALANCE INTO NEW FILINGS
                        $.post("@Url.Content("~/ContributionsMonetary/TransferOutStandingBalance/")", {
                            strFilerId: $("#txtFilerID option:selected").val(),
                            strElectionYearId: $("#lstElectionCycle option:selected").val(),
                            strOfficeTypeId: $("#lstUCOfficeType option:selected").val(),
                            strElectionTypeId: $("#lstElectionType option:selected").val(),
                            strElectionDateId: $("#lstElectionDate option:selected").val(),
                            lstDisclosureType: $("#lstDisclosurePeriod option:selected").val(),
                            txtReportPeriodDatesTo: $("#txtReportPeriodDatesTo").val().toString(),
                            lstResigTermType: $m("#lstResigTermType option:selected").val(),
                            lstFilingDate: $m("#lstFilingDate option:selected").text(),
                            txtNewFilingDate: $("#txtNewFilingDate").val(),
                            lstUCMuncipality: $("#lstUCMuncipality option:selected").val()
                        }, function (resultData) {
                            if (resultData == "1") {
                                ShowDialogBox('EFS', 'Outstanding Loan/Liability Transactions corresponding to Outstanding Loans/Liabilities in the previous Filing(s) will be added in this report.', 'Ok', '');
                            }
                        });
                        //END - TRANSFER ALL LOAN OUTSTANDING BALANCE INTO NEW FILINGS

                        sessionStorage.setItem("24HourCount", "");

                        

                        setTimeout(
                            function () {
                                //End - Get 24 Hours Transaction count
                                //Moved Weekly Claim Submission data to Itemized transaction
                                $.post("@Url.Content("~/ContributionsMonetary/GetItemizedWCSTrans/")", {
                                    strFilerId: $("#txtFilerID option:selected").val(),
                                    strElectionYearId: $("#lstElectionCycle option:selected").val(),
                                    strOfficeTypeId: $("#lstUCOfficeType option:selected").val(),
                                    strElectionTypeId: $("#lstElectionType option:selected").val(),
                                    strElectionDateId: $("#lstElectionDate option:selected").val(),
                                    lstUCMuncipality: $("#lstUCMuncipality option:selected").val(),
                                    txtCuttOffDate: $("#txtReportPeriodDatesFrom").val(),
                                    txtNewFilingDate: $("#txtNewFilingDate").val(),
                                    lstResigTermType: $m("#lstResigTermType option:selected").val()
                                }, function (result) {
                                    if (result) {

                                        $("#divTransactionType").hide();

                                        $("#divLoading").hide();
                                        dialog_Itemized_WCS.dialog("open");

                                        // Hide Help.
                                        $("#divShowHideHelp").hide();

                                        // FILING DATE FOR OFF-CYCLE.
                                        // FILING DATE AND CUTT-OFF DATE.
                                        sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesFrom").val());
                                        if ($("#lstElectionType option:selected").val() == "6") {
                                            sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
                                        }
                                        else {
                                            sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
                                        }

                                        // SHOW THE DIALOG BOX IF THE RECORDS EXISTS OTHER WISE HID THE DIALOGBOX.
                                        var tableItemizedWCS = $m('#gridIETransactionsWCS').DataTable({
                                            "bProcessing": true,
                                            "responsive": true,
                                            "deferRender": true,
                                            "retrieve": true,
                                            "columnDefs": [
                                                {
                                                    "targets": [0, 5, 6, 13, 14, 15],
                                                    "visible": false,
                                                    "searchable": false
                                                },
                                            ],
                                            "initComplete": function (settings, json) {
                                                //Accessibility: Applies various Accessibility features to this dataTable.
                                                makeDataTableAccessible($m('#gridIETransactionsWCS').DataTable());
                                            },
                                            "fnDrawCallback": function (oSettings) {
                                                var oSettings = this.fnSettings();
                                                var iTotalRecords = oSettings.fnRecordsTotal();
                                                if (iTotalRecords > 0) {
                                                    $("#btnOkWCS").focus();
                                                }
                                                else {
                                                    // DON'T SHOW THE DIALOGBOX IF THERE IS NO IE TRANSACTIONS NOT AVAILABLE.
                                                    //dialog_Itemized_WCS.dialog("close");
                                                }
                                            },
                                            "fnServerData": function (url, data, callback) {
                                                $.ajax({
                                                    "url": "@Url.Content("~/ContributionsMonetary/GetItemizedWeeklyClaimSubData/")",
                                                    "data": {
                                                        strFilerId: $("#txtFilerID option:selected").val(),
                                                        strElectionYearId: $("#lstElectionCycle option:selected").val(),
                                                        strOfficeTypeId: $("#lstUCOfficeType option:selected").val(),
                                                        strElectionTypeId: $("#lstElectionType option:selected").val(),
                                                        strElectionDateId: $("#lstElectionDate option:selected").val(),
                                                        lstUCMuncipality: $("#lstUCMuncipality option:selected").val()
                                                    },
                                                    "success": callback,
                                                    "dataType": "json",
                                                    "type": "POST",
                                                    "error": function () {
                                                        ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                                                    }
                                                });
                                            }
                                        });
                                        $m('#gridIETransactionsWCS').DataTable().ajax.reload();
                                        tableItemizedWCS.search('').columns().search('').draw();
                                        tableItemizedWCS.order([12, 'desc']).draw();
                                        tableItemizedWCS.responsive.recalc();
                                    }
                                    else {

                                        //Start - Get 24 Hours Transaction count
                                        $.post("@Url.Content("~/ContributionsMonetary/GetItemized24HoursTransactionsExists/")", {
                                            strFilerId: $("#txtFilerID option:selected").val(),
                                            strElectionYearId: $("#lstElectionCycle option:selected").val(),
                                            strOfficeTypeId: $("#lstUCOfficeType option:selected").val(),
                                            strElectionTypeId: $("#lstElectionType option:selected").val(),
                                            strElectionDateId: $("#lstElectionDate option:selected").val(),
                                            lstUCMuncipality: $("#lstUCMuncipality option:selected").val(),
                                            txtReportPeriodDatesTo: $("#txtReportPeriodDatesTo").val().toString(),
                                            lstFilingDate: $m("#lstFilingDate option:selected").text(),
                                            txtNewFilingDate: $("#txtNewFilingDate").val()
                                        }, function (result) {
                                            sessionStorage.setItem("24HourCount", result);

                                            if (sessionStorage.getItem("24HourCount") == "true") {
                                                $("#divTransactionType").hide();
                                                $("#divLoading").hide();
                                                dialog_Itemized_24Hours.dialog("open");

                                                // Hide Help.
                                                $("#divShowHideHelp").hide();

                                                // FILING DATE FOR OFF-CYCLE.
                                                // FILING DATE AND CUTT-OFF DATE.
                                                sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesFrom").val());
                                                if ($("#lstElectionType option:selected").val() == "6") {
                                                    sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
                                                }
                                                else {
                                                    sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
                                                }
                                                if (tableItemizedIETransactions24Hours == "undefined") {
                                                    // DIALOG BOX WILL OPEN IF ANY NON-ITEMIZED TRANSACTIONS EXISTS.
                                                    // SHOW THE DIALOG BOX IF THE RECORDS EXISTS OTHER WISE HID THE DIALOGBOX.
                                                    tableItemizedIETransactions24Hours = $m('#gridIETransactions24Hours').DataTable({
                                                        "bProcessing": true,
                                                        "responsive": true,
                                                        "deferRender": true,
                                                        "retrieve": true,
                                                        "columnDefs": [
                                                            {
                                                                "targets": [0, 8, 9, 10],
                                                                "visible": false,
                                                                "searchable": false
                                                            },
                                                        ],
                                                        "initComplete": function (settings, json) {
                                                            //Accessibility: Applies various Accessibility features to this dataTable.
                                                            makeDataTableAccessible($m('#gridIETransactions24Hours').DataTable());
                                                        },
                                                        "fnDrawCallback": function (oSettings) {
                                                            var oSettings = this.fnSettings();
                                                            var iTotalRecords = oSettings.fnRecordsTotal();
                                                            if (iTotalRecords > 0) {
                                                                $("#btnOk24Hours").focus();
                                                            }
                                                        },
                                                        "fnServerData": function (url, data, callback) {
                                                            $.ajax({
                                                                "url": "@Url.Content("~/ContributionsMonetary/GetItemized24HoursTransactionsData/")",
                                                                "data": {
                                                                    strFilerId: $("#txtFilerID option:selected").val(),
                                                                    strElectionYearId: $("#lstElectionCycle option:selected").val(),
                                                                    strOfficeTypeId: $("#lstUCOfficeType option:selected").val(),
                                                                    strElectionTypeId: $("#lstElectionType option:selected").val(),
                                                                    strElectionDateId: $("#lstElectionDate option:selected").val(),
                                                                    lstUCMuncipality: $("#lstUCMuncipality option:selected").val(),
                                                                    txtReportPeriodDatesTo: $("#txtReportPeriodDatesTo").val().toString(),
                                                                    lstFilingDate: $m("#lstFilingDate option:selected").text(),
                                                                    txtNewFilingDate: $("#txtNewFilingDate").val()

                                                                },
                                                                "success": callback,
                                                                "dataType": "json",
                                                                "type": "POST",
                                                                "error": function () {
                                                                    ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                                                                }
                                                            });
                                                        }
                                                    });
                                                    $m('#gridIETransactions24Hours').DataTable().ajax.reload();
                                                    tableItemizedIETransactions24Hours.search('').columns().search('').draw();
                                                    tableItemizedIETransactions24Hours.order([7, 'desc']).draw();
                                                    tableItemizedIETransactions24Hours.responsive.recalc();
                                                }
                                                else {
                                                    // RELOAD THE GRID.
                                                    $m.ajax({
                                                        "url": "@Url.Content("~/ContributionsMonetary/GetItemized24HoursTransactionsData/")",
                                                        "data": {
                                                            strFilerId: $("#txtFilerID option:selected").val(),
                                                            strElectionYearId: $("#lstElectionCycle option:selected").val(),
                                                            strOfficeTypeId: $("#lstUCOfficeType option:selected").val(),
                                                            strElectionTypeId: $("#lstElectionType option:selected").val(),
                                                            strElectionDateId: $("#lstElectionDate option:selected").val(),
                                                            lstUCMuncipality: $("#lstUCMuncipality option:selected").val(),
                                                            txtReportPeriodDatesTo: $("#txtReportPeriodDatesTo").val().toString(),
                                                            lstFilingDate: $m("#lstFilingDate option:selected").text(),
                                                            txtNewFilingDate: $("#txtNewFilingDate").val()

                                                        },
                                                        "success": tableItemizedIETransactions24Hours,
                                                        "dataType": "json",
                                                        "type": "POST",
                                                        "error": function () {
                                                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                                                        }
                                                    });
                                                    $m('#gridIETransactions24Hours').DataTable().ajax.reload();
                                                    tableItemizedIETransactions24Hours.responsive.recalc();
                                                }
                                            }
                                            else {
                                                $.post("@Url.Content("~/ContributionsMonetary/GetItemizedIETransactionsExists/")", {
                                                    strFilerId: $("#txtFilerID option:selected").val(),
                                                    strElectionYearId: $("#lstElectionCycle option:selected").val(),
                                                    strOfficeTypeId: $("#lstUCOfficeType option:selected").val(),
                                                    strElectionTypeId: $("#lstElectionType option:selected").val(),
                                                    strElectionDateId: $("#lstElectionDate option:selected").val(),
                                                    lstUCMuncipality: $("#lstUCMuncipality option:selected").val(),
                                                    txtReportPeriodDatesTo: $("#txtReportPeriodDatesTo").val().toString(),
                                                    lstFilingDate: $m("#lstFilingDate option:selected").text(),
                                                    txtNewFilingDate: $("#txtNewFilingDate").val()

                                                }, function (result) {
                                                    if (result) {
                                                        $("#divTransactionType").hide();

                                                        $("#divLoading").hide();
                                                        dialog_Itemized_IE_Trans.dialog("open");

                                                        // Hide Help.
                                                        $("#divShowHideHelp").hide();

                                                        // FILING DATE FOR OFF-CYCLE.
                                                        // FILING DATE AND CUTT-OFF DATE.
                                                        sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesFrom").val());
                                                        if ($("#lstElectionType option:selected").val() == "6") {
                                                            sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
                                                        }
                                                        else {
                                                            sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
                                                        }

                                                        // RELOAD THE GRID.
                                                        $m.ajax({
                                                            "url": "@Url.Content("~/ContributionsMonetary/GetItemizedIETransactionsData/")",
                                                            "data": {
                                                                strFilerId: $("#txtFilerID option:selected").val(),
                                                                strElectionYearId: $("#lstElectionCycle option:selected").val(),
                                                                strOfficeTypeId: $("#lstUCOfficeType option:selected").val(),
                                                                strElectionTypeId: $("#lstElectionType option:selected").val(),
                                                                strElectionDateId: $("#lstElectionDate option:selected").val(),
                                                                lstUCMuncipality: $("#lstUCMuncipality option:selected").val(),
                                                                txtReportPeriodDatesTo: $("#txtReportPeriodDatesTo").val().toString(),
                                                                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                                                                txtNewFilingDate: $("#txtNewFilingDate").val()
                                                            },
                                                            "success": tableItemizedIETransactions,
                                                            "dataType": "json",
                                                            "type": "POST",
                                                            "error": function () {
                                                                ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                                                            }
                                                        });
                                                        $m('#gridItemizedIETransactions').DataTable().ajax.reload();
                                                        tableItemizedIETransactions.responsive.recalc();
                                                    }
                                                    else {
                                                        // Hide Help.
                                                        $("#divShowHideHelp").hide();

                                                        // LOAD THE TRANSACTION TYPE DROPDOWN VALUES.
                                                        BindLstTransactionTypeWithContributionsMonetaryGetTransactionTypeBind(true, false);
                                                    }
                                                });

                                                // DIALOG BOX WILL OPEN IF ANY NON-ITEMIZED TRANSACTIONS EXISTS.
                                                // SHOW THE DIALOG BOX IF THE RECORDS EXISTS OTHER WISE HID THE DIALOGBOX.
                                                tableItemizedIETransactions = $m('#gridItemizedIETransactions').DataTable({
                                                    "bProcessing": true,
                                                    "responsive": true,
                                                    "deferRender": true,
                                                    "retrieve": true,
                                                    "columnDefs": [
                                                        {
                                                            "targets": [0, 13, 14, 15],
                                                            "visible": false,
                                                            "searchable": false
                                                        },
                                                    ],
                                                    "initComplete": function (settings, json) {
                                                        //Accessibility: Applies various Accessibility features to this dataTable.
                                                        makeDataTableAccessible($m('#gridItemizedIETransactions').DataTable());
                                                    },
                                                    "fnDrawCallback": function (oSettings) {
                                                        var oSettings = this.fnSettings();
                                                        var iTotalRecords = oSettings.fnRecordsTotal();
                                                        if (iTotalRecords > 0) {
                                                            $("#btnOkItemizedIETrans").focus();
                                                        }
                                                        else {
                                                            // DON'T SHOW THE DIALOGBOX IF THERE IS NO IE TRANSACTIONS NOT AVAILABLE.
                                                            dialog_Itemized_IE_Trans.dialog("close");
                                                        }
                                                    },
                                                    "fnServerData": function (url, data, callback) {
                                                        $.ajax({
                                                            "url": "@Url.Content("~/ContributionsMonetary/GetItemizedIETransactionsData/")",
                                                            "data": {
                                                                strFilerId: $("#txtFilerID option:selected").val(),
                                                                strElectionYearId: $("#lstElectionCycle option:selected").val(),
                                                                strOfficeTypeId: $("#lstUCOfficeType option:selected").val(),
                                                                strElectionTypeId: $("#lstElectionType option:selected").val(),
                                                                strElectionDateId: $("#lstElectionDate option:selected").val(),
                                                                lstUCMuncipality: $("#lstUCMuncipality option:selected").val(),
                                                                txtReportPeriodDatesTo: $("#txtReportPeriodDatesTo").val().toString(),
                                                                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                                                                txtNewFilingDate: $("#txtNewFilingDate").val()
                                                            },
                                                            "success": callback,
                                                            "dataType": "json",
                                                            "type": "POST",
                                                            "error": function () {
                                                                ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                                                            }
                                                        });
                                                    }
                                                });
                                                $m('#gridItemizedIETransactions').DataTable().ajax.reload();
                                                tableItemizedIETransactions.search('').columns().search('').draw();
                                                tableItemizedIETransactions.order([12, 'desc']).draw();
                                                tableItemizedIETransactions.responsive.recalc();
                                            }
                                        });
                                    }
                                });
                            }, 1000);
                    }
                    else {
                        $("#divTransactionType").hide();
                    }

                    if (selectedlstDisclosureType == "3") { // In-Lieu-Of Statement
                        SetCommonSessionStorageValues();
                        //Unique storage.
                        sessionStorage.setItem("DisclosurePeriod", $("#lstDisclosurePeriod option:selected").val());
                        sessionStorage.setItem("DisclosurePeriodText", $("#lstDisclosurePeriod option:selected").text());
                        sessionStorage.setItem("CountyId", $("#lstUCCounty option:selected").val());
                        sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesFrom").val());
                        if ($("#lstElectionType option:selected").val() == "6") {
                            sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
                        }
                        else {
                            sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
                        }
                        sessionStorage.setItem("lstFilingDate", $("#lstFilingDate option:selected").val());
                        sessionStorage.setItem("lstResigTermType", $("#lstResigTermType option:selected").val());

                        // Transfer to In-Lieu-Of Statement Page
                        SetHeaderAndNewWindowLocationHref("In-Lieu-Of Statement", "@Url.Content("~/InLieuOfStatement/InLieuOfStatement/")");
                    }
                    else if (selectedlstDisclosureType == "2") { // No Activity
                        SetCommonSessionStorageValues();
                        //Unique storage.
                        sessionStorage.setItem("DisclosurePeriod", $("#lstDisclosurePeriod option:selected").val());
                        sessionStorage.setItem("DisclosurePeriodText", $("#lstDisclosurePeriod option:selected").text());
                        sessionStorage.setItem("CountyId", $("#lstUCCounty option:selected").val());
                        sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesFrom").val());
                        sessionStorage.setItem("lstFilingDate", $("#lstFilingDate option:selected").val());
                        sessionStorage.setItem("lstResigTermType", $("#lstResigTermType option:selected").val());
                        if ($("#lstElectionType option:selected").val() == "6") {
                            sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
                        }
                        else {
                            sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
                        }
                        sessionStorage.setItem("TransactionType", $("#lstTransactionType option:selected").val());
                        // Transfer to No Activity Report Page.
                        SetHeaderAndNewWindowLocationHref("No-Activity Report", "@Url.Content("~/NoActivityReport/NoActivityReport/")");
                    }
                    else if (selectedlstDisclosureType == "4") { // 24-Hour Notice

                        // Bind Transaction Type for 24-Hour Notice.
                        var options = {};
                        options.url = "@Url.Content("~/ContributionsMonetary/BindTransactionTypes24HNotice/")";
                        options.type = "POST";
                        options.dataType = "json";
                        options.contentType = "application/json";
                        options.success = function (TranTypes) {
                            $("#lstTransactionTypeNonItem").empty();
                            $("#lstTransactionTypeNonItem").append("<option>" + "- Select -" + "</option>");
                            for (var i = 0; i < TranTypes.length; i++) {
                                $("#lstTransactionTypeNonItem").append("<option value='" + TranTypes[i].Value + "'>" + TranTypes[i].Text + "</option>");
                            }
                            if (TranTypes.length > 1) {
                                // Show TransactionType for Non-Itemized transactions.
                                $("#divTransactionTypeNonItemized").show();
                                $("#divTransactionTypeNonItemized").focus();
                            }
                            else {
                                // Hide TransactionType for Non-Itemized transactions.
                                $("#divTransactionTypeNonItemized").hide();
                            }
                        };
                        options.error = function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                        };
                        $.ajax(options).always(function () {
                            $("#divLoading").hide();
                        });
                    }
                    else if (selectedlstDisclosureType == "5") { // Notice of Non-Participation
                        SetCommonSessionStorageValues();
                        //Unique storage.
                        sessionStorage.setItem("DisclosurePeriod", $("#lstDisclosurePeriod option:selected").val());
                        sessionStorage.setItem("DisclosurePeriodText", $("#lstDisclosurePeriod option:selected").text());
                        sessionStorage.setItem("CountyId", $("#lstUCCounty option:selected").val());

                        // Transfer to Notice of Non-Participation Page
                        SetHeaderAndNewWindowLocationHref("Notice of Non-Participation", "@Url.Content("~/NoticeOfNonParticipation/NoticeOfNonParticipation/")");
                    }
                    else if (selectedlstDisclosureType == "7") { // Independent Expenditure - Weekly Contribution

                        // Bind Transaction Type for IE-WEEKLY CONTRIBTUIONS.
                        var options = {};
                        options.url = "@Url.Content("~/ContributionsMonetary/BindTransactionTypes24HNotice/")";
                        options.type = "POST";
                        options.dataType = "json";
                        options.contentType = "application/json";
                        options.success = function (TranTypes) {
                            $("#lstTransactionTypeNonItem").empty();
                            $("#lstTransactionTypeNonItem").append("<option>" + "- Select -" + "</option>");
                            for (var i = 0; i < TranTypes.length; i++) {
                                $("#lstTransactionTypeNonItem").append("<option value='" + TranTypes[i].Value + "'>" + TranTypes[i].Text + "</option>");
                            }
                            if (TranTypes.length > 1) {
                                // Show TransactionType for Non-Itemized transactions.
                                $("#divTransactionTypeNonItemized").show();
                                $("#divTransactionTypeNonItemized").focus();
                            }
                            else {
                                // Hide TransactionType for Non-Itemized transactions.
                                $("#divTransactionTypeNonItemized").hide();
                            }
                        };
                        options.error = function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                        };
                        $.ajax(options).always(function () {
                            // HIDE THE TRANSACTIONS TYPE EITHER RECORDS EXISTS OR NOT.
                            $("#divTransactionType").hide();
                            $("#divLoading").hide();
                        });
                    }
                    else if (selectedlstDisclosureType == "14") { // Public Campaign Finance - Weekly Claim Submission

                        // Bind Transaction Type for IE-WEEKLY CONTRIBTUIONS.
                        var options = {};
                        options.url = "@Url.Content("~/ContributionsMonetary/GetTransactionTypesForWeeklyClaim/")";
                        options.type = "POST";
                        options.dataType = "json";
                        options.contentType = "application/json";
                        options.success = function (TranTypes) {
                            $("#divLoading").hide();
                            $("#lstTransactionTypeNonItem").empty();
                            for (var i = 0; i < TranTypes.length; i++) {
                                $("#lstTransactionTypeNonItem").append("<option value='" + TranTypes[i].Value + "'>" + TranTypes[i].Text + "</option>");
                            }
                            if (TranTypes.length >= 1) {
                                // Show TransactionType for Non-Itemized transactions.
                                $("#divTransactionTypeNonItemized").show();
                                $("#divTransactionTypeNonItemized").focus();
                                sessionStorage.setItem("lstTransactionTypeNonItem", $("#lstTransactionTypeNonItem option:selected").val());
                                sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
                                SetCommonSessionStorageValues();
                                //Unique storage.
                                sessionStorage.setItem("lstFilingDate", $("#lstFilingDate option:selected").val());
                                sessionStorage.setItem("lstResigTermType", $("#lstResigTermType option:selected").val());

                                $("#divTransactionTypeNonItemized").show();
                                var selectedlstTransactionTypeNonItemData = $("#lstTransactionTypeNonItem option:selected").val().toString();
                                if (selectedlstTransactionTypeNonItemData == "1") { // SCHEDULE - A
                                    SetHeaderAndNewWindowLocationHref("Monetary Contributions Received From Individual & Partnerships", "@Url.Content("~/WeeklyClaimSubmission/WeeklyClaimSubmission/")");
                                }
                            }
                            else {
                                // Hide TransactionType for Non-Itemized transactions.
                                $("#divTransactionTypeNonItemized").hide();
                            }
                        };
                        options.error = function () {
                            $("#divLoading").hide();
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                        };
                        $.ajax(options).always(function () {
                            // HIDE THE TRANSACTIONS TYPE EITHER RECORDS EXISTS OR NOT.
                            $("#divTransactionType").hide();
                        });
                    }
                    else if (selectedlstDisclosureType == "8") { // Independent Expenditure - 24 Hour Contribution

                        // Bind Transaction Type for 24-Hour Notice.
                        var options = {};
                        options.url = "@Url.Content("~/ContributionsMonetary/BindTransactionTypes24HContribution/")";
                        options.type = "POST";
                        options.dataType = "json";
                        options.contentType = "application/json";
                        options.success = function (TranTypes) {
                            $("#lstTransactionTypeNonItem").empty();
                            $("#lstTransactionTypeNonItem").append("<option>" + "- Select -" + "</option>");
                            for (var i = 0; i < TranTypes.length; i++) {
                                $("#lstTransactionTypeNonItem").append("<option value='" + TranTypes[i].Value + "'>" + TranTypes[i].Text + "</option>");
                            }
                            if (TranTypes.length > 1) {
                                // Show TransactionType for Non-Itemized transactions.
                                $("#divTransactionTypeNonItemized").show();
                                $("#divTransactionTypeNonItemized").focus();
                            }
                            else {
                                // Hide TransactionType for Non-Itemized transactions.
                                $("#divTransactionTypeNonItemized").hide();
                            }
                        };
                        options.error = function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                        };
                        $.ajax(options).always(function () {
                            // HIDE THE TRANSACTIONS TYPE EITHER RECORDS EXISTS OR NOT.
                            $("#divTransactionType").hide();
                            $("#divLoading").hide();
                        });
                    }
                    else if (selectedlstDisclosureType == "9") { // Independent Expenditure - Weekly Expenditure

                        // Bind Transaction Type for 24-Hour Notice.
                        var options = {};
                        options.url = "@Url.Content("~/ContributionsMonetary/BindTransactionTypesIEWeeklyContr/")";
                        options.type = "POST";
                        options.dataType = "json";
                        options.contentType = "application/json";
                        options.success = function (TranTypes) {
                            $("#divLoading").hide();
                            $("#lstTransTypeNonItemWeeklyExp").empty();
                            
                            for (var i = 0; i < TranTypes.length; i++) {
                                $("#lstTransTypeNonItemWeeklyExp").append("<option value='" + TranTypes[i].Value + "'>" + TranTypes[i].Text + "</option>");
                            }
                            if (TranTypes.length >= 1) {
                                // Show TransactionType for Non-Itemized transactions.
                                $("#divTransactionTypeNonItemWeeklyExp").show();

                                // FULL THE SESSION VALUES.
                                sessionStorage.setItem("lstTransactionTypeNonItem", $("#lstTransTypeNonItemWeeklyExp option:selected").val());
                                sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
                                SetCommonSessionStorageValues();
                                //Unique storage.
                                sessionStorage.setItem("lstFilingDate", $("#lstFilingDate option:selected").val());
                                sessionStorage.setItem("lstResigTermType", $("#lstResigTermType option:selected").val());

                                // DIRECTLY CALL THE PAGE WITHOUT SHOWING DROPDOWN FOR ONE VALUE SELECT
                                SetHeaderAndNewWindowLocationHref("Expenditure Payments", "@Url.Content("~/NonItemIEWeeklyExpenditureSchedF/NonItemIEWeeklyExpenditureSchedF/")");
                            }
                            else {
                                // Hide TransactionType for Non-Itemized transactions.
                                $("#divTransactionTypeNonItemWeeklyExp").hide();
                            }
                        };
                        options.error = function () {
                            $("#divLoading").hide();
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                        };
                        $.ajax(options).always(function () {
                            // HIDE THE TRANSACTIONS TYPE EITHER RECORDS EXISTS OR NOT.
                            $("#divTransactionType").hide();
                        });

                    }
                    else if (selectedlstDisclosureType == "10") { // Independent Expenditure - Weekly Liabilities Incurred

                        // Bind Transaction Type for 24-Hour Notice.
                        var options = {};
                        options.url = "@Url.Content("~/ContributionsMonetary/BindTransactionTypesIEWeeklyLiabIncur/")";
                        options.type = "POST";
                        options.dataType = "json";
                        options.contentType = "application/json";
                        options.success = function (TranTypes) {
                            $("#divLoading").hide();
                            $("#lstTransTypeNonItemWeeklyExp").empty();
                            for (var i = 0; i < TranTypes.length; i++) {
                                $("#lstTransTypeNonItemWeeklyExp").append("<option value='" + TranTypes[i].Value + "'>" + TranTypes[i].Text + "</option>");
                            }
                            if (TranTypes.length >= 1) {
                                // Show TransactionType for Non-Itemized transactions.
                                $("#divTransactionTypeNonItemWeeklyExp").show();

                                // FULL THE SESSION VALUES.
                                sessionStorage.setItem("lstTransactionTypeNonItem", $("#lstTransTypeNonItemWeeklyExp option:selected").val());
                                sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
                                SetCommonSessionStorageValues();
                                //Unique storage.
                                sessionStorage.setItem("lstFilingDate", $("#lstFilingDate option:selected").val());
                                sessionStorage.setItem("lstResigTermType", $("#lstResigTermType option:selected").val());
                                // DIRECTLY CALL THE PAGE WITHOUT SHOWING DROPDOWN FOR ONE VALUE SELECT
                                SetHeaderAndNewWindowLocationHref("Outstanding Liabilities/Loans", "@Url.Content("~/NonItemIEWeeklyLiabilityIncurredSchedN/NonItemIEWeeklyLiabilityIncurredSchedN/")");
                            }
                            else {
                                // Hide TransactionType for Non-Itemized transactions.
                                $("#divTransactionTypeNonItemWeeklyExp").hide();
                            }
                        };
                        options.error = function () {
                            $("#divLoading").hide();
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                        };
                        $.ajax(options).always(function () {
                            // HIDE THE TRANSACTIONS TYPE EITHER RECORDS EXISTS OR NOT.
                             $("#divTransactionType").hide();
                        });
                    }
                    else if (selectedlstDisclosureType == "11") { // Independent Expenditure - 24 Hour Expenditure

                        // Bind Transaction Type for 24-Hour Notice.
                        var options = {};
                        options.url = "@Url.Content("~/ContributionsMonetary/BindTransactionTypesIEWeeklyContr/")";
                        options.type = "POST";
                        options.dataType = "json";
                        options.contentType = "application/json";
                        options.success = function (TranTypes) {
                            $("#divLoading").hide();
                            $("#lstTransTypeNonItemWeeklyExp").empty();
                            for (var i = 0; i < TranTypes.length; i++) {
                                $("#lstTransTypeNonItemWeeklyExp").append("<option value='" + TranTypes[i].Value + "'>" + TranTypes[i].Text + "</option>");
                            }
                            if (TranTypes.length >= 1) {
                                // Show TransactionType for Non-Itemized transactions.
                                $("#divTransactionTypeNonItemWeeklyExp").show();

                                // FULL THE SESSION VALUES.
                                sessionStorage.setItem("lstTransactionTypeNonItem", $("#lstTransTypeNonItemWeeklyExp option:selected").val());
                                sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesFrom").val());
                                if ($("#lstElectionType option:selected").val() == "6") {
                                    sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
                                }
                                else {
                                    sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
                                }
                                SetCommonSessionStorageValues();
                                //Unique storage.
                                sessionStorage.setItem("CountyId", $("#lstUCCounty option:selected").val());

                                // DIRECTLY CALL THE PAGE WITHOUT SHOWING DROPDOWN FOR ONE VALUE SELECT
                                SetHeaderAndNewWindowLocationHref("Expenditure Payments", "@Url.Content("~/NonItemIE24HourExpenditureSchedF/NonItemIE24HourExpenditureSchedF/")");
                            }
                            else {
                                // Hide TransactionType for Non-Itemized transactions.
                                $("#divTransactionTypeNonItemWeeklyExp").hide();
                            }
                        };
                        options.error = function () {
                            $("#divLoading").hide();
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                        };
                        $.ajax(options).always(function () {
                            // HIDE THE TRANSACTIONS TYPE EITHER RECORDS EXISTS OR NOT.
                            $("#divTransactionType").hide();
                        });

                    }
                    else if (selectedlstDisclosureType == "12") { // Independent Expenditure - Weekly Expenditure - PIDA

                        // Bind Transaction Type for 24-Hour Notice.
                        var options = {};
                        options.url = "@Url.Content("~/ContributionsMonetary/BindTransactionTypesIEWeeklyContr/")";
                        options.type = "POST";
                        options.dataType = "json";
                        options.contentType = "application/json";
                        options.success = function (TranTypes) {
                            $("#divLoading").hide();
                            $("#lstTransTypeNonItemWeeklyExp").empty();
                            for (var i = 0; i < TranTypes.length; i++) {
                                $("#lstTransTypeNonItemWeeklyExp").append("<option value='" + TranTypes[i].Value + "'>" + TranTypes[i].Text + "</option>");
                            }
                            if (TranTypes.length >= 1) {
                                // Show TransactionType for Non-Itemized transactions.
                                $("#divTransactionTypeNonItemWeeklyExp").show();

                                // FULL THE SESSION VALUES.
                                sessionStorage.setItem("lstTransactionTypeNonItem", $("#lstTransTypeNonItemWeeklyExp option:selected").val());
                                sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
                                SetCommonSessionStorageValues();
                                //Unique storage.
                                sessionStorage.setItem("lstFilingDate", $("#lstFilingDate option:selected").val());
                                sessionStorage.setItem("lstResigTermType", $("#lstResigTermType option:selected").val());

                                // DIRECTLY CALL THE PAGE WITHOUT SHOWING DROPDOWN FOR ONE VALUE SELECT
                                SetHeaderAndNewWindowLocationHref("Expenditure Payments", "@Url.Content("~/NonItemIEWeeklyPIDAExpenditureSchedF/NonItemIEWeeklyPIDAExpenditureSchedF/")");
                            }
                            else {
                                // Hide TransactionType for Non-Itemized transactions.
                                $("#divTransactionTypeNonItemWeeklyExp").hide();
                            }
                        };
                        options.error = function () {
                            $("#divLoading").hide();
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                        };
                        $.ajax(options).always(function () {
                            // HIDE THE TRANSACTIONS TYPE EITHER RECORDS EXISTS OR NOT.
                            $("#divTransactionType").hide();
                        });

                    }
                    else if (selectedlstDisclosureType == "13") { // Independent Expenditure - 24 Hour Expenditure - PIDA

                        // Bind Transaction Type for 24-Hour Notice.
                        var options = {};
                        options.url = "@Url.Content("~/ContributionsMonetary/BindTransactionTypesIEWeeklyContr/")";
                        options.type = "POST";
                        options.dataType = "json";
                        options.contentType = "application/json";
                        options.success = function (TranTypes) {
                            $("#divLoading").hide();
                            $("#lstTransTypeNonItemWeeklyExp").empty();
                            //$("#lstTransTypeNonItemWeeklyExp").append("<option>" + "- Select -" + "</option>");
                            for (var i = 0; i < TranTypes.length; i++) {
                                $("#lstTransTypeNonItemWeeklyExp").append("<option value='" + TranTypes[i].Value + "'>" + TranTypes[i].Text + "</option>");
                            }
                            if (TranTypes.length >= 1) {
                                // Show TransactionType for Non-Itemized transactions.
                                $("#divTransactionTypeNonItemWeeklyExp").show();

                                // FULL THE SESSION VALUES.
                                sessionStorage.setItem("lstTransactionTypeNonItem", $("#lstTransTypeNonItemWeeklyExp option:selected").val());
                                sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesFrom").val());
                                if ($("#lstElectionType option:selected").val() == "6") {
                                    sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
                                }
                                else {
                                    sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
                                }
                                SetCommonSessionStorageValues();
                                //Unique storage.
                                sessionStorage.setItem("CountyId", $("#lstUCCounty option:selected").val());

                                // DIRECTLY CALL THE PAGE WITHOUT SHOWING DROPDOWN FOR ONE VALUE SELECT
                                SetHeaderAndNewWindowLocationHref("Expenditure Payments", "@Url.Content("~/NonItemIE24HourPIDAExpenditureSchedF/NonItemIE24HourPIDAExpenditureSchedF/")");
                            }
                            else {
                                // Hide TransactionType for Non-Itemized transactions.
                                $("#divTransactionTypeNonItemWeeklyExp").hide();
                            }
                        };
                        options.error = function () {
                            $("#divLoading").hide();
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                        };
                        $.ajax(options).always(function () {
                            // HIDE THE TRANSACTIONS TYPE EITHER RECORDS EXISTS OR NOT.
                            $("#divTransactionType").hide();
                        });

                    }
                    else if (selectedlstDisclosureType == "6") { // Non-Itemized Campaign Material.
                        // HIDE THE TRANSACTIONS TYPE EITHER RECORDS EXISTS OR NOT.
                        $("#divTransactionType").hide();
                        $("#divTransactionTypeNonItemWeeklyExp").hide();

                        // FULL THE SESSION VALUES.
                        sessionStorage.setItem("lstTransactionTypeNonItem", $("#lstTransTypeNonItemWeeklyExp option:selected").val());
                        sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesTo").val());
                        sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesFrom").val());
                        SetCommonSessionStorageValues();
                        //Unique storage.
                        sessionStorage.setItem("DisclosurePeriod", $("#lstDisclosurePeriod option:selected").val());
                        sessionStorage.setItem("DisclosurePeriodText", $("#lstDisclosurePeriod option:selected").text());
                        //NEW LOGIC CHANGE ON 10 - DAY POST PRIMARY ON PRIMARY ELECTION
                        //-WE ARE NOT SHOWING FOR YEAR 2021 AND ABOVE THE 10 - DAY POST PRIMARY IN DISCLOSURE PERIOD DROPDOWN.
                        //WE ARE NOT CHANGING FOR YEAR 2020 AND BELOW NO CHANGES.
                        sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
                        sessionStorage.setItem("lstFilingDate", $("#lstFilingDate option:selected").val());

                        // DIRECTLY CALL THE PAGE WITHOUT SHOWING DROPDOWN FOR ONE VALUE SELECT
                        SetHeaderAndNewWindowLocationHref("Campaign Material", "@Url.Content("~/NonItemCampaignMaterial/NonItemCampaignMaterial/")");
                    }

                }
            }
            else {
                $("#divShowHideHelp").hide();

                var selectedlstDisclosureType = $("#lstDisclosureType option:selected").val().toString();

                if (selectedlstDisclosureType == "1") { // Itemized
                    $("#divTransactionType").show();
                    $("#lstTransactionType").focus();
                    $("#divLoading").hide();
                }
                else {
                    $("#divTransactionType").hide();
                }

                // NON-TEIMZED TRANSACTIONS
                if (selectedlstDisclosureType == "3") { //In-Lieu-Of Statement
                    SetCommonSessionStorageValues();
                    //Unique storage.
                    sessionStorage.setItem("DisclosurePeriod", $("#lstDisclosurePeriod option:selected").val());
                    sessionStorage.setItem("DisclosurePeriodText", $("#lstDisclosurePeriod option:selected").text());
                    sessionStorage.setItem("CountyId", $("#lstUCCounty option:selected").val());
                    sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesFrom").val());
                    if ($("#lstElectionType option:selected").val() == "6") {
                        sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
                    }
                    else {
                        sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
                    }
                    sessionStorage.setItem("lstFilingDate", $("#lstFilingDate option:selected").val());
                    sessionStorage.setItem("lstResigTermType", $("#lstResigTermType option:selected").val());

                    // Transfer to In-Lieu-Of Statement Page
                    SetHeaderAndNewWindowLocationHref("In-Lieu-Of Statement", "@Url.Content("~/InLieuOfStatement/InLieuOfStatement/")");
                }
                else if (selectedlstDisclosureType == "2") { // No Activity

                    $("#divUC_InLieuOfStatements").hide();
                    $("#divUC_24HourNotice").hide();
                    $("#divUC_IndependentExpenditure").hide();
                    $("#divUC_NoActivityReport").show();
                    $("#divUC_NoticeofNonParticipation").hide();

                    $("#divUC_NoActivityReport").show();
                }
                else if (selectedlstDisclosureType == "4") { // 24-Hour Notice

                    // Bind Transaction Type for 24-Hour Notice.
                    var options = {};
                    options.url = "@Url.Content("~/ContributionsMonetary/BindTransactionTypes24HNotice/")";
                    options.type = "POST";
                    options.dataType = "json";
                    options.contentType = "application/json";
                    options.success = function (TranTypes) {
                        $("#lstTransactionTypeNonItem").empty();
                        $("#lstTransactionTypeNonItem").append("<option>" + "- Select -" + "</option>");
                        for (var i = 0; i < TranTypes.length; i++) {
                            $("#lstTransactionTypeNonItem").append("<option value='" + TranTypes[i].Value + "'>" + TranTypes[i].Text + "</option>");
                        }
                        if (TranTypes.length > 1) {
                            // Show TransactionType for Non-Itemized transactions.
                            $("#divTransactionTypeNonItemized").show();
                            $("#divTransactionTypeNonItemized").focus();
                        }
                        else {
                            // Hide TransactionType for Non-Itemized transactions.
                            $("#divTransactionTypeNonItemized").hide();
                        }
                    };
                    options.error = function () {
                        ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                    };
                    $.ajax(options).always(function () {
                        $("#divLoading").hide();
                    });
                }
                else if (selectedlstDisclosureType == "5") { // Notice of Non-Participation
                    SetCommonSessionStorageValues();
                    //Unique storage.
                    sessionStorage.setItem("DisclosurePeriod", $("#lstDisclosurePeriod option:selected").val());
                    sessionStorage.setItem("DisclosurePeriodText", $("#lstDisclosurePeriod option:selected").text());
                    sessionStorage.setItem("CountyId", $("#lstUCCounty option:selected").val());

                    // Transfer to Notice of Non-Participation Page
                    SetHeaderAndNewWindowLocationHref("Notice of Non-Participation", "@Url.Content("~/NoticeOfNonParticipation/NoticeOfNonParticipation/")");
                }
                else if (selectedlstDisclosureType == "7") { // Independent Expenditure - Weekly Contribution

                    // Bind Transaction Type for 24-Hour Notice.
                    var options = {};
                    options.url = "@Url.Content("~/ContributionsMonetary/BindTransactionTypes24HNotice/")";
                    options.type = "POST";
                    options.dataType = "json";
                    options.contentType = "application/json";
                    options.success = function (TranTypes) {
                        $("#lstTransactionTypeNonItem").empty();
                        $("#lstTransactionTypeNonItem").append("<option>" + "- Select -" + "</option>");
                        for (var i = 0; i < TranTypes.length; i++) {
                            $("#lstTransactionTypeNonItem").append("<option value='" + TranTypes[i].Value + "'>" + TranTypes[i].Text + "</option>");
                        }
                        if (TranTypes.length > 1) {
                            // Show TransactionType for Non-Itemized transactions.
                            $("#divTransactionTypeNonItemized").show();
                            $("#divTransactionTypeNonItemized").focus();
                        }
                        else {
                            // Hide TransactionType for Non-Itemized transactions.
                            $("#divTransactionTypeNonItemized").hide();
                        }
                    };
                    options.error = function () {
                        ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                    };
                    $.ajax(options).always(function () {
                        $("#divLoading").hide();
                    });
                }
                else if (selectedlstDisclosureType == "14") { // Public Campaign Finance - Weekly Claim Submission

                    // Bind Transaction Type for IE-WEEKLY CONTRIBTUIONS.
                    var options = {};
                    options.url = "@Url.Content("~/ContributionsMonetary/GetTransactionTypesForWeeklyClaim/")";
                    options.type = "POST";
                    options.dataType = "json";
                    options.contentType = "application/json";
                    options.success = function (TranTypes) {
                        $("#divLoading").hide();
                        $("#lstTransactionTypeNonItem").empty();
                        for (var i = 0; i < TranTypes.length; i++) {
                            $("#lstTransactionTypeNonItem").append("<option value='" + TranTypes[i].Value + "'>" + TranTypes[i].Text + "</option>");
                        }
                        if (TranTypes.length >= 1) {
                            // Show TransactionType for Non-Itemized transactions.
                            $("#divTransactionTypeNonItemized").show();
                            $("#divTransactionTypeNonItemized").focus();
                            sessionStorage.setItem("lstTransactionTypeNonItem", $("#lstTransactionTypeNonItem option:selected").val());
                            sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
                            SetCommonSessionStorageValues();
                            //Unique storage.
                            sessionStorage.setItem("lstFilingDate", $("#lstFilingDate option:selected").val());
                            sessionStorage.setItem("lstResigTermType", $("#lstResigTermType option:selected").val());

                            $("#divTransactionTypeNonItemized").show();
                            var selectedlstTransactionTypeNonItemData = $("#lstTransactionTypeNonItem option:selected").val().toString();
                            if (selectedlstTransactionTypeNonItemData == "1") { // SCHEDULE - A
                                SetHeaderAndNewWindowLocationHref("Monetary Contributions Received From Individual & Partnerships", "@Url.Content("~/WeeklyClaimSubmission/WeeklyClaimSubmission/")");
                            }
                        }
                        else {
                            // Hide TransactionType for Non-Itemized transactions.
                            $("#divTransactionTypeNonItemized").hide();
                        }
                    };
                    options.error = function () {
                        $("#divLoading").hide();
                        ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                    };
                    $.ajax(options).always(function () {
                        // HIDE THE TRANSACTIONS TYPE EITHER RECORDS EXISTS OR NOT.
                        $("#divTransactionType").hide();
                    });
                }
                else if (selectedlstDisclosureType == "8") { // Independent Expenditure - 24 Hour Contribution

                    // Bind Transaction Type for 24-Hour Notice.
                    var options = {};
                    options.url = "@Url.Content("~/ContributionsMonetary/BindTransactionTypes24HContribution/")";
                    options.type = "POST";
                    options.dataType = "json";
                    options.contentType = "application/json";
                    options.success = function (TranTypes) {
                        $("#lstTransactionTypeNonItem").empty();
                        $("#lstTransactionTypeNonItem").append("<option>" + "- Select -" + "</option>");
                        for (var i = 0; i < TranTypes.length; i++) {
                            $("#lstTransactionTypeNonItem").append("<option value='" + TranTypes[i].Value + "'>" + TranTypes[i].Text + "</option>");
                        }
                        if (TranTypes.length > 1) {
                            // Show TransactionType for Non-Itemized transactions.
                            $("#divTransactionTypeNonItemized").show();
                            $("#divTransactionTypeNonItemized").focus();
                        }
                        else {
                            // Hide TransactionType for Non-Itemized transactions.
                            $("#divTransactionTypeNonItemized").hide();
                        }
                    };
                    options.error = function () {
                        ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                    };
                    $.ajax(options).always(function () {
                        $("#divLoading").hide();
                    });;
                }
                else if (selectedlstDisclosureType == "9") { // Independent Expenditure - Weekly Expenditure

                    $(".clsApplyForTransIE").hide();

                    // Bind Transaction Type for 24-Hour Notice.
                    var options = {};
                    options.url = "@Url.Content("~/ContributionsMonetary/BindTransactionTypesIEWeeklyContr/")";
                    options.type = "POST";
                    options.dataType = "json";
                    options.contentType = "application/json";
                    options.success = function (TranTypes) {
                        $("#divLoading").hide();
                        $("#lstTransTypeNonItemWeeklyExp").empty();
                        for (var i = 0; i < TranTypes.length; i++) {
                            $("#lstTransTypeNonItemWeeklyExp").append("<option value='" + TranTypes[i].Value + "'>" + TranTypes[i].Text + "</option>");
                        }
                        if (TranTypes.length >= 1) {
                            // Show TransactionType for Non-Itemized transactions.
                            $("#divTransactionTypeNonItemWeeklyExp").show();

                            // FULL THE SESSION VALUES.
                            sessionStorage.setItem("lstTransactionTypeNonItem", $("#lstTransTypeNonItemWeeklyExp option:selected").val());
                            sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
                            SetCommonSessionStorageValues();
                            //Unique storage.
                            sessionStorage.setItem("lstFilingDate", $("#lstFilingDate option:selected").val());
                            sessionStorage.setItem("lstResigTermType", $("#lstResigTermType option:selected").val());

                            // DIRECTLY CALL THE PAGE WITHOUT SHOWING DROPDOWN FOR ONE VALUE SELECT
                            SetHeaderAndNewWindowLocationHref("Expenditure Payments", "@Url.Content("~/NonItemIEWeeklyExpenditureSchedF/NonItemIEWeeklyExpenditureSchedF/")");
                        }
                        else {
                            // Hide TransactionType for Non-Itemized transactions.
                            $("#divTransactionTypeNonItemWeeklyExp").hide();
                        }
                    };
                    options.error = function () {
                        $("#divLoading").hide();
                        ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                    };
                    $.ajax(options);

                }
                else if (selectedlstDisclosureType == "10") { // Independent Expenditure - Weekly Liabilities Incurred

                    $(".clsApplyForTransIE").hide();

                    // Bind Transaction Type for IE Weekly Liability Incurred.
                    var options = {};
                    options.url = "@Url.Content("~/ContributionsMonetary/BindTransactionTypesIEWeeklyLiabIncur/")";
                    options.type = "POST";
                    options.dataType = "json";
                    options.contentType = "application/json";
                    options.success = function (TranTypes) {
                        $("#divLoading").hide();
                        $("#lstTransTypeNonItemWeeklyExp").empty();
                        for (var i = 0; i < TranTypes.length; i++) {
                            $("#lstTransTypeNonItemWeeklyExp").append("<option value='" + TranTypes[i].Value + "'>" + TranTypes[i].Text + "</option>");
                        }
                        if (TranTypes.length >= 1) {
                            // Show TransactionType for Non-Itemized transactions.
                            $("#divTransactionTypeNonItemWeeklyExp").show();

                            // FULL THE SESSION VALUES.
                            sessionStorage.setItem("lstTransactionTypeNonItem", $("#lstTransTypeNonItemWeeklyExp option:selected").val());
                            sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
                            SetCommonSessionStorageValues();
                            //Unique storage.
                            sessionStorage.setItem("lstFilingDate", $("#lstFilingDate option:selected").val());
                            sessionStorage.setItem("lstResigTermType", $("#lstResigTermType option:selected").val());

                            // DIRECTLY CALL THE PAGE WITHOUT SHOWING DROPDOWN FOR ONE VALUE SELECT
                            SetHeaderAndNewWindowLocationHref("Outstanding Liabilities/Loans", "@Url.Content("~/NonItemIEWeeklyLiabilityIncurredSchedN/NonItemIEWeeklyLiabilityIncurredSchedN/")");
                        }
                        else {
                            // Hide TransactionType for Non-Itemized transactions.
                            $("#divTransactionTypeNonItemWeeklyExp").hide();
                        }
                    };
                    options.error = function () {
                        $("#divLoading").hide();
                        ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                    };
                    $.ajax(options);

                }
                else if (selectedlstDisclosureType == "11") { // Independent Expenditure - 24 Hour Expenditure

                    $(".clsApplyForTransIE").hide();
                    $("#divLoading").show();//The next page may load automatically.
                    // Bind Transaction Type for 24-Hour Notice.
                    var options = {};
                    options.url = "@Url.Content("~/ContributionsMonetary/BindTransactionTypesIEWeeklyContr/")";
                    options.type = "POST";
                    options.dataType = "json";
                    options.contentType = "application/json";
                    options.success = function (TranTypes) {
                        $("#lstTransTypeNonItemWeeklyExp").empty();

                        for (var i = 0; i < TranTypes.length; i++) {
                            $("#lstTransTypeNonItemWeeklyExp").append("<option value='" + TranTypes[i].Value + "'>" + TranTypes[i].Text + "</option>");
                        }
                        if (TranTypes.length >= 1) {
                            // Show TransactionType for Non-Itemized transactions.
                            $("#divTransactionTypeNonItemWeeklyExp").show();

                            // FULL THE SESSION VALUES.
                            sessionStorage.setItem("lstTransactionTypeNonItem", $("#lstTransTypeNonItemWeeklyExp option:selected").val());
                            sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesFrom").val());
                            if ($("#lstElectionType option:selected").val() == "6") {
                                sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
                            }
                            else {
                                sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
                            }
                            SetCommonSessionStorageValues();

                            // DIRECTLY CALL THE PAGE WITHOUT SHOWING DROPDOWN FOR ONE VALUE SELECT
                            SetHeaderAndNewWindowLocationHref("Expenditure Payments", "@Url.Content("~/NonItemIE24HourExpenditureSchedF/NonItemIE24HourExpenditureSchedF/")");
                        }
                        else {
                            $("#divLoading").hide();
                            // Hide TransactionType for Non-Itemized transactions.
                            $("#divTransactionTypeNonItemWeeklyExp").hide();
                        }
                    };
                    options.error = function () {
                        $("#divLoading").hide();
                        ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                    };
                    $.ajax(options).fail(function () {
                        $("#divLoading").hide();
                    });

                }
                else if (selectedlstDisclosureType == "12") { // Independent Expenditure - Weekly Expenditure - PIDA

                    $(".clsApplyForTransIE").hide();

                    // Bind Transaction Type for 24-Hour Notice.
                    var options = {};
                    options.url = "@Url.Content("~/ContributionsMonetary/BindTransactionTypesIEWeeklyContr/")";
                    options.type = "POST";
                    options.dataType = "json";
                    options.contentType = "application/json";
                    options.success = function (TranTypes) {
                        $("#divLoading").hide();
                        $("#lstTransTypeNonItemWeeklyExp").empty();
                        for (var i = 0; i < TranTypes.length; i++) {
                            $("#lstTransTypeNonItemWeeklyExp").append("<option value='" + TranTypes[i].Value + "'>" + TranTypes[i].Text + "</option>");
                        }
                        if (TranTypes.length >= 1) {
                            // Show TransactionType for Non-Itemized transactions.
                            $("#divTransactionTypeNonItemWeeklyExp").show();
                            // FULL THE SESSION VALUES.
                            sessionStorage.setItem("lstTransactionTypeNonItem", $("#lstTransTypeNonItemWeeklyExp option:selected").val());
                            sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
                            SetCommonSessionStorageValues();
                            //Unique storage.
                            sessionStorage.setItem("lstFilingDate", $("#lstFilingDate option:selected").val());
                            sessionStorage.setItem("lstResigTermType", $("#lstResigTermType option:selected").val());

                            // DIRECTLY CALL THE PAGE WITHOUT SHOWING DROPDOWN FOR ONE VALUE SELECT
                            SetHeaderAndNewWindowLocationHref("Expenditure Payments", "@Url.Content("~/NonItemIEWeeklyPIDAExpenditureSchedF/NonItemIEWeeklyPIDAExpenditureSchedF/")");
                        }
                        else {
                            // Hide TransactionType for Non-Itemized transactions.
                            $("#divTransactionTypeNonItemWeeklyExp").hide();
                        }
                    };
                    options.error = function () {
                        $("#divLoading").hide();
                        ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                    };
                    $.ajax(options);

                }
                else if (selectedlstDisclosureType == "13") { // Independent Expenditure - 24 Hour Expenditure - PIDA

                    $(".clsApplyForTransIE").hide();

                    // Bind Transaction Type for 24-Hour Notice.
                    var options = {};
                    options.url = "@Url.Content("~/ContributionsMonetary/BindTransactionTypesIEWeeklyContr/")";
                    options.type = "POST";
                    options.dataType = "json";
                    options.contentType = "application/json";
                    options.success = function (TranTypes) {
                        $("#divLoading").hide();
                        $("#lstTransTypeNonItemWeeklyExp").empty();
                        for (var i = 0; i < TranTypes.length; i++) {
                            $("#lstTransTypeNonItemWeeklyExp").append("<option value='" + TranTypes[i].Value + "'>" + TranTypes[i].Text + "</option>");
                        }
                        if (TranTypes.length >= 1) {
                            // Show TransactionType for Non-Itemized transactions.
                            $("#divTransactionTypeNonItemWeeklyExp").show();

                            // FULL THE SESSION VALUES.
                            sessionStorage.setItem("lstTransactionTypeNonItem", $("#lstTransTypeNonItemWeeklyExp option:selected").val());
                            sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesFrom").val());
                            if ($("#lstElectionType option:selected").val() == "6") {
                                sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
                            }
                            else {
                                sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
                            }
                            SetCommonSessionStorageValues();

                            // DIRECTLY CALL THE PAGE WITHOUT SHOWING DROPDOWN FOR ONE VALUE SELECT
                            SetHeaderAndNewWindowLocationHref("Expenditure Payments", "@Url.Content("~/NonItemIE24HourPIDAExpenditureSchedF/NonItemIE24HourPIDAExpenditureSchedF/")");
                        }
                        else {
                            // Hide TransactionType for Non-Itemized transactions.
                            $("#divTransactionTypeNonItemWeeklyExp").hide();
                        }
                    };
                    options.error = function () {
                        $("#divLoading").hide();
                        ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                    };
                    $.ajax(options);

                }
                else if (selectedlstDisclosureType == "6") { // Non-Itemized Campaign Material.
                    // HIDE THE TRANSACTIONS TYPE EITHER RECORDS EXISTS OR NOT.
                    $("#divTransactionType").hide();
                    $("#divTransactionTypeNonItemWeeklyExp").hide();

                    // FULL THE SESSION VALUES.
                    sessionStorage.setItem("lstTransactionTypeNonItem", $("#lstTransTypeNonItemWeeklyExp option:selected").val());
                    sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesTo").val());
                    sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesFrom").val());
                    SetCommonSessionStorageValues();
                    //Unique storage.
                    sessionStorage.setItem("DisclosurePeriod", $("#lstDisclosurePeriod option:selected").val());
                    sessionStorage.setItem("DisclosurePeriodText", $("#lstDisclosurePeriod option:selected").text());
                    //NEW LOGIC CHANGE ON 10 - DAY POST PRIMARY ON PRIMARY ELECTION
                    //-WE ARE NOT SHOWING FOR YEAR 2021 AND ABOVE THE 10 - DAY POST PRIMARY IN DISCLOSURE PERIOD DROPDOWN.
                    //WE ARE NOT CHANGING FOR YEAR 2020 AND BELOW NO CHANGES.
                    sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
                    sessionStorage.setItem("lstFilingDate", $("#lstFilingDate option:selected").val());

                    // DIRECTLY CALL THE PAGE WITHOUT SHOWING DROPDOWN FOR ONE VALUE SELECT
                    SetHeaderAndNewWindowLocationHref("Campaign Material", "@Url.Content("~/NonItemCampaignMaterial/NonItemCampaignMaterial/")");
                } else {
                    $("#divLoading").hide();
                }
            } // END END
        } // FUNCTION CLOSE // RESIGNATION/TERMINATION TYPE CHECKING EXISTS OR NOT IF EXISTS ITS DIFFERENT FROM DATABASE AND DORPDOWN OR NOT.

        // ITEMIZED IE TRANSACTIONS BUTTON CLOSE.
        $m("#btnOkItemizedIETrans").bind('click', function () {

            $("#divLoading").show();
            // ADD ITEMIZED IE TRANSACTIONS DATA.
            $.post("@Url.Content("~/ContributionsMonetary/AddItemizedIETransactions/")", {
                strElectionYearId: $("#lstElectionCycle option:selected").val(),
                strOfficeTypeId: $("#lstUCOfficeType option:selected").val(),
                strFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                strElectionTypeId: $("#lstElectionType option:selected").val(),
                strElectionDateId: $("#lstElectionDate option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtReportPeriodDatesTo: sessionStorage.getItem("FilingDate").toString(),
                txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
            }, function (results) {
                if (results) {
                    // CLOSE DIALOGBOX.
                    dialog_Itemized_IE_Trans.dialog("close");

                    // BIND THE DISCLOSURE TYPES.
                    BindLstTransactionTypeWithContributionsMonetaryGetTransactionTypeBind(true,true);

                    window.status = "Transaction(s) saved successfully";
                    ShowDialogBox('EFS', 'Transaction(s) saved successfully', 'Ok', '');
                }
                else {
                    // TO DO;
                }
            });
        });

        // ITEMIZED 24 Hours TRANSACTIONS BUTTON CLOSE.
        $m("#btnOk24Hours").bind('click', function () {

            $("#divLoading").show();
            // ADD ITEMIZED IE TRANSACTIONS DATA.
            $.post("@Url.Content("~/ContributionsMonetary/AddItemized24HoursTransactions/")", {
                strElectionYearId: $("#lstElectionCycle option:selected").val(),
                strOfficeTypeId: $("#lstUCOfficeType option:selected").val(),
                strFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                strElectionTypeId: $("#lstElectionType option:selected").val(),
                strElectionDateId: $("#lstElectionDate option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtReportPeriodDatesTo: sessionStorage.getItem("FilingDate").toString(),
                txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
            }, function (results) {
                if (results) {
                    // CLOSE DIALOGBOX.
                    dialog_Itemized_24Hours.dialog("close");

                    // BIND THE DISCLOSURE TYPES.
                    BindLstTransactionTypeWithContributionsMonetaryGetTransactionTypeBind(true, true);

                    window.status = "Transaction(s) saved successfully";
                    ShowDialogBox('EFS', 'Transaction(s) saved successfully', 'Ok', '');
                }
                else {
                    // TO DO;
                }
            });
        });

        // ITEMIZED IE TRANSACTIONS BUTTON CLOSE.
        $m("#btnOkWCS").bind('click', function () {

            $("#divLoading").show();
            // ADD ITEMIZED IE TRANSACTIONS DATA.
            $.post("@Url.Content("~/ContributionsMonetary/AddWeeklyClaimSubItemizedTrans/")", {
                strElectionYearId: $("#lstElectionCycle option:selected").val(),
                strOfficeTypeId: $("#lstUCOfficeType option:selected").val(),
                strFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                strElectionTypeId: $("#lstElectionType option:selected").val(),
                strElectionDateId: $("#lstElectionDate option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtReportPeriodDatesTo: sessionStorage.getItem("FilingDate").toString(),
                txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
            }, function (results) {
                if (results) {
                    // CLOSE DIALOGBOX.
                    dialog_Itemized_WCS.dialog("close");

                    // BIND THE DISCLOSURE TYPES.
                    BindLstTransactionTypeWithContributionsMonetaryGetTransactionTypeBind(true,true);

                    window.status = "Transaction(s) saved successfully";
                    ShowDialogBox('EFS', 'Transaction(s) saved successfully', 'Ok', '');
                }
            });
        });


        //Clear Button
        $(".clsCommonClear").bind('click', function () {

            // OTHER THAN OFF-CYCLE FILING DATE
            $("#lblReportPeriodDatesTo").text("* Filing Date");

            // RESIGNATION/TERMINATION NOT MANDAITORY OTHER THAN OFF-CYCLE
            $("#lblReasonforFiling").text("Resignation/Termination");

            $("#divFilingReason").show();

            $("#divFilingDateDropDown").hide();
            $("#divDisclosurePeriod").show();
            $("#divElectionDate").show();
            $("#divReportPeriodDates").show();
            $("#divReportPeriodDatesTo").show();
            $("#txtReportPeriodDatesTo").prop("disabled", true);
            $("#txtReportPeriodDatesFrom").prop("disabled", true);

            // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
            $("#divFilingDateOffCycle").hide();
            // HIDE TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
            $("#divReportPeriodDatesTo").show();

            //// REMOVE THE DATEPICKER DYNAMICALLY ADDED FOR OFF-CYCLE

            $("#txtReportPeriodDatesTo").addClass("txtWidth");
            $("#txtReportPeriodDatesTo").removeClass("txtWidthOffCycleFilingDate");


            var validator = $m("#ContributionsMonetaryForm").validate();
            validator.resetForm();  // clear out the validation errors
            $m("#ContributionsMonetaryForm")[0].reset();   // clear out the form data

            // Remove Disabled
            $("#lstElectionCycle").prop("disabled", false);
            $("#lstElectionType").prop("disabled", false);
            $("#lstElectionDate").prop("disabled", false);
            $("#lstDisclosureType").prop("disabled", false);
            $("#lstDisclosurePeriod").prop("disabled", false);
            $("#txtReportPeriodDatesFrom").prop("disabled", true);
            $("#txtReportPeriodDatesTo").prop("disabled", true);

            // DEFAULT DROPDOWNS.
            $("#lstElectionCycle")[0].selectedIndex = 0;
            $("#lstElectionType")[0].selectedIndex = 0;
            $("#lstElectionDate")[0].selectedIndex = 0;
            $("#lstDisclosureType")[0].selectedIndex = 0;
            $("#lstDisclosurePeriod")[0].selectedIndex = 0;
            $("#txtReportPeriodDatesFrom")[0].selectedIndex = 0;
            $("#txtReportPeriodDatesTo")[0].selectedIndex = 0;
            $("#lstResigTermType")[0].selectedIndex = 0;
            // DEFAULT DROPDOWNS.

            // ERROR CLEAR
            $m("label[for=txtReportPeriodDatesTo]").text('');
            $m("#txtReportPeriodDatesTo").removeClass("error");

            $m("label[for=lstResigTermType]").text('');
            $m("#lstResigTermType").removeClass("error");

            // Hide Transactions Types for Itemized and Non-Itemized.
            $("#divTransactionType").hide();
            $("#divTransactionTypeNonItemized").hide();
            $("#divTransactionTypeNonItemWeeklyExp").hide();

            // Clear the Headig for Filter.
            ClearBranding();

            $("#divShowHideHelp").show();//Accessibility: Show the #divShowHideHelp help on button clear.

            $("#lblReportPeriodDatesFrom").text("* Cut off Date");

            //==============================================================================================
            // FIRST TIME PAGE LOAD THEN LOAD ONLY SELECT IN DROPDOWNS IF NOT FROM FIRST TIME....
            // IF ITS COMING FROM ANY SCHEDULE TO MAIN PAGE THEN LOAD DEFAULT VALUES AND RETAIN THE VALUES.
            // FILER TYPE
            $("#lstUCOfficeType").empty();
            $("#lstUCOfficeType").append("<option>" + "- Select -" + "</option>");
            // ELECTION TYPE
            $("#lstElectionType").empty();
            $("#lstElectionType").append("<option>" + "- Select -" + "</option>");
            // ELECTION DATE
            $("#lstElectionDate").empty();
            $("#lstElectionDate").append("<option>" + "- Select -" + "</option>");
            // DISCLOSURE TYPE
            $("#lstDisclosureType").empty();
            $("#lstDisclosureType").append("<option>" + "- Select -" + "</option>");
            // DISCLOSURE PERIOD
            $("#lstDisclosurePeriod").empty();
            $("#lstDisclosurePeriod").append("<option>" + "- Select -" + "</option>");
            // RESIGNATION/TERMINATION
            $("#lstResigTermType").empty();
            $("#lstResigTermType").append("<option>" + "- Not Applicable -" + "</option>");
            // FIRST TIME PAGE LOAD THEN LOAD ONLY SELECT IN DROPDOWNS IF NOT FROM FIRST TIME....
            // IF ITS COMING FROM ANY SCHEDULE TO MAIN PAGE THEN LOAD DEFAULT VALUES AND RETAIN THE VALUES.
            //==============================================================================================

            // FOCUS ON FIRST DROPDOWN.
            $("#txtFilerID").focus();

        });

        // FILING DATE OFF-CYCLE CHANGE
        $("#lstFilingDate").change(function () {

            // CLEAR THE DATE FIELD.
            $("#txtNewFilingDate").val("");
            $("#txtNewFilingDate").blur();

            $('#divTransactionType').hide();

            $m("label[for=lstResigTermType]").text('');
            $m("#lstResigTermType").removeClass("error");

            if ($("#lstFilingDate option:selected").text().toString() != "- Select -") {

                if ($("#lstFilingDate option:selected").text().toString() == "- New Filing Date -") {

                    // OFF-CYCLE NEW FILING DATE
                    $("#lblReportPeriodDatesTo").text("* New Filing Date");

                    if ($("#lstDisclosureType option:selected").val().toString() == "7" || $("#lstDisclosureType option:selected").val().toString() == "10" || $("#lstDisclosureType option:selected").val().toString() == "9" || $("#lstDisclosureType option:selected").val().toString() == "2" || $("#lstDisclosureType option:selected").val().toString() == "3") { // CHANGED ON 07/07/2020 // ADDED IN - LIEU OF STATEMENT FOR PERIODIC AND OFF - CYCLE ADDED - 02 / 02 / 2021
                        $("#lblReasonforFiling").text("Resignation/Termination");
                    }
                    else {
                        $("#lblReasonforFiling").text("* Resignation/Termination");
                    }

                    $("#txtReportPeriodDatesTo").val("");
                    $("#txtReportPeriodDatesTo").blur();

                    $m("label[for=txtNewFilingDate]").text('');
                    $m("#txtNewFilingDate").removeClass("error");

                    // SHOW FILING DATE.
                    $("#divReportPeriodDatesTo").show();
                    // ALLOW USER TO ENTER FILING DATE WITH IN THE ELECTION YEAR.
                    $("#txtReportPeriodDatesTo").prop("disabled", false);

                    sessionStorage.setItem("ResgTermTypeFilingsId", "");

                    $("#lstResigTermType")[0].selectedIndex = 0;
                    $m("label[for=lstResigTermType]").text('');
                    $m("#lstResigTermType").removeClass("error");

                    // ======================================================================================================================================
                    // DATE VALIDATION FOR DATE RECEIVED FOR NON-ITEMIZED IE-WEEKLY CONTRIBUTION.
                    var electionYear = $("#lstElectionCycle option:selected").text().toString();

                    var fromDate = '01' + '/' + '01' + '/' + electionYear;
                    var toDate = '12' + '/' + '31' + '/' + electionYear;

                    sessionStorage.setItem("FromDateVal", fromDate.toString());
                    sessionStorage.setItem("ToDateVal", toDate.toString());
                    // DATE VALIDATION FOR DATE RECEIVED FOR NON-ITEMIZED IE-WEEKLY CONTRIBUTION.
                    // ======================================================================================================================================

                    // SET THE MIN DATE AND MAX DATE FOR DATE PICKER BASED ON REPORT YEAR SELECTION.
                    $m('#txtNewFilingDate').datepicker('option', {
                        minDate: new Date(sessionStorage.getItem("FromDateVal").toString()),
                        maxDate: new Date(sessionStorage.getItem("ToDateVal").toString())
                    });

                    // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
                    $("#divFilingDateOffCycle").show();
                    // HIDE TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
                    $("#divReportPeriodDatesTo").hide();

                    // BIND DEFAULT RESIGNATION/TERMINATION WHEN THEY CHOOSE NEW FILING DATE...
                    // NEW FILING DATE ALWAYS ITS NEW FILING SO NO NEED TO CHECK EXISTING RESIGNATION/TERMINATION.
                    // BIND DEFAULT VALUES THEN SET THE DATABASE VALUE.
                    BindLstResigTermTypeWithGetResgTermTypeData();
                }
                else {
                    if ($("#lstDisclosureType option:selected").val().toString() == "7" || $("#lstDisclosureType option:selected").val().toString() == "10" || $("#lstDisclosureType option:selected").val().toString() == "9" || $("#lstDisclosureType option:selected").val().toString() == "2" || $("#lstDisclosureType option:selected").val().toString() == "1" || $("#lstDisclosureType option:selected").val().toString() == "3") { // CHANGED ON 07/07/2020 // ADDED FOR ITEMIZED ITS NOT LOOKING RESIGNATION/TERMINATE TYPE FROM DATABASE. DEFECT - 2564 - SB. ADDED IN-LIEU OF STATEMENT FOR PERIODIC AND OFF-CYCLE ADDED - 02/02/2021

                        if ($("#lstElectionType option:selected").val().toString() == "6") {
                            // BIND THE RESIGNATION/TERMINATION EXISTING VALUE.
                            // BIND THE RESIGNATION/TERMINATION TYPE IF ALREADY EXISTS FILING....
                            // OTHER WISE BIND DEFAULT VALUES WITH SELECT OPTION.
                            $.post("@Url.Content("~/ContributionsMonetary/GetResgTermTypeExists/")", {
                                txtFilerId: $("#txtFilerID").val(),
                                lstElectionType: $("#lstElectionType option:selected").val(),
                                lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                                lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                                lstElectionCycleId: $("#lstElectionCycle option:selected").val(),
                                strElectionDateId: $("#lstElectionDate option:selected").val(),
                                strFilingDateOffCycle: $("#txtNewFilingDate").val(),
                                strFilingDate: $("#txtReportPeriodDatesTo").val(),
                                strFilingCategoryId: $("#lstDisclosureType option:selected").val(),
                                lstFilingDate: $("#lstFilingDate option:selected").text(),
                                lstUCMuncipality: $("#lstUCMuncipality").val()
                            }, function (results) {
                                // CHECK IF EXIST BIND THE VALUE IF NOT NO BINDING.
                                $.each(results, function (i, item) {

                                    // ADD SESSION FILINGS ID AND RESIGNATION TERMATION TYPE ID.
                                    sessionStorage.setItem("ResgTermTypeFilingsId", item.FilingsId.toString());
                                    sessionStorage.setItem("ResgTermTypeId", item.ResigTermTypeId.toString());

                                    if (item.FilingsId != "") {

                                        // IF EXIST BUT RESIGNATION/TERMINATION TYPE NULL THEN NOTHIG WILL SET.
                                        if (item.ResigTermTypeId != "") {

                                            // BIND DEFAULT VALUES THEN SET THE DATABASE VALUE.
                                            $.post("@Url.Content("~/ContributionsMonetary/GetResgTermTypeData/")", {
                                            }, function (results) {
                                                $("#lstResigTermType").empty();
                                                $("#lstResigTermType").append("<option>" + "- Not Applicable -" + "</option>");
                                                for (var i = 0; i < results.length; i++) {
                                                    $("#lstResigTermType").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                                                }

                                                // SET THE SESSION IF PREVIOUSLTY SET THE VALU
                                                sessionStorage.setItem("PreviousValueResgTerm", item.ResigTermTypeId.toString());

                                                // SET THE DEFAULT VALUE.
                                                $("#lstResigTermType option")
                                                    .filter(function () { return $.trim($(this).val()) == item.ResigTermTypeId.toString(); })
                                                    .attr("selected", "selected");

                                                $m("label[for=lstResigTermType]").text('');
                                                $m("#lstResigTermType").removeClass("error");
                                            });
                                        }
                                        else {
                                            // CHECKING LEGACY DATA IF FILING DOESN'T HAVE RESIGNATION/TERMINATION TYPE VALUE...
                                            // THEN WE ARE NOT MAKING MANDATORY FOR OFF-CYCLE USER WILL CONTINUE...WITH OUT REQUIRED....
                                            // THE RESIGNATION/TERMINATION TYPE NOT REQUIRED FOR LEGACY DATA IF NOT SET PRVIOUSLY....
                                            // FIXED ON 06.25.2020 -- BASIREDDY.
                                            $("#lblReasonforFiling").text("Resignation/Termination");

                                            // IF NOT EXISTS THEN IT WILL LOAD DEFAULT.
                                            BindLstResigTermTypeWithGetResgTermTypeData();
                                        }
                                    }
                                    else {
                                        // IF NOT EXISTS THEN IT WILL LOAD DEFAULT.
                                        BindLstResigTermTypeWithGetResgTermTypeData();
                                    }
                                });
                            });
                        }
                    }

                    // OTHER THAN OFF-CYCLE FILING DATE
                    $("#lblReportPeriodDatesTo").text("* Filing Date");

                    // HIDE FILING DATE.
                    // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
                    $("#divFilingDateOffCycle").hide();
                    // HIDE TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
                    $("#divReportPeriodDatesTo").hide();

                    $("#txtReportPeriodDatesTo").removeClass("datepicker");

                    $("#txtReportPeriodDatesTo").addClass("txtWidth");
                    $("#txtReportPeriodDatesTo").removeClass("txtWidthOffCycleFilingDate");

                    $("#txtReportPeriodDatesTo").val();
                    $("#txtReportPeriodDatesTo").blur();

                    $m("label[for=txtReportPeriodDatesTo]").text('');
                    $m("#txtReportPeriodDatesTo").removeClass("error");
                }
            }
            else {
                $("#lstResigTermType")[0].selectedIndex = 0;

                // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
                $("#divFilingDateOffCycle").hide();

                $("#lstResigTermType").empty();
                $("#lstResigTermType").append("<option>" + "- Not Applicable -" + "</option>");

                $m("label[for=lstResigTermType]").text('');
                $m("#lstResigTermType").removeClass("error");
            }
        });

        // Election Type Change
        $("#lstElectionType").bind('change', function (e) { //.change(function () {

            if ($("#lstElectionType option:selected").text().toString() != "- Select -") {

                // OTHER THAN OFF-CYCLE FILING DATE
                $("#lblReportPeriodDatesTo").text("* Filing Date");

                // Clear Branding.
                ClearBranding();

                // SET DEFAULT ELECTION DATE.
                $("#lstElectionDate").empty();
                $("#lstElectionDate").append("<option>" + "- Select -" + "</option>");

                // SET DEFAULT DISCLOSURE TYPE.
                $("#lstDisclosureType").empty();
                $("#lstDisclosureType").append("<option>" + "- Select -" + "</option>");

                // SET DEFAULT DISCLOSURE PERIOD.
                $("#lstDisclosurePeriod").empty();
                $("#lstDisclosurePeriod").append("<option>" + "- Select -" + "</option>");

                // SET FILING DATE CUT OFF DATE BLANK
                $("#txtReportPeriodDatesFrom").val("");
                $("#txtReportPeriodDatesTo").val("");

                // SET DEFAULT RESIGNATION/TERMINATION.
                $("#lstResigTermType").empty();
                $("#lstResigTermType").append("<option>" + "- Not Applicable -" + "</option>");

                $("#divDisclosurePeriod").show();
                $("#divReportPeriodDates").show();
                $("#divReportPeriodDatesTo").show();
                // Resignation/Termination
                $("#divFilingReason").show();

                $("#lstFilingDate").empty();
                $("#lstFilingDate").append("<option>" + "- Select -" + "</option>");
                $("#lstFilingDate")[0].selectedIndex = 0;

                // Clear Values.
                // RESIGNATION/TERMINATION NOT MANDAITORY OTHER THAN OFF-CYCLE
                $("#lblReasonforFiling").text("Resignation/Termination");

                // SHOW ELECTION DATE.
                $("#divElectionDate").show();

                // SHOW RESIGNATION/TERMINATION.
                $("#divFilingReason").show();

                $("#divDisclosurePeriod").show();
                $("#divFilingDateDropDown").hide();
                $("#divElectionDate").show();
                $("#divReportPeriodDates").show();
                $("#txtReportPeriodDatesTo").prop("disabled", true);
                $("#txtReportPeriodDatesFrom").prop("disabled", true);

                // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
                $("#divFilingDateOffCycle").hide();
                // HIDE TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
                $("#divReportPeriodDatesTo").show();

                $("#txtReportPeriodDatesTo").addClass("txtWidth");
                $("#txtReportPeriodDatesTo").removeClass("txtWidthOffCycleFilingDate");

                $("#lstResigTermType")[0].selectedIndex = 0;
                $("#lstFilingDate")[0].selectedIndex = 0;
                $("#lstDisclosureType")[0].selectedIndex = 0;
                $("#lstDisclosurePeriod")[0].selectedIndex = 0;
                $("#txtReportPeriodDatesFrom").val("");
                $("#txtReportPeriodDatesTo").val("");

                $m("label[for=lstDisclosureType]").text('');
                $m("#lstDisclosureType").removeClass("error");

                $m("label[for=lstElectionDate]").text('');
                $m("#lstElectionDate").removeClass("error");

                $m("label[for=lstDisclosurePeriod]").text('');
                $m("#lstDisclosurePeriod").removeClass("error");

                $m("label[for=lstResigTermType]").text('');
                $m("#lstResigTermType").removeClass("error");

                $m("label[for=lstFilingDate]").text('');
                $m("#lstFilingDate").removeClass("error");

                $m("label[for=txtReportPeriodDatesTo]").text('');
                $m("#txtReportPeriodDatesTo").removeClass("error");


                // GET OFF-CYCLE ELECTION TYPE
                var selectedElectionType = $("#lstElectionType option:selected").val().toString();


                if (selectedElectionType == "6") { // OFF-CYCLE ELECTION TYPE. // OFF-CYCLE.

                    // RESIGNATION/TERMINATION MANDATORY WHEN OFF-CYCLE.
                    $("#lblReasonforFiling").text("* Resignation/Termination");
                    // HIDE ELECTION DATE
                    $("#divElectionDate").hide();
                    // HIDE CUTT OF DATE
                    $("#divReportPeriodDates").hide();
                    // HIDE FILING DATE.
                    $("#divReportPeriodDatesTo").hide();

                    // Show Filing Date for Off Cycle
                    $("#divFilingDateDropDown").show();

                    // CLEAR ERROR MESSAGE.
                    $m("label[for=lstDisclosureType]").text('');
                    $m("#lstDisclosureType").removeClass("error");

                    $m("label[for=lstDisclosurePeriod]").text('');
                    $m("#lstDisclosurePeriod").removeClass("error");

                    var selectedElecYear = $("#lstElectionCycle option:selected").val();

                    $("#lstDisclosureType").empty();
                    $("#lstDisclosureType").append("<option>" + "- Select -" + "</option>");
                    // BIND DISCLOSURE TYPE.
                    var options = {};
                    options.url = "@Url.Content("~/ContributionsMonetary/GetDisclosureTypesData/")";
                    options.type = "POST";
                    options.data = JSON.stringify(
                        {
                            lstElectionType: $("#lstElectionType").val().toString()
                        });
                    options.dataType = "json";
                    options.contentType = "application/json";
                    options.success = function (results) {
                        for (var i = 0; i < results.length; i++) {
                            $("#lstDisclosureType").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                        }
                    };
                    options.error = function () {
                    };
                    $.ajax(options);
                    // DISCLOSURE TYPE END END END.

                    // BIND DISCLOSURE PERIOD.
                    // BIN DEFAULT SELECT.
                    $("#lstDisclosurePeriod").empty();
                    $("#lstDisclosurePeriod").append("<option>" + "- Select -" + "</option>");

                } // END END
                else if (selectedElectionType == "4") { // PERIODIC ELECTION TYPE.

                    // RESIGNATION/TERMINATION NOT MANDAITORY OTHER THAN OFF-CYCLE
                    $("#lblReasonforFiling").text("Resignation/Termination");

                    $("#divFilingDateDropDown").hide();
                    $("#divReportPeriodDates").show();
                    $("#txtReportPeriodDatesTo").prop("disabled", true);

                    $("#txtReportPeriodDatesTo").removeClass("datepicker");

                    $("#txtReportPeriodDatesTo").addClass("txtWidth");
                    $("#txtReportPeriodDatesTo").removeClass("txtWidthOffCycleFilingDate");

                    var selectedElecYear = $("#lstElectionCycle option:selected").val();

                    $("#lstDisclosureType").empty();
                    $("#lstDisclosureType").append("<option>" + "- Select -" + "</option>");
                    // BIND DISCLOSURE TYPE.
                    var options = {};
                    options.url = "@Url.Content("~/ContributionsMonetary/GetDisclosureTypesData/")";
                    options.type = "POST";
                    options.data = JSON.stringify(
                        {
                            lstElectionType: $("#lstElectionType").val().toString()
                        });
                    options.dataType = "json";
                    options.contentType = "application/json";
                    options.success = function (results) {
                        for (var i = 0; i < results.length; i++) {
                            $("#lstDisclosureType").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                        }
                    };
                    options.error = function () {
                    };
                    $.ajax(options);
                    // DISCLOSURE TYPE END END END.


                    // BIND ELECTION DATE FOR PERIOD ELECTION DATE ID HAVE TO INSERT WHEN ELECTION RECORD INSERT INTO ELECTION TABLE.
                    // FOR OFF CYCLE AND PERIODIC
                    $.post("@Url.Content("~/ContributionsMonetary/GetElectionDate/")", {
                        lstElectionCycle: $("#lstElectionCycle").val().toString(),
                        lstElectionType: $("#lstElectionType").val().toString(),
                        lstOfficeType: $("#lstUCOfficeType").val().toString(),
                        strCounty: $("#lstUCCounty option:selected").val(),
                        strMunicipality: $("#lstUCMuncipality option:selected").val()
                    }, function (electionDate) {
                        $("#lstElectionDate").empty();
                        for (var i = 0; i < electionDate.length; i++) {
                            //// Date Format
                            var eleDate = electionDate[i].Text.toString();
                            var MyDate = new Date(eleDate);
                            var MyDateString;
                            MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                                + ('0' + MyDate.getDate()).slice(-2) + '/'
                                + MyDate.getFullYear();
                            var dateFormat = MyDateString.toString();
                            // Date Format
                            $("#lstElectionDate").append("<option value='" + electionDate[i].Value + "'>" + dateFormat.toString() + "</option>");

                            // HIDE ELECTION DATE
                            $("#divElectionDate").hide();
                        }
                        if (electionDate.length.toString() < "1")
                            $("#lstElectionDate").append("<option>" + "- Select -" + "</option>");
                    });
                }
                else { // OTHER THAN OFF-CYCLE AND PERIOD IT WILL BIND THIS.

                    // RESIGNATION/TERMINATION NOT MANDAITORY OTHER THAN OFF-CYCLE
                    $("#lblReasonforFiling").text("Resignation/Termination");

                    $("#divFilingDateDropDown").hide();
                    $("#divElectionDate").show();
                    $("#divReportPeriodDates").show();
                    $("#txtReportPeriodDatesTo").prop("disabled", true);

                    //$("#txtReportPeriodDatesTo").removeClass("datepicker");

                    $("#txtReportPeriodDatesTo").addClass("txtWidth");
                    $("#txtReportPeriodDatesTo").removeClass("txtWidthOffCycleFilingDate");

                    var selectedElecYear = $("#lstElectionCycle option:selected").val();

                    if (selectedElectionType == "8") { // 'PRIMARY AND GENERAL' CAN FILE ONLY NOTICE OF NON-PARTICIPATION.
                        // BIN DISCLOSURE TYPE FOR PRIMARY AND GENERAL ELECTION.
                        var options = {};
                        options.url = "@Url.Content("~/ContributionsMonetary/DisclosureTypesPrimAndGenNoticeOfNP/")";
                        options.type = "POST";
                        options.data = JSON.stringify(
                            {
                                lstElectionType: $("#lstElectionType").val().toString()
                            });
                        options.dataType = "json";
                        options.contentType = "application/json";
                        options.success = function (results) {
                            $("#lstDisclosureType").empty();

                            for (var i = 0; i < results.length; i++) {
                                $("#lstDisclosureType").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                            }

                            if (results.length.toString() == "1") {
                                $("#lstDisclosureType")[0].selectedIndex = 0;
                            }
                            // Hide these.
                            $("#divDisclosurePeriod").hide();
                            $("#divReportPeriodDates").hide();
                            $("#divReportPeriodDatesTo").hide();
                            // Resignation/Termination
                            $("#divFilingReason").hide();
                        };
                        options.error = function () {
                        };
                        $.ajax(options);
                        // BIN DISCLOSURE TYPE PRIMARY AND GENERAL ELECTION.

                        // HIDE ELECTION DATE.
                        $("#divElectionDate").hide();
                    }
                    // BIND ELECTION DATE
                    var options = {};
                    options.url = "@Url.Content("~/ContributionsMonetary/GetElectionDate/")";
                    options.type = "POST";
                    options.data = JSON.stringify(
                        {
                            lstElectionCycle: $("#lstElectionCycle").val().toString(),
                            lstElectionType: $("#lstElectionType").val().toString(),
                            lstOfficeType: $("#lstUCOfficeType").val().toString(),
                            strCounty: $("#lstUCCounty option:selected").val(),
                            strMunicipality: $("#lstUCMuncipality option:selected").val()
                        });
                    options.dataType = "json";
                    options.contentType = "application/json";
                    options.success = function (electionDate) {
                        if (electionDate.length.toString() == "1") {
                            $("#lstElectionDate").empty();
                        }
                        else {
                            $("#lstElectionDate").empty();
                            $("#lstElectionDate").append("<option>" + "- Select -" + "</option>");
                        }
                        for (var i = 0; i < electionDate.length; i++) {
                            //// Date Format
                            var eleDate = electionDate[i].Text.toString();
                            var MyDate = new Date(eleDate);
                            var MyDateString;
                            MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                                + ('0' + MyDate.getDate()).slice(-2) + '/'
                                + MyDate.getFullYear();
                            var dateFormat = MyDateString.toString();
                            // Date Format
                            $("#lstElectionDate").append("<option value='" + electionDate[i].Value + "'>" + dateFormat.toString() + "</option>");
                        }
                        if (sessionStorage.getItem("TransactionTypeId") != null) {
                            $('#lstElectionDate').val(sessionStorage.getItem("ElectionDate").toString());
                        }

                        if (electionDate.length.toString() == "1") {
                            $("#lstElectionDate")[0].selectedIndex = 0;

                            if (selectedElectionType == "1") { // SPECIAL ELECTION NO NOTICE-OF NON PARTICIPATION.

                                // BINd DISCLOSURE TYPE FOR SPECIAL ELECTION.
                                var options = {};
                                options.url = "@Url.Content("~/ContributionsMonetary/GetDisclosureTypeSpecial/")";
                                options.type = "POST";
                                options.data = JSON.stringify(
                                    {
                                        lstElectionType: $("#lstElectionType").val().toString()
                                    });
                                options.dataType = "json";
                                options.contentType = "application/json";
                                options.success = function (results) {
                                    $("#lstDisclosureType").empty();
                                    $("#lstDisclosureType").append("<option>" + "- Select -" + "</option>");
                                    for (var i = 0; i < results.length; i++) {
                                        $("#lstDisclosureType").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                                    }
                                };
                                options.error = function () {
                                };
                                $.ajax(options);
                                // BIN DISCLOSURE TYPE FOR SPECIAL ELECTION.
                            }
                            else {
                                // BIND DISCLOSURE TYPE.
                                //Makes call to "~/ContributionsMonetary/GetDisclosureTypesDefault" and sets options to lstDisclosureType
                                BindLstElectionTypeWithGetDisclosureTypesDefault();
                                // DISCLOSURE TYPE END END END.
                            }
                        }
                        else {
                            $("#lstElectionDate")[0].selectedIndex = 0;
                        }
                    };
                    options.error = function () {

                    };
                    $.ajax(options);
                }

                $('#divTransactionType').hide();
                $("#divTransactionTypeNonItemized").hide();
                $("#divTransactionTypeNonItemWeeklyExp").hide();

                // Clear Branding.
                ClearBranding();

            }
            else {

                // Clear Branding.
                ClearBranding();

                // SET DEFAULT ELECTION DATE.
                $("#lstElectionDate").empty();
                $("#lstElectionDate").append("<option>" + "- Select -" + "</option>");

                // SET DEFAULT DISCLOSURE TYPE.
                $("#lstDisclosureType").empty();
                $("#lstDisclosureType").append("<option>" + "- Select -" + "</option>");

                // SET DEFAULT DISCLOSURE PERIOD.
                $("#lstDisclosurePeriod").empty();
                $("#lstDisclosurePeriod").append("<option>" + "- Select -" + "</option>");

                // SET FILING DATE CUT OFF DATE BLANK
                $("#txtReportPeriodDatesFrom").val("");
                $("#txtReportPeriodDatesTo").val("");

                // SET DEFAULT RESIGNATION/TERMINATION.
                $("#lstResigTermType").empty();
                $("#lstResigTermType").append("<option>" + "- Not Applicable -" + "</option>");

                $("#divDisclosurePeriod").show();
                $("#divReportPeriodDates").show();
                $("#divReportPeriodDatesTo").show();
                // Resignation/Termination
                $("#divFilingReason").show();
                // FILING DATE DROPDOWN.
                $("#divFilingDateDropDown").hide();
                $("#lstFilingDate").empty();
                $("#lstFilingDate").append("<option>" + "- Select -" + "</option>");
                $("#lstFilingDate").append("<option>" + "- New Filing Date -" + "</option>");
                $("#lstFilingDate")[0].selectedIndex = 0;

                // Clear Branding.
                ClearBranding();
            }

            $('#divTransactionType').hide();
            $("#divTransactionTypeNonItemized").hide();
            $("#divTransactionTypeNonItemWeeklyExp").hide();
        });

        //Contribution Name Selected index changed
        $("#lstDisclosurePeriod").change(function () {

            if ($("#lstDisclosurePeriod option:selected").text() != "- Select -") {

                if ($("#lstDisclosurePeriod option:selected").text() == "Off Cycle") {
                    $("#txtReportPeriodDatesTo").prop("disabled", false);
                }
                else {
                    $("#txtReportPeriodDatesTo").prop("disabled", true);
                }
                $("#txtReportPeriodDatesFrom").prop("disabled", true);


                // GET FILING DATE & CUT OFF DATE.
                var options = {};
                options.url = "@Url.Content("~/ContributionsMonetary/GetFilingCutOffDate/")";
                options.type = "POST";
                options.data = JSON.stringify(
                    {
                        lstElectionCycle: $("#lstElectionCycle option:selected").val().toString(),
                        lstElectionType: $("#lstElectionType").val().toString(),
                        lstUCOfficeType: $("#lstUCOfficeType option:selected").val().toString(),
                        lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val().toString(),
                        lstElectionDateId: $("#lstElectionDate option:selected").val(),
                    });
                options.dataType = "json";
                options.contentType = "application/json";
                options.success = function (results) {

                    for (var i = 0; i < results.length; i++) {
                        if (results[i].CutOffDate != null)
                            $("#txtReportPeriodDatesFrom").val(results[i].CutOffDate.toString());
                        if (results[i].FilingDueDate != null)
                            $("#txtReportPeriodDatesTo").val(results[i].FilingDueDate.toString());
                    }

                    // ONCE FILL THE FILING DATE THEN CALL THE RESIGNATION/TERMINATION VALUE.
                    // BIND THE RESIGNATION/TERMINATION TYPE IF ALREADY EXISTS FILING....
                    // OTHER WISE BIND DEFAULT VALUES WITH SELECT OPTION.
                    $.post("@Url.Content("~/ContributionsMonetary/GetResgTermTypeExists/")", {
                        txtFilerId: $("#txtFilerID").val(),
                        lstElectionType: $("#lstElectionType option:selected").val(),
                        lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                        lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                        lstElectionCycleId: $("#lstElectionCycle option:selected").val(),
                        strElectionDateId: $("#lstElectionDate option:selected").val(),
                        strFilingDateOffCycle: $("#txtNewFilingDate").val(),
                        strFilingDate: $("#txtReportPeriodDatesTo").val(),
                        strFilingCategoryId: $("#lstDisclosureType option:selected").val(),
                        lstFilingDate: $("#lstFilingDate option:selected").text(),
                        lstUCMuncipality: $("#lstUCMuncipality").val()
                    }, function (results) {
                        // CHECK IF EXIST BIND THE VALUE IF NOT NO BINDING.
                        $.each(results, function (i, item) {

                            // ADD SESSION FILINGS ID AND RESIGNATION TERMATION TYPE ID.
                            sessionStorage.setItem("ResgTermTypeFilingsId", item.FilingsId.toString());
                            sessionStorage.setItem("ResgTermTypeId", item.ResigTermTypeId.toString());

                            if (item.FilingsId != "") {

                                // IF EXIST BUT RESIGNATION/TERMINATION TYPE NULL THEN NOTHIG WILL SET.
                                if (item.ResigTermTypeId != "") {

                                    // BIND DEFAULT VALUES THEN SET THE DATABASE VALUE.
                                    $.post("@Url.Content("~/ContributionsMonetary/GetResgTermTypeData/")", {
                                    }, function (results) {
                                        $("#lstResigTermType").empty();
                                        $("#lstResigTermType").append("<option>" + "- Not Applicable -" + "</option>");
                                        for (var i = 0; i < results.length; i++) {
                                            $("#lstResigTermType").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                                        }

                                        // SET THE SESSION IF PREVIOUSLTY SET THE VALU
                                        sessionStorage.setItem("PreviousValueResgTerm", item.ResigTermTypeId.toString());

                                        // SET THE DEFAULT VALUE.
                                        $("#lstResigTermType option")
                                            .filter(function () { return $.trim($(this).val()) == item.ResigTermTypeId.toString(); })
                                            .attr("selected", "selected");
                                    });
                                }
                                else {
                                    // IF NOT EXISTS THEN IT WILL LOAD DEFAULT.
                                    BindLstResigTermTypeWithGetResgTermTypeData();
                                }
                            }
                            else {
                                // IF NOT EXISTS THEN IT WILL LOAD DEFAULT.
                                BindLstResigTermTypeWithGetResgTermTypeData()
                            }
                        });
                    });

                };
                options.error = function () {
                };
                $.ajax(options);

                if ($("#lstDisclosureType option:selected").text() != "- Select -") {

                    if ($("#lstElectionCycle option:selected").text() == "- Select -") {
                        $("#spnEleYear").hide();
                    }
                    else {
                        $("#spnEleYear").show();
                        $("#lblHEleYear").text($("#lstElectionCycle option:selected").text());
                    }

                    if ($("#lstDisclosurePeriod option:selected").text() == "- Select -") {
                        $("#spnDiclPerd").hide();
                    }
                    else {
                        $("#spnDiclPerd").show();
                        $("#lblHDisclPer").text($("#lstDisclosurePeriod option:selected").text());
                    }

                    var selectedlstDisclosureType = $("#lstDisclosureType option:selected").val().toString();

                    if (selectedlstDisclosureType == "1") { // Itemized
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Itemized");
                        $('#divTransactionType').hide();
                    }
                    else if (selectedlstDisclosureType == "3") { // In-Lieu-Of Statement
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("In-Lieu-Of Statement");
                        $('#divTransactionType').hide();
                    }
                    else if (selectedlstDisclosureType == "2") { // No Activity
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("No-Activity Report");
                        $('#divTransactionType').hide();
                    }
                    else if (selectedlstDisclosureType == "4") { // 24-Hour Notice
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("24-Hour Notice");
                        $('#divTransactionType').hide();
                    }
                    else if (selectedlstDisclosureType == "5") { //Notice of Non-Participation
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Notice of Non-Participation");
                        $('#divTransactionType').hide();
                    }
                    else if (selectedlstDisclosureType == "6") { //Notice of Non-Participation
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Campaign Material");
                        $('#divTransactionType').hide();
                    }
                    else if (selectedlstDisclosureType == "7") { // Independent Expenditure Weekly Contribution
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Independent Expenditure - Weekly Contribution/Loan");
                        $('#divTransactionType').hide();
                    }
                    else if (selectedlstDisclosureType == "8") {  // Independent Expenditure 24 Hour Contribution
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Independent Expenditure - 24 Hour Contribution/Loan");
                        $('#divTransactionType').hide();
                    }
                    else if (selectedlstDisclosureType == "9") { // Independent Expenditure Weekly Expenditure
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Independent Expenditure - Weekly Expenditure");
                        $('#divTransactionType').hide();
                    }
                    else if (selectedlstDisclosureType == "10") { // Independent Expenditure Weekly Liabilities Incurred
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Independent Expenditure - Weekly Liabilities Incurred");
                        $('#divTransactionType').hide();
                    }
                    else if (selectedlstDisclosureType == "11") { // Independent Expenditure 24 Hour Expenditure
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Independent Expenditure - 24 Hour Expenditure");
                        $('#divTransactionType').hide();
                    }
                    else if (selectedlstDisclosureType == "12") { // Independent Expenditure Weekly Expenditure - PIDA
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Independent Expenditure - Weekly Expenditure - PIDA");
                        $('#divTransactionType').hide();
                    }
                }
            }
            else {
                // HIDE THE TRANSACTION TYPE
                $("#divTransactionType").hide();


                // SET DEFAULT VALUE FOR RESIGNATION/TERMINATION
                $("#lstResigTermType").empty();
                $("#lstResigTermType").append("<option>" + "- Not Applicable -" + "</option>");

                // SET FILING DATE CUT OFF DATE BLANK
                $("#txtReportPeriodDatesFrom").val("");
                $("#txtReportPeriodDatesTo").val("");

                // Clear Branding.
                ClearBranding();
            }

            $('#divTransactionType').hide();
            $("#divTransactionTypeNonItemized").hide();
            $("#divTransactionTypeNonItemWeeklyExp").hide();
        });

        // RESIGNATION/TERMINATION TYPE CHAGNE.
        $("#lstResigTermType").change(function () {

            // VALIDATE IF PERIODIC, OFF-CYCLE OR POST ELECTION DISCLSOURE PERIOD.
            // IF OTHER THAN THAT CAN'T FILE "TERMINATION". IT SHOULD VALIDATE.
            // ONLY FOR BELOW IT WILL APPLICATION "TERMINATION".
            // PERIODIC.
            // OFF-CYCLE.
            // 10-DAY POST-PRIMARY
            // 27-DAY POST-GENERAL.
            // 27-DAY POST-SPECIAL.
            var regulation6200_string = 'If this report is intended to be a final report for treasurer resignation or for termination of your filing obligation as a candidate or committee, a fully completed paper CF-18 (Termination or Resignation Request Form/No-Activity Report Form) must be submitted to NYSBOE to request resignation or termination. Treasurers requesting to resign must include a letter of resignation. Committees seeking to terminate must disburse any remaining funds in accordance with NYS Election Law. All applicable reports must continue to be filed until resignation or termination is approved by NYSBOE. (NYS Election Law 14-108(1) and Regulation 6200.2b)';

            if ($("#lstResigTermType option:selected").val().toString() == "2") {
                if ($("#lstDisclosurePeriod option:selected").val().toString() != "1" && $("#lstDisclosurePeriod option:selected").val().toString() != "2" && $("#lstDisclosurePeriod option:selected").val().toString() != "4" && $("#lstDisclosurePeriod option:selected").val().toString() != "5" && $("#lstDisclosurePeriod option:selected").val().toString() != "7" && $("#lstDisclosurePeriod option:selected").val().toString() != "8") {

                    // SHOW THE MESSAGE EITHER RESIGNATION OR TERMINATION SELECTED.
                    if ($("#lstResigTermType option:selected").val() == "1" || $("#lstResigTermType option:selected").val() == "2") {
                        ShowDialogBox('EFS', regulation6200_string , 'Ok', '');
                    }
                } else {

                    ShowDialogBox('EFS', 'Termination is applicable only for Election Type as Periodic/Off-Cycle or Disclosure Period as post election disclosure period', 'Ok', '');

                    if (sessionStorage.getItem("PreviousValueResgTerm") != null && sessionStorage.getItem("PreviousValueResgTerm").toString() == "1") {
                        // SET THE DEFAULT VALUE.
                        $("#lstResigTermType option").filter(function () { return $.trim($(this).val()) == sessionStorage.getItem("PreviousValueResgTerm").toString(); }).attr("selected", "selected");
                    }
                    else {
                        // SET DEFAULT VALUE
                        $("#lstResigTermType")[0].selectedIndex = 0;
                    }
                }
            }
            else {
                // SHOW THE MESSAGE EITHER RESIGNATION OR TERMINATION SELECTED.
                if ($("#lstResigTermType option:selected").val() == "1" || $("#lstResigTermType option:selected").val() == "2") {
                    ShowDialogBox('EFS', regulation6200_string , 'Ok', '');
                }
            }
            $("#divTransactionType").hide();
            $("#divTransactionTypeNonItemized").hide();
            $("#divTransactionTypeNonItemWeeklyExp").hide();

        });

        // RESIGNATION/TERMINATION CHANGE
        $("#lstResigTermType").change(function () {
            // ONCE FILL THE FILING DATE THEN CALL THE RESIGNATION/TERMINATION VALUE.
            // BIND THE RESIGNATION/TERMINATION TYPE IF ALREADY EXISTS FILING....
            // OTHER WISE BIND DEFAULT VALUES WITH SELECT OPTION.
            $.post("@Url.Content("~/ContributionsMonetary/GetResgTermTypeExists/")", {
                txtFilerId: $("#txtFilerID").val(),
                lstElectionType: $("#lstElectionType option:selected").val(),
                lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                lstElectionCycleId: $("#lstElectionCycle option:selected").val(),
                strElectionDateId: $("#lstElectionDate option:selected").val(),
                strFilingDateOffCycle: $("#txtNewFilingDate").val(),
                strFilingDate: $("#txtReportPeriodDatesTo").val(),
                strFilingCategoryId: $("#lstDisclosureType option:selected").val(),
                lstFilingDate: $("#lstFilingDate option:selected").text(),
                lstUCMuncipality: $("#lstUCMuncipality").val()
            }, function (results) {
                // CHECK IF EXIST BIND THE VALUE IF NOT NO BINDING.
                $.each(results, function (i, item) {
                    // ADD SESSION FILINGS ID AND RESIGNATION TERMATION TYPE ID.
                    sessionStorage.setItem("ResgTermTypeFilingsId", item.FilingsId.toString());
                    sessionStorage.setItem("ResgTermTypeId", item.ResigTermTypeId.toString());
                });
            });
            // HIDE TRANSACTION TYPE.
            $("#divTransactionType").hide();
        }); // END >> END >> END >>
        // RESIGNATION/TERMINATION CHANGE

        //Common code for code in #lstDisclosureType".change. Sure its not pretty but seeing the same code over an over is hard to read.
        function determineLstElectionCycleVisbility() {
            if ($("#lstElectionCycle option:selected").text() == "- Select -") {
                $("#spnEleYear").hide();
            }
            else {
                $("#spnEleYear").show();
                $("#lblHEleYear").text($("#lstElectionCycle option:selected").text());
            }
        }
        //Common code for code in #lstDisclosureType".change. Sure its not pretty but seeing the same code over an over is hard to read.
        function determineLstDisclosurePeriodVisbility() {
            if ($("#lstDisclosurePeriod option:selected").text() == "- Select -") {
                $("#spnDiclPerd").hide();
            }
            else {
                $("#spnDiclPerd").show();
                $("#lblHDisclPer").text($("#lstDisclosurePeriod option:selected").text());
            }
        }
        //Common code for code in #lstDisclosureType".change. Sure its not pretty but seeing the same code over an over is hard to read.
        function determineLstElectionTypeVisbility() {
            if ($("#lstElectionType option:selected").text() == "- Select -") {
                $("#spnDiclPerd").hide();
            }
            else {
                $("#spnDiclPerd").show();
                $("#lblHDisclPer").text($("#lstElectionType option:selected").text());
            }
        }

        //Disclosur Type
        $("#lstDisclosureType").change(function () {

            if ($("#lstDisclosureType option:selected").text().toString() != "- Select -") {

                $("#lstFilingDate")[0].selectedIndex = 0;
                $("#lstResigTermType")[0].selectedIndex = 0;
                $("#lstDisclosurePeriod")[0].selectedIndex = 0;
                $("#txtReportPeriodDatesFrom").val("");
                $("#txtReportPeriodDatesTo").val("");

                // DISCLOSURE PERIOD SET DEFAULT.
                $("#lstDisclosurePeriod").empty();
                $("#lstDisclosurePeriod").append("<option>" + "- Select -" + "</option>");

                $m("label[for=lstDisclosurePeriod]").text('');
                $m("#lstDisclosurePeriod").removeClass("error");

                // HIDE ALL AFTER DISCLOSURE TYPE THEN IT WILL SHOW AGAIN.
                $("#divReportPeriodDates").hide();
                $("#divFilingDateDropDown").hide();
                $("#divReportPeriodDatesTo").hide();
                $("#divFilingDateOffCycle").hide();

                // FOR IE - WEEKLIES OFF-CYCLE HAS TO SHOW RESIGNATION/TERMINATION TYPE BUT ITS NOT MANDATORY.
                // IT WILL BE OPTIONAL VALUE FOR IE - WEEKLY - OFF-CYCLE. CHANGED ON 07/07/2020.
                if ($("#lstDisclosureType option:selected").val().toString() == "7" || $("#lstDisclosureType option:selected").val().toString() == "10" || $("#lstDisclosureType option:selected").val().toString() == "2" || $("#lstDisclosureType option:selected").val().toString() == "9" || $("#lstDisclosureType option:selected").val().toString() == "3") { // ADDED IN - LIEU OF STATEMENT FOR PERIODIC AND OFF - CYCLE ADDED - 02 / 02 / 2021
                    if ($("#lstElectionType option:selected").val().toString() == "6") {
                        $("#divFilingReason").show();
                        $("#lblReasonforFiling").text("Resignation/Termination");
                    }
                    else {
                        $("#divFilingReason").hide();
                    }
                }
                else {
                    if ($("#lstElectionType option:selected").val().toString() == "6") {
                        $("#lblReasonforFiling").text("* Resignation/Termination");
                    }
                    else {
                        $("#lblReasonforFiling").text("Resignation/Termination");
                    }
                }

                $("#txtReportPeriodDatesFrom").prop("disabled", true);
                $("#txtReportPeriodDatesTo").prop("disabled", true);

                $("#lblReportPeriodDatesFrom").text("* Cut off Date");
                $("#lblReportPeriodDatesTo").text("* Filing Date");

                $("#divTransactionType").hide();
                $("#divTransactionTypeNonItemized").hide();
                $("#divTransactionTypeNonItemWeeklyExp").hide();

                // SET DEFAULT VALUE FOR RESIGNATION/TERMINATION
                $("#lstResigTermType").empty();
                $("#lstResigTermType").append("<option>" + "- Not Applicable -" + "</option>");

                //Accessibility: Don't hide #divShowHideHelp" when search button is pressed.
                var selectedlstDisclosureType = $("#lstDisclosureType option:selected").val().toString();

                if (selectedlstDisclosureType == "0") {
                    $("#divHeader").hide();
                }
                else {
                    $("#divHeader").show();
                }

                // GET OFF-CYCLE ELECTION TYPE
                var selectedElectionType = $("#lstElectionType option:selected").val().toString();

                if (selectedlstDisclosureType == "1") { // Itemized

                    $("#lblHeader,#lblHeader1,#lblHeader2").text("Itemized");

                    // ADDED HERE. ADDED 04/21/2020 - DEFECT - 1751
                    // BY DEFAULT.
                    // BIND DISCLOSURE PERIOD. //
                    BindLstDisclosurePeriodWithContributionsMonetaryGetDisclosurePeriod();
                    // ADDED HERE. ADDED 04/21/2020 - DEFECT - 1751

                    if (selectedElectionType != "6") { // NOT OFF-CYCLE ELECTION TYPE.

                        HideDivUC();

                        determineLstElectionCycleVisbility();
                        determineLstDisclosurePeriodVisbility();

                        $("#divDisclosurePeriod").show();
                        $("#divReportPeriodDates").show();
                        $("#divReportPeriodDatesTo").show();
                    }
                    else { // OFF-CYCLE ELECTION TYPE.

                        // HIDE CUTT OF DATE
                        $("#divReportPeriodDates").hide();
                        // HIDE FILING DATE.
                        $("#divReportPeriodDatesTo").hide();

                        // Show Filing Date for Off Cycle
                        $("#divFilingDateDropDown").show();

                        HideDivUC();

                        determineLstElectionCycleVisbility();
                        determineLstDisclosurePeriodVisbility();

                        $("#spnDiclPerd").show();
                        $("#lblHDisclPer").text("Off-Cycle");

                        $("#divDisclosurePeriod").show();

                        // BIND FILING DATE FOR OFF CYCLE.
                        var options = {};
                        options.url = "@Url.Content("~/ContributionsMonetary/GetFilingDateOffCycle/")";
                        options.type = "POST";
                        options.data = JSON.stringify(
                            {
                                strElectionYearId: $("#lstElectionCycle option:selected").val().toString(),
                                strOfficeTypeId: $("#lstUCOfficeType option:selected").val().toString(),
                                strFilerId: $("#txtFilerID option:selected").val(),
                                lstDisclosureType: $("#lstDisclosureType option:selected").val().toString(),
                            });
                        options.dataType = "json";
                        options.contentType = "application/json";
                        options.success = function (results) {
                            $("#lstFilingDate").empty();
                            $("#lstFilingDate").append("<option>" + "- Select -" + "</option>");
                            $("#lstFilingDate").append("<option>" + "- New Filing Date -" + "</option>");
                            for (var i = 0; i < results.length; i++) {
                                $("#lstFilingDate").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                            }
                        };
                        options.error = function () {
                        };
                        $.ajax(options);
                        // BIND FILING DATE FOR OFF CYCLE.
                    }

                    // Resignation/Termination
                    $("#divFilingReason").show();

                }
                else if (selectedlstDisclosureType == "3") { //In-Lieu-Of Statement
                    $("#lblHeader,#lblHeader1,#lblHeader2").text("In-Lieu-Of Statement");

                    // BIND DISCLOSURE PERIOD DROPDOWN.
                    BindLstDisclosurePeriodWithContributionsMonetaryGetDisclosurePeriod();

                    if (selectedElectionType != "6") { // NOT OFF-CYCLE ELECTION TYPE.

                        determineLstElectionCycleVisbility();
                        determineLstDisclosurePeriodVisbility();

                        $("#divDisclosurePeriod").show();
                        $("#divReportPeriodDates").show();
                        $("#divReportPeriodDatesTo").show();

                        // Resignation/Termination
                        $("#divFilingReason").hide();
                    }
                    else { // OFF-CYCLE ELECTION TYPE.

                        // HIDE CUTT OF DATE
                        $("#divReportPeriodDates").hide();
                        // HIDE FILING DATE.
                        $("#divReportPeriodDatesTo").hide();

                        // Show Filing Date for Off Cycle
                        $("#divFilingDateDropDown").show();

                        HideDivUC();

                        determineLstElectionCycleVisbility();
                        determineLstDisclosurePeriodVisbility();

                        $("#divDisclosurePeriod").show();

                        // BIND FILING DATE FOR OFF CYCLE.
                        var options = {};
                        options.url = "@Url.Content("~/ContributionsMonetary/GetFilingDateOffCycle/")";
                        options.type = "POST";
                        options.data = JSON.stringify(
                            {
                                strElectionYearId: $("#lstElectionCycle option:selected").val().toString(),
                                strOfficeTypeId: $("#lstUCOfficeType option:selected").val().toString(),
                                strFilerId: $("#txtFilerID option:selected").val(),
                                lstDisclosureType: $("#lstDisclosureType option:selected").val().toString(),

                            });
                        options.dataType = "json";
                        options.contentType = "application/json";
                        options.success = function (results) {
                            $("#lstFilingDate").empty();
                            $("#lstFilingDate").append("<option>" + "- Select -" + "</option>");
                            $("#lstFilingDate").append("<option>" + "- New Filing Date -" + "</option>");
                            for (var i = 0; i < results.length; i++) {
                                $("#lstFilingDate").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                            }
                        };
                        options.error = function () {
                        };
                        $.ajax(options);
                        // BIND FILING DATE FOR OFF CYCLE.
                    }

                    determineLstElectionCycleVisbility();
                    determineLstDisclosurePeriodVisbility();


                    $("#divFilingReason").show();

                }
                else if (selectedlstDisclosureType == "2") { //No Activity
                    $("#lblHeader,#lblHeader1,#lblHeader2").text("No-Activity Report");
                    //$("#divUC_NoActivityReport").show();

                    // BIND DISCLOSURE PERIOD DROPDOWN.
                    BindLstDisclosurePeriodWithContributionsMonetaryGetDisclosurePeriod();

                    if (selectedElectionType != "6") { // NOT OFF-CYCLE ELECTION TYPE.

                        HideDivUC();

                        determineLstElectionCycleVisbility();
                        determineLstDisclosurePeriodVisbility();

                        $("#divDisclosurePeriod").show();
                        $("#divReportPeriodDates").show();
                        $("#divReportPeriodDatesTo").show();

                    }
                    else { // OFF-CYCLE ELECTION TYPE.

                        // HIDE CUTT OF DATE
                        $("#divReportPeriodDates").hide();
                        // HIDE FILING DATE.
                        $("#divReportPeriodDatesTo").hide();

                        // Show Filing Date for Off Cycle
                        $("#divFilingDateDropDown").show();

                        HideDivUC();

                        determineLstElectionCycleVisbility();
                        determineLstDisclosurePeriodVisbility();

                        $("#divDisclosurePeriod").show();

                        // BIND FILING DATE FOR OFF CYCLE.
                        var options = {};
                        options.url = "@Url.Content("~/ContributionsMonetary/GetFilingDateOffCycle/")";
                        options.type = "POST";
                        options.data = JSON.stringify(
                            {
                                strElectionYearId: $("#lstElectionCycle option:selected").val().toString(),
                                strOfficeTypeId: $("#lstUCOfficeType option:selected").val().toString(),
                                strFilerId: $("#txtFilerID option:selected").val(),
                                lstDisclosureType: $("#lstDisclosureType option:selected").val().toString(),

                            });
                        options.dataType = "json";
                        options.contentType = "application/json";
                        options.success = function (results) {
                            $("#lstFilingDate").empty();
                            $("#lstFilingDate").append("<option>" + "- Select -" + "</option>");
                            $("#lstFilingDate").append("<option>" + "- New Filing Date -" + "</option>");
                            for (var i = 0; i < results.length; i++) {
                                $("#lstFilingDate").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                            }
                        };
                        options.error = function () {
                        };
                        $.ajax(options);
                        // BIND FILING DATE FOR OFF CYCLE.
                    }

                    determineLstElectionCycleVisbility();
                    determineLstDisclosurePeriodVisbility();

                    $("#divFilingReason").show();
                }
                else if (selectedlstDisclosureType == "4") { //24-Hour Notice
                    $("#lblHeader,#lblHeader1,#lblHeader2").text("24-Hour Notice");

                    $("#txtReportPeriodDatesFrom").prop("disabled", true);
                    $("#txtReportPeriodDatesTo").prop("disabled", true);

                    $("#lblReportPeriodDatesFrom").text("* From Date");
                    $("#lblReportPeriodDatesTo").text("* To Date");

                    var options = {};
                    options.url = "@Url.Content("~/ContributionsMonetary/GetFilingCutOffDateNonItemizedTrans/")";
                    options.type = "POST";
                    options.data = JSON.stringify(
                        {
                            lstElectionCycle: $("#lstElectionCycle option:selected").val().toString(),
                            lstElectionType: $("#lstElectionType").val().toString(),
                            lstUCOfficeType: $("#lstUCOfficeType option:selected").val().toString(),
                            lstDisclosureType: $("#lstDisclosureType option:selected").val().toString(),
                            lstElectionDateId: $("#lstElectionDate option:selected").val(),
                        });
                    options.dataType = "json";
                    options.contentType = "application/json";
                    options.success = function (results) {
                        for (var i = 0; i < results.length; i++) {
                            if (results[i].CutOffDate != null)
                                $("#txtReportPeriodDatesTo").val(results[i].CutOffDate.toString());
                            if (results[i].FilingDueDate != null)
                                $("#txtReportPeriodDatesFrom").val(results[i].FilingDueDate.toString());
                        }
                    };
                    options.error = function () {
                    };
                    $.ajax(options);

                    HideDivUC();

                    determineLstElectionCycleVisbility();
                    determineLstDisclosurePeriodVisbility();

                    sessionStorage.setItem("ResgTermTypeFilingsId", "");

                    $("#divDisclosurePeriod").hide();
                    $("#divReportPeriodDates").show();
                    $("#divReportPeriodDatesTo").show();

                    // Resignation/Termination
                    $("#divFilingReason").hide();
                }
                else if (selectedlstDisclosureType == "5") { //Notice of Non-Participation
                    $("#lblHeader,#lblHeader1,#lblHeader2").text("Notice of Non-Participation");

                    HideDivUC();

                    if ($("#lstElectionCycle option:selected").text() == "- Select -") {
                        $("#spnEleYear").hide();
                    }
                    else {
                        $("#spnEleYear").show();
                        $("#lblHEleYear").text($("#lstElectionCycle option:selected").text());
                    }
                    if ($("#lstElectionType option:selected").text() == "- Select -") {
                        $("#spnDiclPerd").hide();
                    }
                    else {
                        $("#spnDiclPerd").show();
                        $("#lblHDisclPer").text($("#lstElectionType option:selected").text());
                    }

                    $("#divDisclosurePeriod").hide(); // AS PER DISCUSSION ON 04/15/2019 HIDED THESE.
                    $("#divReportPeriodDates").hide();
                    $("#divReportPeriodDatesTo").hide();

                    // Resignation/Termination
                    $("#divFilingReason").hide();
                }
                else if (selectedlstDisclosureType == "7") { //Independent Expenditure - Weekly Contributions

                    $("#lblHeader,#lblHeader1,#lblHeader2").text("Independent Expenditure - Weekly Contribution/Loan");

                    HideDivUC();

                    determineLstElectionCycleVisbility();
                    determineLstDisclosurePeriodVisbility();

                    $("#divDisclosurePeriod").hide();
                    $("#divReportPeriodDates").hide();
                    $("#divReportPeriodDatesTo").hide();

                    // Show Filing Date for Off Cycle
                    $("#divFilingDateDropDown").show();

                    // Resignation/Termination
                    //$("#divFilingReason").hide();
                    // FOR IE - WEEKLIES OFF-CYCLE HAS TO SHOW RESIGNATION/TERMINATION TYPE BUT ITS NOT MANDATORY.
                    // IT WILL BE OPTIONAL VALUE FOR IE - WEEKLY - OFF-CYCLE. CHANGED ON 07/07/2020.
                    if ($("#lstDisclosureType option:selected").val().toString() == "7" || $("#lstDisclosureType option:selected").val().toString() == "10" || $("#lstDisclosureType option:selected").val().toString() == "2" || $("#lstDisclosureType option:selected").val().toString() == "9" || $("#lstDisclosureType option:selected").val().toString() == "3") { // ADDED IN - LIEU OF STATEMENT FOR PERIODIC AND OFF - CYCLE ADDED - 02 / 02 / 2021
                        if ($("#lstElectionType option:selected").val().toString() == "6") {
                            $("#divFilingReason").show();
                        }
                        else {
                            $("#divFilingReason").hide();
                        }
                    }
                    else {
                        $("#divFilingReason").hide();
                    }

                    // BIND FILING DATE DATA FOR IE WEEKLY NON-ITEMIZED TRANSACTION.
                    BindLstFilingDateWithContributionsMonetaryGetFilingDateIEWeekly(false, false);

                    sessionStorage.setItem("ResgTermTypeFilingsId", "");

                }
                else if (selectedlstDisclosureType == "14") { //Public Campaign Finance - Weekly Claim Submission
                    
                    $("#lblHeader,#lblHeader1,#lblHeader2").text("Public Campaign Finance - Weekly Claim Submission");

                    HideDivUC();

                    determineLstElectionCycleVisbility();
                    determineLstDisclosurePeriodVisbility();

                    $("#divDisclosurePeriod").hide();
                    $("#divReportPeriodDates").hide();
                    $("#divReportPeriodDatesTo").hide();

                    // Show Filing Date for Off Cycle
                    $("#divFilingDateDropDown").show();

                    // Resignation/Termination
                    //$("#divFilingReason").hide();
                    // FOR IE - WEEKLIES OFF-CYCLE HAS TO SHOW RESIGNATION/TERMINATION TYPE BUT ITS NOT MANDATORY.
                    // IT WILL BE OPTIONAL VALUE FOR IE - WEEKLY - OFF-CYCLE. CHANGED ON 07/07/2020.
                    if ($("#lstDisclosureType option:selected").val().toString() == "7" ||
                        $("#lstDisclosureType option:selected").val().toString() == "14" ||
                        $("#lstDisclosureType option:selected").val().toString() == "10" || $("#lstDisclosureType option:selected").val().toString() == "2" || $("#lstDisclosureType option:selected").val().toString() == "9" || $("#lstDisclosureType option:selected").val().toString() == "3") { // ADDED IN - LIEU OF STATEMENT FOR PERIODIC AND OFF - CYCLE ADDED - 02 / 02 / 2021
                        if ($("#lstElectionType option:selected").val().toString() == "6") {
                            $("#divFilingReason").show();
                        }
                        else {
                            $("#divFilingReason").hide();
                        }
                    }
                    else {
                        $("#divFilingReason").hide();
                    }

                    // BIND FILING DATE DATA FOR WEEKLY CLAIM SUBMISSION TRANSACTION.
                    BindLstFilingDateWithCMGetFilingDateWeeklyClaimSubmission(false, false);                    

                    sessionStorage.setItem("ResgTermTypeFilingsId", "");

                }
                else if (selectedlstDisclosureType == "8") { // Independent Expenditure - 24 Hour Contribution

                    $("#lblHeader,#lblHeader1,#lblHeader2").text("Independent Expenditure - 24 Hour Contribution/Loan");

                    $("#txtReportPeriodDatesFrom").prop("disabled", true);
                    $("#txtReportPeriodDatesTo").prop("disabled", true);

                    $("#lblReportPeriodDatesFrom").text("* From Date");
                    $("#lblReportPeriodDatesTo").text("* To Date");

                    var options = {};
                    options.url = "@Url.Content("~/ContributionsMonetary/GetFilingCutOffDateNonItemizedTrans/")";
                    options.type = "POST";
                    options.data = JSON.stringify(
                        {
                            lstElectionCycle: $("#lstElectionCycle option:selected").val().toString(),
                            lstElectionType: $("#lstElectionType").val().toString(),
                            lstUCOfficeType: $("#lstUCOfficeType option:selected").val().toString(),
                            lstDisclosureType: $("#lstDisclosureType option:selected").val().toString(),
                            lstElectionDateId: $("#lstElectionDate option:selected").val(),
                        });
                    options.dataType = "json";
                    options.contentType = "application/json";
                    options.success = function (results) {
                        for (var i = 0; i < results.length; i++) {
                            if (results[i].CutOffDate != null)
                                $("#txtReportPeriodDatesTo").val(results[i].CutOffDate.toString());
                            if (results[i].FilingDueDate != null)
                                $("#txtReportPeriodDatesFrom").val(results[i].FilingDueDate.toString());
                        }
                    };
                    options.error = function () {
                    };
                    $.ajax(options);

                    HideDivUC();

                    if ($("#lstElectionCycle option:selected").text() == "- Select -") {
                        $("#spnEleYear").hide();
                    }
                    else {
                        $("#spnEleYear").show();
                        $("#lblHEleYear").text($("#lstElectionCycle option:selected").text());
                    }
                    if ($("#lstElectionType option:selected").text() == "- Select -") {
                        $("#spnDiclPerd").hide();
                    }
                    else {
                        $("#spnDiclPerd").hide();
                        $("#lblHDisclPer").text($("#lstElectionType option:selected").text());
                    }

                    $("#divDisclosurePeriod").hide();
                    $("#divReportPeriodDates").show();
                    $("#divReportPeriodDatesTo").show();

                    // Resignation/Termination
                    $("#divFilingReason").hide();

                    sessionStorage.setItem("ResgTermTypeFilingsId", "");
                }
                else if (selectedlstDisclosureType == "9") { // Independent Expenditure - Weekly Expenditure
                    $("#lblHeader,#lblHeader1,#lblHeader2").text("Independent Expenditure - Weekly Expenditure");

                    HideDivUC();

                    determineLstElectionCycleVisbility();
                    determineLstElectionTypeVisbility();

                    $("#divDisclosurePeriod").hide();
                    $("#divReportPeriodDates").hide();
                    $("#divReportPeriodDatesTo").hide();

                    // Show Filing Date for Off Cycle
                    $("#divFilingDateDropDown").show();

                    // FOR IE - WEEKLIES OFF-CYCLE HAS TO SHOW RESIGNATION/TERMINATION TYPE BUT ITS NOT MANDATORY.
                    // IT WILL BE OPTIONAL VALUE FOR IE - WEEKLY - OFF-CYCLE. CHANGED ON 07/07/2020.
                    if ($("#lstDisclosureType option:selected").val().toString() == "7" || $("#lstDisclosureType option:selected").val().toString() == "10" || $("#lstDisclosureType option:selected").val().toString() == "2" || $("#lstDisclosureType option:selected").val().toString() == "9" || $("#lstDisclosureType option:selected").val().toString() == "3") { // ADDED IN - LIEU OF STATEMENT FOR PERIODIC AND OFF - CYCLE ADDED - 02 / 02 / 2021
                        if ($("#lstElectionType option:selected").val().toString() == "6") {
                            $("#divFilingReason").show();
                        }
                        else {
                            $("#divFilingReason").hide();
                        }
                    }
                    else {
                        $("#divFilingReason").hide();
                    }

                    // BIND FILING DATE DATA FOR IE WEEKLY NON-ITEMIZED TRANSACTION.
                    BindLstFilingDateWithContributionsMonetaryGetFilingDateIEWeekly(false, false);

                    sessionStorage.setItem("ResgTermTypeFilingsId", "");
                }
                else if (selectedlstDisclosureType == "10") { // Independent Expenditure - Weekly Liabilities Incurred
                    $("#lblHeader,#lblHeader1,#lblHeader2").text("Independent Expenditure - Weekly Liabilities Incurred");

                    HideDivUC();

                    determineLstElectionCycleVisbility();
                    determineLstElectionTypeVisbility();

                    $("#divDisclosurePeriod").hide();
                    $("#divReportPeriodDates").hide();
                    $("#divReportPeriodDatesTo").hide();

                    // Show Filing Date for Off Cycle
                    $("#divFilingDateDropDown").show();

                    // FOR IE - WEEKLIES OFF-CYCLE HAS TO SHOW RESIGNATION/TERMINATION TYPE BUT ITS NOT MANDATORY.
                    // IT WILL BE OPTIONAL VALUE FOR IE - WEEKLY - OFF-CYCLE. CHANGED ON 07/07/2020.
                    if ($("#lstDisclosureType option:selected").val().toString() == "7" || $("#lstDisclosureType option:selected").val().toString() == "10" || $("#lstDisclosureType option:selected").val().toString() == "2" || $("#lstDisclosureType option:selected").val().toString() == "9" || $("#lstDisclosureType option:selected").val().toString() == "3") { // ADDED IN - LIEU OF STATEMENT FOR PERIODIC AND OFF - CYCLE ADDED - 02 / 02 / 2021
                        if ($("#lstElectionType option:selected").val().toString() == "6") {
                            $("#divFilingReason").show();
                        }
                        else {
                            $("#divFilingReason").hide();
                        }
                    }
                    else {
                        $("#divFilingReason").hide();
                    }

                    // BIND FILING DATE DATA FOR IE WEEKLY NON-ITEMIZED TRANSACTION.
                    BindLstFilingDateWithContributionsMonetaryGetFilingDateIEWeekly(false, false);

                    sessionStorage.setItem("ResgTermTypeFilingsId", "");
                }
                else if (selectedlstDisclosureType == "11") { // Independent Expenditure - 24 Hour Expenditure
                    $("#lblHeader,#lblHeader1,#lblHeader2").text("Independent Expenditure - 24 Hour Expenditure")

                    var options = {};
                    options.url = "@Url.Content("~/ContributionsMonetary/GetFilingCutOffDateNonItemizedTrans/")";
                    options.type = "POST";
                    options.data = JSON.stringify(
                        {
                            lstElectionCycle: $("#lstElectionCycle option:selected").val().toString(),
                            lstElectionType: $("#lstElectionType").val().toString(),
                            lstUCOfficeType: $("#lstUCOfficeType option:selected").val().toString(),
                            lstDisclosureType: $("#lstDisclosureType option:selected").val().toString(),
                            lstElectionDateId: $("#lstElectionDate option:selected").val(),
                        });
                    options.dataType = "json";
                    options.contentType = "application/json";
                    options.success = function (results) {
                        for (var i = 0; i < results.length; i++) {
                            if (results[i].CutOffDate != null)
                                $("#txtReportPeriodDatesTo").val(results[i].CutOffDate.toString());
                            if (results[i].FilingDueDate != null)
                                $("#txtReportPeriodDatesFrom").val(results[i].FilingDueDate.toString());
                        }
                    };
                    options.error = function () {
                    };
                    $.ajax(options);

                    HideDivUC();

                    determineLstElectionCycleVisbility();
                    determineLstElectionTypeVisbility();

                    $("#divDisclosurePeriod").hide();
                    $("#divReportPeriodDates").show();
                    $("#divReportPeriodDatesTo").show();

                    // Resignation/Termination
                    $("#divFilingReason").hide();

                    $("#lblReportPeriodDatesFrom").text("* From Date");
                    $("#lblReportPeriodDatesTo").text("* To Date");

                    sessionStorage.setItem("ResgTermTypeFilingsId", "");
                }
                else if (selectedlstDisclosureType == "12") { // Independent Expenditure - Weekly Expenditure - PIDA
                    $("#lblHeader,#lblHeader1,#lblHeader2").text("Independent Expenditure - Weekly PIDA Expenditure");

                    HideDivUC();

                    determineLstElectionCycleVisbility();
                    determineLstElectionTypeVisbility();

                    $("#divDisclosurePeriod").hide();
                    $("#divReportPeriodDates").hide();
                    $("#divReportPeriodDatesTo").hide();

                    // Show Filing Date for Off Cycle
                    $("#divFilingDateDropDown").show();

                    // FOR IE - WEEKLIES OFF-CYCLE HAS TO SHOW RESIGNATION/TERMINATION TYPE BUT ITS NOT MANDATORY.
                    // IT WILL BE OPTIONAL VALUE FOR IE - WEEKLY - OFF-CYCLE. CHANGED ON 07/07/2020.
                    if ($("#lstDisclosureType option:selected").val().toString() == "7" || $("#lstDisclosureType option:selected").val().toString() == "10" || $("#lstDisclosureType option:selected").val().toString() == "2" || $("#lstDisclosureType option:selected").val().toString() == "9" || $("#lstDisclosureType option:selected").val().toString() == "3") { // ADDED IN - LIEU OF STATEMENT FOR PERIODIC AND OFF - CYCLE ADDED - 02 / 02 / 2021
                        if ($("#lstElectionType option:selected").val().toString() == "6") {
                            $("#divFilingReason").show();
                        }
                        else {
                            $("#divFilingReason").hide();
                        }
                    }
                    else {
                        $("#divFilingReason").hide();
                    }

                    // BIND FILING DATE DATA FOR IE WEEKLY NON-ITEMIZED TRANSACTION.
                    BindLstFilingDateWithContributionsMonetaryGetFilingDateIEWeekly(false, false);

                    sessionStorage.setItem("ResgTermTypeFilingsId", "");
                }
                else if (selectedlstDisclosureType == "13") { // Independent Expenditure - 24 Hour Expenditure - PIDA
                    $("#lblHeader,#lblHeader1,#lblHeader2").text("Independent Expenditure - 24 Hour PIDA Expenditure");

                    var options = {};
                    options.url = "@Url.Content("~/ContributionsMonetary/GetFilingCutOffDateNonItemizedTrans/")";
                    options.type = "POST";
                    options.data = JSON.stringify(
                        {
                            lstElectionCycle: $("#lstElectionCycle option:selected").val().toString(),
                            lstElectionType: $("#lstElectionType").val().toString(),
                            lstUCOfficeType: $("#lstUCOfficeType option:selected").val().toString(),
                            lstDisclosureType: $("#lstDisclosureType option:selected").val().toString(),
                            lstElectionDateId: $("#lstElectionDate option:selected").val(),
                        });
                    options.dataType = "json";
                    options.contentType = "application/json";
                    options.success = function (results) {
                        for (var i = 0; i < results.length; i++) {
                            if (results[i].CutOffDate != null)
                                $("#txtReportPeriodDatesTo").val(results[i].CutOffDate.toString());
                            if (results[i].FilingDueDate != null)
                                $("#txtReportPeriodDatesFrom").val(results[i].FilingDueDate.toString());
                        }
                    };
                    options.error = function () {
                    };
                    $.ajax(options);

                    HideDivUC();

                    determineLstElectionCycleVisbility();
                    determineLstElectionTypeVisbility();

                    $("#divDisclosurePeriod").hide();
                    $("#divReportPeriodDates").show();
                    $("#divReportPeriodDatesTo").show();

                    // Resignation/Termination
                    $("#divFilingReason").hide();

                    $("#lblReportPeriodDatesFrom").text("* From Date");
                    $("#lblReportPeriodDatesTo").text("* To Date");

                    sessionStorage.setItem("ResgTermTypeFilingsId", "");
                }
                else if (selectedlstDisclosureType == "6") { // Non-Itemized Campaign Material.
                    $("#lblHeader,#lblHeader1,#lblHeader2").text("Campaign Material");

                    HideDivUC();

                    determineLstElectionCycleVisbility();

                    $("#divDisclosurePeriod").show();

                    // Resignation/Termination
                    $("#divFilingReason").hide();

                    // come here
                    // NEW LOGIC CHANGE ON 10-DAY POST PRIMARY ON PRIMARY ELECTION
                    // WE ARE NOT SHOWING FOR YEAR 2021 AND ABOVE THE 10-DAY POST PRIMARY IN DISCLOSURE PERIOD DROPDOWN.
                    // WE ARE NOT CHANGING FOR YEAR 2020 AND BELOW NO CHANGES.
                    var eleType = $("#lstElectionType").val().toString();
                    var eleYear = parseInt($("#lstElectionCycle option:selected").text().toString());
                    var valYear = parseInt("2021");
                    if (eleType == "2") { // IF PRIMARY.
                        if (eleYear >= valYear) { // IF 2021 AND ABOVE NO - 10-DAY POST PRIMARY.
                            // HIDE THE DISCLOSURE PERIOD.
                            $("#lstDisclosurePeriod").empty();
                            $("#divDisclosurePeriod").hide();

                            // FILING DATE.
                            $("#divFilingDateDropDown").show();

                            // BIND FILING DATE SAME AS OFF-CYCLE OR IE-WEEKLY.
                            // BIND FILING DATE DATA FOR IE WEEKLY NON-ITEMIZED TRANSACTION.
                            BindLstFilingDateWithContributionsMonetaryGetFilingDateIEWeekly(false, false);
                        }
                        else { // IF 202 AND BELOW NO CHANGES.
                            // BIND DISCLOSURE PERIOD.
                            // BIND DISCLOSURE PERIOD.
                            $.post("@Url.Content("~/ContributionsMonetary/GetDisclosurePeriodCampMaterial/")", {
                                lstElectionType: $("#lstElectionType").val().toString()
                            }, function (results) {
                                $("#divDisclosurePeriod").show();
                                $("#lstDisclosurePeriod").empty();
                                for (var i = 0; i < results.length; i++) {
                                    $("#lstDisclosurePeriod").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                                }

                                determineLstDisclosurePeriodVisbility();

                                // BIND THE CUT OFF DATE AND FILING DATE.
                                // GET FILING DATE & CUT OFF DATE.
                                var options = {};
                                options.url = "@Url.Content("~/ContributionsMonetary/GetFilingCutOffDate/")";
                                options.type = "POST";
                                options.data = JSON.stringify(
                                    {
                                        lstElectionCycle: $("#lstElectionCycle option:selected").val().toString(),
                                        lstElectionType: $("#lstElectionType").val().toString(),
                                        lstUCOfficeType: $("#lstUCOfficeType option:selected").val().toString(),
                                        lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val().toString(),
                                        lstElectionDateId: $("#lstElectionDate option:selected").val(),
                                    });
                                options.dataType = "json";
                                options.contentType = "application/json";
                                options.success = function (results) {

                                    for (var i = 0; i < results.length; i++) {
                                        if (results[i].CutOffDate != null)
                                            $("#txtReportPeriodDatesFrom").val(results[i].CutOffDate.toString());
                                        if (results[i].FilingDueDate != null)
                                            $("#txtReportPeriodDatesTo").val(results[i].FilingDueDate.toString());
                                    }
                                };
                                options.error = function () {
                                };
                                $.ajax(options);

                            });
                        }
                    }
                    else {
                        // BIND DISCLOSURE PERIOD.
                        // BIND DISCLOSURE PERIOD.
                        $.post("@Url.Content("~/ContributionsMonetary/GetDisclosurePeriodCampMaterial/")", {
                            lstElectionType: $("#lstElectionType").val().toString()
                        }, function (results) {
                            $("#divDisclosurePeriod").show();
                            $("#lstDisclosurePeriod").empty();
                            for (var i = 0; i < results.length; i++) {
                                $("#lstDisclosurePeriod").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                            }

                            determineLstDisclosurePeriodVisbility();

                            // BIND THE CUT OFF DATE AND FILING DATE.
                            // GET FILING DATE & CUT OFF DATE.
                            var options = {};
                            options.url = "@Url.Content("~/ContributionsMonetary/GetFilingCutOffDate/")";
                            options.type = "POST";
                            options.data = JSON.stringify(
                                {
                                    lstElectionCycle: $("#lstElectionCycle option:selected").val().toString(),
                                    lstElectionType: $("#lstElectionType").val().toString(),
                                    lstUCOfficeType: $("#lstUCOfficeType option:selected").val().toString(),
                                    lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val().toString(),
                                    lstElectionDateId: $("#lstElectionDate option:selected").val(),
                                });
                            options.dataType = "json";
                            options.contentType = "application/json";
                            options.success = function (results) {

                                for (var i = 0; i < results.length; i++) {
                                    if (results[i].CutOffDate != null)
                                        $("#txtReportPeriodDatesFrom").val(results[i].CutOffDate.toString());
                                    if (results[i].FilingDueDate != null)
                                        $("#txtReportPeriodDatesTo").val(results[i].FilingDueDate.toString());
                                }
                            };
                            options.error = function () {
                            };
                            $.ajax(options);

                        });
                    }

                    // FILING DATE.
                    sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesFrom").val());
                    if ($("#lstElectionType option:selected").val() == "6") {
                        sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
                    }
                    else {
                        sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
                    }
                }
                else {

                    $("#divFilingDateOffCycle").hide();
                    $("#divFilingDateDropDown").hide();

                    $("#txtReportPeriodDatesTo").prop("disabled", true);
                    $("#txtReportPeriodDatesFrom").prop("disabled", true);

                }
            }
            else {
                if ($("#lstElectionType").val().toString() == "6") {
                    $("#divReportPeriodDates").hide();
                    $("#divReportPeriodDatesTo").hide();

                    $("#divFilingDateDropDown").show();
                }
                else {
                    $("#divReportPeriodDates").show();
                    $("#divReportPeriodDatesTo").show();

                    $("#divFilingDateDropDown").hide();
                }

                $("#txtReportPeriodDatesFrom").val("");
                $("#txtReportPeriodDatesTo").val("");

                $("#txtReportPeriodDatesTo").prop("disabled", true);
                $("#txtReportPeriodDatesFrom").prop("disabled", true);

                $("#divFilingDateOffCycle").hide();

                $("#divFilingReason").show();

                $("#divDisclosurePeriod").show();


                // DISCLOSURE PERIOD SET DEFAULT.
                $("#lstDisclosurePeriod").empty();
                $("#lstDisclosurePeriod").append("<option>" + "- Select -" + "</option>");

                // SET DEFAULT VALUE FOR RESIGNATION/TERMINATION
                $("#lstResigTermType").empty();
                $("#lstResigTermType").append("<option>" + "- Not Applicable -" + "</option>");

                // SET DEFAULT VALUE FOR FILING DATE.
                $("#lstFilingDate").empty();
                $("#lstFilingDate").append("<option>" + "- Select -" + "</option>");

                // Clear Branding.
                ClearBranding();
            }

            $('#divTransactionType').hide();
            $("#divTransactionTypeNonItemized").hide();
            $("#divTransactionTypeNonItemWeeklyExp").hide();

        }); // DISCLOSURE TYPE ON CHANGE END END END >>>>>

        // Transaction Type - Itemized Transactions

        function BindSearchGrid() {
            $("#divLoading").show();
            //Set Session Storage.
            SetCommonSessionStorageValues();
            //Unique storage.
            sessionStorage.setItem("DisclosurePeriod", $("#lstDisclosurePeriod option:selected").val());
            sessionStorage.setItem("DisclosurePeriodText", $("#lstDisclosurePeriod option:selected").text());
            sessionStorage.setItem("CountyId", $("#lstUCCounty option:selected").val());
            sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesFrom").val());
            sessionStorage.setItem("lstFilingDate", $("#lstFilingDate option:selected").val());
            sessionStorage.setItem("lstResigTermType", $("#lstResigTermType option:selected").val());
            sessionStorage.setItem("TransactionType", $("#lstTransactionType option:selected").val());
            if ($("#lstElectionType option:selected").val() == "6") {
                sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
            }
            else {
                sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
            }

            //Not sure why we are showing this field.
            $("#divTransactionType").show();

            //Set Redirect
            var selectedlstTransactionType = $("#lstTransactionType option:selected").val().toString();
            if (selectedlstTransactionType == "1") {
                sessionStorage.setItem("IndPart", "Yes");
                sessionStorage.setItem("Corporate", "No");
                sessionStorage.setItem("Other", "No");
                SetHeaderAndNewWindowLocationHref("Monetary Contributions Received From Individual & Partnerships", "@Url.Content("~/ContributionsCandIndFamily/ContributionsCandIndFamily/")");
            } else if (selectedlstTransactionType == "2") {
                sessionStorage.setItem("Corporate", "Yes");
                sessionStorage.setItem("IndPart", "No");
                sessionStorage.setItem("Other", "No");
                SetHeaderAndNewWindowLocationHref("Monetary Contributions Received From Corporate", "@Url.Content("~/ContributionsCandIndFamily/ContributionsCandIndFamily/")");
            } else if (selectedlstTransactionType == "3") {
                sessionStorage.setItem("Other", "Yes");
                sessionStorage.setItem("IndPart", "No");
                sessionStorage.setItem("Corporate", "No");
                SetHeaderAndNewWindowLocationHref("Monetary Contributions Received From All Other", "@Url.Content("~/ContributionsCandIndFamily/ContributionsCandIndFamily/")");
            } else if (selectedlstTransactionType == "4") {
                SetHeaderAndNewWindowLocationHref("Contributions - In Kind", "@Url.Content("~/ContributionInKind/ContributionInKind/")");
            } else if (selectedlstTransactionType == "5") {
                SetHeaderAndNewWindowLocationHref("Other Receipts", "@Url.Content("~/OtherReceiptsReceivedSchedE/OtherReceiptsReceivedSchedE/")");
            } else if (selectedlstTransactionType == "6") {
                SetHeaderAndNewWindowLocationHref("Expenditure Payments", "@Url.Content("~/ExpenditurePaymentsSchedF/ExpenditurePaymentsSchedF/")");
            } else if (selectedlstTransactionType == "7") {
                SetHeaderAndNewWindowLocationHref("Transfer In", "@Url.Content("~/TransferInScheG/TransferInScheG/")");
            } else if (selectedlstTransactionType == "8") {
                SetHeaderAndNewWindowLocationHref("Transfer Out", "@Url.Content("~/TransferOutSchedH/TransferOutSchedH/")");
            } else if (selectedlstTransactionType == "9") {
                SetHeaderAndNewWindowLocationHref("Loan Received", "@Url.Content("~/LoanReceivedSchedI/LoanReceivedSchedI/")");
            } else if (selectedlstTransactionType == "10") {
                SetHeaderAndNewWindowLocationHref("Loan Repayments", "@Url.Content("~/LoanRepaymentsSchedJ/LoanRepaymentsSchedJ/")");
            } else if (selectedlstTransactionType == "11") {
                SetHeaderAndNewWindowLocationHref("Liabilities/Loans Forgiven", "@Url.Content("~/LiabilitiesLoansForgivenSchedK/LiabilitiesLoansForgivenSchedK/")");
            } else if (selectedlstTransactionType == "12") {
                SetHeaderAndNewWindowLocationHref("Expenditure Refund", "@Url.Content("~/ExpenditureRefundsSchedL/ExpenditureRefundsSchedL/")");
            } else if (selectedlstTransactionType == "13") {
                SetHeaderAndNewWindowLocationHref("Contributions Refunded", "@Url.Content("~/ContributionRefundedSchedM/ContributionRefundedSchedM/")");
            } else if (selectedlstTransactionType == "14") {
                SetHeaderAndNewWindowLocationHref("Outstanding Liabilities/Loans", "@Url.Content("~/OutStandingLiabilityLoansSchedN/OutStandingLiabilityLoansSchedN/")");
            } else if (selectedlstTransactionType == "15") {
                SetHeaderAndNewWindowLocationHref("Partnership/Subcontractor", "@Url.Content("~/OtherReceiptsReceivedSchedE/OtherReceiptsReceivedSchedE/")");
            } else if (selectedlstTransactionType == "16") {
                SetHeaderAndNewWindowLocationHref("Non-Campaign HouseKeeping Receipts", "@Url.Content("~/NonCampaignHousekeepingReceiptsSchedP/NonCampaignHousekeepingReceiptsSchedP/")");
            } else if (selectedlstTransactionType == "17") {
                SetHeaderAndNewWindowLocationHref("Non-Campaign HouseKeeping Expenses", "@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/NonCampaignHousekeepingExpensesSchedQ/")");
            } else if (selectedlstTransactionType == "18") {
                SetHeaderAndNewWindowLocationHref("Amount Allocated", "@Url.Content("~/ExpensesAllocationScheR/ExpensesAllocationScheR/")");
            }
            else if (selectedlstTransactionType == "19") {
                SetHeaderAndNewWindowLocationHref("Public Fund Receipts", "@Url.Content("~/PublicFundReceiptsSchedS/PublicFundReceiptsSchedS/")");
            }
            else if (selectedlstTransactionType == "20") {
                SetHeaderAndNewWindowLocationHref("Public Fund Expenses", "@Url.Content("~/PublicFundExpensesSchedT/PublicFundExpensesSchedT/")");
            }
            else if (selectedlstTransactionType == "21") {
                SetHeaderAndNewWindowLocationHref("Public Fund Repayment", "@Url.Content("~/PublicFundRepaymentSchedU/PublicFundRepaymentSchedU/")");
            }
            else {
                $("#divLoading").hide();
                ShowDialogBox('EFS', 'Please select a valid transaction type.', 'Ok', '');
            }
        }

        $m(".clsSearchApply").bind('click', function (e) {
            e.preventDefault();
            BindSearchGrid();
        });


        // BUTTON IMPLEMENTED AFTER DISCUSSION ONCE USER SELECT DROPDOWN IT WON'T HAPPEN ANYTHING...
        // UNTIL USER CLICK THE BUTTON 'APPLY'.... THEN ONLY IT WILL LOAD THE PAGE...
        // DID CHANGES ON - 07/16/2020.
        $m(".clsApplyForTrans24HN").bind('click', function (e) {
            e.preventDefault();

            $("#divLoading").show();

            sessionStorage.removeItem("ScheduleId");

            var selectedlstTransactionTypeNonItem = $("#lstTransactionTypeNonItem option:selected").val().toString();

            var selectedDisclosureType = $("#lstDisclosureType option:selected").val().toString();

            if (selectedDisclosureType == "4") { // 24-Hour Notice

                sessionStorage.setItem("lstTransactionTypeNonItem", $("#lstTransactionTypeNonItem option:selected").val());
                sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesFrom").val());
                if ($("#lstElectionType option:selected").val() == "6") {
                    sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
                }
                else {
                    sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
                }
                //Set Session Storage.
                SetCommonSessionStorageValues();
                //Unique storage.
                sessionStorage.setItem("CountyId", $("#lstUCCounty option:selected").val());

                $("#divTransactionTypeNonItemized").show();

                if (selectedlstTransactionTypeNonItem == "1") { // SCHEDULE - A
                    SetHeaderAndNewWindowLocationHref("Monetary Contributions Received From Individual & Partnerships", "@Url.Content("~/NonItemizedTransactionSchedA/NonItemizedTransactionSchedA/")");
                } else if (selectedlstTransactionTypeNonItem == "2") { // SCHEDULE - B
                    SetHeaderAndNewWindowLocationHref("Monetary Contributions Received From Corporate" ,"@Url.Content("~/NonItemizedTransactionSchedB/NonItemizedTransactionSchedB/")");
                } else if (selectedlstTransactionTypeNonItem == "3") { // SCHEDULE - C
                    SetHeaderAndNewWindowLocationHref("Monetary Contributions Received From All Other", "@Url.Content("~/NonItemizedTransactionSchedC/NonItemizedTransactionSchedC/")");
                } else if (selectedlstTransactionTypeNonItem == "4") { // SCHEDULE - D
                    SetHeaderAndNewWindowLocationHref("Contributions - In Kind", "@Url.Content("~/NonItemizedTransactionSchedD/NonItemizedTransactionSchedD/")");
                } else if (selectedlstTransactionTypeNonItem == "9") { // SCHEDULE - I
                    SetHeaderAndNewWindowLocationHref("Loan Received", "@Url.Content("~/NonItemizedTransactionSchedI/NonItemizedTransactionSchedI/")");
                }
                else {
                    $("#divLoading").hide();
                }
            }
            else if (selectedDisclosureType == "7") { // Independent Expenditure - Weekly Contribution

                sessionStorage.setItem("lstTransactionTypeNonItem", $("#lstTransactionTypeNonItem option:selected").val());
                sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
                SetCommonSessionStorageValues();
                //Unique storage.
                sessionStorage.setItem("lstFilingDate", $("#lstFilingDate option:selected").val());
                sessionStorage.setItem("lstResigTermType", $("#lstResigTermType option:selected").val());

                $("#divTransactionTypeNonItemized").show();

                if (selectedlstTransactionTypeNonItem == "1") { // SCHEDULE - A
                    SetHeaderAndNewWindowLocationHref("Monetary Contributions Received From Individual & Partnerships", "@Url.Content("~/NonItemIEWeeklyContributionSchedA/NonItemIEWeeklyContributionSchedA/")");
                } else if (selectedlstTransactionTypeNonItem == "2") { // SCHEDULE - B
                    SetHeaderAndNewWindowLocationHref("Monetary Contributions Received From Corporate", "@Url.Content("~/NonItemIEWeeklyContributionSchedB/NonItemIEWeeklyContributionSchedB/")");
                } else if (selectedlstTransactionTypeNonItem == "3") { // SCHEDULE - C
                    SetHeaderAndNewWindowLocationHref("Monetary Contributions Received From All Other", "@Url.Content("~/NonItemIEWeeklyContributionSchedC/NonItemIEWeeklyContributionSchedC/")");
                } else if (selectedlstTransactionTypeNonItem == "4") { // SCHEDULE - D
                    SetHeaderAndNewWindowLocationHref("Contributions - In Kind", "@Url.Content("~/NonItemIEWeeklyContributionSchedD/NonItemIEWeeklyContributionSchedD/")");
                } else if (selectedlstTransactionTypeNonItem == "9") { // SCHEDULE - I
                    SetHeaderAndNewWindowLocationHref("Loan Received", "@Url.Content("~/NonItemIEWeeklyContributionSchedI/NonItemIEWeeklyContributionSchedI/")");
                }
                else {
                    $("#divLoading").hide();
                }
            }
            else if (selectedDisclosureType == "8") { // Independent Expenditure - 24 Hour Contribution

                sessionStorage.setItem("lstTransactionTypeNonItem", $("#lstTransactionTypeNonItem option:selected").val());
                sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesFrom").val());
                if ($("#lstElectionType option:selected").val() == "6") {
                    sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
                }
                else {
                    sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
                }
                SetCommonSessionStorageValues();

                $("#divTransactionTypeNonItemized").show();

                if (selectedlstTransactionTypeNonItem == "1") { // SCHEDULE - A
                    SetHeaderAndNewWindowLocationHref("Monetary Contributions Received From Individual & Partnerships", "@Url.Content("~/NonItemIE24HContributionSchedA/NonItemIE24HContributionSchedA/")");
                } else if (selectedlstTransactionTypeNonItem == "2") { // SCHEDULE - B
                    SetHeaderAndNewWindowLocationHref("Monetary Contributions Received From Corporate", "@Url.Content("~/NonItemIE24HContributionSchedB/NonItemIE24HContributionSchedB/")");
                } else if (selectedlstTransactionTypeNonItem == "3") { // SCHEDULE - C
                    SetHeaderAndNewWindowLocationHref("Monetary Contributions Received From All Other", "@Url.Content("~/NonItemIE24HContributionSchedC/NonItemIE24HContributionSchedC/")");
                } else if (selectedlstTransactionTypeNonItem == "4") { // SCHEDULE - D
                    SetHeaderAndNewWindowLocationHref("Contributions - In Kind", "@Url.Content("~/NonItemIE24HContributionSchedD/NonItemIE24HContributionSchedD/")");
                } else if (selectedlstTransactionTypeNonItem == "6") { // SCHEDULE - I
                    SetHeaderAndNewWindowLocationHref("Expenditures Payments", "@Url.Content("~/NonItemIE24HContributionSchedF/NonItemIE24HContributionSchedF/")");
                } else if (selectedlstTransactionTypeNonItem == "9") { // SCHEDULE - I
                    SetHeaderAndNewWindowLocationHref("Loan Received", "@Url.Content("~/NonItemIE24HContributionSchedI/NonItemIE24HContributionSchedI/")");
                }
                else {
                    $("#divLoading").hide();
                }
            }
            else if (selectedDisclosureType == "14") { // Public Campaign Finance - Weekly Claim Submission

                sessionStorage.setItem("lstTransactionTypeNonItem", $("#lstTransactionTypeNonItem option:selected").val());
                sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
                SetCommonSessionStorageValues();
                //Unique storage.
                sessionStorage.setItem("lstFilingDate", $("#lstFilingDate option:selected").val());
                sessionStorage.setItem("lstResigTermType", $("#lstResigTermType option:selected").val());

                $("#divTransactionTypeNonItemized").show();
                var selectedlstTransactionTypeNonItemData = $("#lstTransactionTypeNonItem option:selected").val().toString();
                if (selectedlstTransactionTypeNonItemData == "1") { // SCHEDULE - A
                    SetHeaderAndNewWindowLocationHref("Monetary Contributions Received From Individual & Partnerships", "@Url.Content("~/WeeklyClaimSubmission/WeeklyClaimSubmission/")");
                }
                else {
                    $("#divLoading").hide();
                }
            }
        });

        // BUTTON IMPLEMENTED AFTER DISCUSSION ONCE USER SELECT DROPDOWN IT WON'T HAPPEN ANYTHING...
        // UNTIL USER CLICK THE BUTTON 'APPLY'.... THEN ONLY IT WILL LOAD THE PAGE...
        // DID CHANGES ON - 07/16/2020.
        $m(".clsApplyForTransIE").bind('click', function (e) {
            e.preventDefault();

            var selectedlstTransactionTypeNonItem = $("#lstTransTypeNonItemWeeklyExp option:selected").val().toString();

            var selectedDisclosureType = $("#lstDisclosureType option:selected").val().toString();

            if (selectedDisclosureType == "9") { // Independent Expenditure - Weekly Expenditure

                sessionStorage.setItem("lstTransactionTypeNonItem", $("#lstTransTypeNonItemWeeklyExp option:selected").val());
                if ($("#lstElectionType option:selected").val() == "6") {
                    sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
                }
                else {
                    sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
                }
                SetCommonSessionStorageValues();
                //Unique storage.
                sessionStorage.setItem("lstResigTermType", $("#lstResigTermType option:selected").val());

                $("#divTransactionTypeNonItemWeeklyExp").show();

                if (selectedlstTransactionTypeNonItem == "6") { // SCHEDULE - F
                    SetHeaderAndNewWindowLocationHref("Expenditure Payments", "@Url.Content("~/NonItemIEWeeklyExpenditureSchedF/NonItemIEWeeklyExpenditureSchedF/")");
                }
            }
            else if (selectedDisclosureType == "11") { // Independent Expenditure - 24 Hour Expenditure

                sessionStorage.setItem("lstTransactionTypeNonItem", $("#lstTransTypeNonItemWeeklyExp option:selected").val());
                if ($("#lstElectionType option:selected").val() == "6") {
                    sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
                }
                else {
                    sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
                }
                SetCommonSessionStorageValues();

                $("#divTransactionTypeNonItemWeeklyExp").show();

                if (selectedlstTransactionTypeNonItem == "6") { // SCHEDULE - F
                    SetHeaderAndNewWindowLocationHref("Expenditure Payments", "@Url.Content("~/NonItemIE24HourExpenditureSchedF/NonItemIE24HourExpenditureSchedF/")");
                }
            }
            else if (selectedDisclosureType == "10") { // Independent Expenditure - Weekly Liabilities Incurred

                sessionStorage.setItem("lstTransactionTypeNonItem", $("#lstTransTypeNonItemWeeklyExp option:selected").val());
                if ($("#lstElectionType option:selected").val() == "6") {
                    sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
                }
                else {
                    sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
                }
                SetCommonSessionStorageValues();
                //Unique storage.
                sessionStorage.setItem("lstResigTermType", $("#lstResigTermType option:selected").val());

                $("#divTransactionTypeNonItemWeeklyExp").show();

                if (selectedlstTransactionTypeNonItem == "14") { // SCHEDULE - F
                    SetHeaderAndNewWindowLocationHref("Outstanding Liabilities/Loans", "@Url.Content("~/NonItemIEWeeklyLiabilityIncurredSchedN/NonItemIEWeeklyLiabilityIncurredSchedN/")");
                }
            }
        });

        // Election Date Chagne
        $("#lstElectionDate").change(function () {

            if ($("#lstElectionDate option:selected").text().toString() != "- Select -") {

                $("#lstDisclosureType")[0].selectedIndex = 0;
                $("#lstDisclosurePeriod")[0].selectedIndex = 0;
                $("#txtReportPeriodDatesFrom").val("");
                $("#txtReportPeriodDatesTo").val("");

                // Clear Branding.
                ClearBranding();

                $('#divTransactionType').hide();
                $("#divTransactionTypeNonItemized").hide();
                $("#divTransactionTypeNonItemWeeklyExp").hide();

                // GET OFF-CYCLE ELECTION TYPE
                var selectedElectionType = $("#lstElectionType option:selected").val().toString();

                if (selectedElectionType == "1") { // SPECIAL ELECTION NO NOTICE-OF NON PARTICIPATION.

                    // BINd DISCLOSURE TYPE FOR SPECIAL ELECTION.
                    var options = {};
                    options.url = "@Url.Content("~/ContributionsMonetary/GetDisclosureTypeSpecial/")";
                    options.type = "POST";
                    options.data = JSON.stringify(
                        {
                            lstElectionType: $("#lstElectionType").val().toString()
                        });
                    options.dataType = "json";
                    options.contentType = "application/json";
                    options.success = function (results) {
                        $("#lstDisclosureType").empty();
                        $("#lstDisclosureType").append("<option>" + "- Select -" + "</option>");
                        for (var i = 0; i < results.length; i++) {
                            $("#lstDisclosureType").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                        }
                    };
                    options.error = function () {
                    };
                    $.ajax(options);
                    // BIN DISCLOSURE TYPE FOR SPECIAL ELECTION.
                }
                else if (selectedElectionType == "8") { // 'PRIMARY AND GENERAL' CAN FILE ONLY NOTICE OF NON-PARTICIPATION.

                    // BIN DISCLOSURE TYPE FOR PRIMARY AND GENERAL ELECTION.
                    var options = {};
                    options.url = "@Url.Content("~/ContributionsMonetary/DisclosureTypesPrimAndGenNoticeOfNP/")";
                    options.type = "POST";
                    options.data = JSON.stringify(
                        {
                            lstElectionType: $("#lstElectionType").val().toString()
                        });
                    options.dataType = "json";
                    options.contentType = "application/json";
                    options.success = function (results) {
                        $("#lstDisclosureType").empty();
                        $("#lstDisclosureType").append("<option>" + "- Select -" + "</option>");
                        for (var i = 0; i < results.length; i++) {
                            $("#lstDisclosureType").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                        }
                    };
                    options.error = function () {
                    };
                    $.ajax(options);
                    // BIN DISCLOSURE TYPE PRIMARY AND GENERAL ELECTION.

                    // HIDE ELECTION DATE.
                    $("#divElectionDate").hide();
                }
                else {

                    // BIND DISCLOSURE TYPE.
                    //Makes call to "~/ContributionsMonetary/GetDisclosureTypesDefault" and sets options to lstDisclosureType
                    BindLstElectionTypeWithGetDisclosureTypesDefault();
                    // DISCLOSURE TYPE END END END.
                }

                $("#divReportPeriodDates").show();
                $("#divReportPeriodDatesTo").show();

                $("#txtReportPeriodDatesFrom").val("");
                $("#txtReportPeriodDatesTo").val("");

                $("#txtReportPeriodDatesTo").prop("disabled", true);
                $("#txtReportPeriodDatesFrom").prop("disabled", true);

                $("#divFilingReason").show();

                // DISCLOSURE PERIOD SET DEFAULT.
                $("#lstDisclosurePeriod").empty();
                $("#lstDisclosurePeriod").append("<option>" + "- Select -" + "</option>");

                // SET DEFAULT VALUE FOR RESIGNATION/TERMINATION
                $("#lstResigTermType").empty();
                $("#lstResigTermType").append("<option>" + "- Not Applicable -" + "</option>");
            }
            else {

                // SET DEFAULT DISCLOSURE TYPE.
                $("#lstDisclosureType").empty();
                $("#lstDisclosureType").append("<option>" + "- Select -" + "</option>");

                // SET DEFAULT DISCLOSURE PERIOD.
                $("#lstDisclosurePeriod").empty();
                $("#lstDisclosurePeriod").append("<option>" + "- Select -" + "</option>");

                // SET FILING DATE CUT OFF DATE BLANK
                $("#txtReportPeriodDatesFrom").val("");
                $("#txtReportPeriodDatesTo").val("");

                // SET DEFAULT RESIGNATION/TERMINATION.
                $("#lstResigTermType").empty();
                $("#lstResigTermType").append("<option>" + "- Not Applicable -" + "</option>");

                // Clear Branding.
                ClearBranding();

            }

            $('#divTransactionType').hide();
            $("#divTransactionTypeNonItemized").hide();
            $("#divTransactionTypeNonItemWeeklyExp").hide();

        });

        /// Office Type Change
        $("#lstUCOfficeType").change(function () {

            // Clear Values.
            // RESIGNATION/TERMINATION NOT MANDAITORY OTHER THAN OFF-CYCLE
            $("#lblReasonforFiling").text("Resignation/Termination");

            $("#divFilingDateDropDown").hide();
            $("#divElectionDate").show();
            $("#divDisclosurePeriod").show();
            $("#divReportPeriodDates").show();
            $("#divReportPeriodDatesTo").show();
            $("#txtReportPeriodDatesTo").prop("disabled", true);
            $("#txtReportPeriodDatesFrom").prop("disabled", true);

            // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
            $("#divFilingDateOffCycle").hide();
            // HIDE TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
            $("#divReportPeriodDatesTo").show();


            $("#txtReportPeriodDatesTo").addClass("txtWidth");
            $("#txtReportPeriodDatesTo").removeClass("txtWidthOffCycleFilingDate");

            $("#lstResigTermType")[0].selectedIndex = 0;
            $("#lstFilingDate")[0].selectedIndex = 0;
            $("#lstDisclosureType")[0].selectedIndex = 0;
            $("#lstDisclosurePeriod")[0].selectedIndex = 0;
            $("#txtReportPeriodDatesFrom").val("");
            $("#txtReportPeriodDatesTo").val("");

            $m("label[for=lstDisclosureType]").text('');
            $m("#lstDisclosureType").removeClass("error");

            $m("label[for=lstDisclosurePeriod]").text('');
            $m("#lstDisclosurePeriod").removeClass("error");

            $m("label[for=lstResigTermType]").text('');
            $m("#lstResigTermType").removeClass("error");

            $m("label[for=lstFilingDate]").text('');
            $m("#lstFilingDate").removeClass("error");

            $m("label[for=txtReportPeriodDatesTo]").text('');
            $m("#txtReportPeriodDatesTo").removeClass("error");


            var officeType = $("#lstUCOfficeType option:selected").val().toString();
            var officeTypeText = $("#lstUCOfficeType option:selected").text();

            $("#lstElectionDate").empty();
            $("#lstElectionDate").append("<option>" + "- Select -" + "</option>");
            $("#lstDisclosureType").empty();
            $("#lstDisclosureType").append("<option>" + "- Select -" + "</option>");
            $("#lstDisclosurePeriod").empty();
            $("#lstDisclosurePeriod").append("<option>" + "- Select -" + "</option>");

            $("#lstElectionType")[0].selectedIndex = 0;
            $("#lstElectionDate")[0].selectedIndex = 0;
            $("#lstDisclosureType")[0].selectedIndex = 0;
            $("#lstDisclosurePeriod")[0].selectedIndex = 0;
            $("#txtReportPeriodDatesFrom").val("");
            $("#txtReportPeriodDatesTo").val("");

            if (officeTypeText != "- Select -") {
                if (officeType == "2A" || officeType == "5A" || officeType == "6A" || officeType == "7A") {
                    $("#divCounty").show();

                    // County Default to Select.
                    $("#lstUCCounty")[0].selectedIndex = 0;

                    // Hide Municipality.
                    $("#divMunicipality").hide();
                }
                else {
                    $("#divCounty").hide();
                    $("#divMunicipality").hide();
                    // Bind Election Type
                    BindLstElectionTypeWithContributionsMonetaryGetElectionType();

                    $("#divFilingDateDropDown").hide();
                    $("#divElectionDate").show();
                    $("#divReportPeriodDates").show();
                    $("#txtReportPeriodDatesTo").prop("disabled", true);

                    // BIND DISCLOSURE TYPE.
                    //Makes call to "~/ContributionsMonetary/GetDisclosureTypesDefault" and sets options to lstDisclosureType
                    BindLstElectionTypeWithGetDisclosureTypesDefault();
                    // DISCLOSURE TYPE END END END.

                    // NO NEED TO BIND DISCLOSURE PERIOD.
                    $("#lstDisclosurePeriod").empty();
                    $("#lstDisclosurePeriod").append("<option>" + "- Select -" + "</option>");

                    // BIND ELECTION DATE
                    //Makes call to "~/ContributionsMonetary/GetElectionDate/" and sets options to lstElectionDate
                    BindLstElectionDateWithGetElectionDate();
                }
            }
            else {
                // FILER TYPE.
                // CLEAR EVERYTHING DOWN DEROPDOWNS.
                $("#divFilingDateDropDown").hide();
                $("#divElectionDate").show();
                $("#divReportPeriodDates").show();
                $("#txtReportPeriodDatesTo").prop("disabled", true);

                $("#divCounty").hide();
                $("#divMunicipality").hide();

                // Clear Error Messages.
                $m("label[for=lstElectionDate]").text('');
                $m("#lstElectionDate").removeClass("error");

                // Clear Branding.
                ClearBranding();

                // SET DEFAULT ELECTION TYPE.
                $("#lstElectionType").empty();
                $("#lstElectionType").append("<option>" + "- Select -" + "</option>");

                // SET DEFAULT ELECTION DATE.
                $("#lstElectionDate").empty();
                $("#lstElectionDate").append("<option>" + "- Select -" + "</option>");

                // SET DEFAULT DISCLOSURE TYPE.
                $("#lstDisclosureType").empty();
                $("#lstDisclosureType").append("<option>" + "- Select -" + "</option>");

                // SET DEFAULT DISCLOSURE PERIOD.
                $("#lstDisclosurePeriod").empty();
                $("#lstDisclosurePeriod").append("<option>" + "- Select -" + "</option>");

                // SET FILING DATE CUT OFF DATE BLANK
                $("#txtReportPeriodDatesFrom").val("");
                $("#txtReportPeriodDatesTo").val("");

                // SET DEFAULT RESIGNATION/TERMINATION.
                $("#lstResigTermType").empty();
                $("#lstResigTermType").append("<option>" + "- Not Applicable -" + "</option>");

                $("#divDisclosurePeriod").show();
                $("#divReportPeriodDates").show();
                $("#divReportPeriodDatesTo").show();
                // Resignation/Termination
                $("#divFilingReason").show();
            }

            //$("#divHeader").hide();
            $('#divTransactionType').hide();
            $("#divTransactionTypeNonItemized").hide();
            $("#divTransactionTypeNonItemWeeklyExp").hide();
        });
        /// Office Type Change >> END >> END >> END.

        // Municipality Change
        $("#lstUCMuncipality").change(function () {
            // Bind Election Type
            BindLstElectionTypeWithContributionsMonetaryGetElectionType();

            $("#divFilingDateDropDown").hide();
            $("#divElectionDate").show();
            $("#divReportPeriodDates").show();
            $("#txtReportPeriodDatesTo").prop("disabled", true);

            // BIND DISCLOSURE TYPE.
            //Makes call to "~/ContributionsMonetary/GetDisclosureTypesDefault" and sets options to lstDisclosureType
            BindLstElectionTypeWithGetDisclosureTypesDefault();
            // DISCLOSURE TYPE END END END.

            // NO NEED TO BIND DISCLOSURE PERIOD.
            $("#lstDisclosurePeriod").empty();
            $("#lstDisclosurePeriod").append("<option>" + "- Select -" + "</option>");

            // BIND ELECTION DATE
            //Makes call to "~/ContributionsMonetary/GetElectionDate/" and sets options to lstElectionDate
            BindLstElectionDateWithGetElectionDate();
        });

        // County Change
        $("#lstUCCounty").change(function () {

            $("#lstUCMuncipality").prop("disabled", false);
            // Bind Election Type
            var options = {};
            options.url = "@Url.Content("~/ContributionsMonetary/GetMunicipality/")";
            options.type = "POST";
            options.data = JSON.stringify(
                {
                    lstUCCounty: $("#lstUCCounty").val().toString(),
                    lstOfficeType: $("#lstUCOfficeType").val().toString()
                });
            options.dataType = "json";
            options.contentType = "application/json";
            options.success = function (results) {
                $("#divMunicipality").show();
                $("#lstUCMuncipality").empty();
                $("#lstUCMuncipality").append("<option>" + "- Select -" + "</option>");
                for (var i = 0; i < results.length; i++) {
                    $("#lstUCMuncipality").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                }

                if (results.length.toString() == "1") {
                    $("#lstUCMuncipality")[0].selectedIndex = 1;
                    $("#lstUCMuncipality").prop("disabled", true); // ADDED THIS FOR DEFECT - 3211 - ON 12.28.2020 - SB.
                    // Bind Election Type
                    BindLstElectionTypeWithContributionsMonetaryGetElectionType();

                    $("#divFilingDateDropDown").hide();
                    $("#divElectionDate").show();
                    $("#divReportPeriodDates").show();
                    $("#txtReportPeriodDatesTo").prop("disabled", true);

                    // BIND DISCLOSURE TYPE.
                    //Makes call to "~/ContributionsMonetary/GetDisclosureTypesDefault" and sets options to lstDisclosureType
                    BindLstElectionTypeWithGetDisclosureTypesDefault();
                    // DISCLOSURE TYPE END END END. 

                    // NO NEED TO BIND DISCLOSURE PERIOD.
                    $("#lstDisclosurePeriod").empty();
                    $("#lstDisclosurePeriod").append("<option>" + "- Select -" + "</option>");

                    // BIND ELECTION DATE
                    //Makes call to "~/ContributionsMonetary/GetElectionDate/" and sets options to lstElectionDate
                    BindLstElectionDateWithGetElectionDate();
                }
            };
            options.error = function () {
                ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
            };
            $.ajax(options);

        });

        // Election Cycle (Report Year) change.
        $("#lstElectionCycle").change(function () {

            // Clear Values.
            // RESIGNATION/TERMINATION NOT MANDAITORY OTHER THAN OFF-CYCLE
            $("#lblReasonforFiling").text("Resignation/Termination");

            $("#divFilingDateDropDown").hide();
            $("#divElectionDate").show();
            $("#divReportPeriodDates").show();
            $("#divReportPeriodDatesTo").show();
            $("#txtReportPeriodDatesTo").prop("disabled", true);
            $("#txtReportPeriodDatesFrom").prop("disabled", true);

            // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
            $("#divFilingDateOffCycle").hide();
            // HIDE TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
            $("#divReportPeriodDatesTo").show();

            $("#txtReportPeriodDatesTo").addClass("txtWidth");
            $("#txtReportPeriodDatesTo").removeClass("txtWidthOffCycleFilingDate");

            $("#lstResigTermType")[0].selectedIndex = 0;
            $("#lstFilingDate")[0].selectedIndex = 0;
            $("#lstDisclosureType")[0].selectedIndex = 0;
            $("#lstDisclosurePeriod")[0].selectedIndex = 0;
            $("#txtReportPeriodDatesFrom").val("");
            $("#txtReportPeriodDatesTo").val("");

            $m("label[for=lstElectionType]").text('');
            $m("#lstElectionType").removeClass("error");

            $m("label[for=lstElectionDate]").text('');
            $m("#lstElectionDate").removeClass("error");

            $m("label[for=lstUCOfficeType]").text('');
            $m("#lstUCOfficeType").removeClass("error");

            $m("label[for=lstDisclosureType]").text('');
            $m("#lstDisclosureType").removeClass("error");

            $m("label[for=lstDisclosurePeriod]").text('');
            $m("#lstDisclosurePeriod").removeClass("error");

            $m("label[for=lstResigTermType]").text('');
            $m("#lstResigTermType").removeClass("error");

            $m("label[for=lstFilingDate]").text('');
            $m("#lstFilingDate").removeClass("error");

            $m("label[for=txtReportPeriodDatesTo]").text('');
            $m("#txtReportPeriodDatesTo").removeClass("error");

            $("#lstUCOfficeType")[0].selectedIndex = 0;
            $("#lstElectionType")[0].selectedIndex = 0;
            $("#lstElectionDate")[0].selectedIndex = 0;
            $("#lstDisclosureType")[0].selectedIndex = 0;
            $("#lstDisclosurePeriod")[0].selectedIndex = 0;
            $("#txtReportPeriodDatesFrom").val("");
            $("#txtReportPeriodDatesTo").val("");

            if ($("#lstElectionCycle option:selected").text().toString() != "- Select -") {

                // Clear Branding.
                ClearBranding();

                // SET DEFAULT ELECTION TYPE.
                $("#lstElectionType").empty();
                $("#lstElectionType").append("<option>" + "- Select -" + "</option>");

                // SET DEFAULT ELECTION DATE.
                $("#lstElectionDate").empty();
                $("#lstElectionDate").append("<option>" + "- Select -" + "</option>");

                // SET DEFAULT DISCLOSURE TYPE.
                $("#lstDisclosureType").empty();
                $("#lstDisclosureType").append("<option>" + "- Select -" + "</option>");

                // SET DEFAULT DISCLOSURE PERIOD.
                $("#lstDisclosurePeriod").empty();
                $("#lstDisclosurePeriod").append("<option>" + "- Select -" + "</option>");

                // SET FILING DATE CUT OFF DATE BLANK
                $("#txtReportPeriodDatesFrom").val("");
                $("#txtReportPeriodDatesTo").val("");

                // SET DEFAULT RESIGNATION/TERMINATION.
                $("#lstResigTermType").empty();
                $("#lstResigTermType").append("<option>" + "- Not Applicable -" + "</option>");

                $("#divDisclosurePeriod").show();
                $("#divReportPeriodDates").show();
                $("#divReportPeriodDatesTo").show();
                // Resignation/Termination
                $("#divFilingReason").show();

                $("#lstUCOfficeType").empty();
                $("#lstUCOfficeType").append("<option>" + "- Select -" + "</option>");

                // Bind Office Type
                $.post("@Url.Content("~/ContributionsMonetary/GetOfficeTypes/")", {
                    lstElectionCycle: $("#lstElectionCycle").val().toString()
                }, function (results) {
                    if (results != "") {
                        //$("#lstUCOfficeType").empty();

                        for (var i = 0; i < results.length; i++) {
                            $("#lstUCOfficeType").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                        }

                        if (@Session["COMM_TYPE_ID"] == "23") {
                            $("#lstUCOfficeType")[0].selectedIndex = 1;
                            // WE ARE DISPLAYING ONLY SATE SO BY DEFAULT IT WILL SELECT FILING TYPE STATE...
                                    // AND FILL THE ELECTION TYPE FOR STATE.
                                    //$("#lstUCOfficeType")[0].selectedIndex = 1; // ONLY ONE VALUE SO NO NEED TO SET.
                                    // BIND ELECTION TYPE FOR STATE.
                                    // Bind Election Type
                            $("#divLoading").show();
                            // Bind Election Type
                            BindLstElectionTypeWithContributionsMonetaryGetElectionType();
                        }
                        // IF OFFICE TYPE ONLY STATE THEN BIND DIRECTLY MORE THAN ONE STATE THEN..
                        // .. BIND SELECT AND USER HAS TO SELECTION VALUE.
                        //if (results.length.toString() == "1") {
                        setTimeout(
                            function () {
                                if (results.length.toString() == "1") {
                                    $("#lstUCOfficeType")[0].selectedIndex = 1;

                                    // WE ARE DISPLAYING ONLY SATE SO BY DEFAULT IT WILL SELECT FILING TYPE STATE...
                                    // AND FILL THE ELECTION TYPE FOR STATE.
                                    //$("#lstUCOfficeType")[0].selectedIndex = 1; // ONLY ONE VALUE SO NO NEED TO SET.
                                    // BIND ELECTION TYPE FOR STATE.
                                    // Bind Election Type
                                    $("#divLoading").show();
                                    // Bind Election Type
                                    BindLstElectionTypeWithContributionsMonetaryGetElectionType();
                                }
                            }, 1000);
                        //}
                    }
                    else {
                        $("#lstUCOfficeType").empty();
                        $("#lstUCOfficeType").append("<option>" + "- Select -" + "</option>");

                        $("#lstElectionType").empty();
                        $("#lstElectionType").append("<option>" + "- Select -" + "</option>");
                    }
                });


                $("#divFilingDateDropDown").hide();
                $("#divElectionDate").show();
                $("#divReportPeriodDates").show();
                $("#txtReportPeriodDatesTo").prop("disabled", true);

                // BIND EMPTY DROPDOWN.
                $("#lstDisclosureType").empty();
                $("#lstDisclosureType").append("<option>" + "- Select -" + "</option>");

                // NO NEED TO BIND DISCLOSURE PERIOD.
                $("#lstDisclosurePeriod").empty();
                $("#lstDisclosurePeriod").append("<option>" + "- Select -" + "</option>");


                $("#divFilingDateDropDown").hide();
                $("#divElectionDate").show();
                $("#divReportPeriodDates").show();
                $("#txtReportPeriodDatesTo").prop("disabled", true);

                // Clear Error Messages.
                $m("label[for=lstElectionDate]").text('');
                $m("#lstElectionDate").removeClass("error");
            }
            else {

                $("#divFilingDateDropDown").hide();
                $("#divElectionDate").show();
                $("#divReportPeriodDates").show();
                $("#txtReportPeriodDatesTo").prop("disabled", true);

                // Clear Error Messages.
                $m("label[for=lstElectionDate]").text('');
                $m("#lstElectionDate").removeClass("error");

                // FILER TYPE (OFFICE TYPE)
                $("#lstUCOfficeType").empty();
                $("#lstUCOfficeType").append("<option>" + "- Select -" + "</option>");

                // SET DEFAULT ELECTION TYPE.
                $("#lstElectionType").empty();
                $("#lstElectionType").append("<option>" + "- Select -" + "</option>");

                // SET DEFAULT ELECTION DATE.
                $("#lstElectionDate").empty();
                $("#lstElectionDate").append("<option>" + "- Select -" + "</option>");

                // SET DEFAULT DISCLOSURE TYPE.
                $("#lstDisclosureType").empty();
                $("#lstDisclosureType").append("<option>" + "- Select -" + "</option>");

                // SET DEFAULT DISCLOSURE PERIOD.
                $("#lstDisclosurePeriod").empty();
                $("#lstDisclosurePeriod").append("<option>" + "- Select -" + "</option>");

                // SET FILING DATE CUT OFF DATE BLANK
                $("#txtReportPeriodDatesFrom").val("");
                $("#txtReportPeriodDatesTo").val("");

                // SET DEFAULT RESIGNATION/TERMINATION.
                $("#lstResigTermType").empty();
                $("#lstResigTermType").append("<option>" + "- Not Applicable -" + "</option>");

                $("#divDisclosurePeriod").show();
                $("#divReportPeriodDates").show();
                $("#divReportPeriodDatesTo").show();
                // Resignation/Termination
                $("#divFilingReason").show();

                // Clear Branding.
                ClearBranding();
            }

            //$("#divHeader").hide();
            $('#divTransactionType').hide();
            $("#divTransactionTypeNonItemized").hide();
            $("#divTransactionTypeNonItemWeeklyExp").hide();
        });

        // txtFilerID Change
        $("#txtFilerID").change(function () {
            sessionStorage.removeItem("TransactionTypeId");
            sessionStorage.setItem("Cnty_PageName", "ContributionsMonetary");
            var url = '@Url.Action("RoleMap", "RoleMap", new { Cnty_FilerID = "__FilerID__" })';
            //Allways display a loading symbol when were chaging or reloading the page.
            $m("#divLoading").show();
            window.location.href = url.replace('__FilerID__', $("#txtFilerID option:selected").text());
        });


        function ClearServerSideErrors() {
            //removing error class and error messages in search form
            $m("label[for=lstElectionCycle]").text('');
            $m("#lstElectionCycle").removeClass("error");

            $m("label[for=txtCommitteeName]").text('');
            $m("#txtCommitteeName").removeClass("error");

            $m("label[for=txtFilerID]").text('');
            $m("#txtFilerID").removeClass("error");

            $m("label[for=lstUCOfficeType]").text('');
            $m("#lstUCOfficeType").removeClass("error");

            $m("label[for=lstUCCounty]").text('');
            $m("#lstUCCounty").removeClass("error");

            $m("label[for=lstUCMuncipality]").text('');
            $m("#lstUCMuncipality").removeClass("error");

            $m("label[for=lstElectionType]").text('');
            $m("#lstElectionType").removeClass("error");

            $m("label[for=lstElectionDate]").text('');
            $m("#lstElectionDate").removeClass("error");

            $m("label[for=lstDisclosureType]").text('');
            $m("#lstDisclosureType").removeClass("error");

            $m("label[for=lstDisclosurePeriod]").text('');
            $m("#lstDisclosurePeriod").removeClass("error");

            $m("label[for=txtReportPeriodDatesFrom]").text('');
            $m("#txtReportPeriodDatesFrom").removeClass("error");

            $m("label[for=txtReportPeriodDatesTo]").text('');
            $m("#txtReportPeriodDatesTo").removeClass("error");
        }

    }); // Document END>>END>> END>>>>>>

    function CallHelpFilter() {

        var myWidth = 500;
        var myHeight = 600;

        var left = (screen.width - myWidth) / 2;
        var top = (screen.height - myHeight) / 4;

        window.open("@Url.Content("~/ContributionsMonetary/ContributionsMonetarySearchHelp/")", "Help", 'width = 450, height = 600, scrollbars = 1, width = ' + myWidth + ', height = ' + myHeight + ', top = ' + top + ', left = ' + left);
    }

</script>
