
@{
    ViewBag.Title = ": Non-Itemimized Indeptendent Expenditure - 24 Hour PIDA - Expenditure Payments";
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
}

<form id="NonItemizedTransactionIESchedFForm">
    @Html.Partial("UserControls/_UC_Alert_Message")
    @Html.Partial("UserControls/_UC_Delete_Message")
    <div id="divMainNew" class="mainDiv">
        <div class="mainLowerDivCSSDesktop">
            <div id="divhide" class="hideShowButtonCSS">
                Filter
                <button id="btnCommonShowHide1" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonShowHide">
                    <img src="~/Content/Images/up20.png" alt="Up/Hide Filter Arrow" />
                </button>
            </div>
            <div id="divshow" class="hideShowButtonCSS">
                Filter
                <button id="btnCommonHideShow1" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonHideShow">
                    <img src="~/Content/Images/down20.png" alt="Down/Show Filter Arrow" />
                </button>
            </div>
        </div>
        <div class="mainLowerDivCSS">
            <div id="divhideForMobile" class="hideShowButtonCSS">
                File a New Disclosure Report
                <div class="paddingleft6emcss floatRight">
                    Filter
                    <button id="btnCommonShowHide2" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonShowHide">
                        <img src="~/Content/Images/up20.png" alt="Up/Hide Filter Arrow" />
                    </button>
                </div>
            </div>
            <div id="divshowForMobile" class="hideShowButtonCSS">
                File a New Disclosure Report
                <div class="paddingleft6emcss floatRight">
                    Filter
                    <button id="btnCommonHideShow2" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonHideShow">
                        <img src="~/Content/Images/down20.png" alt="Down/Show Filter Arrow" />
                    </button>
                </div>
            </div>
        </div>
        <div id="divTopSection">
            <div id="selectorItsRpt">
                <div class="divWidth">
                    <div class="floatRightNew clsShowButtonClass">
                        <input type="button" id="btnCommonSearch" class="btn btn-default clsCommonSearch ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Apply" title="Apply" style="font-size:12px;" />&nbsp;
                        <input type="button" id="btnCommonClear" class="btn btn-default clsCommonClear ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />&nbsp;
                        <button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelp();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" class="ButtonImageCSS" title="Help" id="imgHelp" /></button>
                    </div>
                    <div class="requiredTextFilter">* marks required fields</div>
                    <div id="divFilerID">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilerID">* Filer ID</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("txtFilerID", ViewData["txtFilerID"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblFilerID" })
                        </div>
                    </div>
                    <div id="divFilerType">
                        <div class="verticalCSSDestop lblCSS"><span id="lblFilerType">* Filer Type</span></div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.TextBox("txtFilerType", null, new { id = "txtFilerType", @class = "txtWidth txtReportPeriodDatesFrom", aria_labelledby = "lblFilerType" })
                        </div>
                    </div>
                    <div id="divCommitteeName">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblCommitteeName">* Candidate/Committee Name</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("txtCommitteeName", ViewData["txtCommitteeName"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblCommitteeName" })
                        </div>
                    </div>
                    <div id="divElectionCycle">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblElectionCycle">* Report Year</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstElectionCycle", ViewData["lstElectionCycle"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblElectionCycle" })
                        </div>
                    </div>
                    <div id="divOfficeType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblOfficeType">* Election Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstUCOfficeType", null, "- Select -", new { id = "lstUCOfficeType", @class = "spanMobileWidth", aria_labelledby = "lblOfficeType" })
                        </div>
                    </div>
                    <div id="divCounty">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblCounty">* County</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstUCCounty", null, "- Select -", new { @class = "spanMobileWidth", aria_labelledby = "lblCounty" })
                        </div>
                    </div>
                    <div id="divMunicipality">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblMunicipality">* Muncipality</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstUCMuncipality", null, "- Select -", new { @class = "spanMobileWidth", aria_labelledby = "lblMunicipality" })
                        </div>
                    </div>
                    <div id="divElectionType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblElectionType">* Report Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstElectionType", ViewData["lstElectionType"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblElectionType" })
                        </div>
                    </div>
                    <div id="divElectionDate">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblElectionDate">* Election Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstElectionDate", ViewData["lstElectionDate"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblElectionDate" })
                        </div>
                    </div>
                    <div id="divDisclosureType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblDisclosureType">* Disclosure Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstDisclosureType", ViewData["lstDisclosureType"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblDisclosureType" })
                        </div>
                    </div>
                    <div id="divDisclosurePeriod">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblDisclosurePeriod">* Disclosure Period</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstDisclosurePeriod", null, new { @class = "spanMobileWidth", aria_labelledby = "lblDisclosurePeriod" })
                        </div>
                    </div>
                    <div id="divReportPeriodDates">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblReportPeriodDatesFrom">* From Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.TextBox("searchTerm", null, new { id = "txtReportPeriodDatesFrom", @class = "txtWidth", aria_labelledby = "lblReportPeriodDatesFrom" })
                        </div>
                    </div>
                    <div id="divReportPeriodDatesTo">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblReportPeriodDatesTo">* To Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.TextBox("searchTerm", null, new { id = "txtReportPeriodDatesTo", @class = "txtWidth", aria_labelledby = "lblReportPeriodDatesTo" })
                        </div>
                    </div>
                    <div class="floatRightNew" style="padding-bottom: 2em;">
                        <input type="button" id="btnCommonSearch2" class="btn btn-default clsCommonSearch ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Apply" title="Search" style="font-size:12px;" />&nbsp;
                        <input type="button" id="btnCommonClear2" class="btn btn-default clsCommonClear ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />&nbsp;
                        <button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelp();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" class="ButtonImageCSS" title="Help" id="imgHelp2" /></button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="divBreadCrumb" class="breadCrumbDivCSS breadCrumbWidth">
        <nav aria-label="Breadcrumbs" id="pBreadCrumb" class="FontSizeCss">
            <ol class="breadcrumb">
                <li>@Html.ActionLink("File a Disclosure Report", "ContributionsMonetary", "ContributionsMonetary", null, new { @class = "lnkLogout" })</li>
                <li class="active">Expenditure Payments</li>
            </ol>
        </nav>
        <div id="divHeader2" class="paddingtoppt5" style="width: 170%;">
            <h1>
                <span id="lblHeader">File a Disclosure Report</span> -
                <span id="lblHEleYear">File a Disclosure Report</span>
                <span id="lblHDisclPer">File a Disclosure Report</span>
            </h1>
        </div>
        <div id="divHeader" class="paddingtoppt5" style="width: 170%;">
            <div class="paddingTop0em2em DisplayInlineBlock">
                <h3><span id="lblHeader2">Expenditure Payments</span></h3>
            </div>
        </div>
    </div>

    <div id="divGrid" class="divGridCSSTransferin">
        @Html.Partial("UserControls/_UC_Loding")
        @Html.Partial("UserControls/_UC_GridCommonNIIEWeeklyExpenditure")
    </div>
    <div id="divUCIETransactionsHistory" class="divGridCSSTransferin paddingTop1em">
        @Html.Partial("UserControls/_UC_NonItemIEWeeklyExpenditure_History_Grid")
    </div>

</form>

<div id="dialog-form_Sched_F_IE" title="Add/Edit Transaction">
    <form id="DialogBoxSchedFIEForm">
        <div class="divWidthSchedABC">
            <div style="width: 100%;">
                <div class="requiredTextDialogs">Required fields are marked with an *</div>
                <div id="dvSubcontractorExpenditurePayments">
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblSubcontractor">Is Expenditure Subcontracted?</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstSubcontractor", ViewData["lstSubcontractor"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblSubcontractor" })
                    </div>
                </div>

                <div id="dvLiabilityxpenditurePayments" class="divClearBoth">
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblLiability">Is this Expenditure a Partial Payment OR Payment on an Outstanding Liability?</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstLiability", ViewData["lstLiability"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblLiability" })
                    </div>
                </div>

                <div id="dvLiabilityExists" class="divClearBoth">
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblLiabilityExists">Has This Liability Been Previously Reported?</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstLiabilityExists", ViewData["lstLiabilityExists"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblLiabilityExists" })
                    </div>
                </div>

                <div id="tdTreasurerName">
                    <div id="txtTreasurerName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblTreasurerName">* Treasurer Name</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtTreasurerName", null, new { id = "txtTreasurerName", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "90", aria_labelledby = "lblTreasurerName" })
                    </div>
                </div>

                <div id="tdTreasurerOccupation">
                    <div id="txtTreasurerOccupation_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblTreasurerOccupation">* Treasurer Occupation</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtTreasurerOccupation", null, new { id = "txtTreasurerOccupation", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "40", aria_labelledby = "lblTreasurerOccupation" })
                    </div>
                </div>

                <div id="tdTreasurerEmployer">
                    <div id="txtTreasurerEmployer_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblTreasurerEmployer">* Treasurer Employer</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtTreasurerEmployer", null, new { id = "txtTreasurerEmployer", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "60", aria_labelledby = "lblTreasurerEmployer" })
                    </div>
                </div>

                <div id="divTreasurerStreetAddress">
                    <div id="txtStreetNameTreasurer_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblStreetNameTreasurer">* Treasurer Street Address</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtStreetNameTreasurer", null, new { id = "txtStreetNameTreasurer", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "60", aria_labelledby = "lblStreetNameTreasurer" })
                    </div>
                </div>

                <div id="divTreasurerCity">
                    <div id="txtCityTreasurer_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblCityTreasurer">* Treasurer City</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtCityTreasurer", null, new { id = "txtCityTreasurer", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "30", aria_labelledby = "lblCityTreasurer" })
                    </div>
                </div>

                <div id="divTreasurerState">
                    <div id="txtStateTreasurer_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblStateTreasurer">* Treasurer State</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtStateTreasurer", null, new { id = "txtStateTreasurer", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "2", aria_labelledby = "lblStateTreasurer" })
                    </div>
                </div>

                <div id="divTreasurerZip5">
                    <div id="txtZipCodeTreasurer_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblZipCodeTreasurer">* Treasurer Zip Code</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtZipCodeTreasurer", null, new { id = "txtZipCodeTreasurer", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "10", aria_labelledby = "lblZipCodeTreasurer" })
                    </div>
                </div>

                <div id="tdPartnershipName">
                    <div id="txtPayeeName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblPartnershipName">* Entity/Recipient Name</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtPayeeName", null, new { id = "txtPayeeName", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "40", aria_labelledby = "lblPartnershipName" })
                    </div>
                </div>

                <div id="tdCountryContributionChk" class="divClearBoth">
                    <div class="verticalCSSDestopForLableSched_ABC lblCSSAdd">
                        <span id="lblOtherCountry">Other Country</span>
                    </div>
                    <div class="verticalCSSDestopForCheckBoxSched_ABC DDLCSSAdd">
                        @Html.CheckBox("chkCountry", false, new { @class = "txtWidthForDialogSched_ABC_CountryChkbox", aria_labelledby = "lblOtherCountry" })
                    </div>
                </div>
                <div id="tdCountryContributionTxt" class="divClearBoth">
                    <div id="txtCountry_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSched_ABC lblCSSAdd">
                        <span id="lblCountry">* Country</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSched_ABC DDLCSSAdd">
                        @Html.TextBox("txtCountry", null, new { id = "txtCountry", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "30", aria_labelledby = "lblCountry" })
                    </div>
                </div>

                <div id="divStreetAddress">
                    <div id="txtStreetName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblStreetName">* Street Address</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtStreetName", null, new { id = "txtStreetName", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "60", aria_labelledby = "lblStreetName" })
                    </div>
                </div>

                <div id="divCity">
                    <div id="txtCity_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblCity">* City</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtCity", null, new { id = "txtCity", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "30", aria_labelledby = "lblCity" })
                    </div>
                </div>

                <div id="divState">
                    <div id="txtState_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblState">* State</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtState", null, new { id = "txtState", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "2", aria_labelledby = "lblState" })
                    </div>
                </div>

                <div id="divZip5">
                    <div id="txtZipCode_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblZip5">* Zip Code</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtZipCode", null, new { id = "txtZipCode", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "10", aria_labelledby = "lblZip5" })
                    </div>
                </div>

                <div id="tdDateRcvd">
                    <div id="txtCurrentDateIE24HourExp_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblDateReceived">* Date Paid</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        <input type="text" id="txtCurrentDateIE24HourExp" name="txtCurrentDateIE24HourExp" class="datepicker txtWidthForDateSched_ABC txtCurrentDateCls required zIndexCSS" maxlength="10" aria-labelledby = "lblDateReceived" />
                    </div>
                </div>

                <div id="tdIndependentExpenditureDescription">
                    <div id="txtIndependentExpenditureDescription_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblIndependentExpenditureDescription">* Independent Expenditure Description</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtIndependentExpenditureDescription", null, new { id = "txtIndependentExpenditureDescription", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "40", aria_labelledby = "lblIndependentExpenditureDescription" })
                    </div>
                </div>

                <div id="tdCandidateNameBPReference">
                    <div id="txtCandidateNameBPReference_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblCandidateNameBPReference">* Candidate Name/Ballot Proposal Reference</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtCandidateNameBPReference", null, new { id = "txtCandidateNameBPReference", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "40", aria_labelledby = "lblCandidateNameBPReference" })
                    </div>
                </div>

                <div id="dvSupported">
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblSupported">* Supported</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstSupported", ViewData["lstSupported"] as SelectList, new { @class = "txtWidthForDialogSched_A required zIndexCSS", aria_labelledby = "lblSupported" })
                    </div>
                </div>

                <div id="tdPurposeCodeExpenditurePayments">
                    <div id="lstPurposeCode_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblPurposeName">* Purpose Code</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstPurposeCode", ViewData["lstPurposeCode"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblPurposeName" })
                    </div>
                </div>

                <div id="dvDateIncurred">
                    <div id="lstDateIncurred_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblDateIncurred">* Date Incurred & Original Amount</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstDateIncurred", ViewData["lstDateIncurred"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblDateIncurred" })
                    </div>
                </div>

                <div id="tdMethod">
                    <div id="lstMethodIE24HExpPayF_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblMethodIEWeeklyContr">* Method</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstMethodIE24HExpPayF", ViewData["lstMethodIE24HExpPayF"] as SelectList, new { @class = "txtWidthForDialogSched_A required zIndexCSS", aria_labelledby = "lblMethodIEWeeklyContr" })
                    </div>
                </div>
                <div id="tdCheck">
                    <div id="txtCheckIE24ExpPayF_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblCheck">* Check #</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtCheckIE24ExpPayF", null, new { id = "txtCheckIE24ExpPayF", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "30", aria_labelledby = "lblCheck" })
                    </div>
                </div>

                <div id="dvOriginalAmtTxt" class="divClearBoth">
                    <div id="txtOriginalAmount_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblOriginalAmountTxt">* Original Amount $</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtOriginalAmount", null, new { id = "txtOriginalAmount", @class = "txtWidthForDialogSched_A required", @maxlength = "12", aria_required = "true", aria_labelledby = "lblOriginalAmountTxt" })
                    </div>
                </div>

                <div id="tdAmt">
                    <div id="txtAmtIE24HrPIDAExpenditure_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblAmount">* Amount $</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtAmtIE24HrPIDAExpenditure", null, new { id = "txtAmtIE24HrPIDAExpenditure", @class = "txtWidthForDialogSched_A required", @maxlength = "12", aria_required = "true", aria_labelledby = "lblAmount" })
                    </div>
                </div>

                <div id="dvOutstandingAmt">
                    <div id="txtOutstandingAmt_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblOutstandingAmt">Outstanding Amount $</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtOutstandingAmt", null, new { id = "txtOutstandingAmt", @class = "txtWidthForDialogSched_A required", @maxlength = "12", aria_required = "true", aria_labelledby = "lblOutstandingAmt" })
                    </div>
                </div>

                <div id="tdExplanation">
                    <div id="txtExplanationSchedFIE24_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblExplanation">* Explanation</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtExplanationSchedFIE24", null, new { id = "txtExplanationSchedFIE24", @class = "txtWidthForDialogSched_A", @maxlength = "250", aria_labelledby = "lblExplanation" })
                    </div>
                </div>

                <div id="AUSchedA24HNoticeId" class="AddLeftCSSSchedABC">
                    <input type="button" id="btnSaveSchedFIEWeeklyExp" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Save" title="Save" style="font-size:12px;" />
                    <input type="button" id="btnUpdateSchedFIEWeeklyExp" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Save" title="Save" style="font-size:12px;" />
                    <input type="button" id="btnClearDialog" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all cancel" name="Command" value="Clear" title="Clear" style="font-size:12px;" />
                    <input type="button" id="btnCloseDialog" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Close" title="Close" style="font-size:12px;" />
                </div>
            </div>
        </div>
    </form>
</div>

<script>
    $m = jQuery.noConflict();

    $('#menuNav').css('opacity', 0);
    $('#NonItemizedTransactionIESchedFForm').css('opacity', 0);
    $('#DialogBoxSchedFIEForm').css('opacity', 0);
    $('#divWelcomeBanner').css('opacity', 0);
    $(window).on('load', function () {
        $('#menuNav').css('opacity', 1);
        $('#NonItemizedTransactionIESchedFForm').css('opacity', 1);
        $('#DialogBoxSchedFIEForm').css('opacity', 1);
        $('#divWelcomeBanner').css('opacity', 1);
    });

    $m(document).ready(function () {

        // ROLE IF AUTHORIZED USER = 11 THEN DISABLE THE ADD BUTTON.
        if (@Session["RoleID_FILER"] == "11") {
            $(".submitTransBtnCls").hide();
        }
        else {
            $(".submitTransBtnCls").show();
        }

        // Hide the Cut Off Date and Filing Date based on Disclosure Type.
        $("#divDisclosurePeriod").hide();

        // DEFAULT VALUES
        $("#lblHDisclPer").text("");

        // Common for Non-Itemized Transactions.
        sessionStorage.removeItem("TransactionTypeId");

        // Edit selection gird.
        sessionStorage.setItem("EditYesNo", "No");

        // COMMON CODE - FOR VALIDATION AND FILL THE LEFT SIDE DATA.
        validatePage("DialogBoxSchedFIEForm");
        NonItemizedLeftFilterValues();

        // SUBMIT BUTTON TRANSACTIONS SELECTED OR NOT SESSION.
        sessionStorage.removeItem("SubmitTransId");

        // SUBMIT BUTTON BY DEFAULT IT WILL BE DISABLED
        $("#btnSubmitSchedAIEWeeklyContr").prop("disabled", true);

        // Treasurer Name Disable By Default. Non-Editable Field.
        $("#txtTreasurerName").prop("disabled", true);

        // Original Amount
        $("#txtOutstandingAmt").prop("disabled", true);

        // Liability Exist By Default Disabled.
        $("#lstLiabilityExists").prop("disabled", true);


        // Hide the History Grid by Default.
        $("#divUCIETransactionsHistory").hide();

        // ======================================================================================================================================
        /// Dialog Box Code /////////////////////////////////////////////////////////////////////
        var dialog_Sched_F_IE;

        dialog_Sched_F_IE = $m("#dialog-form_Sched_F_IE").dialog({
            autoOpen: false,
            resizable: false,
            height: 'auto',
            width: 500,
            position: {
                my: "center top",
                at: "center top+250"
            },
            modal: true,
            resizable: false,
            closeOnEscape: false,
            open: function (event, ui) { hideDialogXButton(this); }
        });

        $(window).resize(function () {
            //// get the screen height and width
            if ($(window).width() < 500) {
                dialog_Sched_F_IE = $m("#dialog-form_Sched_F_IE").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 300,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 500 && $(window).width() <= 900) {
                dialog_Sched_F_IE = $m("#dialog-form_Sched_F_IE").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 456,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 900) {
                dialog_Sched_F_IE = $m("#dialog-form_Sched_F_IE").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 456,
                    modal: true,
                    dialogClass: 'DialogCustomStyle',
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
        }).resize();
        // ======================================================================================================================================
        /// Dialog Box Code /////////////////////////////////////////////////////////////////////

        // ======================================================================================================================================
        // DATE FORMATE....///////////////////////////////////////////////
        // DATE PICKER CONTROL
        $m("#txtCurrentDateIE24HourExp").datepicker({
            showOn: "button",
            buttonImage: "../../Content/Images/Calendar.png",
            buttonImageOnly: false,
            buttonText: "Select From Date",
            changeMonth: true,
            changeYear: true,
            numberOfMonths: 1,
            minDate: sessionStorage.getItem("CutOffDate").toString(),
            maxDate: sessionStorage.getItem("FilingDate").toString(),
            dateFormat: 'mm/dd/yy',
            onChange: function () {
                $m("#txtCurrentDateIE24HourExp").valid();
            },
        }).datepicker();

        $m('.datepicker').attr("placeholder", "MM/DD/YYYY").datepicker();
        $("#txtCurrentDateIE24HourExp").addClass("watermarkHTMLTextBox");
        $("#txtCurrentDateIE24HourExp").focusin(function () {
            $("#txtCurrentDateIE24HourExp").removeClass("watermarkHTMLTextBox");
        });

        // Watermark TextBox. ////////////////////////////////////////////////////

        // DATE FORMATE....///////////////////////////////////////////////
        $("#txtCurrentDateIE24HourExp").focusout(function () {
            if ($("#txtCurrentDateIE24HourExp").val().toString() != "") {
                if ($("#txtCurrentDateIE24HourExp").val().toString() != "MM/DD/YYYY") {
                    var results = GetValidDateIE24HExp();

                    if (results == "") {
                        var MyDate = new Date($("#txtCurrentDateIE24HourExp").val().toString());
                        var MyDateString;
                        MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                            + ('0' + MyDate.getDate()).slice(-2) + '/'
                            + MyDate.getFullYear();
                        $("#txtCurrentDateIE24HourExp").val("");
                        $("#txtCurrentDateIE24HourExp").val(MyDateString);
                    }
                }
            }
            else {
                $("#txtCurrentDateIE24HourExp").addClass("watermarkHTMLTextBox");
            }
        });
        // DATE FORMATE....///////////////////////////////////////////////
        // ======================================================================================================================================

        /// AUTO COMPLETE SEARCH CODE //////////////////////////////////////////////////////////////////////////////////////
        //----------------------------------------------------------------------------------------------------------------------------------------
        // PAYEE NAME.
        $m("#txtPayeeName").autocomplete({
            source: function (request, response) {
                if ($("#lstLiabilityExists option:selected").val() == "Y") {
                    // Loading page....
                    $("#divLoading").show();
                    $.post("@Url.Content("~/NonItemIE24HourPIDAExpenditureSchedF/GetAutoCompleteCreditorName/")", request, response)
                        .done(function (data) {
                            // Loading page....
                            $("#divLoading").hide();
                            sessionStorage.setItem("ExistingLiabName", "Yes");
                        });
                }
                else {
                    $.post("@Url.Content("~/NonItemIE24HourPIDAExpenditureSchedF/AutoCompleteEntityName/")", request, response);
                }
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();

                var selectedValue = ui.item.label;

                $.post("@Url.Content("~/NonItemIE24HourPIDAExpenditureSchedF/GetAutoCompleteNameData/")", {
                    strValue: selectedValue.toString()
                }, function (results) {
                    $.each(results, function (i, item) {
                        $("#txtPayeeName").val(item.FilingEntityName.toString());
                        $("#txtStreetName").val(item.FilingEntityStreetName.toString());
                        $("#txtCity").val(item.FilingEntityCity.toString());
                        $("#txtState").val(item.FilingEntityState.toString());
                        $("#txtZipCode").val(item.FilingEntityZip.toString());
                        $("#txtCountry").val(item.FilingEntityCountry.toString());
                        if ($("#txtCountry").val().toString() == "United States") {
                            $("#chkCountry").prop('checked', false);
                            $("#txtCountry").prop("disabled", true);
                            $("#txtState").prop('maxLength', '2');
                            if (item.FilingEntityZip.toString() != "") {
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            }
                            else {
                                $("#txtZipCode").addClass("watermarkHTMLTextBox");
                                $("#txtZipCode").blur();
                            }
                        } else {
                            $("#chkCountry").prop('checked', true);
                            $("#txtCountry").prop("disabled", false);
                            $("#txtState").prop('maxLength', '30');

                            $m('#txtZipCode').attr("placeholder", "");
                            $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                        }
                        $m("#txtPayeeName").valid();
                        // Address validation
                        $m("#txtCountry").valid();
                        $m("#txtStreetName").valid();
                        $m("#txtCity").valid();
                        $m("#txtState").valid();
                        $m("#txtZipCode").valid();

                        sessionStorage.setItem("LibFlngEntyId", item.FilingEntityId.toString());

                    });

                    //Check Liability 'Yes' then bring Date Incurred and Amount.
                    if ($("#lstLiabilityExists option:selected").val().toString() == "Y") {

                        // Load Date Incurred Data.
                        // Get Date Incurred Data.
                        // Bind Date Incurred Data.
                        var options = {};
                        options.url = "@Url.Content("~/NonItemIE24HourPIDAExpenditureSchedF/GetDateIncurred/")";
                        options.type = "POST";
                        options.data = JSON.stringify(
                            {
                                strFilingEntityId: null,
                                strFilerId: $("#txtFilerID option:selected").text().toString()
                            });
                        options.dataType = "json";
                        options.contentType = "application/json";
                        options.success = function (results) {
                            $("#lstDateIncurred").empty();
                            $("#lstDateIncurred").append("<option value='" + '0' + "'>" + "- Select -" + "</option>");
                            for (var i = 0; i < results.length; i++) {
                                $("#lstDateIncurred").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                            }
                        };
                        options.error = function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                        };
                        $.ajax(options);
                    }
                });
            }
        });
        /// AUTO COMPLETE SEARCH CODE //////////////////////////////////////////////////////////////////////////////////////
        //----------------------------------------------------------------------------------------------------------------------------------------

        // FOCUS IN WHEN EXISTING LIABILITY
        // WE HAVE TO RESET THE DATE INCURRED AND AMOUNT.
        $("#txtPayeeName").focusin(function () {
            if ($("#lstLiabilityExists option:selected").val().toString() == "Y") {

                $("#lstDateIncurred").empty();
                $("#lstDateIncurred").append("<option value='" + '0' + "'>" + "- Select -" + "</option>");

                $("#txtAmtIE24HrPIDAExpenditure").val("");
                $("#txtAmtIE24HrPIDAExpenditure").blur();
                $("#txtOutstandingAmt").val("");
                $("#txtOutstandingAmt").blur();
            }
        });

        // Partial Liability and if Existing Liabilty Yes then it will bring
        // Date Incurred and Original Amount Dropdown will show.
        $("#txtPayeeName").focusout(function () {

            if (sessionStorage.getItem("ExistingLiabName") == null) {
                if ($("#txtPayeeName").val() != "") {

                    if ($("#lstLiabilityExists option:selected").val().toString() == "Y") {

                        // GET THE FILING ENTITY EXISTS OR NOT.
                        $.post("@Url.Content("~/ExpenditurePaymentsSchedF/GetPayeeNameExistsLiability/")", {
                            strPayeeName: $("#txtPayeeName").val().toString()
                        }, function (resultsLiability) {
                            if (resultsLiability.length != 0) {

                                $.each(resultsLiability, function (i, item) {
                                    sessionStorage.setItem("EntityIdLiab", item.FilingEntityId.toString());
                                });

                                // Bind Date Incurred Data.
                                $.post("@Url.Content("~/NonItemIEWeeklyExpenditureSchedF/GetDateIncurred/")", {
                                    strFilingEntityId: sessionStorage.getItem("EntityIdLiab").toString(),
                                    strFilerId: $("#txtFilerID option:selected").text().toString()
                                }, function (results) {

                                    if (results.length != 0) {

                                        $("#lstDateIncurred").empty();
                                        $("#lstDateIncurred").append("<option value='" + '0' + "'>" + "- Select -" + "</option>");
                                        for (var i = 0; i < results.length; i++) {
                                            $("#lstDateIncurred").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                                        }
                                        $("#txtAmtIE24HrPIDAExpenditure").val("");
                                        $("#txtAmtIE24HrPIDAExpenditure").blur();
                                        $("#txtOutstandingAmt").val("");
                                        $("#txtOutstandingAmt").blur();
                                    }
                                    else {
                                        $("#lstDateIncurred").empty();
                                        $("#lstDateIncurred").append("<option value='" + '0' + "'>" + "- Select -" + "</option>");

                                        $("#txtAmtIE24HrPIDAExpenditure").val("");
                                        $("#txtAmtIE24HrPIDAExpenditure").blur();
                                        $("#txtOutstandingAmt").val("");
                                        $("#txtOutstandingAmt").blur();
                                        ShowDialogBox('EFS', 'Payee Name not existing in liability', 'Ok', '');
                                    }
                                });
                            }
                            else {
                                $("#lstDateIncurred").empty();
                                $("#lstDateIncurred").append("<option value='" + '0' + "'>" + "- Select -" + "</option>");

                                $("#txtAmtIE24HrPIDAExpenditure").val("");
                                $("#txtAmtIE24HrPIDAExpenditure").blur();
                                $("#txtOutstandingAmt").val("");
                                $("#txtOutstandingAmt").blur();
                                ShowDialogBox('EFS', 'Payee Name not existing in liability', 'Ok', '');
                            }
                        });
                    }
                }
            }
            else {
                sessionStorage.removeItem("ExistingLiabName");
            }
        });

        // ======================================================================================================================================
        // BUTTON ADD NEW TRANSACTIONS - 24 HOUR NOTICE OF NON-ITEMIZED.
        $m("#btnAddNewTransaction").button().on("click", function () {

            dialog_Sched_F_IE.dialog("open");

            $("#btnUpdateSchedFIEWeeklyExp").hide();
            $("#btnSaveSchedFIEWeeklyExp").show();

            sessionStorage.setItem("UpdateFlagSchedA24HNotice", "No");

            $("#dvDateIncurred").hide();
            $("#dvOriginalAmtTxt").hide();
            $("#dvOutstandingAmt").hide();

            $("#lblAmount").text("* Amount $");

            $("#divUCIETransactionsHistory").hide();

            var validator = $m("#DialogBoxSchedFIEForm").validate();
            validator.resetForm();  // clear out the validation errors
            $m("#DialogBoxSchedFIEForm")[0].reset();   // clear out the form data

            $("#lblExplanation").text("Explanation");

            $("#txtCurrentDateIE24HourExp").blur();
            $("#txtZipCode").blur();
            $("#txtAmtIE24HrPIDAExpenditure").blur();

            $("#lstSubcontractor").focus();

            $("#txtCountry").val("United States");
            $("#txtCountry").prop("disabled", true);
            $("#chkCountry").prop('checked', false);
            $("#txtState").prop('maxLength', '2');

            // liability
            $("#txtPayeeName").prop("disabled", false);
            $("#chkCountry").prop("disabled", false);
            $("#txtCountry").prop("disabled", true);
            $("#txtStreetName").prop("disabled", false);
            $("#txtCity").prop("disabled", false);
            $("#txtState").prop("disabled", false);
            $("#txtZipCode").prop("disabled", false);

            // SUBCONTRACTOR Y/N
            $("#lstSubcontractor").prop("disabled", false);

            // LIBILITY Y/N
            $("#lstLiability").prop("disabled", false);

            // Purpose Code
            $("#lstPurposeCode").prop("disabled", false);

            // Original Amount
            $("#txtOriginalAmount").prop("disabled", false);

            $("#tdCheck").hide();

            // Bind Contributor Type
            var options = {};
            options.url = "@Url.Content("~/NonItemIE24HourPIDAExpenditureSchedF/GetPurposeCodeExpenditure/")";
            options.type = "POST";
            options.data = null;
            options.dataType = "json";
            options.contentType = "application/json";
            options.success = function (results) {
                $("#lstPurposeCode").empty();
                for (var i = 0; i < results.length; i++) {
                    $("#lstPurposeCode").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                }
            };
            options.error = function () {
                ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
            };
            $.ajax(options);

            // GET TREASURER DATA AND BIND THE DATA.
            $.post("@Url.Content("~/NonItemIE24HourPIDAExpenditureSchedF/GetIE24HourExpTreasurerData/")", {
            }, function (resultsTreasurertData) {
                $.each(resultsTreasurertData, function (i, item) {
                    $("#txtTreasurerName").val($.trim(item.TreasurerName).toString());
                    $("#txtTreasurerOccupation").val($.trim(item.TreasurerOccupation).toString());
                    $("#txtTreasurerEmployer").val($.trim(item.TreasurerEmployer).toString());
                    $("#txtStreetNameTreasurer").val($.trim(item.TreasurerStreetAddress).toString());
                    $("#txtCityTreasurer").val($.trim(item.TreasurerCity).toString());
                    $("#txtStateTreasurer").val($.trim(item.TreasurerState).toString());
                    $("#txtZipCodeTreasurer").val($.trim(item.TreasurerZip).toString());
                    if (item.TreasurerZip.toString() != "") {
                        $("#txtZipCodeTreasurer").removeClass("watermarkHTMLTextBox");
                    }
                    else {
                        $("#txtZipCodeTreasurer").addClass("watermarkHTMLTextBox");
                        $("#txtZipCodeTreasurer").blur();
                    }
                });

                // ======================================================================================
                // TREASURE INFORMATION.
                sessionStorage.setItem("TreasOccupation", $("#txtTreasurerOccupation").val().toString());
                sessionStorage.setItem("TreasEmployer", $("#txtTreasurerEmployer").val().toString());
                sessionStorage.setItem("TreasStreetName", $("#txtStreetNameTreasurer").val().toString());
                sessionStorage.setItem("TreasCity", $("#txtCityTreasurer").val().toString());
                sessionStorage.setItem("TreasState", $("#txtStateTreasurer").val().toString());
                sessionStorage.setItem("TreasZipCode", $("#txtZipCodeTreasurer").val().toString());
                // TREASURE INFORMATION.
                // ======================================================================================

            });

            // Bind Date Incurred Data.
            $.post("@Url.Content("~/NonItemIE24HourPIDAExpenditureSchedF/GetDateIncurredNew/")", {
            }, function (resultsDateIncurred) {
                $("#lstDateIncurred").empty();
                for (var i = 0; i < resultsDateIncurred.length; i++) {
                    $("#lstDateIncurred").append("<option value='" + resultsDateIncurred[i].Value + "'>" + resultsDateIncurred[i].Text + "</option>");
                }
            });

            // Set default value dropdowns.
            $("#lstPurposeCode")[0].selectedIndex = 0;
            $("#lstMethodIE24HExpPayF")[0].selectedIndex = 0;
            $("#lstSupported")[0].selectedIndex = 0;
            $("#lstLiability")[0].selectedIndex = 0;
            $("#lstSubcontractor")[0].selectedIndex = 0;
            $("#lstLiabilityExists")[0].selectedIndex = 0;
            $("#lstDateIncurred")[0].selectedIndex = 0;

            // Clear the JQuery Error Message
            $m("label[for=txtCheckIE24ExpPayF]").text('');
            $m("#txtCheckIE24ExpPayF").removeClass("error");

            $m("label[for=txtCurrentDateIE24HourExp]").text('');
            $m("#txtCurrentDateIE24HourExp").removeClass("error");
        });
        // BUTTON ADD NEW TRANSACTIONS - 24 HOUR NOTICE OF NON-ITEMIZED.
        // ======================================================================================================================================
        

        // Liability Change - IS EXPENDITURE A  PARTIAL PAYMENT
        // ======================================================================================================================================
        $("#lstLiability").change(function () {

            if ($("#lstLiability option:selected").val() == "Y") {

                $("#lstLiabilityExists").prop("disabled", false);

                $("#dvOriginalAmtTxt").show();
                $("#dvOutstandingAmt").hide(); // REMOVED AS DISCUSSED DEFECT: 4131 ON 06.24.2021.

                $("#lblAmount").text("* Partial Amount $");

                // Clear the Fileds.
                $("#txtPayeeName").val("");
                $("#txtStreetName").val("");
                $("#txtCity").val("");
                $("#txtState").val("");
                $("#txtZipCode").val("");
                $("#lstPurposeCode")[0].selectedIndex = 0;
                $("#lstMethodIE24HExpPayF")[0].selectedIndex = 0;
                $("#txtCheckExpenditurePayments").val("");
                $("#txtAmtIE24HrPIDAExpenditure").val("");
                $("#txtExplanationSchedFIE24").val("");

                $("#lstLiabilityExists")[0].selectedIndex = 0;

                $("#lstDateIncurred")[0].selectedIndex = 0;

                $("#txtOriginalAmount").val("");
                $("#txtOriginalAmount").blur();

                $("#txtOutstandingAmt").val("");

                if ($("#txtPayeeName").val() != "") {

                    $("#dvDateIncurred").show();

                    $("#dvOutstandingAmt").hide(); // REMOVED AS DISCUSSED DEFECT: 4131 ON 06.24.2021.

                    // Load Date Incurred Data.
                    // Get Date Incurred Data.
                    // Bind Date Incurred Data.
                    var options = {};
                    options.url = "@Url.Content("~/NonItemIE24HourPIDAExpenditureSchedF/GetDateIncurred/")";
                    options.type = "POST";
                    options.data = JSON.stringify(
                        {
                            strFilingEntityId: null,
                            strFilerId: $("#txtFilerID option:selected").text().toString()
                        });
                    options.dataType = "json";
                    options.contentType = "application/json";
                    options.success = function (results) {
                        $("#lstDateIncurred").empty();
                        $("#lstDateIncurred").append("<option value='" + '0' + "'>" + "- Select -" + "</option>");
                        for (var i = 0; i < results.length; i++) {
                            $("#lstDateIncurred").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                        }
                    };
                    options.error = function () {
                        ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                    };
                    $.ajax(options);
                }
            }
            else {

                $("#lstLiabilityExists").prop("disabled", true);

                $("#lstSubcontractor").prop("disabled", false);

                $("#dvOriginalAmtTxt").hide();
                $("#dvOutstandingAmt").hide();

                $("#dvDateIncurred").hide();

                $("#lstLiabilityExists")[0].selectedIndex = 0;

                $("#lblAmount").text("* Amount $");

                // Clear the Fileds.
                $("#txtPayeeName").val("");
                $("#txtStreetName").val("");
                $("#txtCity").val("");
                $("#txtState").val("");
                $("#txtZipCode").val("");
                $("#lstPurposeCode")[0].selectedIndex = 0;
                $("#lstMethodIE24HExpPayF")[0].selectedIndex = 0;
                $("#txtCheckExpenditurePayments").val("");
                $("#txtAmtIE24HrPIDAExpenditure").val("");
                $("#txtAmtIE24HrPIDAExpenditure").blur();
                $("#txtExplanationSchedFIE24").val("");

                $("#lstLiabilityExists")[0].selectedIndex = 0;

                $("#lstDateIncurred")[0].selectedIndex = 0;

                $("#txtOutstandingAmt").val("");

            }

        });
        // Liability Change - IS EXPENDITURE A  PARTIAL PAYMENT
        // ======================================================================================================================================

        // If Existing Liability then Show Date Incurred and Outstanding Amount.
        // ======================================================================================================================================
        $("#lstLiabilityExists").change(function () {
            if ($("#lstLiabilityExists option:selected").val().toString() == "Y") {
                $("#dvDateIncurred").show();
                $("#dvOriginalAmtTxt").show();
                $("#dvOutstandingAmt").hide(); // REMOVED AS DISCUSSED DEFECT: 4131 ON 06.24.2021.

                $("#dvOriginalAmtTxt").hide();

                $("#lblAmount").text("* Amount $");

                // Date Incurred & Original Amount:
                $("#lstDateIncurred").prop("disabled", false);

                // Clear the Fileds.
                $("#txtPayeeName").val("");
                $("#txtStreetName").val("");
                $("#txtCity").val("");
                $("#txtState").val("");
                $("#txtZipCode").val("");
                $("#lstPurposeCode")[0].selectedIndex = 0;
                $("#lstMethodIE24HExpPayF")[0].selectedIndex = 0;
                $("#txtCheckExpenditurePayments").val("");
                $("#txtAmtIE24HrPIDAExpenditure").val("");
                $("#txtAmtIE24HrPIDAExpenditure").blur();
                $("#txtExplanationSchedFIE24").val("");

                $("#txtOutstandingAmt").val("");
                $("#txtOutstandingAmt").blur();
                $("#txtOriginalAmount").val("");
                $("#txtOriginalAmount").blur();

                $("#lstDateIncurred")[0].selectedIndex = 0;
            }
            else {
                $("#dvDateIncurred").hide();
                $("#dvOriginalAmtTxt").hide();
                $("#dvOutstandingAmt").hide(); // REMOVED AS DISCUSSED DEFECT: 4131 ON 06.24.2021.

                $("#dvOriginalAmtTxt").show();

                $("#lblAmount").text("* Partial Amount $");

                // Clear the Fileds.
                $("#txtPayeeName").val("");
                $("#txtStreetName").val("");
                $("#txtCity").val("");
                $("#txtState").val("");
                $("#txtZipCode").val("");
                $("#lstPurposeCode")[0].selectedIndex = 0;
                $("#lstMethodIE24HExpPayF")[0].selectedIndex = 0;
                $("#txtCheckExpenditurePayments").val("");
                $("#txtAmtIE24HrPIDAExpenditure").val("");
                $("#txtAmtIE24HrPIDAExpenditure").blur();
                $("#txtExplanationSchedFIE24").val("");

                $("#txtOutstandingAmt").val("");
                $("#txtOutstandingAmt").blur();
                $("#txtOriginalAmount").val("");
                $("#txtOriginalAmount").blur();

                $("#lstDateIncurred")[0].selectedIndex = 0;
            }
        });
        // If Existing Liability then Show Date Incurred and Outstanding Amount.
        // ======================================================================================================================================

        // ======================================================================================================================================
        // SUBCONTRACTOR CHANGE
        $("#lstSubcontractor").change(function () {
            if ($("#lstSubcontractor option:selected").val().toString() == "Y") {

                $("#lstSubcontractor").prop("disabled", false);

                $("#lstLiability").prop("disabled", true);
                $("#lstLiabilityExists").prop("disabled", true);

                $("#dvDateIncurred").hide();
                $("#dvOutstandingAmt").hide();

                $("#dvOriginalAmtTxt").hide();

                $("#lblAmount").text("* Amount $");

                $("#lstLiability")[0].selectedIndex = 0;
                $("#lstLiabilityExists")[0].selectedIndex = 0;

                $("#txtAmtIE24HrPIDAExpenditure").blur();

                // Hide Purpsoe Codes -Reimbursement, Credit Card Payment, Political Contributions, Bank Fees, and Interest Expenses.
                var options = {};
                options.url = "@Url.Content("~/NonItemIE24HourPIDAExpenditureSchedF/GetPurposeCodesSubcontractor/")";
                options.type = "POST";
                options.data = null;
                options.dataType = "json";
                options.contentType = "application/json";
                options.success = function (results) {
                    $("#lstPurposeCode").empty();
                    for (var i = 0; i < results.length; i++) {
                        $("#lstPurposeCode").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                    }
                };
                options.error = function () {
                    ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                };
                $.ajax(options);
                // Hide Purpose Code for Subcontractor /////////////////////////////////

            }
            else {
                $("#lstLiability").prop("disabled", false);
                $("#lstLiabilityExists").prop("disabled", true);

                $("#lstLiability")[0].selectedIndex = 0;
                $("#lstLiabilityExists")[0].selectedIndex = 0;

                // Get Default Purpose Codes
                var options = {};
                options.url = "@Url.Content("~/NonItemIE24HourPIDAExpenditureSchedF/GetPurposeCodeExpenditure/")";
                options.type = "POST";
                options.data = null;
                options.dataType = "json";
                options.contentType = "application/json";
                options.success = function (results) {
                    $("#lstPurposeCode").empty();
                    $("#lstPurposeCode").append("<option value='" + '0' + "'>" + "- Select -" + "</option>");
                    for (var i = 0; i < results.length; i++) {
                        $("#lstPurposeCode").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                    }
                };
                options.error = function () {
                    ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                };
                $.ajax(options);
            }
        });
        // SUBCONTRACTOR CHANGE
        // ======================================================================================================================================

        // ======================================================================================================================================
        // Display Outstanding Amount.........///////////////////////////////////
        $("#txtAmtIE24HrPIDAExpenditure").focusout(function () {
            if ($("#txtAmtIE24HrPIDAExpenditure").val().toString() != "999999999.99") {
                // CHECK IF NEW LIABILITY OR EXISTING LIABILITY
                var vrFlag = false;

                if ($("#lstLiabilityExists option:selected").val() != "Y") {
                    vrFlag = true;
                }
                else {
                    if ($("#txtOutstandingAmt").val().toString() != "")
                        vrFlag = true;
                    else
                        vrFlag = false;
                }

                if (vrFlag) {

                    if ($("#lstLiability option:selected").val() == "Y") {
                        if ($("#lstLiabilityExists option:selected").val() != "Y") {
                            if ($("#txtAmtIE24HrPIDAExpenditure").val() != "") {
                                if ($m("#txtAmtIE24HrPIDAExpenditure").valid()) {
                                    if ($("#txtOriginalAmount").val() != "") {
                                        if ($m("#txtOriginalAmount").valid()) {
                                            var orginalAmount = $("#txtOriginalAmount").val().toString();
                                            var partialAmount = $("#txtAmtIE24HrPIDAExpenditure").val().toString();
                                            if (parseFloat(partialAmount) > parseFloat(orginalAmount)) {
                                                $("#txtAmtIE24HrPIDAExpenditure").val("");
                                                $("#txtAmtIE24HrPIDAExpenditure").focus();
                                                ShowDialogBox('EFS', 'Partial Amount should not be more than Original Amount $' + parseFloat(orginalAmount).toFixed(2).toString(), 'Ok', '');
                                            }
                                            else {
                                                var outstandingAmount = parseFloat(orginalAmount) - parseFloat(partialAmount);
                                                $("#txtOutstandingAmt").val(outstandingAmount.toFixed(2).toString());
                                            }
                                        }
                                    }
                                }
                            }
                            else {
                                $("#txtOutstandingAmt").val("");
                            }
                        }
                        else {
                            if ($("#txtAmtIE24HrPIDAExpenditure").val() != "") {
                                if ($m("#txtAmtIE24HrPIDAExpenditure").valid()) {
                                    var outstandingAmount = $("#txtOriginalAmount").val().toString();
                                    var amount = $("#txtAmtIE24HrPIDAExpenditure").val().toString();
                                    if (parseFloat(amount) > parseFloat(outstandingAmount)) {
                                        $("#txtAmtIE24HrPIDAExpenditure").val("");
                                        $("#txtAmtIE24HrPIDAExpenditure").focus();
                                        ShowDialogBox('EFS', 'Amount should not be more than Original Amount $' + parseFloat(outstandingAmount).toFixed(2).toString(), 'Ok', '');
                                    }
                                    else {
                                        var newOutstandingAmount = parseFloat(outstandingAmount) - parseFloat(amount);
                                        $("#txtOutstandingAmt").val(newOutstandingAmount.toFixed(2).toString());
                                    }
                                }
                            }
                            else {
                                if ($("#lstDateIncurred option:selected").text().toString() != "- Select -") {
                                }
                            }
                        }
                    }
                }
            }
        });
        // Display Outstanding Amount.........///////////////////////////////////
        // ======================================================================================================================================

        // ======================================================================================================================================
        // Amount
        $("#txtAmtIE24HrPIDAExpenditure").focusin(function () {
            if ($("#txtAmtIE24HrPIDAExpenditure").val().toString() != "999999999.99") {
                // Bring Outstanding Amount back.
                if ($("#lstLiability option:selected").val() == "Y") {
                    if ($("#lstLiabilityExists option:selected").val() == "Y") {
                        if ($("#txtAmtIE24HrPIDAExpenditure").val().toString() != "") {
                            var outstandingAmountLiability = parseFloat($("#txtOutstandingAmt").val().toString()) + parseFloat($("#txtAmtIE24HrPIDAExpenditure").val().toString());
                            $("#txtOutstandingAmt").val(parseFloat(outstandingAmountLiability).toFixed(2).toString());
                        }
                    }
                }
            }
        });
        // Amount
        // ======================================================================================================================================

        // ======================================================================================================================================
        // Original Amount
        $("#txtOriginalAmount").focusout(function () {
            if ($("#lstLiability option:selected").val() == "Y") {
                if ($("#lstLiabilityExists option:selected").val() == "N") {
                    if ($("#txtOriginalAmount").val() != "") {
                        if ($("#txtAmtIE24HrPIDAExpenditure").val() != "") {
                            var originalAmount = $("#txtOriginalAmount").val().toString();
                            var amount = $("#txtAmtIE24HrPIDAExpenditure").val().toString();
                            if (parseFloat(amount) >= parseFloat(originalAmount)) {
                                $("#txtOriginalAmount").val("");
                                $("#txtOriginalAmount").focus();
                                $("#txtOutstandingAmt").val("");
                                $("#txtOutstandingAmt").blur();
                                ShowDialogBox('EFS', 'Partial Amount should not be equal or more than Original Amount $' + parseFloat(originalAmount).toFixed(2).toString(), 'Ok', '');
                            }
                            else {
                                var originalAmount = parseFloat(originalAmount) - parseFloat(amount);
                                $("#txtOutstandingAmt").val(originalAmount.toFixed(2).toString());
                            }
                        }
                    }
                    else {
                        $("#txtAmtExpenditurePayments").val("");
                        $("#txtOutstandingAmt").val("");
                    }
                }
            }
        });
        // Original Amount
        // ======================================================================================================================================

        // ======================================================================================================================================
        // Date Incurred Change
        $("#lstDateIncurred").change(function () {

            if ($("#lstDateIncurred option:selected").text().toString() != "- Select -") {

                $("#txtAmtIE24HrPIDAExpenditure").val("");
                $("#txtAmtIE24HrPIDAExpenditure").blur();

                var strUpdateStatus = "N";
                // Get Outstanding Amount;
                $.post("@Url.Content("~/NonItemIE24HourPIDAExpenditureSchedF/GetOutstandingAmount/")", {
                    strFlngEntityId: sessionStorage.getItem("LibFlngEntyId"),
                    strUpdateStatusVal: strUpdateStatus.toString(),
                    strSchedFAmt: $("#txtAmtIE24HrPIDAExpenditure").val().toString(),
                    strFilingTransId: $("#lstDateIncurred option:selected").val().toString()
                }, function (resultOwedAmt) {
                    $("#txtOutstandingAmt").val(parseFloat(resultOwedAmt.toString()).toFixed(2).toString());
                    sessionStorage.setItem("OutstandingAmountPartialExists", parseFloat(resultOwedAmt.toString()).toFixed(2).toString());
                });
            }
            else {
                $("#txtAmtIE24HrPIDAExpenditure").val("");
                $("#txtAmtIE24HrPIDAExpenditure").blur();
                $("#txtOutstandingAmt").val("");
            }
        });
        // Date Incurred Change
        // ======================================================================================================================================

        // ======================================================================================================================================
        // BUTTON CLOSE DIALOG.
        $m("#btnCloseDialog").button().on("click", function () {

            if (sessionStorage.getItem("UpdateFlagSchedA24HNotice").toString() != "No"
                && $("#DialogBoxSchedFIEForm").serialize() != form_edit_original_data) {
                var resultsCloseSchedA = "All unsaved data will be lost if you navigate away from this page. Are you sure you want to continue?";

                $m('#modal_dialog').text(resultsCloseSchedA);
                $m("#modal_dialog").dialog({
                    resizable: false,
                    modal: true,
                    width: '400px',
                    height: 'auto',
                    bgiframe: false,
                    closeOnEscape: false,
                    open: function (event, ui) { hideDialogXButton(this); },
                    buttons: {
                        "OK": function () {
                            // Close Confirm Box.
                            $m(this).dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                            // Close the DialogBox
                            dialog_Sched_F_IE.dialog("close");

                            // DISABLE THE SUBMIT TRANSACTION BUTTON.
                            sessionStorage.setItem("EditYesNo", "No");

                            // SUBMIT BUTTON DISABLED.
                            $("#btnSubmitSchedAIEWeeklyContr").prop("disabled", true);
                        }, // confirm close
                        "Cancel": function () {
                            $m(this).dialog("close");
                        }
                    }
                });
            } else {
                // Close the DialogBox
                dialog_Sched_F_IE.dialog("close");

                // DISABLE THE SUBMIT TRANSACTION BUTTON.
                sessionStorage.setItem("EditYesNo", "No");

                // SUBMIT BUTTON DISABLED.
                $("#btnSubmitSchedAIEWeeklyContr").prop("disabled", true);
            }
        });
        // BUTTON CLOSE DIALOG.
        // ======================================================================================================================================

        // ======================================================================================================================================
        // Method Change
        $("#lstMethodIE24HExpPayF").change(function () {

            $("#txtCheckIE24ExpPayF").val("");

            if ($("#lstMethodIE24HExpPayF option:selected").val().toString() == "1") { // CHECK
                $("#tdCheck").show();
                if ($("#lstPurposeCode option:selected").val().toString() == "8") {
                    $("#lblExplanation").text("* Explanation");
                }
                else {
                    $("#lblExplanation").text("Explanation");

                    $m("label[for=txtExplanationSchedFIE24]").text('');
                    $m("#txtExplanationSchedFIE24").removeClass("error");
                }
            }
            else if ($("#lstMethodIE24HExpPayF option:selected").val().toString() == "7") { // OTHER
                // EXPLANATION MANADATORY
                $("#lblExplanation").text("* Explanation");
                $("#tdCheck").hide();
            }
            else {
                $("#lblExplanation").text("Explanation");
                $("#tdCheck").hide();

                if ($("#lstPurposeCode option:selected").val().toString() != "8") {
                    $m("label[for=txtExplanationSchedFIE24]").text('');
                    $m("#txtExplanationSchedFIE24").removeClass("error");
                }
            }

            if ($("#lstPurposeCode option:selected").val().toString() == "8") {
                $("#lblExplanation").text("* Explanation");
            }

            $m("label[for=txtCheckIE24ExpPayF]").text('');
            $m("#txtCheckIE24ExpPayF").removeClass("error");

            $m("label[for=txtExplanationSchedFIE24]").text('');
            $m("#txtExplanationSchedFIE24").removeClass("error");
        });
        // Method Change
        // ======================================================================================================================================

        // ======================================================================================================================================
        // CONTRIBUTOR TYPE CODE CHANGE
        $("#lstPurposeCode").change(function () {

            $("#dvErrorlstContrCode").hide();
            $("#lstPurposeCode").removeClass("ui-state-error");

            var selectedPurposeCode = $("#lstPurposeCode option:selected").val().toString();

            if (selectedPurposeCode == "8") {
                $("#lblExplanation").text("* Explanation");
            }

            if ($("#lstMethodIE24HExpPayF option:selected").val().toString() == "7") {
                $("#lblExplanation").text("* Explanation");
            }
            else {
                if (selectedPurposeCode == "8") {
                    $("#lblExplanation").text("* Explanation");
                }
                else {
                    $("#lblExplanation").text("Explanation");

                    if ($("#lstMethodIE24HExpPayF option:selected").val().toString() == "7") {
                        $m("label[for=txtExplanationSchedFIE24]").text('');
                        $m("#txtExplanationSchedFIE24").removeClass("error");
                    }
                }
            }

            $m("label[for=txtExplanationSchedFIE24]").text('');
            $m("#txtExplanationSchedFIE24").removeClass("error");
        });
        // CONTRIBUTOR TYPE CODE CHANGE
        // ======================================================================================================================================

        // ======================================================================================================================================
        // BUTTON CLEAR DIALOGBOX.
        $("#btnClearDialog").click(function () {

            sessionStorage.setItem("CountryVal", $("#txtCountry").val().toString());

            // GET TREASURER DATA AND BIND THE DATA.
            $.post("@Url.Content("~/NonItemIE24HourPIDAExpenditureSchedF/GetIE24HourExpTreasurerData/")", {
            }, function (resultsTreasurertData) {
                $.each(resultsTreasurertData, function (i, item) {
                    $("#txtTreasurerName").val(item.TreasurerName.toString());
                    $("#txtTreasurerOccupation").val(item.TreasurerOccupation.toString());
                    $("#txtTreasurerEmployer").val(item.TreasurerEmployer.toString());
                    $("#txtStreetNameTreasurer").val(item.TreasurerStreetAddress.toString());
                    $("#txtCityTreasurer").val(item.TreasurerCity.toString());
                    $("#txtStateTreasurer").val(item.TreasurerState.toString());
                    $("#txtZipCodeTreasurer").val(item.TreasurerZip.toString());
                    if (item.TreasurerZip.toString() != "") {
                        $("#txtZipCodeTreasurer").removeClass("watermarkHTMLTextBox");
                    }
                    else {
                        $("#txtZipCodeTreasurer").addClass("watermarkHTMLTextBox");
                        $("#txtZipCodeTreasurer").blur();
                    }
                });
            });

            if (sessionStorage.getItem("UpdateFlagSchedA24HNotice").toString() != "Yes") { // Add New transactions

                var validator = $m("#DialogBoxSchedFIEForm").validate();
                validator.resetForm();  // clear out the validation errors
                $m("#DialogBoxSchedFIEForm")[0].reset();   // clear out the form data

                //SHOW/HIDE FILEDS
                $("#tdPartnershipName").show("slow");
                //SHOW/HIDE FILEDS
                $("#tdCheck").hide();
                //SHOW/HIDE FILEDS

                $("#lstPurposeCode")[0].selectedIndex = 0;
                $("#lstMethodIE24HExpPayF")[0].selectedIndex = 0;

                $("#lblExplanation").text("Explanation");

                $("#txtCountry").val("United States");
                $("#txtCountry").prop("disabled", true);
                $("#chkCountry").prop('checked', false);
                $("#txtState").prop('maxLength', '2');

                $("#txtCurrentDateIE24HourExp").blur();
                $("#txtZipCode").blur();
                $("#txtAmtIE24HrPIDAExpenditure").blur();
            }
            else { // Edit Transactions

                if ($("#lstLiabilityExists option:selected").val() == "Y") {

                    // CLEAR ONLY THESE ON EDIT NOT ALL.
                    $("#txtCurrentDateIE24HourExp").val("");
                    $("#txtTreasurerOccupation").val("");
                    $("#txtTreasurerEmployer").val("");
                    $("#txtAmtIE24HrPIDAExpenditure").val("");
                    $("#txtIndependentExpenditureDescription").val("");
                    $("#txtCandidateNameBPReference").val("");
                    $("#txtExplanationSchedFIE24").val("");
                }
                else {
                    // CLEAR ONLY THESE ON EDIT NOT ALL.
                    $("#txtCurrentDateIE24HourExp").val("");
                    $("#txtTreasurerOccupation").val("");
                    $("#txtTreasurerEmployer").val("");
                    $("#txtPayeeName").val("");
                    $("#txtStreetName").val("");
                    $("#txtCity").val("");
                    $("#txtState").val("");
                    $("#txtZipCode").val("");
                    $("#txtOriginalAmount").val("");
                    $("#txtOutstandingAmt").val("");
                    $("#txtAmtIE24HrPIDAExpenditure").val("");
                    $("#txtIndependentExpenditureDescription").val("");
                    $("#txtCandidateNameBPReference").val("");
                    $("#txtExplanationSchedFIE24").val("");

                    $("#txtCountry").val("United States");
                    $("#txtCountry").prop("disabled", true);
                    $("#chkCountry").prop('checked', false);
                    $("#txtState").prop('maxLength', '2');
                    $("#txtZipCode").blur();
                }

                // ITEMIZED TRANSACTION EDIT
                $("#txtCurrentDateIE24HourExp").blur();
                $("#txtAmtIE24HrPIDAExpenditure").addClass("watermarkHTMLTextBox");

                $("#lstMethodIE24HExpPayF")[0].selectedIndex = 0;
                $("#tdCheck").hide();

                $("#lblExplanation").text("Explanation");
            }
        });
        // BUTTON CLEAR DIALOGBOX.
        // ======================================================================================================================================

        // ======================================================================================================================================
        // BUTTON SAVE 24-HOUR NOTICE SCHEDULE A TRANSACTION DATA.
        $m("#btnSaveSchedFIEWeeklyExp").click(function () {
            // Validation Succuss then Insert Record.
            $m("#DialogBoxSchedFIEForm").valid();
            if ($m("#DialogBoxSchedFIEForm").valid()) { // JQuery Validation
                $("#divLoading").show();
                $m("#btnSaveSchedFIEWeeklyExp").prop('disabled', true);
                // Insert
                $.post("@Url.Content("~/NonItemIE24HourPIDAExpenditureSchedF/SaveNonItemIE24HourPIDAExpSchedFData/")", {
                    txtFilerId: $("#txtFilerID").val(),
                    lstElectionCycle: $("#lstElectionCycle option:selected").text(),
                    lstElectionCycleId: $("#lstElectionCycle option:selected").val(),
                    lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                    lstElectionType: $("#lstElectionType option:selected").val(),
                    lstElectionDate: $("#lstElectionDate option:selected").text(),
                    lstElectionDateId: $("#lstElectionDate option:selected").val(),
                    lstTransactionTypeNonItem: $("#lstTransTypeNonItemWeeklyExp option:selected").val(),
                    txtCurrentDate24HNotice: $m("#txtCurrentDateIE24HourExp").val(),
                    lstPurposeCode: $m("#lstPurposeCode option:selected").val(),
                    txtPayeeName: $m("#txtPayeeName").val(),
                    txtCountry: $m("#txtCountry").val(),
                    txtStreetName: $m("#txtStreetName").val(),
                    txtCity: $m("#txtCity").val().toString(),
                    txtState: $m("#txtState").val().toString(),
                    txtZipCode: $m("#txtZipCode").val().toString(),
                    lstMethod: $m("#lstMethodIE24HExpPayF option:selected").val(),
                    txtCheck: $m("#txtCheckIE24ExpPayF").val(),
                    txtAmtIEWeeklyExpenditure: $m("#txtAmtIE24HrPIDAExpenditure").val(),
                    txtOutstandingAmt: $m("#txtOutstandingAmt").val(),
                    txtExplanation: $m("#txtExplanationSchedFIE24").val(),
                    txtTreasurerOccupation: $m("#txtTreasurerOccupation").val(),
                    txtTreasurerEmployer: $m("#txtTreasurerEmployer").val(),
                    txtStreetNameTreasurer: $m("#txtStreetNameTreasurer").val(),
                    txtCityTreasurer: $m("#txtCityTreasurer").val(),
                    txtStateTreasurer: $m("#txtStateTreasurer").val(),
                    txtZipCodeTreasurer: $m("#txtZipCodeTreasurer").val(),
                    txtContributorOccupation: $m("#txtContributorOccupation").val(),
                    txtContributorEmployer: $m("#txtContributorEmployer").val(),
                    txtIndependentExpenditureDescription: $m("#txtIndependentExpenditureDescription").val(),
                    txtCandidateNameBPReference: $m("#txtCandidateNameBPReference").val(),
                    lstSupported: $m("#lstSupported").val(),
                    lstLiability: $m("#lstLiability option:selected").val(),
                    lstLiabilityExists: $m("#lstLiabilityExists option:selected").val(),
                    lstSubcontractor: $m("#lstSubcontractor option:selected").val(),
                    lstDateIncurred: $m("#lstDateIncurred option:selected").val(),
                    lstFilingDate: $m("#lstFilingDate option:selected").text(),
                    txtReportPeriodDatesTo: sessionStorage.getItem("FilingDate").toString(),
                    txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
                    chkCountry: $('#chkCountry').is(':checked').toString(),
                }, function (results) {
                    if (results.Errors == null) {
                        $("#lstSubcontractor").focus();

                        window.status = "Transaction saved successfully";

                        var treasInfoChanged = false;
                        if (
                            ($("#txtTreasurerOccupation").val().toString() != sessionStorage.getItem("TreasOccupation").toString())
                            || ($("#txtTreasurerEmployer").val().toString() != sessionStorage.getItem("TreasEmployer").toString())
                            || ($("#txtStreetNameTreasurer").val().toString() != sessionStorage.getItem("TreasStreetName").toString())
                            || ($("#txtCityTreasurer").val().toString() != sessionStorage.getItem("TreasCity").toString())
                            || ($("#txtStateTreasurer").val().toString() != sessionStorage.getItem("TreasState").toString())
                            || ($("#txtZipCodeTreasurer").val().toString() != sessionStorage.getItem("TreasZipCode").toString())
                        ) {
                            treasInfoChanged = true;
                        }

                        // Clear Form Values
                        ClearDialogBoxValSchedANonItem();
                        //Because of the way we did initialization we the Data on Grid hide the loading too!
                        tableFilingTransactions.ajax.reload();
                        $m("label[for=txtPayeeName]").text('');
                        $m("#txtPayeeName").removeClass("error");

                        // GET TREASURER DATA AND BIND THE DATA.
                        $.post("@Url.Content("~/NonItemIE24HourPIDAExpenditureSchedF/GetIE24HourExpTreasurerData/")", {
                        }, function (resultsTreasurertData) {
                            $.each(resultsTreasurertData, function (i, item) {
                                $("#txtTreasurerName").val(item.TreasurerName.toString());
                                $("#txtTreasurerOccupation").val(item.TreasurerOccupation.toString());
                                $("#txtTreasurerEmployer").val(item.TreasurerEmployer.toString());
                                $("#txtStreetNameTreasurer").val(item.TreasurerStreetAddress.toString());
                                $("#txtCityTreasurer").val(item.TreasurerCity.toString());
                                $("#txtStateTreasurer").val(item.TreasurerState.toString());
                                $("#txtZipCodeTreasurer").val(item.TreasurerZip.toString());
                                if (item.TreasurerZip.toString() != "") {
                                    $("#txtZipCodeTreasurer").removeClass("watermarkHTMLTextBox");
                                }
                                else {
                                    $("#txtZipCodeTreasurer").addClass("watermarkHTMLTextBox");
                                    $("#txtZipCodeTreasurer").blur();
                                }
                            });

                            // ======================================================================================
                            // TREASURE INFORMATION.
                            sessionStorage.setItem("TreasOccupation", $("#txtTreasurerOccupation").val().toString());
                            sessionStorage.setItem("TreasEmployer", $("#txtTreasurerEmployer").val().toString());
                            sessionStorage.setItem("TreasStreetName", $("#txtStreetNameTreasurer").val().toString());
                            sessionStorage.setItem("TreasCity", $("#txtCityTreasurer").val().toString());
                            sessionStorage.setItem("TreasState", $("#txtStateTreasurer").val().toString());
                            sessionStorage.setItem("TreasZipCode", $("#txtZipCodeTreasurer").val().toString());
                            // TREASURE INFORMATION.
                            // ======================================================================================
                            $m("#btnSaveSchedFIEWeeklyExp").prop('disabled', false);
                            if (treasInfoChanged) {
                                ShowDialogBox('EFS', 'Transaction saved successfully; changes made in Treasurer Address/Occupation/Employer will not reflect in Treasurer Profile; respective changes need to be updated in Treasurer Profile separately', 'Ok', '');
                            } else {
                                ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');
                            }

                        });
                    } else if (results.Errors.length >= 0) {
                        $("#divLoading").hide();
                        $m("#btnSaveSchedFIEWeeklyExp").prop('disabled', false);

                        // Clear Server Side Validation
                        ClearServerSideErrors();
                        AppendCustomErrorLabels(results.Errors);
                    } else { $("#divLoading").hide(); }
                }).always(function () {
                    $m("#btnSaveSchedFIEWeeklyExp").prop('disabled', false);
                }).fail(function () {
                    $("#divLoading").hide();// SaveNonItemIE24HourPIDAExpSchedFData failed.
                });
            }
        });
        // BUTTON SAVE 24-HOUR NOTICE SCHEDULE A TRANSACTION DATA.
        // ======================================================================================================================================

        var form_original_data;
        // ======================================================================================================================================
        // BUTTON UPDATE 24-HOUR NOTICE SCHEDULE A TRANSACTION DATA.
        $m("#btnUpdateSchedFIEWeeklyExp").click(function () {

            // Validation Succuss then Insert Record.
            $m("#DialogBoxSchedFIEForm").valid();
            if ($m("#DialogBoxSchedFIEForm").valid()) { // JQuery Validation
                $m("#divLoading").show();
                // UPDATE TRANSACTION IF NOT SUBMITTED
                // CREATE NEW TRANSACTION IF SUBMITTED TRANSACTION UPDATED.
                $.post("@Url.Content("~/NonItemIE24HourPIDAExpenditureSchedF/UpdateNonItemIE24HourExpSchedFData/")", {
                    strTransNumber: sessionStorage.getItem("FilingTransId").toString(),
                    strFilingEntId: sessionStorage.getItem("FilingEntityId").toString(),
                    lstPurposeCode: $m("#lstPurposeCode option:selected").val(),
                    strSubmissionDate: sessionStorage.getItem("SubmittsionDate").toString(),
                    lstTransactionTypeNonItem: $m("#lstTransTypeNonItemWeeklyExp option:selected").val(),
                    txtCurrentDate24HNotice: $m("#txtCurrentDateIE24HourExp").val(),
                    txtCheck: $m("#txtCheckIE24ExpPayF").val(),
                    lstMethod: $m("#lstMethodIE24HExpPayF option:selected").val(),
                    txtAmtIEWeeklyExpenditure: $m("#txtAmtIE24HrPIDAExpenditure").val(),
                    txtOutstandingAmt: $m("#txtOutstandingAmt").val(),
                    txtExplanation: $m("#txtExplanationSchedFIE24").val(),
                    txtPayeeName: $m("#txtPayeeName").val(),
                    txtCountry: $m("#txtCountry").val(),
                    txtStreetName: $m("#txtStreetName").val(),
                    txtCity: $m("#txtCity").val(),
                    txtState: $m("#txtState").val(),
                    txtZipCode: $m("#txtZipCode").val(),
                    strTreasId: sessionStorage.getItem("TreasurerId").toString(),
                    strAddrId: sessionStorage.getItem("AddrId").toString(),
                    txtStreetNameTreasurer: $m("#txtStreetNameTreasurer").val(),
                    txtCityTreasurer: $m("#txtCityTreasurer").val(),
                    txtStateTreasurer: $m("#txtStateTreasurer").val(),
                    txtZipCodeTreasurer: $m("#txtZipCodeTreasurer").val(),
                    txtIndependentExpenditureDescription: $m("#txtIndependentExpenditureDescription").val(),
                    txtTreasurerOccupation: $m("#txtTreasurerOccupation").val(),
                    txtTreasurerEmployer: $m("#txtTreasurerEmployer").val(),
                    lstSupported: $m("#lstSupported option:selected").val(),
                    txtCandidateNameBPReference: $m("#txtCandidateNameBPReference").val(),
                    lstSubcontractor: $m("#lstSubcontractor option:selected").val(),
                    lstLiability: $m("#lstLiability option:selected").val(),
                    lstDateIncurred: $m("#lstDateIncurred option:selected").val(),
                    lstElectionType: $("#lstElectionType option:selected").val(),
                    lstFilingDate: $m("#lstFilingDate option:selected").text(),
                    txtReportPeriodDatesTo: sessionStorage.getItem("FilingDate").toString(),
                    txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
                    chkCountry: $('#chkCountry').is(':checked').toString(),
                }, function (results) {

                    if (results.Errors == null) {
                        // Close the DialogBox
                        dialog_Sched_F_IE.dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                        window.status = "Transaction saved successfully";

                        var treasInfoChanged = false;
                        if (
                            ($("#txtTreasurerOccupation").val().toString() != sessionStorage.getItem("TreasOccupation").toString())
                            || ($("#txtTreasurerEmployer").val().toString() != sessionStorage.getItem("TreasEmployer").toString())
                            || ($("#txtStreetNameTreasurer").val().toString() != sessionStorage.getItem("TreasStreetName").toString())
                            || ($("#txtCityTreasurer").val().toString() != sessionStorage.getItem("TreasCity").toString())
                            || ($("#txtStateTreasurer").val().toString() != sessionStorage.getItem("TreasState").toString())
                            || ($("#txtZipCodeTreasurer").val().toString() != sessionStorage.getItem("TreasZipCode").toString())
                        ) {
                            treasInfoChanged = true;
                        }
                        $m("#divLoading").hide();
                        if (treasInfoChanged) {
                            ShowDialogBox('EFS', 'Transaction saved successfully; changes made in Treasurer Address/Occupation/Employer will not reflect in Treasurer Profile; respective changes need to be updated in Treasurer Profile separately', 'Ok', '');
                        }
                        else {
                            ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');
                        }

                        // FOR SELECT ROW SELECTED OR NOT.
                        sessionStorage.setItem("EditYesNo", "No");

                        // Clear Form Values
                        ClearDialogBoxValSchedANonItem();
                        //Because of the way we did initialization we the Data on Grid hide the loading too!
                        tableFilingTransactions.ajax.reload();
                    }
                    else if (results.Errors.length >= 0) {
                        // Clear Server Side Validation
                        ClearServerSideErrors();
                        AppendCustomErrorLabels(results.Errors);
                    }
                }).always(function () {
                    $m("#divLoading").hide();
                });
            }
        });
        // BUTTON UPDATE 24-HOUR NOTICE SCHEDULE A TRANSACTION DATA.
        // ======================================================================================================================================

        // ======================================================================================================================================
        // BUTTON SUBMIT CLICK - SUBMIT THE SELECTED 24-HOUR NOTICE TRANSACTION.
        $m("#btnSubmitSchedAIEWeeklyContr").click(function () {
            $("#divLoading").show();
            // History will hide.
            $("#divUCIETransactionsHistory").hide();

            // Check the Transaction selected or not in Grid.
            if (sessionStorage.getItem("SubmitTransId") != null) {

                // show loading.....
                $("#divLoading").show();

                // SUBMIT
                var options = {};
                options.url = "@Url.Content("~/NonItemIE24HourPIDAExpenditureSchedF/SubmitNonItemIE24HourExpSchedFData/")";
                options.type = "GET";
                options.data = {
                    strTransNumber: sessionStorage.getItem("SubmitTransId").toString()
                };
                options.dataType = "json";
                options.contentType = "application/json";
                options.success = function (results) {

                    if (results.Errors == null) {

                        $.each(results, function (i, item) {
                            if (item.ReturnValue) {

                                window.status = "Transaction submitted successfully";

                                if (item.ChildExists == "True") {
                                    ShowDialogBox('EFS', 'Amended transaction submitted successfully; the itemized transaction previously created in the post-election disclosure report must also be amended, if previously submitted', 'Ok', '');
                                }
                                else if (item.ChildExists == "False") {
                                    ShowDialogBox('EFS', 'Transaction submitted successfully; Transaction will need to be posted separately on the next required Itemized Disclosure Report.', 'Ok', '');
                                }

                                //Because of the way we did initialization we the Data on Grid hide the loading too!
                                tableFilingTransactions.ajax.reload();

                                // SUBMIT BUTTON DISABLED.
                                $("#btnSubmitSchedAIEWeeklyContr").prop("disabled", true);
                            }
                            else {
                                for (var i = 0; i < results.Errors.length; i++) {
                                    if (results.Errors[i].Key == "strTransNumber") {
                                        $("#txtCurrentDateIE24HourExp_validate").append('<label for="strTransNumber" class="error">' + results.Errors[i].Value + '</label>');
                                    }
                                }
                            }
                        });
                    }
                    else if (results.Errors.length >= 0) {
                        // Clear Server Side Validation
                        ClearServerSideErrors();

                        for (var i = 0; i < results.Errors.length; i++) {
                            if (results.Errors[i].Key == "txtCurrentDate") {
                                $("#txtCurrentDateIE24HourExp_validate").append('<label for="txtCurrentDate" class="error">' + results.Errors[i].Value + '</label>');
                            }
                        }
                    }
                };
                options.error = function () {
                    ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                };
                $m.ajax(options).always(function () {
                    $("#divLoading").hide();
                });
            }
        });
        // BUTTON SUBMIT CLICK - SUBMIT THE SELECTED 24-HOUR NOTICE TRANSACTION.
        // ======================================================================================================================================

        // ======================================================================================================================================
        // 24-HOUR NOTICE SCHEDULE 'A' TRANSACTION SELECTION.
        $m('#gridFilingTransIEWeeklyExpenditure tbody').on('click', 'tr', function (e) {
            e.preventDefault();

            var flngTransId = tableFilingTransactions.cell(this, 44).data();  // Filing Transactions Id
            var flngEntityId = tableFilingTransactions.cell(this, 2).data();  // Filing Entity Id
            var submissionDate = tableFilingTransactions.cell(this, 11).data();  // Submission Date

            var selectedRowId = tableFilingTransactions.row(this).index();

            if (selectedRowId != undefined) {

                sessionStorage.setItem("SelectedRowId", selectedRowId);

                if (sessionStorage.getItem("EditYesNo").toString() == "No") {
                    if (submissionDate != null) {
                        if (submissionDate.toString() == "") {
                            $("#btnSubmitSchedAIEWeeklyContr").prop("disabled", false);
                        }
                        else {
                            $("#btnSubmitSchedAIEWeeklyContr").prop("disabled", true);
                        }
                    }
                    else {
                        $("#btnSubmitSchedAIEWeeklyContr").prop("disabled", false);
                    }

                    sessionStorage.setItem("SubmitTransId", flngTransId.toString());
                    if (submissionDate != null) {
                        sessionStorage.setItem("SubmissionDate", submissionDate.toString());
                    } else {
                        sessionStorage.setItem("SubmissionDate", "");
                    }
                    sessionStorage.setItem("SubmitEntityId", flngEntityId.toString());

                    if ($(this).hasClass('selected') != true) {
                        tableFilingTransactions.$('tr.selected').removeClass('selected');
                        $(this).addClass('selected');
                    }
                }
            }
        });
        // 24-HOUR NOTICE SCHEDULE 'A' TRANSACTION SELECTION.
        // ======================================================================================================================================

        var form_edit_original_data = '';
        // ======================================================================================================================================
        // EDIT 24-HOUR NOTICE TRANSACTIONS.
        $m('#gridFilingTransIEWeeklyExpenditure tbody').on('click', 'a.editor_edit_Sched_F_IEWeeklyExp', function (e) {
            e.preventDefault();

            sessionStorage.setItem("EditYesNo", "Yes");

            $("#divUCIETransactionsHistory").hide();

            $("#btnUpdateSchedFIEWeeklyExp").show();
            $("#btnSaveSchedFIEWeeklyExp").hide();

            sessionStorage.setItem("UpdateFlagSchedA24HNotice", "Yes");

            // DON'T SELECT THE ROW WHEN EDIT THE TRANSACTIONS.
            $("#btnSubmitSchedAIEWeeklyContr").prop("disabled", true);
            tableFilingTransactions.$('tr.selected').removeClass('selected');
            var data = tableFilingTransactions.row($(this).parents('tr')).data();

            if (data[1].toString() == "6") { // SCHEDULE 'F' 24-HOUR NOTICE TRANSACTION.
                $("#divLoading").show();
                dialog_Sched_F_IE.dialog("open");

                var validator = $m("#DialogBoxSchedFIEForm").validate();
                validator.resetForm();  // clear out the validation errors
                $m("#DialogBoxSchedFIEForm")[0].reset();   // clear out the form data

                $("#txtTreasurerOccupation").focus();
                // Bind Method Data
                var options = {};
                options.url = "@Url.Content("~/NonItemIE24HourPIDAExpenditureSchedF/GetPaymentMethodData/")";
                options.type = "POST";
                options.data = null;
                options.dataType = "json";
                options.contentType = "application/json";
                options.success = function (resultsMethod) {
                    $("#lstMethodIE24HExpPayF").empty();
                    for (var i = 0; i < resultsMethod.length; i++) {
                        $("#lstMethodIE24HExpPayF").append("<option value='" + resultsMethod[i].Value + "'>" + resultsMethod[i].Text + "</option>");
                    }
                    // Set Method
                    if (data[4].toString() != null || data[4].toString() != "") {
                        $m("#lstMethodIE24HExpPayF option")
                            .filter(function () { return $m(this).val() == data[4].toString(); })
                            .attr("selected", "selected");
                    }
                    // Get Form Data.
                    form_original_data = $("#DialogBoxSchedFIEForm").serialize();

                    // Get Form Data.
                    form_edit_original_data = $("#DialogBoxSchedFIEForm").serialize();
                };
                options.error = function () {
                    ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                };
                $.ajax(options).always(function () {
                    $("#divLoading").hide();
                });

                // Bind Purpose Code
                var options = {};
                options.url = "@Url.Content("~/NonItemIE24HourPIDAExpenditureSchedF/GetPurposeCodeExpenditure/")";
                options.type = "POST";
                options.data = null;
                options.dataType = "json";
                options.contentType = "application/json";
                options.success = function (results) {
                    $("#lstPurposeCode").empty();
                    for (var i = 0; i < results.length; i++) {
                        $("#lstPurposeCode").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                    }
                    //Set Contribution Type Code
                    if (data[3].toString() != null || data[3].toString() != "") {
                        $m("#lstPurposeCode option")
                            .filter(function () { return $m(this).val() == data[3].toString(); })
                            .attr('selected', 'selected');
                    }
                    // Get Form Data.
                    form_original_data = $("#DialogBoxSchedFIEForm").serialize();

                    // Get Form Data.
                    form_edit_original_data = $("#DialogBoxSchedFIEForm").serialize();
                };
                options.error = function () {
                    ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                };
                $.ajax(options);

                // PURPOSE CODE
                $("#lstPurposeCode").prop("disabled", true);

                // SUBCONTRACTOR Y/N
                $("#lstSubcontractor").prop("disabled", true);

                // LIBILITY Y/N
                $("#lstLiability").prop("disabled", true);

                // LIABILITY EXISTS Y/N
                $("#lstLiabilityExists").prop("disabled", true);

                sessionStorage.setItem("FilingTransId", data[44].toString());
                sessionStorage.setItem("FilingEntityId", data[2].toString());
                if (data[11] != null) {
                    sessionStorage.setItem("SubmittsionDate", data[11].toString());
                } else {
                    sessionStorage.setItem("SubmittsionDate", "");
                }
                //Address and Treasurer Id's
                sessionStorage.setItem("AddrId", data[5].toString());
                sessionStorage.setItem("TreasurerId", data[6].toString());

                $("#txtCurrentDateIE24HourExp").val(data[16].toString());
                $("#txtCurrentDateIE24HourExp").removeClass("watermarkHTMLTextBox");
                if (data[14].toString() != "" || data[16].toString() != null) {
                    var MyDate = new Date($("#txtCurrentDateIE24HourExp").val().toString());
                    var MyDateString;
                    MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                        + ('0' + MyDate.getDate()).slice(-2) + '/'
                        + MyDate.getFullYear();
                    $("#txtCurrentDateIE24HourExp").val("");
                    $("#txtCurrentDateIE24HourExp").val(MyDateString);
                    $("#txtCurrentDateIE24HourExp").removeClass("watermarkHTMLTextBox");
                }
                $("#txtPayeeName").val(data[12].toString());
                $("#txtStreetName").val(data[20].toString());
                $("#txtCity").val(data[21].toString());
                $("#txtState").val(data[22].toString());
                $("#txtZipCode").val(data[23].toString());
                $("#txtCountry").val(data[19].toString());
                if (data[19].toString() == "United States") {
                    $("#chkCountry").prop('checked', false);
                    $("#txtCountry").prop("disabled", true);
                    $("#txtState").prop('maxLength', '2');
                }
                else { // Other Country
                    $("#chkCountry").prop('checked', true);
                    $("#txtCountry").prop("disabled", false);
                    $("#txtState").prop('maxLength', '30');
                    $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                    $m('#txtZipCode').attr("placeholder", "");
                }
                if (data[23].toString() != "") {
                    $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                }
                else {
                    $("#txtZipCode").addClass("watermarkHTMLTextBox");
                    if (data[19].toString() == "United States") {
                        $("#txtZipCode").blur();
                    }
                }
                if (data[4].toString() == "1") {
                    $("#tdCheck").show();
                    $("#txtCheckIE24ExpPayF").val(data[25].toString());
                }
                else {
                    $("#tdCheck").hide();
                }
                $("#txtTreasurerName").val(data[28].toString() + " " + data[29].toString() + " " + data[30].toString());
                $("#txtTreasurerOccupation").val(data[31].toString());
                $("#txtTreasurerEmployer").val(data[32].toString());
                $("#txtStreetNameTreasurer").val(data[33].toString());
                $("#txtCityTreasurer").val(data[34].toString());
                $("#txtStateTreasurer").val(data[35].toString());
                $("#txtZipCodeTreasurer").val(data[36].toString());
                if (data[36].toString() != "") {
                    $("#txtZipCodeTreasurer").removeClass("watermarkHTMLTextBox");
                }
                else {
                    $("#txtZipCodeTreasurer").blur();
                    $("#txtZipCodeTreasurer").addClass("watermarkHTMLTextBox");
                }
                $("#txtIndependentExpenditureDescription").val(data[37].toString());
                $("#txtCandidateNameBPReference").val(data[38].toString());
                if (data[39].toString() == "Yes") {
                    $("#lstSupported")[0].selectedIndex = 0;
                }
                else {
                    $("#lstSupported")[0].selectedIndex = 1;
                }
                // ==============================================================
                // ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                // LIABILITY Y/N BASED ON LIBILITY IT WILL SET LIABILITY EXISTS.
                if (data[7].toString() == "Yes") {

                    // Liability
                    $("#lstLiability")[0].selectedIndex = 1;

                    // Liability Exist
                    $("#lstLiabilityExists")[0].selectedIndex = 1;

                    // // IF ALREADY EXISTING LIABILITY THEN WE HAVE TO BRING ORIGINAL AMOUNT.
                    if (data[42].toString() != "") { // IF ALREADY EXISTING LIABILITY THEN WE HAVE TO BRING ORIGINAL AMOUNT.

                        // Hide/Show Fields
                        $("#dvDateIncurred").show();
                        $("#dvOriginalAmtTxt").hide();
                        $("#dvOutstandingAmt").hide(); // REMOVED AS DISCUSSED DEFECT: 4131 ON 06.24.2021.

                        // LIABILITY YES DISABLE ENTITY NAME/PAYEE NAME WITH ADDRESS.
                        $("#txtPayeeName").prop("disabled", true);
                        $("#chkCountry").prop("disabled", true);
                        $("#txtCountry").prop("disabled", true);
                        $("#txtStreetName").prop("disabled", true);
                        $("#txtCity").prop("disabled", true);
                        $("#txtState").prop("disabled", true);
                        $("#txtZipCode").prop("disabled", true);

                        // Bind Date Incurred Data.
                        $.post("@Url.Content("~/NonItemIE24HourPIDAExpenditureSchedF/GetDateIncurredUpdate/")", {
                            strTransNumber: data[42].toString()
                        }, function (results) {
                            $("#lstDateIncurred").empty();
                            for (var i = 0; i < results.length; i++) {
                                $("#lstDateIncurred").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                            }

                            // Date Incurred & Original Amount:
                            $("#lstDateIncurred").prop("disabled", true);

                            // Get the Outstanding Amount.
                            $.post("@Url.Content("~/NonItemIE24HourPIDAExpenditureSchedF/GetOutstandingAmount/")", {
                                strFlngEntityId: data[2].toString(),
                                strUpdateStatusVal: "N",
                                strSchedFAmt: "",
                                strFilingTransId: data[42].toString()
                            }, function (resultOwedAmt) {
                                var paymentAmount = data[13].toString();
                                var owedAmount = resultOwedAmt.toString();
                                var outstandingAmountLib = parseFloat(owedAmount) - parseFloat(paymentAmount);
                                $("#txtOutstandingAmt").val(parseFloat(outstandingAmountLib).toFixed(2).toString());
                                sessionStorage.setItem("UpdateOwedAmount", resultOwedAmt.toString());

                                sessionStorage.setItem("OutstandingAmountPartialExists", parseFloat(owedAmount).toFixed(2).toString());
                            });
                        });
                    }
                    else { // ELSE IF NOT EXISTING CREATING NEW LIABILITY THEN WE HAVE TO SHOW ADDING PARTIAL AMOUNT AND OUTSTANDING AMOUNT.
                        // ELSE IF NOT EXISTING CREATING NEW LIABILITY THEN WE HAVE TO SHOW ADDING PARTIAL AMOUNT AND OUTSTANDING AMOUNT.

                        // Hide/Show Fields
                        $("#dvDateIncurred").hide();
                        $("#dvOriginalAmtTxt").show();
                        $("#dvOutstandingAmt").hide(); // REMOVED AS DISCUSSED DEFECT: 4131 ON 06.24.2021.

                        // LIABILITY YES DISABLE ENTITY NAME/PAYEE NAME WITH ADDRESS.
                        $("#txtPayeeName").prop("disabled", true);
                        $("#chkCountry").prop("disabled", true);
                        $("#txtCountry").prop("disabled", true);
                        $("#txtStreetName").prop("disabled", true);
                        $("#txtCity").prop("disabled", true);
                        $("#txtState").prop("disabled", true);
                        $("#txtZipCode").prop("disabled", true);

                        var outstandingAmount = data[41].toString();
                        $("#txtOutstandingAmt").val(outstandingAmount);
                        if ($("#txtOutstandingAmt").val().toString() != "" || $("#txtOutstandingAmt").val().toString() != "999999999.99") {
                            $("#txtOutstandingAmt").removeClass("watermarkHTMLTextBox");
                        }

                        // ORIGINAL AMOUNT
                        $("#txtOriginalAmount").prop("disabled", true);
                        var partialAmount = data[13].toString();
                        var orgAmount = parseFloat(outstandingAmount) + parseFloat(partialAmount);
                        $("#txtOriginalAmount").val(orgAmount.toFixed(2));
                        if ($("#txtOriginalAmount").val().toString() != "" || $("#txtOriginalAmount").val().toString() != "999999999.99") {
                            $("#txtOriginalAmount").removeClass("watermarkHTMLTextBox");
                        }
                        sessionStorage.setItem("OutstandingAmountPartialExists", orgAmount.toFixed(2).toString());
                    }
                }
                else {
                    $("#lstLiability")[0].selectedIndex = 0;
                    // Hide/Show Fields
                    $("#dvDateIncurred").hide();
                    $("#dvOriginalAmtTxt").hide();
                    $("#dvOutstandingAmt").hide();

                    // Liability Exist
                    $("#lstLiabilityExists")[0].selectedIndex = 0;

                    // LIABILITY NO DISABLE ENTITY NAME/PAYEE NAME WITH ADDRESS.
                    $("#txtPayeeName").prop("disabled", false);
                    $("#chkCountry").prop("disabled", false);
                    $("#txtCountry").prop("disabled", false);
                    $("#txtStreetName").prop("disabled", false);
                    $("#txtCity").prop("disabled", false);
                    $("#txtState").prop("disabled", false);
                    $("#txtZipCode").prop("disabled", false);
                }
                if (data[8].toString() == "Yes") {
                    $("#lstSubcontractor")[0].selectedIndex = 1;
                }
                else {
                    $("#lstSubcontractor")[0].selectedIndex = 0;
                }
                var originalAmount = data[13].toString();
                $("#txtAmtIE24HrPIDAExpenditure").val(originalAmount);
                if ($("#txtAmtIE24HrPIDAExpenditure").val().toString() != "" || $("#txtAmtIE24HrPIDAExpenditure").val().toString() != "999999999.99") {
                    $("#txtAmtIE24HrPIDAExpenditure").removeClass("watermarkHTMLTextBox");
                }
                $("#txtExplanationSchedFIE24").val(data[26].toString());

                if (data[4].toString() == "7") {
                    $("#lblExplanation").text("* Explanation");
                }
                else if (data[3].toString() == "8") {
                    $("#lblExplanation").text("* Explanation");
                }
                else {
                    $("#lblExplanation").text("Explanation");
                }

                $("#tdPartnershipName").show();
                $("#txtPayeeName").val(data[12].toString());

                // Get Form Data.
                form_edit_original_data = $("#DialogBoxSchedFIEForm").serialize();

                // ======================================================================================
                // TREASURE INFORMATION.
                sessionStorage.setItem("TreasOccupation", $("#txtTreasurerOccupation").val().toString());
                sessionStorage.setItem("TreasEmployer", $("#txtTreasurerEmployer").val().toString());
                sessionStorage.setItem("TreasStreetName", $("#txtStreetNameTreasurer").val().toString());
                sessionStorage.setItem("TreasCity", $("#txtCityTreasurer").val().toString());
                sessionStorage.setItem("TreasState", $("#txtStateTreasurer").val().toString());
                sessionStorage.setItem("TreasZipCode", $("#txtZipCodeTreasurer").val().toString());
            // TREASURE INFORMATION.
            // ======================================================================================

            } // Other Schedules
            else if (data[1].toString() == "6") { // Monetary Contributions Received From Individual & Partnerships EDIT TRANSACTION
                // Set the Session Variable for Edit DialogBox.
                sessionStorage.setItem("ScheduleId", data[1].toString());
                sessionStorage.setItem("FilingTransIdEdit", data[0].toString());
                sessionStorage.setItem("EditFlag", "True");
                // Changes the Header Name.
                $("#lblHeader,#lblHeader1,#lblHeader2,.lblHeaderClassSelector").text("Expenditure Payments");
                var urlContributionsCandIndFamily = "@Url.Content("~/NonItemIE24HourPIDAExpenditureSchedF/NonItemIE24HourPIDAExpenditureSchedF/")";
                window.location.href = urlContributionsCandIndFamily;
            }

        });
        // EDIT 24-HOUR NOTICE TRANSACTIONS.
        // ======================================================================================================================================

        // ======================================================================================================================================
        // DELETE 24-HOUR NOTICE TRANSACTIONS.
        $m('#gridFilingTransIEWeeklyExpenditure tbody').on('click', 'a.editor_remove_Sched_F_IEWeeklyExp', function (e) {

            var dataTrans = tableFilingTransactions.row($(this).parents('tr')).data();

            var resultsDelete = false;

            sessionStorage.setItem("EditYesNo", "Yes");

            $("#divUCIETransactionsHistory").hide();

            if (dataTrans[11] != null && dataTrans[11].toString() != "") {
                resultsDelete = "This action will delete all the previously submitted iterations (if available) as well. Are you sure you want to delete this transaction?";
            } else {
                resultsDelete = "Are you sure you want to delete this transaction?";
            }
            // DELETE.
            $m('#modal_dialog').text(resultsDelete);
            $m("#modal_dialog").dialog({
                resizable: false,
                width: '400px',
                height: 'auto',
                bgiframe: false,
                modal: true,
                closeOnEscape: false,
                open: function (event, ui) { hideDialogXButton(this); },
                buttons: {
                    "OK": function () {
                        // Close Confirm box
                        $m(this).dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                        sessionStorage.setItem("EditYesNo", "No");

                        // DELETE TRANSACTION.
                        $.post("@Url.Content("~/NonItemIE24HourPIDAExpenditureSchedF/DeleteNonItemIEWeeklyContrSchedF/")", {
                            strTransNumber: dataTrans[44].toString()
                        }, function (results) {

                            if (dataTrans[11] != null && dataTrans[11].toString() != "") {
                                ShowDialogBox('EFS', 'Transaction deleted successfully; Deletion of the corresponding Itemized filing transaction (if available) will need to be done separately', 'Ok', '');
                            } else {
                                ShowDialogBox('EFS', 'Transaction deleted successfully', 'Ok', '');
                            }

                            window.status = "Transaction deleted successfully";

                            // Disable Submit Button.
                            $("#btnSubmitSchedAIEWeeklyContr").prop("disabled", true);

                            //Because of the way we did initialization we the Data on Grid hide the loading too!
                            tableFilingTransactions.ajax.reload();
                        });
                    },
                    "Cancel": function () {
                        sessionStorage.setItem("EditYesNo", "No");
                        $m(this).dialog("close");
                    }
                }
            });
        });
        // DELETE 24-HOUR NOTICE TRANSACTIONS.
        // ======================================================================================================================================

        var tableIETransHistory = '';

        // ======================================================================================================================================
        // HISTORY LINK BRING THE AMENDED TRANSACTIONS FOR SELECTED TRANSACTION.
        $m('#gridFilingTransIEWeeklyExpenditure tbody').on('click', 'a.editor_IEWeeklyExp_History', function (e) {
            e.preventDefault();

            // Show the Grid and bind the Grid.
            $("#divUCIETransactionsHistory").show();

            // DON'T HIGHLIGHT THE ROW WHEN CLICK ON HISTORY LINK.
            var dataTrans = tableFilingTransactions.row($(this).parents('tr')).data();

            sessionStorage.setItem("FilingTransIdHistory", dataTrans[44].toString());

            $("#btnSubmitSchedAIEWeeklyContr").prop("disabled", true);

            tableIETransHistory = $m('#gridIEWeeklyExpenditureHistory').DataTable({
                "bProcessing": true,
                "responsive": true,
                "deferRender": true,
                "retrieve": true,
                "columnDefs": [
                    {
                        "targets": [0, 1, 2, 3, 4, 5, 6, 38, 39, 40, 41],
                        "visible": false,
                        "searchable": false
                    },
                ],
                "initComplete": function (settings, json) {
                    //Accessibility: Applies various Accessibility features to this dataTable.
                    makeDataTableAccessible($m('#gridIEWeeklyExpenditureHistory').DataTable());
                },
                "fnServerData": function (url, data, callback) {
                    $.ajax({
                        "url": "@Url.Content("~/NonItemIE24HourPIDAExpenditureSchedF/GetIETransactionsHistory/")",
                        "data": {
                            strTransNumber: sessionStorage.getItem("FilingTransIdHistory").toString()
                        },
                        "success": callback,
                        "dataType": "json",
                        "type": "POST",
                        "error": function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                        }
                    });
                }
            });
            $m('#gridIEWeeklyExpenditureHistory').DataTable().ajax.reload();
            tableIETransHistory.search('').columns().search('').draw();
            tableIETransHistory.order([41, 'desc']).draw();
            tableIETransHistory.responsive.recalc();

            // TAKE THE PAGE TO DOWN GRID.
            $('html, body').animate({ scrollTop: $("#divUCIETransactionsHistory").offset().top }, 500);

        });
        // HISTORY LINK BRING THE AMENDED TRANSACTIONS FOR SELECTED TRANSACTION.
        // ======================================================================================================================================

        // ======================================================================================================================================
        // EDIT COMMON
        // Edit from Other Schedule functionality
        if (sessionStorage.getItem("EditFlag") != null) {
            if (sessionStorage.getItem("EditFlag").toString() == "True") {

                $("#divLoading").show();

                $("#lstTransTypeNonItemWeeklyExp option").each(function () {
                    if ($(this).val() == sessionStorage.getItem("ScheduleId").toString()) {
                        $(this).prop("selected", true);
                    }
                });
                sessionStorage.setItem("lstTransTypeNonItemWeeklyExp", $("#lstTransTypeNonItemWeeklyExp option:selected").val());

                sessionStorage.setItem("EditYesNo", "Yes");

                $("#divUCIETransactionsHistory").hide();

                dialog_Sched_F_IE.dialog("open");

                $("#btnUpdateSchedFIEWeeklyExp").show();
                $("#btnSaveSchedFIEWeeklyExp").hide();

                sessionStorage.setItem("UpdateFlagSchedA24HNotice", "Yes");

                var validator = $m("#DialogBoxSchedFIEForm").validate();
                validator.resetForm();  // clear out the validation errors
                $m("#DialogBoxSchedFIEForm")[0].reset();   // clear out the form data

                $("#txtTreasurerOccupation").focus();

                // DON'T SELECT THE ROW WHEN EDIT THE TRANSACTIONS.
                $("#btnSubmitSchedAIEWeeklyContr").prop("disabled", true);

                $.post("@Url.Content("~/_UC_GridCommonNIIEWeeklyExpenditure/GetEditTransactionData/")", {
                    strFilingTransId: sessionStorage.getItem("FilingTransIdEdit").toString()
                }, function (resultsEditData) {
                    $.each(resultsEditData, function (i, item) {
                        // Bind Method Data
                        var options = {};
                        options.url = "@Url.Content("~/NonItemIEWeeklyExpenditureSchedF/GetPaymentMethodData/")";
                        options.type = "POST";
                        options.data = null;
                        options.dataType = "json";
                        options.contentType = "application/json";
                        options.success = function (resultsMethod) {
                            $("#lstMethodIE24HExpPayF").empty();
                            for (var i = 0; i < resultsMethod.length; i++) {
                                $("#lstMethodIE24HExpPayF").append("<option value='" + resultsMethod[i].Value + "'>" + resultsMethod[i].Text + "</option>");
                            }
                            // Set Method
                            if (item.PaymentTypeId.toString() != null || item.PaymentTypeId.toString() != "") {
                                $m("#lstMethodIE24HExpPayF option")
                                    .filter(function () { return $m(this).val() == item.PaymentTypeId.toString(); })
                                    .attr("selected", "selected");
                            }
                            // Get Form Data.
                            form_original_data = $("#DialogBoxSchedFIEForm").serialize();
                        };
                        options.error = function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                        };
                        $.ajax(options);

                        // Bind Contributor Type Code
                        var options = {};
                        options.url = "@Url.Content("~/NonItemIE24HourPIDAExpenditureSchedF/GetPurposeCodeExpenditure/")";
                        options.type = "POST";
                        options.data = null;
                        options.dataType = "json";
                        options.contentType = "application/json";
                        options.success = function (results) {
                            $("#lstPurposeCode").empty();
                            for (var i = 0; i < results.length; i++) {
                                $("#lstPurposeCode").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                            }
                            //Set Contribution Type Code
                            if (item.ContributorTypeId.toString() != null || item.PurposeCodeId.toString() != "") {
                                $m("#lstPurposeCode option")
                                    .filter(function () { return $m(this).val() == item.PurposeCodeId.toString(); })
                                    .attr('selected', 'selected');
                            }
                            // Get Form Data.
                            form_original_data = $("#DialogBoxSchedFIEForm").serialize();
                        };
                        options.error = function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                        };
                        $.ajax(options);

                        $("#lstPurposeCode").prop("disabled", true);

                        // SUBCONTRACTOR Y/N
                        $("#lstSubcontractor").prop("disabled", true);

                        // LIBILITY Y/N
                        $("#lstLiability").prop("disabled", true);

                        // LIABILITY EXISTS Y/N
                        $("#lstLiabilityExists").prop("disabled", true);

                        sessionStorage.setItem("FilingTransId", item.TransNumber.toString());
                        sessionStorage.setItem("FilingEntityId", item.FilingEntityId.toString());
                        sessionStorage.setItem("SubmittsionDate", item.SubmissionDate.toString());

                        //Address and Treasurer Id's
                        sessionStorage.setItem("AddrId", item.AddrId.toString());
                        sessionStorage.setItem("TreasurerId", item.TreasId.toString());

                        $("#txtCurrentDateIE24HourExp").val(item.SchedDate.toString());
                        $("#txtCurrentDateIE24HourExp").removeClass("watermarkHTMLTextBox");
                        if (item.SchedDate.toString() != "" || item.SchedDate.toString() != null) {
                            var MyDate = new Date($("#txtCurrentDateIE24HourExp").val().toString());
                            var MyDateString;
                            MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                                + ('0' + MyDate.getDate()).slice(-2) + '/'
                                + MyDate.getFullYear();
                            $("#txtCurrentDateIE24HourExp").val("");
                            $("#txtCurrentDateIE24HourExp").val(MyDateString);
                            $("#txtCurrentDateIE24HourExp").removeClass("watermarkHTMLTextBox");
                        }
                        $("#txtPayeeName").val(item.FilingEntityName.toString());
                        $("#txtStreetName").val(item.FilingStreetName.toString());
                        $("#txtCity").val(item.FilingCity.toString());
                        $("#txtState").val(item.FilingState.toString());
                        $("#txtZipCode").val(item.FilingZip.toString());
                        $("#txtCountry").val(item.FilingCountry.toString());
                        if (item.FilingCountry.toString() == "United States") {
                            $("#chkCountry").prop('checked', false);
                            $("#txtCountry").prop("disabled", true);
                            $("#txtState").prop('maxLength', '2');
                        }
                        else { // Other Country
                            $("#chkCountry").prop('checked', true);
                            $("#txtCountry").prop("disabled", false);
                            $("#txtState").prop('maxLength', '30');
                            $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            $m('#txtZipCode').attr("placeholder", "");
                        }
                        if (item.FilingZip.toString() != "") {
                            $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                        }
                        else {
                            $("#txtZipCode").addClass("watermarkHTMLTextBox");
                            if (item.FilingCountry.toString() == "United States") {
                                $("#txtZipCode").blur();
                            }
                        }
                        if (item.PaymentTypeId.toString() == "1") {
                            $("#tdCheck").show();
                            $("#txtCheckIE24ExpPayF").val(item.PayNumber.toString());
                        }
                        else {
                            $("#tdCheck").hide();
                        }
                        $("#txtTreasurerName").val(item.TreasurerFirstName.toString() + " " + item.TreasurerLastName.toString() + " " + item.TreasurerMiddleName.toString());
                        $("#txtTreasurerOccupation").val(item.TreasurerOccuptaion.toString());
                        $("#txtTreasurerEmployer").val(item.TreasurerEmployer.toString());
                        $("#txtStreetNameTreasurer").val(item.TreasurerStreetAddress.toString());
                        $("#txtCityTreasurer").val(item.TreasurerCity.toString());
                        $("#txtStateTreasurer").val(item.TreasurerState.toString());
                        $("#txtZipCodeTreasurer").val(item.TreasurerZip.toString());
                        if (item.TreasurerZip.toString() != "") {
                            $("#txtZipCodeTreasurer").removeClass("watermarkHTMLTextBox");
                        }
                        else {
                            $("#txtZipCodeTreasurer").blur();
                            $("#txtZipCodeTreasurer").addClass("watermarkHTMLTextBox");
                        }
                        $("#txtContributorOccupation").val(item.ContributorOccupation.toString());
                        $("#txtContributorEmployer").val(item.ContributorEmployer.toString());
                        $("#txtIndependentExpenditureDescription").val(item.IEDescription.toString());
                        $("#txtCandidateNameBPReference").val(item.CandBallotPropReference.toString());
                        if (item.IESupported.toString() == "Yes") {
                            $("#lstSupported")[0].selectedIndex = 0;
                        }
                        else {
                            $("#lstSupported")[0].selectedIndex = 1;
                        }
                        // ==============================================================
                        // ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                        // LIABILITY Y/N BASED ON LIBILITY IT WILL SET LIABILITY EXISTS.
                        if (item.RLiability.toString() == "Yes") {

                            // Liability
                            $("#lstLiability")[0].selectedIndex = 1;

                            // Liability Exist
                            $("#lstLiabilityExists")[0].selectedIndex = 1;

                            // // IF ALREADY EXISTING LIABILITY THEN WE HAVE TO BRING ORIGINAL AMOUNT.
                            if (item.DateIncurredOrgAmtId.toString() != "") { // IF ALREADY EXISTING LIABILITY THEN WE HAVE TO BRING ORIGINAL AMOUNT.

                                // Hide/Show Fields
                                $("#dvDateIncurred").show();
                                $("#dvOriginalAmtTxt").hide();
                                //$("#dvOutstandingAmt").show();
                                $("#dvOutstandingAmt").hide(); // REMOVED AS DISCUSSED DEFECT: 4131 ON 06.24.2021.

                                // LIABILITY YES DISABLE ENTITY NAME/PAYEE NAME WITH ADDRESS.
                                $("#txtPayeeName").prop("disabled", true);
                                $("#chkCountry").prop("disabled", true);
                                $("#txtCountry").prop("disabled", true);
                                $("#txtStreetName").prop("disabled", true);
                                $("#txtCity").prop("disabled", true);
                                $("#txtState").prop("disabled", true);
                                $("#txtZipCode").prop("disabled", true);

                                // Bind Date Incurred Data.
                                $.post("@Url.Content("~/NonItemIEWeeklyExpenditureSchedF/GetDateIncurredUpdate/")", {
                                    strFilingTransId: item.DateIncurredOrgAmtId.toString()
                                }, function (results) {
                                    $("#lstDateIncurred").empty();
                                    for (var i = 0; i < results.length; i++) {
                                        $("#lstDateIncurred").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                                    }

                                    // Date Incurred & Original Amount:
                                    $("#lstDateIncurred").prop("disabled", true);

                                    // Get the Outstanding Amount.
                                    $.post("@Url.Content("~/NonItemIEWeeklyExpenditureSchedF/GetOutstandingAmount/")", {
                                        strFlngEntityId: item.FilingEntityId.toString(),
                                        strUpdateStatusVal: "N",
                                        strSchedFAmt: "",
                                        strFilingTransId: $("#lstDateIncurred option:selected").val()
                                    }, function (resultOwedAmt) {
                                        var paymentAmount = item.OriginalAmount.toString();
                                        var owedAmount = resultOwedAmt.toString();
                                        var outstandingAmountLib = parseFloat(owedAmount);
                                        $("#txtOutstandingAmt").val(parseFloat(outstandingAmountLib).toFixed(2).toString());
                                        sessionStorage.setItem("UpdateOwedAmount", resultOwedAmt.toString());

                                        var orgAmountLib = parseFloat(outstandingAmountLib) + parseFloat(paymentAmount);

                                        sessionStorage.setItem("OutstandingAmountPartialExists", orgAmountLib.toFixed(2).toString());
                                    });
                                });
                            }
                            else { // ELSE IF NOT EXISTING CREATING NEW LIABILITY THEN WE HAVE TO SHOW ADDING PARTIAL AMOUNT AND OUTSTANDING AMOUNT.
                                // ELSE IF NOT EXISTING CREATING NEW LIABILITY THEN WE HAVE TO SHOW ADDING PARTIAL AMOUNT AND OUTSTANDING AMOUNT.

                                // Hide/Show Fields
                                $("#dvDateIncurred").hide();
                                $("#dvOriginalAmtTxt").show();
                                $("#dvOutstandingAmt").hide(); // REMOVED AS DISCUSSED DEFECT: 4131 ON 06.24.2021.

                                // LIABILITY YES DISABLE ENTITY NAME/PAYEE NAME WITH ADDRESS.
                                $("#txtPayeeName").prop("disabled", true);
                                $("#chkCountry").prop("disabled", true);
                                $("#txtCountry").prop("disabled", true);
                                $("#txtStreetName").prop("disabled", true);
                                $("#txtCity").prop("disabled", true);
                                $("#txtState").prop("disabled", true);
                                $("#txtZipCode").prop("disabled", true);

                                var outstandingAmount = item.OwedAmount.toString();
                                $("#txtOutstandingAmt").val(outstandingAmount);
                                if ($("#txtOutstandingAmt").val().toString() != "" || $("#txtOutstandingAmt").val().toString() != "999999999.99") {
                                    $("#txtOutstandingAmt").removeClass("watermarkHTMLTextBox");
                                }

                                // ORIGINAL AMOUNT
                                $("#txtOriginalAmount").prop("disabled", true);
                                var partialAmount = item.OriginalAmount.toString();
                                var orgAmount = parseFloat(outstandingAmount) + parseFloat(partialAmount);
                                $("#txtOriginalAmount").val(orgAmount.toFixed(2));
                                if ($("#txtOriginalAmount").val().toString() != "" || $("#txtOriginalAmount").val().toString() != "999999999.99") {
                                    $("#txtOriginalAmount").removeClass("watermarkHTMLTextBox");
                                }
                                sessionStorage.setItem("OutstandingAmountPartialExists", orgAmount.toFixed(2).toString());
                            }
                        }
                        else {
                            $("#lstLiability")[0].selectedIndex = 0;
                            // Hide/Show Fields
                            $("#dvDateIncurred").hide();
                            $("#dvOriginalAmtTxt").hide();
                            $("#dvOutstandingAmt").hide();

                            // Liability Exist
                            $("#lstLiabilityExists")[0].selectedIndex = 0;

                            // LIABILITY NO DISABLE ENTITY NAME/PAYEE NAME WITH ADDRESS.
                            $("#txtPayeeName").prop("disabled", false);
                            $("#chkCountry").prop("disabled", false);
                            $("#txtCountry").prop("disabled", false);
                            $("#txtStreetName").prop("disabled", false);
                            $("#txtCity").prop("disabled", false);
                            $("#txtState").prop("disabled", false);
                            $("#txtZipCode").prop("disabled", false);

                        }
                        if (item.RSubcontractor.toString() == "Yes") {
                            $("#lstSubcontractor")[0].selectedIndex = 1;
                        }
                        else {
                            $("#lstSubcontractor")[0].selectedIndex = 0;
                        }
                        var originalAmount = item.OriginalAmount.toString();
                        $("#txtAmtIE24HrPIDAExpenditure").val(originalAmount);
                        if ($("#txtAmtIE24HrPIDAExpenditure").val().toString() != "" || $("#txtAmtIE24HrPIDAExpenditure").val().toString() != "999999999.99") {
                            $("#txtAmtIE24HrPIDAExpenditure").removeClass("watermarkHTMLTextBox");
                        }
                        $("#txtExplanationSchedFIE24").val(item.TransExplanation.toString());

                        if (item.PaymentTypeId.toString() == "7") {
                            $("#lblExplanation").text("* Explanation");
                        }
                        else {
                            $("#lblExplanation").text("Explanation");
                        }

                        $m("label[for=txtTreasurerOccupation]").text('');
                        $m("#txtTreasurerOccupation").removeClass("error");
                        $m("#txtTreasurerOccupation").valid();

                        $("#tdPartnershipName").show();
                        $("#txtPayeeName").val(item.FilingEntityName.toString());

                        // ======================================================================================
                        // TREASURE INFORMATION.
                        sessionStorage.setItem("TreasOccupation", $("#txtTreasurerOccupation").val().toString());
                        sessionStorage.setItem("TreasEmployer", $("#txtTreasurerEmployer").val().toString());
                        sessionStorage.setItem("TreasStreetName", $("#txtStreetNameTreasurer").val().toString());
                        sessionStorage.setItem("TreasCity", $("#txtCityTreasurer").val().toString());
                        sessionStorage.setItem("TreasState", $("#txtStateTreasurer").val().toString());
                        sessionStorage.setItem("TreasZipCode", $("#txtZipCodeTreasurer").val().toString());
                        // TREASURE INFORMATION.
                        // ======================================================================================

                    });
                    // SET EDIT FLAG FALSE.
                    sessionStorage.setItem("EditFlag", "False");
                });
            }
        }
        // EDIT COMMON
        // ======================================================================================================================================

        // ======================================================================================================================================
        //Bind Clear Click - CLEAR BUTTON COMMON CODE.
        $(".clsCommonClear").bind('click', function () {
            $("#divGridMonetary").show();
            sessionStorage.setDataTable = "true";
            $("#divShowHideHelp").removeClass("clsShowHideHelpSec");
            $("#divShowHideHelp").addClass("clsShowHideHelpSecInMobileTablet");

            sessionStorage.setItem("FilerId", $("#txtFilerID option:selected").val());
            sessionStorage.setItem("CommitteeName", $("#txtCommitteeName option:selected").val());
            sessionStorage.setItem("ElectionCycle", $("#lstElectionCycle option:selected").val());
            sessionStorage.setItem("ElectionType", $("#lstElectionType option:selected").val());
            sessionStorage.setItem("ElectionDate", $("#lstElectionDate option:selected").val());
            sessionStorage.setItem("DisclosureType", $("#lstDisclosureType option:selected").val());
            sessionStorage.setItem("DisclosurePeriod", $("#lstDisclosurePeriod option:selected").val());
            sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesFrom").val());
            if ($("#lstElectionType option:selected").val() == "6") {
                sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
            }
            else {
                sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
            }
            sessionStorage.setItem("TransactionType", $("#lstTransactionType option:selected").val());
            sessionStorage.setItem("lstResigTermType", $("#lstResigTermType option:selected").val());
            sessionStorage.setItem("lstFilingDate", $("#lstFilingDate option:selected").val());
            if ($("#lstFilingDate option:selected").text().toString() == "- New Filing Date -") {
                sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
            }

            sessionStorage.setItem("TransactionTypeId", "true");

            var urlContrHome = "@Url.Content("~/ContributionsMonetary/ContributionsMonetary/")";

            window.location.href = urlContrHome;
        });
        //Bind Clear Click - CLEAR BUTTON COMMON CODE.
        // ======================================================================================================================================


        // ======================================================================================================================================
        // Grid Common Code ///////////////////////////////////////////////////
        // ======================================================================================================================================
        // CALL LOAD DATA FUNCTION
        LoadData();
        // FUNCTION LOAD DATA
        function LoadData() {
            $("#divLoading").show();
            tableFilingTransactions = $m('#gridFilingTransIEWeeklyExpenditure').DataTable({
                "bAutoWidth": false,
                "bProcessing": true,
                "responsive": true,
                "deferRender": true,
                "columnDefs": [
                    {
                        "targets": [0, 1, 2, 3, 4, 5, 6, 7, 8, 41, 43, 44, 45, 46],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        "targets": [10],
                        "fnCreatedCell": function (cell) {
                            cell.setAttribute('aria-label', "Row Actions");
                        }
                    },
                ],
                "initComplete": function (settings, json) {
                    //Accessibility: Applies various Accessibility features to this dataTable.
                    makeDataTableAccessible($m('#gridFilingTransIEWeeklyExpenditure').DataTable());
                },
                "fnRowCallback": function (nRow, aaData, iDisplayIndex) {
                    var uniqueID = generateUniqueRowIdForFnRowCallback(iDisplayIndex, nRow);
                    var EditAnchorButtonString = '<a class="editor_edit_Sched_F_IEWeeklyExp" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>';
                    var DeleteAnchorButtonString = '<a class="editor_remove_Sched_F_IEWeeklyExp" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>';
                    var HistoryButtonString = '<a class="editor_IEWeeklyExp_History lnkGird"  href="#divUCLoanRecLoanRepay"> History </a>';
                    if (aaData[14] == "In-Active") { // AFTER SUBMIT AND AMEND THERE IS NO EDIT AND DELETE.
                        // NO EDIT AND DELTE BUTTONS.
                        return nRow;
                    }
                    else if (aaData[14] == "Active" && aaData[11] != "") {
                        // Get that is there any child record created that means
                        // created but not submitted. if submitted meanse it will be Status - 'In-Active'
                        $.post("@Url.Content("~/NonItemIE24HourPIDAExpenditureSchedF/GetChildTransExists/")", {
                            strTransNumber: aaData[44].toString()
                        }, function (result) {
                            if (result) {
                                // NO EDIT AND DELETE BUTTONS.
                                if (aaData[11] != "" && aaData[15] == "Yes") {
                                    $m('td:eq(1)', nRow).html(HistoryButtonString);
                                }
                                return nRow;
                            }
                            else {
                                if (aaData[14] == "Active" && aaData[15] != "No") {
                                    if (aaData[11] != "") {
                                        $m('td:eq(1)', nRow).html(EditAnchorButtonString + HistoryButtonString);
                                        return nRow;
                                    }
                                    else {
                                        $m('td:eq(1)', nRow).html(EditAnchorButtonString + DeleteAnchorButtonString + HistoryButtonString);
                                        return nRow;
                                    }
                                }
                                else {
                                    if (aaData[11] == "") {
                                        $m('td:eq(1)', nRow).html(EditAnchorButtonString + DeleteAnchorButtonString);
                                        return nRow;
                                    }
                                    else {
                                        $m('td:eq(1)', nRow).html(EditAnchorButtonString);
                                        return nRow;
                                    }
                                }
                            }
                        });
                    }
                    else {
                        if (aaData[11] != "") {
                            $m('td:eq(1)', nRow).html(EditAnchorButtonString);
                            return nRow;
                        }
                        else {
                            $m('td:eq(1)', nRow).html(EditAnchorButtonString + DeleteAnchorButtonString);
                            return nRow;
                        }
                    }
                },
                "fnDrawCallback": function (oSettings) {
                    var oSettings = this.fnSettings();
                    var iTotalRecords = oSettings.fnRecordsTotal();
                    if (iTotalRecords < 1) {
                        $("#btnSubmitSchedAIEWeeklyContr").prop("disabled", true);
                    }

                    $("#divLoading").hide();
                },
                "fnServerData": function (url, data, callback) {
                    // Refresh the Data on Grid... Hides the loading too!
                    GetIE24HourPIDAExpenditureTransactions(callback, false, false);
                }
            });
            tableFilingTransactions.columns.adjust().draw(true);
            $m('#gridFilingTransIEWeeklyExpenditure').DataTable().ajax.reload();
            tableFilingTransactions.search('').columns().search('').draw();
            tableFilingTransactions.order([46, 'desc']).draw();
            tableFilingTransactions.responsive.recalc();
            $("#divLoading").show();

        } // END LOAD DATA FUNCTION.

        //Common Code for Set Preferences - Start
        //---------------------------------------------------------------------------------------------------------------------------------------
        //---------------------------------------------------------------------------------------------------------------------------------------
        $('#btnSetPreferences').click(function () {
            $("#divLoading").show();
            $.ajax({
                url: "@Url.Content("~/_UC_GridCommonNIIEWeeklyExpenditure/UpdateColumnValue/")",
                data: {
                    uniqueValue: $m("#ddlViewableColumn").multipleSelect("getSelects").toString()
                },
                success: function (results) {
                    window.status = "Transaction saved successfully";
                    //Because of the way we did initialization we the Data on Grid hide the loading too!
                    tableFilingTransactions.ajax.reload();
                    // GridCommonNIIEWeeklyExpenditure_HideColumn are implemented inside _UC_ GridCommonNIIEWeeklyExpenditure.cshtml.
                    GridCommonNIIEWeeklyExpenditure_HideColumn($m("#ddlViewableColumn").multipleSelect("getSelects", "text").toString().split(","), tableFilingTransactions);
                },
                cache: false
            });
        });


        $.post("@Url.Content("~/_UC_GridCommonControl/GetSortName/")", {
        }, function (results) {
            // GridCommonNIIEWeeklyExpenditure_HideColumn are implemented inside _UC_ GridCommonNIIEWeeklyExpenditure.cshtml.
            GridCommonNIIEWeeklyExpenditure_HideColumn(results.toString().split(","), tableFilingTransactions);
            tableFilingTransactions.columns.adjust().draw(false);
            tableFilingTransactions.responsive.rebuild();
            tableFilingTransactions.columns.adjust().responsive.recalc();
        });


        /**
        * Appends label text to _validate elementys based on a list of custom errors returned from the server.
        * It won't do anyting to handle "AmmountError" keys but it will return true if it sees one in the list.
        * param {reuslt.Errors} errorList
        * Replaces this type of code basically:
        for (var i = 0; i < results.Errors.length; i++) {
            if (results.Errors[i].Key == "txtPartAmt") {
                $("#txtPartAmtSchedD_validate").append('<label for="txtPartAmtSchedD" class="error">' + results.Errors[i].Value + '</label>');
            }
            if (results.Errors[i].Key == "txtPartExplanationInKind") {
                $("#txtPartExplanationInKind_validate").append('<label for="txtPartExplanationInKind" class="error">' + results.Errors[i].Value + '</label>');
            }
            if (results.Errors[i].Key == "AmountError") {
                ShowDialogBox('EFS', 'Partnership Amount cannot be more than Outstanding Amount $' + parseFloat(expPartAmount).toFixed(2).toString(), 'Ok', '');
            }
        }
        */
        function AppendCustomErrorLabels(errorList) {
            //Define special error conditions [key, Validator Label Id]
            var errorLabelDiscrepancies = new Map([["txtCurrentDate", "txtCurrentDateIE24HourExp"], ["txtPartnerShipName", "txtPayeeName"], ["txtCheck", "txtCheckIE24ExpPayF"], ["lstMethod", "lstMethodIE24HExpPayF"], ["txtAmt", "txtAmtIE24HrPIDAExpenditure"], ["txtAmtOut", "txtOriginalAmount"], ["lstPurposeCode", "txtExplanationSchedFIE24"]]);
            return appCommonEFS_AppendCustomErrorLabelsForAmmountError(errorList, errorLabelDiscrepancies);
        }

        //Commonly used values in this particular page.
        function GetIE24HourPIDAExpenditureTransactionsOptions() {
            return {
                txtFilerID: $("#txtFilerID").val(),
                lstElectionCycle: $("#lstElectionCycle option:selected").val(),
                lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                lstElectionType: $("#lstElectionType option:selected").val(),
                lstElectionDateId: $("#lstElectionDate option:selected").val(),
                lstFilingDate: "",
                txtNewFilingDate: $("#txtReportPeriodDatesTo").val()
            }
        }

        /**Common code for invoking GetIE24HourPIDAExpenditureTransactions from controller.
         * This was created for ALM Defect 707 where users were intertacting with the table while the "Processing..." text was still visible.
         * dataTableInstanceToReload { function } The reference to the datatable we will reload in the success callback..
         * dataOverides { ajax data params } pass to overwrite data values when making ajax call.
         * doneFunction { function } A function to be called if the ajax call is completed.
         */
        function GetIE24HourPIDAExpenditureTransactions(dataTableInstanceToReload, dataOverides, doneFunction) {
            var callback = dataTableInstanceToReload ? dataTableInstanceToReload : tableFilingTransactions;
            //Determine what data to use.
            var optionsData = bUtilIsObject(dataOverides) ? dataOverides : GetIE24HourPIDAExpenditureTransactionsOptions();
            var ajaxUrl = "@Url.Content("~/_UC_GridCommonNIIEWeeklyExpenditure/GetIE24HourPIDAExpenditureTransactions/")";
            appCommonEFS_GenericCallForTransactionGrid(false, callback, optionsData, doneFunction, ajaxUrl);
        }
        // ======================================================================================================================================
        // Grid Common Code ///////////////////////////////////////////////////
        // ======================================================================================================================================


        function ClearDialogBoxValSchedANonItem() {

            // Clear Form Validation. Schedule 'D'
            var validator = $m("#DialogBoxSchedFIEForm").validate();
            validator.resetForm();  // clear out the validation errors
            $m("#DialogBoxSchedFIEForm")[0].reset();   // clear out the form data

            // Set the default values for form.
            $("#txtCountry").val("United States");
            $("#txtCountry").prop("disabled", true);
            $("#chkCountry").prop('checked', false);
            $("#txtState").prop('maxLength', '2');
            $m("#txtCountry").valid();

            // Set the default values for form.
            $("#lblExplanation").text("Explanation");

            $("#dvDateIncurred").hide();
            $("#dvOriginalAmtTxt").hide();
            $("#dvOutstandingAmt").hide();

            $("#lblAmount").text("* Amount $");

            // Set the default values for form.
            $("#lstPurposeCode").prop("disabled", false);
            // LIBILITY Y/N
            $("#lstLiability").prop("disabled", false);
            // DISABLE SUBMIT BUTTON.
            $("#btnSubmitSchedAIEWeeklyContr").prop("disabled", true);
            // SUBCONTRACTOR Y/N
            $("#lstSubcontractor").prop("disabled", false);
            // Original Amount
            $("#txtOriginalAmount").prop("disabled", false);

            // liability
            $("#txtPayeeName").prop("disabled", false);
            $("#chkCountry").prop("disabled", false);
            $("#txtCountry").prop("disabled", true);
            $("#txtStreetName").prop("disabled", false);
            $("#txtCity").prop("disabled", false);
            $("#txtState").prop("disabled", false);
            $("#txtZipCode").prop("disabled", false);

            // Set the default values for form.
            $("#lstPurposeCode")[0].selectedIndex = 0;
            $("#lstMethodIE24HExpPayF")[0].selectedIndex = 0;
            $("#lstSupported")[0].selectedIndex = 0;
            $("#lstLiability")[0].selectedIndex = 0;
            $("#lstSubcontractor")[0].selectedIndex = 0;
            $("#lstLiabilityExists")[0].selectedIndex = 0;
            $("#lstDateIncurred")[0].selectedIndex = 0;

            // Set the default values for form.
            $("#txtCurrentDateIE24HourExp").blur();
            $("#txtZipCode").blur();
            $("#txtZipCodeTreasurer").blur();
            $("#txtAmtIE24HrPIDAExpenditure").blur();

            // HIDE/SHOW FILEDS
            $("#tdCheck").hide();
            // HIDE/SHOW FILEDS
        }

        function ClearServerSideErrors() {
            //removing error class and error messages in search form
            $("#txtTreasurerName_validate").empty();
            $("#txtTreasurerOccupation_validate").empty();
            $("#txtTreasurerEmployer_validate").empty();
            $("#txtStreetNameTreasurer_validate").empty();
            $("#txtCityTreasurer_validate").empty();
            $("#txtStateTreasurer_validate").empty();
            $("#txtZipCodeTreasurer_validate").empty();
            $("#txtPayeeName_validate").empty();
            $("#txtCountry_validate").empty();
            $("#txtStreetName_validate").empty();
            $("#txtCity_validate").empty();
            $("#txtState_validate").empty();
            $("#txtZipCode_validate").empty();
            $("#txtCurrentDateIE24HourExp_validate").empty();
            $("#txtIndependentExpenditureDescription_validate").empty();
            $("#txtCandidateNameBPReference_validate").empty();
            $("#lstPurposeCode_validate").empty();
            $("#lstDateIncurred_validate").empty();
            $("#lstMethodIE24HExpPayF_validate").empty();
            $("#txtCheckIE24ExpPayF_validate").empty();
            $("#txtOriginalAmount_validate").empty();
            $("#txtAmtIE24HrPIDAExpenditure_validate").empty();
            $("#txtOutstandingAmt_validate").empty();
            $("#txtExplanationSchedFIE24_validate").empty();
        }

    }); // DOCUMENT END END END>>>>>> >>>>>>>>>>>>>>>>>>

</script>