@model Models.PartnersData
@{
    ViewBag.Title = ": Contribution in Kind";
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
}

<form id="ContributionInKindForm">

    @Html.Partial("UserControls/_UC_Alert_Message")
    @Html.Partial("UserControls/_UC_Delete_Message")

    <div id="divMainNew" class="mainDiv">
        <div class="mainLowerDivCSSDesktop">
            <div id="divhide" class="hideShowButtonCSS">
                Filter
                <button id="btnCommonShowHide1" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonShowHide">
                    <img src="~/Content/Images/up20.png" alt="Up/Hide Filter Arrow" />
                </button>
            </div>
            <div id="divshow" class="hideShowButtonCSS">
                Filter
                <button id="btnCommonHideShow1" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonHideShow">
                    <img src="~/Content/Images/down20.png" alt="Down/Show Filter Arrow" />
                </button>
            </div>
        </div>
        <div class="mainLowerDivCSS">
            <div id="divhideForMobile" class="hideShowButtonCSS">
                File a New Disclosure Report
                <div class="paddingleft6emcss floatRight">
                    Filter
                    <button id="btnCommonShowHide2" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonShowHide">
                        <img src="~/Content/Images/up20.png" alt="Up/Hide Filter Arrow" />
                    </button>
                </div>
            </div>
            <div id="divshowForMobile" class="hideShowButtonCSS">
                File a New Disclosure Report
                <div class="paddingleft6emcss floatRight">
                    Filter
                    <button id="btnCommonHideShow2" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonHideShow">
                        <img src="~/Content/Images/down20.png" alt="Down/Show Filter Arrow" />
                    </button>
                </div>
            </div>
        </div>
        <div id="divTopSection">
            <div id="selectorItsRpt">
                <div class="divWidth">
                    <div class="requiredTextFilter">* marks required fields</div>
                    <div class="floatRightNew clsShowButtonClass">
                        <input type="button" id="btnCommonSearch1" class="btn btn-default clsCommonSearch" name="Command" value="Apply" title="Apply" style="font-size:12px;" />&nbsp;
                        <input type="button" id="btnCommonClear1" class="btn btn-default clsCommonClear" name="Command" value="Clear" title="Clear" style="font-size:12px;" />&nbsp;
                        <button id="imgHelp1" type="button" class="btn btn-default buttonTransparent" onclick="CallHelp();">
                            <img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" class="ButtonImageCSS" title="Help" />
                        </button>
                    </div>
                    <div id="divFilerID">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilerID">* Filer ID</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("txtFilerID", ViewData["txtFilerID"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblFilerID" })
                        </div>
                    </div>
                    <div id="divFilerType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilerType">* Filer Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.TextBox("txtFilerType", null, new { id = "txtFilerType", @class = "txtWidth txtReportPeriodDatesFrom", aria_labelledby = "lblFilerType" })
                        </div>
                    </div>
                    <div id="divCommitteeName">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblCommitteeName">* Candidate/Committee Name</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("txtCommitteeName", ViewData["txtCommitteeName"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblCommitteeName" })
                        </div>
                    </div>
                    <div id="divElectionCycle">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblElectionCycle">* Report Year</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstElectionCycle", ViewData["lstElectionCycle"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblElectionCycle" })
                        </div>
                    </div>
                    <div id="divOfficeType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblOfficeType">* Election Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstUCOfficeType", null, "- Select -", new { id = "lstUCOfficeType", @class = "spanMobileWidth", aria_labelledby = "lblOfficeType" })
                        </div>
                    </div>
                    <div id="divCounty">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblCounty">* County</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstUCCounty", null, "- Select -", new { @class = "spanMobileWidth", aria_labelledby = "lblCounty" })
                        </div>
                    </div>
                    <div id="divMunicipality">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblMunicipality">* Municipality</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstUCMuncipality", null, "- Select -", new { @class = "spanMobileWidth", aria_labelledby = "lblMunicipality" })
                        </div>
                    </div>
                    <div id="divElectionType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblElectionType">* Report Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstElectionType", ViewData["lstElectionType"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblElectionType" })
                        </div>
                    </div>
                    <div id="divElectionDate">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblElectionDate">* Election Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstElectionDate", ViewData["lstElectionDate"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblElectionDate" })
                        </div>
                    </div>
                    <div id="divDisclosureType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblDisclosureType">* Disclosure Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstDisclosureType", ViewData["lstDisclosureType"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblDisclosureType" })
                        </div>
                    </div>
                    <div id="divDisclosurePeriod">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblDisclosurePeriod">* Disclosure Period</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstDisclosurePeriod", ViewData["lstDisclosurePeriod"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblDisclosurePeriod" })
                        </div>
                    </div>
                    <div id="divReportPeriodDates">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblReportPeriodDatesFrom">* Cut off Date"</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.TextBox("searchTerm", null, new { id = "txtReportPeriodDatesFrom", @class = "txtWidth", aria_labelledby = "lblReportPeriodDatesFrom" })
                        </div>
                    </div>
                    <div id="divFilingDateDropDown">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilingDate">* Filing Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstFilingDate", ViewData["lstFilingDate"] as SelectList, "- Select -", new { @class = "spanMobileWidth lstFilingDate", aria_labelledby = "lblFilingDate" })
                        </div>
                    </div>
                    <div id="divReportPeriodDatesTo">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblReportPeriodDatesTo">* Filing Date To</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.TextBox("searchTerm", null, new { id = "txtReportPeriodDatesTo", @class = "txtWidth", aria_labelledby = "lblReportPeriodDatesTo" })
                        </div>
                    </div>

                    @* OFFICE CYCLE FILING DATE *@
                    <div id="divFilingDateOffCycle">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilingDateOffCycle">* New Filing Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            <input type="text" id="txtNewFilingDate" name="txtNewFilingDate" class="txtWidth txtCurrentDateCls" maxlength="10" aria-labelledby="lblFilingDateOffCycle" />
                        </div>
                    </div>
                    @* OFFICE CYCLE FILING DATE *@

                    <div id="divFilingReason">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblReasonforFiling">Resignation/Termination</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstResigTermType", ViewData["lstResigTermType"] as SelectList, "- Select -", new { @class = "spanMobileWidth lstResigTermType", aria_labelledby = "lblReasonforFiling" })
                        </div>
                    </div>
                    <div class="floatRightNew">
                        <input type="button" id="btnCommonSearch2" class="btn btn-default clsCommonSearch" name="Command" value="Apply" title="Search" style="font-size:12px;" />&nbsp;
                        <input type="button" id="btnCommonClear2" class="btn btn-default clsCommonClear" name="Command" value="Clear" title="Clear" style="font-size:12px;" />&nbsp;
                        <button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelp();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" class="ButtonImageCSS" title="Help" id="imgHelp2" /></button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="floatRight paddingRight3em paddingTop0pt6em">
        <p>
            <button type="button" class="btn btn-default buttonTransparent" onclick="CallHelpSchedD();">
                <img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" class="ButtonImageCSS" title="Help" id="imgHelpSchedD" />
            </button>
        </p>
    </div>

    <div id="divBreadCrumb" class="breadCrumbDivCSS" style="width: 46em;">
        <nav aria-label="Breadcrumbs" id="pBreadCrumb" class="FontSizeCss">
            <ol class="breadcrumb">
                @*<li>@Html.ActionLink("Home", "Home", "Home", null, new { @class = "" })</li>*@
                <li>@Html.ActionLink("File a Disclosure Report", "ContributionsMonetary", "ContributionsMonetary", null, new { @class = "lnkLogout" })</li>
                <li class="active">Contributions – In Kind</li>
            </ol>
        </nav>
        <div class="paddingtoppt5" style="width: 170%;">
            <h1>
                <span id="lblHeader">File a Disclosure Report</span> -
                <span id="lblHEleYear">File a Disclosure Report</span> -
                <span id="lblHDisclPer">File a Disclosure Report</span>
            </h1>
        </div>
        <div class="paddingtoppt5" style="width: 170%;">
            <div class="paddingTop0em2em DisplayInlineBlock">
                <h3 id="lblHeader2">Contributions – In Kind</h3>
            </div>
        </div>
    </div>
    <div id="divGrid" class="divGridCSSTransferin">
        @Html.Partial("UserControls/_UC_Loding")
        @Html.Partial("UserControls/_UC_GridCommonControl")
    </div>
    <div id="divShowPartnerAdddataInKind" class="divGridCSS">
        <div class="paddingLeft2em paddingBottom2em paddingtop2em">
            <table role="presentation">
                <tr>
                    <td><h3 id="h3Partners">Partner(s)</h3></td>
                    <td style="padding-left: 0.8em;">
                        <input type="button" id="btnAddNewAttribution" class="btn btn-default" name="Command" value="Add Partner" title="Add Partner" style="font-size:12px;" />
                    </td>
                </tr>
            </table>
        </div>
        <div style="float: right; margin-right: 4em;">
            <span id="lblPartnershipAmt">Outstanding Amount: </span>
        </div>
        <div id="divPartnerInKing">
            <table id="PartnersGridSchedD" class="table-bordered display nowrap" style="width:100%; border-spacing: 0px;">
                <thead id="thdGrid" class="header">
                    <tr>
                        <th class="never">Filing Trans Id</th> @* 0 *@
                        <th class="never">Filing Entity Id</th> @* 1 *@
                        <th>Expand</th> @* 2 *@
                        <th>Action</th> @* 3 *@
                        <th>Partnership Name</th> @* 4 *@
                        <th>Partner Name</th> @* 5 *@
                        <th>First Name</th> @* 6 *@
                        <th>Middle Name</th> @* 7 *@
                        <th>Last Name</th> @* 8 *@
                        <th>Country</th> @* 9 *@
                        <th>Street Address</th> @* 10 *@
                        <th>City</th> @* 11 *@
                        <th>State</th> @* 12 *@
                        <th>Zip Code</th> @* 13 *@
                        <th>Amount Attributed $</th> @* 14 *@
                        <th>Explanation</th> @* 15 *@
                        <th>Itemized</th> @* 16 *@
                        <th class="never">Trans Number</th> @* 17 *@
                        <th class="never">Trans Mapping</th> @* 18 *@
                        <th class="never">DateReceivedPrimary</th> @* 19 *@
                        <th>Is Contribution greater than or equal to $100 in the aggregate?</th> @* 20 *@
                        <th>Employer</th> @* 21 *@
                        <th>Occupation</th> @* 22 *@
                        <th>Employer Address</th> @* 23 *@
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</form>

<div id="dialog-form_ContrInKind" title="Add/Edit Transaction">
    <form id="DialogBoxSchedDForm">
        <div class="requiredTextDialogs">Required fields are marked with an *</div>
        <div class="divWidthSchedABC">
            <div style="width: 100%;">
                <div id="addEditTran_dvUnitemized">
                    <div class="verticalCSSDestopForLblLSC lblCSSAdd">
                        <span id="lblDatePaid">Is Transaction Itemized?</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxLSC DDLCSSAdd">
                        @Html.DropDownList("lstItemized", ViewData["lstItemized"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblDatePaid" })
                    </div>
                </div>
                <div id="tdDateRcvdInKind">
                    <div id="txtCurrentDate_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblDateRcvd">* Date Received</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        <input type="text" id="txtCurrentDate" name="txtCurrentDate" class="datepicker txtWidthForDateSched_ABC txtCurrentDateCls" maxlength="10" aria-labelledby="lblDateRcvd" />
                    </div>
                </div>

                <div id="tdContributionNameInKind">
                    <div id="lstContributionNameInKind_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblContributionName">* Contributor Type</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstContributionNameInKind", ViewData["lstContributionNameInKind"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblContributionName" })
                    </div>
                </div>
                <div id="tdPartnershipNameInKind">
                    <div id="txtPartnerShipNameSchedDIN_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="addEditTran_lblPartnershipName" class="jqSelectorLblPartnershipName">* Contributor Name</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtPartnerShipNameSchedDIN", null, new { id = "txtPartnerShipNameSchedDIN", @class = "txtWidthForDialogSched_A required", @maxlength = "40", aria_labelledby = "addEditTran_lblPartnershipName" })
                    </div>
                </div>

                <div id="tdFirstNameInKind">
                    <div id="txtFirstName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="addEditTran_lblFirstName">* First Name</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtFirstName", null, new { id = "txtFirstName", @class = "txtWidthForDialogSched_A required", @maxlength = "30", aria_labelledby = "addEditTran_lblFirstName" })
                    </div>
                </div>

                <div id="tdMIInKind">
                    <div id="txtMI_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="addEditTran_lblMiddleName">Middle Name</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtMI", null, new { id = "txtMI", @class = "txtWidthForDialogSched_A", @maxlength = "30", aria_labelledby = "addEditTran_lblMiddleName" })
                    </div>
                </div>

                <div id="tdLastNameInKind">
                    <div id="txtLastName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="addEditTran_lblLastName">* Last Name</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtLastName", null, new { id = "txtLastName", @class = "txtWidthForDialogSched_A rquired", @maxlength = "30", aria_labelledby = "addEditTran_lblLastName" })
                    </div>
                </div>

                <div id="tdCountryContributionChk">
                    <div class="verticalCSSDestopForLableSched_ABC lblCSSAdd">
                        <span id="lblOtherCountry">Other Country</span>
                    </div>
                    <div class="verticalCSSDestopForCheckBoxSched_ABC DDLCSSAdd">
                        @Html.CheckBox("chkCountry", false, new { @class = "txtWidthForDialogSched_ABC_CountryChkbox", aria_labelledby = "lblOtherCountry" })
                    </div>
                </div>
                <div id="tdCountryContributionTxt" class="divClearBoth">
                    <div id="txtCountry_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSched_ABC lblCSSAdd">
                        <span id="lblCountry">* Country</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSched_ABC DDLCSSAdd">
                        @Html.TextBox("txtCountry", null, new { id = "txtCountry", @class = "txtWidthForDialogSched_A required", @maxlength = "30", aria_labelledby = "lblCountry" })
                    </div>
                </div>

                @*@Html.Partial("UserControls/_UC_Address")*@

                <div id="divStreetAddress">
                    <div id="txtStreetName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblStreetName">* Street Address</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtStreetName", null, new { id = "txtStreetName", @class = "txtWidthForDialogSched_A", @maxlength = "60", aria_labelledby = "lblStreetName" })
                    </div>
                </div>

                <div id="divCity">
                    <div id="txtCity_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="addEditTran_lblCity">* City</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtCity", null, new { id = "txtCity", @class = "txtWidthForDialogSched_A", @maxlength = "30", aria_labelledby = "addEditTran_lblCity" })
                    </div>
                </div>

                <div id="divState">
                    <div id="txtState_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="addEditTran_lblState">* State</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtState", null, new { id = "txtState", @class = "txtWidthForDialogSched_A", @maxlength = "2", aria_labelledby = "addEditTran_lblState" })
                    </div>
                </div>

                <div id="divZip5">
                    <div id="txtZipCode_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="addEditTran_lblZip5">* Zip Code</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtZipCode", null, new { id = "txtZipCode", @class = "txtWidthForDialogSched_A", @maxlength = "10", aria_labelledby = "addEditTran_lblZip5" })
                    </div>
                </div>
                <div id="tdContributionTypeInKind">
                    <div id="lstContributionTypeInKind_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblContributionType">* Contribution Type</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstContributionTypeInKind", ViewData["lstContributionTypeInKind"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblContributionType" })
                    </div>
                </div>

                <div id="tdMethodInKind">
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblMethod">* Method</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstMethod", ViewData["lstMethod"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblMethod" }) @*HeightDropDownLst*@
                    </div>
                </div>

                <div id="tdCheckInKind">
                    <div id="txtCheck_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblCheckNumber">* Check#</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtCheck", null, new { id = "txtCheck", @class = "txtWidthForDialogSched_A required", @maxlength = "30", aria_labelledby = "lblCheckNumber" })
                    </div>
                </div>

                <div id="tdAmtInKind" class="divClearBoth">
                    <div id="txtAmtSchedD_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblAmount">* Amount $</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtAmtSchedD", null, new { id = "txtAmtSchedD", @class = "txtWidthForDialogSched_A", @maxlength = "12", aria_labelledby = "lblAmount" })
                    </div>
                </div>

                <div id="tdRContributions">
                    <div id="lstRContributions_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblRContributions">* Is Contribution greater than or equal to $100 in the aggregate?</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstRContributions", ViewData["lstRContributions"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblRContributions", aria_describedby = "alertForLstContributionName", required = "required" })
                    </div>
                </div>
                <div id="divHidden">
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                    </div>
                </div>
                <div id="tdEmployer">
                    <div id="txtEmployerPCFB_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblEmployer">Employer</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtEmployerPCFB", null, new { id = "txtEmployerPCFB", @class = "txtWidthForDialogSched_A", @maxlength = "200", aria_labelledby = "lblEmployer" })
                    </div>
                </div>
                <div id="tdOccupation">
                    <div id="txtOccupationPCFB_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblOccupation">Occupation</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtOccupationPCFB", null, new { id = "txtOccupationPCFB", @class = "txtWidthForDialogSched_A", @maxlength = "50", aria_labelledby = "lblOccupation" })
                    </div>
                </div>
                <div id="divContStreetAddress">
                    <div id="txtContStreetName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblContStreetName">Employer Street Address</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtContStreetName", null, new { id = "txtContStreetName", @class = "txtWidthForDialogSched_A", @maxlength = "60", aria_labelledby = "lblContStreetName" })
                    </div>
                </div>

                <div id="divContCity">
                    <div id="txtContCity_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblContCity_DialogBoxSchedAForm">Employer City</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtContCity", null, new { id = "txtContCity", @class = "txtWidthForDialogSched_A", @maxlength = "30", aria_labelledby = "lblContCity_DialogBoxSchedAForm" })
                    </div>
                </div>

                <div id="divContState">
                    <div id="txtContState_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblContState_DialogBoxSchedAForm">Employer State</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtContState", null, new { id = "txtContState", @class = "txtWidthForDialogSched_A", @maxlength = "2", aria_labelledby = "lblContState_DialogBoxSchedAForm" })
                    </div>
                </div>

                <div id="divContZip5">
                    <div id="txtContZipCode_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblContZip5_DialogBoxSchedAForm">Employer Zip Code</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtContZipCode", null, new { id = "txtContZipCode", @class = "txtWidthForDialogSched_A", @maxlength = "10", aria_labelledby = "lblContZip5_DialogBoxSchedAForm" })
                    </div>
                </div>

                <div id="tdExplanationInKind">
                    <div id="txtExplanationInKind_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblExplanation">* Explanation</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtExplanationInKind", null, new { id = "txtExplanationInKind", @class = "txtWidthForDialogSched_A required", @maxlength = "250", aria_labelledby = "lblExplanation" })
                    </div>
                </div>

                <div id="AddUpdateBtnIdSchedD" class="AddLeftCSSSchedABC">
                    <input type="button" id="btnSaveInKind" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Save" title="Save" style="font-size:12px;" />
                    <input type="button" id="btnClearDialog" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />
                    <input type="button" id="btnCloseDialog" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Close" title="Close" style="font-size:12px;" />
                </div>
            </div>
        </div>
    </form>
</div>

<div id="dialog-form_ContrInKindPartner" title="Add/Edit Partner/Attribution">
    <form id="DialogBoxSchedDPartnersForm">
        <div class="divWidth">
            <div class="requiredTextDialogs">Required fields are marked with an *</div>
            <div id="addEditPartner_dvUnitemized">
                <div class="verticalCSSDestopForLblLSC lblCSSAdd">
                    <span id="lblUnitemizedPart">Is Transaction Itemized?</span>
                </div>
                <div class="verticalCSSDestopForTextboxLSC DDLCSSAdd">
                    @Html.DropDownList("lstItemizedPart", ViewData["lstItemizedPart"] as SelectList, new { @class = "txtWidthForDialogSched_APartner", aria_labelledby = "lblUnitemizedPart" })
                </div>
            </div>
            <div id="dvPartIndividual" class="divClearBoth">
                <div class="verticalCSSDestopForLblLSC lblCSSAdd">
                    <span id="lblIndividualPart">Is Partner name an individual?</span>
                </div>
                <div class="verticalCSSDestopForTextboxLSC DDLCSSAdd">
                    @Html.DropDownList("lstIndividualPart", ViewData["lstIndividualPart"] as SelectList, new { @class = "txtWidthForDialogSched_APartner", aria_labelledby = "lblIndividualPart" })
                </div>
            </div>

            @* ADDED FOR PLLC/LLC ATTRIBUTION DETAILS ADD DIALOG - DATE RECIEVIED. *@
            <div id="dvDateRcvdPartAttr">
                <div id="txtCurrentDatePartAttr_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                    <span id="lblDateReceived_DialogBoxSchedAPartnershipForm">* Date Received</span>
                </div>
                <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                    <input type="text" id="txtCurrentDatePartAttr" name="txtCurrentDatePartAttr" class="txtWidthForDialogSched_APartner txtCurrentDateCls" maxlength="10" aria-labelledby="lblDateReceived_DialogBoxSchedAPartnershipForm" required="required" />
                </div>
            </div>

            @* ADDED FOR PLLC/LLC ATTRIBUTION DETAILS ADD DIALOG - DATE RECIEVIED. *@
            <div id="tdPartnershipNamePartner">
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="addEditPartner_lblPartnershipName" class="jqSelectorLblPartnershipName">Partnership Name</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("searchTerm", null, new { id = "txtPartshiptName", @class = "txtWidthForDialogSched_APartner", aria_labelledby = "addEditPartner_lblPartnershipName" })
                </div>
            </div>
            <div id="tdPartnerName">
                <div id="txtPartnerName_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblPartnerName">* Partner Name</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartnerName", null, new { id = "txtPartnerName", @class = "txtWidthForDialogSched_APartner", @maxlength = "40", aria_labelledby = "lblPartnerName" })
                </div>
            </div>

            <div id="tdPartFirstName">
                <div id="txtPartFirstName_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="addEditPartner_lblFirstName">* First Name</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartFirstName", null, new { id = "txtPartFirstName", @class = "txtWidthForDialogSched_APartner", @maxlength = "30", aria_labelledby = "addEditPartner_lblFirstName" })
                </div>
            </div>

            <div id="tdPartMI">
                <div id="txtPartMI_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="addEditPartner_lblMiddleName">Middle Name</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartMI", null, new { id = "txtPartMI", @class = "txtWidthForDialogSched_APartner", @maxlength = "30", aria_labelledby = "addEditPartner_lblMiddleName" })
                </div>
            </div>

            <div id="tdPartLastName">
                <div id="txtPartLastName_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="addEditPartner_lblLastName">* Last Name</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartLastName", null, new { id = "txtPartLastName", @class = "txtWidthForDialogSched_APartner", @maxlength = "30", aria_labelledby = "addEditPartner_lblLastName" })
                </div>
            </div>

            <div id="tdCountryPartnershipChk">
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblOtherCountryPartnership">Other Country</span>
                </div>
                <div class="verticalCSSDestopForCheckBoxSched_ABC DDLCSSAdd">
                    @Html.CheckBox("chkCountryPartnership", false, new { @class = "txtWidthForDialogSched_ABC_CountryChkbox", aria_labelledby = "lblOtherCountryPartnership" })
                </div>
            </div>
            <div id="tdCountryPartnershipTxt" class="divClearBoth">
                <div id="txtCountryPartnership_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblCountryPartnership">* Country</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtCountryPartnership", null, new { id = "txtCountryPartnership", @class = "txtWidthForDialogSched_APartner", @maxlength = "30", aria_labelledby = "lblCountryPartnership" })
                </div>
            </div>

            <div id="tdPartStreetName">
                <div id="txtPartStreetName_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblStreetAddress">* Street Address</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartStreetName", null, new { id = "txtPartStreetName", @class = "txtWidthForDialogSched_APartner required", @maxlength = "60", aria_labelledby = "lblStreetAddress", required = "required" })
                </div>
            </div>

            <div id="tdPartCity">
                <div id="txtPartCity_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="addEditPartner_lblCity">* City</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartCity", null, new { id = "txtPartCity", @class = "txtWidthForDialogSched_APartner required", @maxlength = "30", aria_labelledby = "addEditPartner_lblCity", required = "required" })
                </div>
            </div>
            <div id="tdPartState">
                <div id="txtPartState_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="addEditPartner_lblState">* State</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartState", null, new { id = "txtPartState", @class = "txtWidthForDialogSched_APartner required", @maxlength = "2", aria_labelledby = "addEditPartner_lblState", required = "required" })
                </div>
            </div>
            <div id="tdPartZip5">
                <div id="txtPartZip5_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="addEditPartner_lblZip5">* Zip Code</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartZip5", null, new { id = "txtPartZip5", @class = "txtWidthForDialogSched_APartner required", @maxlength = "10", aria_labelledby = "addEditPartner_lblZip5", required = "required" })
                </div>
            </div>
            <div id="tdPartAmt" class="divClearBoth">
                <div id="txtPartAmtSchedD_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblAmtAttributed">* Amount Attributed $</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartAmtSchedD", null, new { id = "txtPartAmtSchedD", @class = "txtWidthForDialogSched_APartner", @maxlength = "12", aria_labelledby = "lblAmtAttributed" })
                </div>
            </div>

            <div id="tdPartRContributions">
                <div id="lstPartRContributions_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                    <span id="lblPartRContributions">* Is Contribution greater than or equal to $100 in the aggregate?</span>
                </div>
                <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                    @Html.DropDownList("lstPartRContributions", ViewData["lstRContributions"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblPartRContributions", aria_describedby = "alertForLstContributionName", required = "required" })
                </div>
            </div>
            <div id="tdPartEmployer">
                <div id="txtPartEmployer_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                    <span id="lblPartEmployer">Employer</span>
                </div>
                <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                    @Html.TextBox("txtPartEmployer", null, new { id = "txtPartEmployer", @class = "txtWidthForDialogSched_A", @maxlength = "200", aria_labelledby = "lblPartEmployer" })
                </div>
            </div>
            <div id="tdPartOccupation">
                <div id="txtPartOccupation_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                    <span id="lblOccupation">Occupation</span>
                </div>
                <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                    @Html.TextBox("txtPartOccupation", null, new { id = "txtPartOccupation", @class = "txtWidthForDialogSched_A", @maxlength = "50", aria_labelledby = "lblPartOccupation" })
                </div>
            </div>
            <div id="divPartContStreetAddress">
                <div id="txtPartContStreetName_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                    <span id="lblPartContStreetName">Employer Street Address</span>
                </div>
                <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                    @Html.TextBox("txtPartContStreetName", null, new { id = "txtPartContStreetName", @class = "txtWidthForDialogSched_A", @maxlength = "60", aria_labelledby = "lblPartContStreetName" })
                </div>
            </div>

            <div id="divPartContCity">
                <div id="txtPartContCity_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                    <span id="lblPartContCity_DialogBoxSchedAForm">Employer City</span>
                </div>
                <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                    @Html.TextBox("txtPartContCity", null, new { id = "txtPartContCity", @class = "txtWidthForDialogSched_A", @maxlength = "30", aria_labelledby = "lblPartContCity_DialogBoxSchedAForm" })
                </div>
            </div>

            <div id="divPartContState">
                <div id="txtPartContState_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                    <span id="lblPartContState_DialogBoxSchedAForm">Employer State</span>
                </div>
                <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                    @Html.TextBox("txtPartContState", null, new { id = "txtPartContState", @class = "txtWidthForDialogSched_A", @maxlength = "2", aria_labelledby = "lblPartContState_DialogBoxSchedAForm" })
                </div>
            </div>

            <div id="divPartContZip5">
                <div id="txtPartContZipCode_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                    <span id="lblPartContZip5_DialogBoxSchedAForm">Employer Zip Code</span>
                </div>
                <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                    @Html.TextBox("txtPartContZipCode", null, new { id = "txtPartContZipCode", @class = "txtWidthForDialogSched_A", @maxlength = "10", aria_labelledby = "lblPartContZip5_DialogBoxSchedAForm" })
                </div>
            </div>

            <div id="tdPartExplanation">
                <div id="txtPartExplanationInKind_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblExplanationPart">Explanation</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartExplanationInKind", null, new { id = "txtPartExplanationInKind", @class = "txtWidthForDialogSched_APartner", @maxlength = "250", aria_labelledby = "lblExplanationPart" })
                </div>
            </div>

            <div class="AddLeftCSSPartnerSchedA">
                <input type="button" id="btnSaveInKindPartners" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Save" title="Save" style="font-size:12px;" />
                <input type="button" id="btnClearDialogPartner" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />
                <input type="button" id="btnCloseDialogPartner" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Close" title="Close" style="font-size:12px;" />
            </div>
        </div>
    </form>
</div>

<script>
    $m = jQuery.noConflict();

    function CallHelpSchedD() {
        var myWidth = 1050;
        var myHeight = 550;

        var left = (screen.width - myWidth) / 2;
        var top = (screen.height - myHeight) / 4;

        window.open("../../ContributionInKind/GetScheduleDHelpPopUp", "Help", 'width=550, height=600,scrollbars=1, width=' + myWidth + ', height=' + myHeight + ', top=' + top + ', left=' + left);
    }

    $('#menuNav').css('opacity', 0);
    $('#ContributionInKindForm').css('opacity', 0);
    $('#DialogBoxSchedDForm').css('opacity', 0);
    $('#DialogBoxSchedDPartnersForm').css('opacity', 0);
    $('#divWelcomeBanner').css('opacity', 0);
    $(window).on('load', function () {
        $('#menuNav').css('opacity', 1);
        $('#ContributionInKindForm').css('opacity', 1);
        $('#DialogBoxSchedDForm').css('opacity', 1);
        $('#DialogBoxSchedDPartnersForm').css('opacity', 1);
        $('#divWelcomeBanner').css('opacity', 1);
                    });


    $m(document).ready(function () {

        $m("#txtAmtSchedD").attr('aria-required', true);

        // JQUERY VALIDATION
        // FORM VALIDATION SCHEDULE 'D' JQUERY VALIDATOR
        //----------------------------------------------------------------------------------------------------------------------------------------------
        validatePage("DialogBoxSchedDForm"); // COMMENTED FOR SERVER SIDE VALIDAITON ONCE ITS DONE ENABLE IT.
        PartnershipValidation("DialogBoxSchedDPartnersForm");
        LefthandFilterValues();

        var tablePartners = '';

        //PCFB Hide.
        $("#divShowPartnerAdddataInKind").hide();
        $("#tdEmployer").hide();
        $("#tdOccupation").hide();
        $("#divContStreetAddress").hide();
        $("#divContCity").hide();
        $("#divContState").hide();
        $("#divContZip5").hide();
        // JQUERY VALIDATITON REGULAR EXPRESSIONS.

        //----------------------------------------------------------------------------------------------------------------------------------------------
        // Dialog Box - START
        // Dialog Box - START  //// /////////////////////////////////////////
        //----------------------------------------------------------------------------------------------------------------------------------------------
        var dialogInKind;

        dialogInKind = $m("#dialog-form_ContrInKind").dialog({
            autoOpen: false,
            resizable: true,
            height: 'auto',
            width: 450,
            position: {
                my: "center top",
                at: "center top+200"
            },
            modal: true,
            resizable: false,
            closeOnEscape: false,
            open: function (event, ui) { hideDialogXButton(this); }
        });

        $(window).resize(function () {
            //// get the screen height and width
            if ($(window).width() < 500) {
                dialog_Sched_A = $m("#dialog-form_ContrInKind").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 300,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 500 && $(window).width() <= 900) {
                dialog_Sched_A = $m("#dialog-form_ContrInKind").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 456,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 900) {
                dialog_Sched_A = $m("#dialog-form_ContrInKind").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 456,
                    modal: true,
                    dialogClass: 'DialogCustomStyle',
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
        }).resize();

        var dialogPartner;

        // Partners Dialog Box.
        dialogPartner = $m("#dialog-form_ContrInKindPartner").dialog({
            autoOpen: false,
            resizable: true,
            height: 'auto',
            width: 450,
            position: {
                my: "center top",
                at: "center top+200"
            },
            modal: true,
            resizable: false,
            closeOnEscape: false,
            open: function (event, ui) { hideDialogXButton(this); }
        });

        $(window).resize(function () {
            //// get the screen height and width
            if ($(window).width() < 500) {
                dialog_Sched_A = $m("#dialog-form_ContrInKindPartner").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 300,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 500 && $(window).width() <= 900) {
                dialog_Sched_A = $m("#dialog-form_ContrInKindPartner").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 456,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 900) {
                dialog_Sched_A = $m("#dialog-form_ContrInKindPartner").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 456,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
        }).resize();

        // Dialog Box - END  //// /////////////////////////////////////////
        //----------------------------------------------------------------------------------------------------------------------------------------------

        //====================================================================================================================
        // Date picker validation based on Filing Type.
        if ($("#lstElectionType option:selected").val().toString() == "6") { // Off-Cycle
            if ($("#lstFilingDate option:selected").text().toString() == "- New Filing Date -") {
                sessionStorage.setItem("CuttOffDateForFiling", sessionStorage.getItem("FilingDate").toString());
            }
            else {
                sessionStorage.setItem("CuttOffDateForFiling", $("#lstFilingDate option:selected").text().toString());
            }
        }
        else {
            sessionStorage.setItem("CuttOffDateForFiling", sessionStorage.getItem("CutOffDate").toString());
        }
        // CURRENT DATE....
        //----------------------------------------------------------------------------------------------------------------------------------------------
        $m("#txtCurrentDate").datepicker({
            showOn: "button",
            buttonImage: "../../Content/Images/Calendar.png",
            buttonImageOnly: false,
            buttonText: "Select From Date",
            changeMonth: true,
            changeYear: true,
            numberOfMonths: 1,
            maxDate: sessionStorage.getItem("CuttOffDateForFiling").toString(),
            dateFormat: 'mm/dd/yy',
            onChange: function () {
                $m("#txtCurrentDate").valid();
            },
        }).datepicker();

        $m('.datepicker').attr("placeholder", "MM/DD/YYYY").datepicker();
        $("#txtCurrentDate").addClass("watermarkHTMLTextBox");
        $("#txtCurrentDate").focusin(function () {
            $("#txtCurrentDate").removeClass("watermarkHTMLTextBox");
        });

        // Watermark TextBox. ////////////////////////////////////////////////////

        // DATE FORMATE....///////////////////////////////////////////////
        $("#txtCurrentDate").focusout(function () {
            if ($("#txtCurrentDate").val().toString() != "") {
                if ($("#txtCurrentDate").val().toString() != "MM/DD/YYYY") {
                    var results = GetValidDate();

                    if (results == "") {
                        var MyDate = new Date($("#txtCurrentDate").val().toString());
                        var MyDateString;
                        MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                            + ('0' + MyDate.getDate()).slice(-2) + '/'
                            + MyDate.getFullYear();
                        $("#txtCurrentDate").val("");
                        $("#txtCurrentDate").val(MyDateString);
                    }
                }
            }
            else {
                $("#txtCurrentDate").addClass("watermarkHTMLTextBox");
            }
        });
        // CURRENT DATE....
        //--------------------------------------------------------------------------------------------------------------------
        //====================================================================================================================

        if (@Session["COMM_TYPE_ID"] == "23") {
            $("#lstItemized").prop("disabled", true);
            $("#lstRContributions")[0].selectedIndex = 1;
        }
        else {
            $("#lstItemized").prop("disabled", false);
            $("#tdRContributions").hide();
            $("#divHidden").hide();
        }

        $("#lstRContributions").change(function () {
            if ($("#lstRContributions option:selected").val().toString() == "0") {
                $("#tdEmployer").show();
                $("#tdOccupation").show();
                $("#divContStreetAddress").show();
                $("#divContCity").show();
                $("#divContState").show();
                $("#divContZip5").show();
                $m("#txtEmployerPCFB").val("");
                $m("#txtOccupationPCFB").val("");
                $m("#txtContStreetName").val("");
                $m("#txtContCity").val("");
                $m("#txtContState").val("");
                $m("#txtContZipCode").val("");
            }
            else {
                $("#tdEmployer").hide();
                $("#tdOccupation").hide();
                $("#divContStreetAddress").hide();
                $("#divContCity").hide();
                $("#divContState").hide();
                $("#divContZip5").hide();
                $m("#txtEmployerPCFB").val("");
                $m("#txtOccupationPCFB").val("");
                $m("#txtContStreetName").val("");
                $m("#txtContCity").val("");
                $m("#txtContState").val("");
                $m("#txtContZipCode").val("");
            }
        });

        //Partnership Contribution check
        $("#lstPartRContributions").change(function () {
            if ($("#lstPartRContributions option:selected").val().toString() == "0") {
                $("#tdPartEmployer").show();
                $("#tdPartOccupation").show();
                $("#divPartContStreetAddress").show();
                $("#divPartContCity").show();
                $("#divPartContState").show();
                $("#divPartContZip5").show();
                $m("#txtPartEmployer").val("");
                $m("#txtPartOccupation").val("");
                $m("#txtPartContStreetName").val("");
                $m("#txtPartContCity").val("");
                $m("#txtPartContState").val("");
                $m("#txtPartContZipCode").val("");
            }
            else {
                $("#tdPartEmployer").hide();
                $("#tdPartOccupation").hide();
                $("#divPartContStreetAddress").hide();
                $("#divPartContCity").hide();
                $("#divPartContState").hide();
                $("#divPartContZip5").hide();
                $m("#txtPartEmployer").val("");
                $m("#txtPartOccupation").val("");
                $m("#txtPartContStreetName").val("");
                $m("#txtPartContCity").val("");
                $m("#txtPartContState").val("");
                $m("#txtPartContZipCode").val("");
            }
        });

        // Add New Transactions Button.
        $m("#btnAddNewTransaction").button().on("click", function () {
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                txtFilerId: $("#txtFilerID").val(),
                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }, function (resultEditFlag) {
                if (resultEditFlag == "TRUE") {
                    $("#divShowPartnerAdddataInKind").hide();

                    // Open Dialog Box.
                    dialogInKind.dialog("open");

                    // Clear Form Values
                    ClearDialogBoxValidationSchedD();

                    //$("#btnSaveInKind").val("Save");
                    sessionStorage.setItem("UpdateFlagSchedD", "No");

                    $("#tdPartnershipNameInKind").hide();
                    $("#tdContributionNameInKind").show();
                    $("#tdFirstNameInKind").show();
                    $("#tdMIInKind").show();
                    $("#tdLastNameInKind").show();
                    $("#divStreetAddress").show();
                    $("#divCity").show();
                    $("#divState").show();
                    $("#divZip5").show();
                    $("#tdContributionTypeInKind").show();
                    $("#tdMethodInKind").hide();

                    $("#tdCheckInKind").hide();

                    $("#tdMethodInKind").hide();

                    $m("label[for=txtCurrentDate]").text('');
                    $m("#txtCurrentDate").removeClass("error");

                    $m('#lstItemized select:first').focus();

                    if (@Session["COMM_TYPE_ID"] == "23") {
                        $("#lstItemized").prop("disabled", true);
                        $("#tdRContributions").show();
                        $("#lstRContributions")[0].selectedIndex = 1;
                    }
                    else {
                        $("#lstItemized").prop("disabled", false);
                        $("#tdRContributions").hide();
                    }
                }
                else {
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before adding this Transaction.', 'Ok', '');
                }
            });
        });

        $m("#btnAddNewAttribution").button().on("click", function () {
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                 txtFilerId: $("#txtFilerID").val(),
                 lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                 strElectionTypeId: $m("#lstElectionType option:selected").val(),
                 lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                 lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                 lstFilingDate: $m("#lstFilingDate option:selected").text(),
                 txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
             }, function (resultEditFlag) {
                 if (resultEditFlag == "TRUE") {
                     dialogPartner.dialog("open");

                     sessionStorage.setItem("UpdateFlagSchedDPart", "No");

                     ClearDialogBoxValidationSchedDPart();

                     $m("label[for=txtPartFirstName]").text('');
                     $m("#txtPartFirstName").removeClass("error");

                     $m("label[for=txtPartLastName]").text('');
                     $m("#txtPartLastName").removeClass("error");

                     $m("label[for=txtPartnerName]").text('');
                     $m("#txtPartnerName").removeClass("error");

                     $m("label[for=txtPartAmtSchedD]").text('');
                     $m("#txtPartAmtSchedD").removeClass("error");

                     $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());

                     $("#tdPartnerName").hide();

                     $("#tdPartFirstName").show("slow");
                     $("#tdPartMI").show("slow");
                     $("#tdPartLastName").show("slow");

                     $("#dvPartIndividual").show("slow");
                     $("#tdPartnershipNamePartner").show("slow");
                     $("#tdPartStreetName").show("slow");
                     $("#tdPartCity").show("slow");
                     $("#tdPartState").show("slow");
                     $("#tdPartZip5").show("slow");
                     $("#tdPartCity").show("slow");
                     $("#tdCountryPartnershipChk").show("slow");
                     $("#tdCountryPartnershipTxt").show("slow");

                     $("#tdEmployer").hide();
                     $("#tdOccupation").hide();
                     $("#divContStreetAddress").hide();
                     $("#divContCity").hide();
                     $("#divContState").hide();
                     $("#divContZip5").hide();

                     if (@Session["COMM_TYPE_ID"] == "23") {
                        $("#lstItemizedPart").prop("disabled", true);
                         $("#tdPartRContributions").show();
                         $("#lstPartRContributions")[0].selectedIndex = 1;
                         $("#tdPartEmployer").hide();
                         $("#tdPartOccupation").hide();
                         $("#divPartContStreetAddress").hide();
                         $("#divPartContCity").hide();
                         $("#divPartContState").hide();
                         $("#divPartContZip5").hide();
                     }
                    else {
                        $("#lstItemizedPart").prop("disabled", false);
                         $("#tdPartRContributions").hide();
                         $("#lstPartRContributions")[0].selectedIndex = 1;
                         $("#tdPartEmployer").hide();
                         $("#tdPartOccupation").hide();
                         $("#divPartContStreetAddress").hide();
                         $("#divPartContCity").hide();
                         $("#divPartContState").hide();
                         $("#divPartContZip5").hide();
                     }

                     // Fill the Auto fill data.
                     if (sessionStorage.getItem("ValDateReceived") != null)
                         $("#txtCurrentDatePartAttr").val(sessionStorage.getItem("ValDateReceived").toString());
                 }
                 else {
                     ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before adding this Transaction.', 'Ok', '');
                 }
                });
        });

        // Dialog Box - END
        //--------------------------------------------------------------------------------------------------------------------------------------------------------


        // Get Contribution In-Kind Dat
        $m("#btnCloseDialog").button().on("click", function () {

            var valid = true;

            if (sessionStorage.getItem("UpdateFlagSchedD").toString() == "No") { // Only New Transactions

                if ($("#lstItemized option:selected").val().toString() == "N") {
                    valid = false;
                }

                if ($("#txtCurrentDate").val().toString().length >= 1) {
                    valid = false;
                }

                if ($("#lstContributionNameInKind option:selected").val().toString() != "0") {
                    valid = false;
                }

                if ($("#lstContributionNameInKind option:selected").val().toString() == "5") {
                    if ($("#txtPartnerShipNameSchedDIN").val().toString().length >= 1) {
                        valid = false;
                    }
                }

                if ($("#lstContributionNameInKind option:selected").val().toString() != "5") {
                    if ($("#txtFirstName").val().toString().length >= 1
                        || $("#txtMI").val().toString().length >= 1
                        || $("#txtLastName").val().toString().length >= 1) {
                        valid = false;
                    }
                }

                if ($('#chkCountry').is(':checked')) { // Other COUNTRY
                    if ($("#txtCountry").val().toString().length >= 1) {
                        valid = false;
                    }
                }

                if ($("#txtStreetName").val().toString().length >= 1
                    || $("#txtCity").val().toString().length >= 1
                    || $("#txtState").val().toString().length >= 1) {
                    valid = false;
                }

                if ($("#txtZipCode").val().toString().length >= 1) {
                    valid = false;
                }

                if ($("#lstContributionTypeInKind option:selected").val().toString() != "0"
                    || $("#lstMethod option:selected").val().toString() != "0") {
                    valid = false;
                }
                if ($("#lstMethod option:selected").val().toString() == "1") {
                    if ($("#txtCheck").val().toString().length >= 1) {
                        valid = false;
                    }
                }

                if ($("#txtAmtSchedD").val().toString().length >= 1
                    || $("#txtExplanationInKind").val().toString().length >= 1) {
                    valid = false;
                }
            } else {
                valid = false;
            }
            //If valid we dont need the confirmation dialog.
            if (valid) {
                // Close the Dialogbox.
                dialogInKind.dialog("close");
                // For Defect 707 You don't Refresh the Data on Grid because you just canceled the edit or save function.
            } else {
                // Get confirmation Close the DialogBox or Not.
                var resultsCloseSchedA = "All unsaved data will be lost if you navigate away from this page. Are you sure you want to continue?";
                $m('#modal_dialog').text(resultsCloseSchedA);
                $m("#modal_dialog").dialog({
                    resizable: false,
                    width: '400px',
                    height: 'auto',
                    bgiframe: false,
                    modal: true,
                    closeOnEscape: false,
                    open: function (event, ui) { hideDialogXButton(this); },
                    buttons: {
                        "OK": function () {
                            //Close Confirm Box.
                            $m(this).dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                            // Close the DialogBox
                            dialogInKind.dialog("close");
                            // For Defect 707 You don't Refresh the Data on Grid because you just canceled the edit or save function.
                        }, // confirm close
                        "Cancel": function () {
                            $m(this).dialog("close");
                        }
                    }
                });
            }
        });

        /**
        * Common function that makes a call to GetPartnershipTotAmt and updates the lblPartnershipAmt text.
        * checkAmmountValuesAndShowbtnAddNewAttribution { boolean } When true it compares some amounts to show btnAddNewAttribution.
        */
        function GetPartnershipTotAmtAndUpdateLblPartnershipAmt(checkAmmountValuesAndShowbtnAddNewAttribution) {
            // Show the Balance Amount for Partnership for Contribution MonetarybtnSaveInKindPartners For Individual And Family.
            $.post("@Url.Content("~/ContributionInKind/GetPartnershipTotAmt/")", {
                strTransNumber: sessionStorage.getItem("TransIdPartnership")
            }, function (result) {
                if (result != "") {
                    var subContTotalAmt = result.toString();
                    var expSubContrAmount = sessionStorage.getItem("IndFamPartnershipAmt").toString();
                    var resBalAmt = parseFloat(expSubContrAmount) - parseFloat(subContTotalAmt);
                    $("#lblPartnershipAmt").text("Outstanding Amount: $" + parseFloat(resBalAmt.toFixed(2).toString()));
                    if (resBalAmt.toFixed(2).toString() != "0.00" && checkAmmountValuesAndShowbtnAddNewAttribution == true) {
                        $("#btnAddNewAttribution").show();
                    }
                } else {
                    var expSubContrAmount = parseFloat(sessionStorage.getItem("IndFamPartnershipAmt"));
                    $("#lblPartnershipAmt").text("Outstanding Amount: $" + expSubContrAmount.toFixed(2).toString());

                    if (expSubContrAmount.toFixed(2).toString() != "0.00" && checkAmmountValuesAndShowbtnAddNewAttribution == true) {
                        $("#btnAddNewAttribution").show();
                    }
                }
                $("#lblPartnershipAmt").show();
            });
        }

        /**
         * Updates the tablePartners by calling GetSchedAPartnersData.
         * dataTableInstanceToReload { function } The referecne to the datatable we will reload in the success callback.
         * reload { boolean } Reloads the datatable.
         * doneFunction { function } A function to be called if the ajax call is completed.
         */
        function GetSchedAPartnersData(callback, reload, doneFunction){
            // Refresh the Data on Grid...
            $m.ajax({
                "url": "@Url.Content("~/ContributionsCandIndFamily/GetSchedAPartnersData/")",
                "data": {
                    strTransNumber: sessionStorage.getItem("TransIdPartnership").toString(),
                    strFilerId: $("#txtFilerID").val()
                },
                "success": callback,
                "dataType": "json",
                "type": "POST",
                "error": function () {
                    ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                }
            }).always(function () {
                // When we try to update the tablePartners table we always want to show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
                GetPartnershipTotAmtAndUpdateLblPartnershipAmt(false);
                //Call any doneFunctions provided.
                if (bUtilIsFunction(doneFunction)) {
                    doneFunction();
                }
            });
            if (reload == true) {
                $m('#PartnersGridSchedD').DataTable().ajax.reload();
                tablePartners.responsive.recalc();
            }
        }

        // Get Partners Data.
        $m("#btnCloseDialogPartner").button().on("click", function () {

            var valid = true;

            if (sessionStorage.getItem("UpdateFlagSchedDPart").toString() == "No") {
                if ( $("#lstItemizedPart option:selected").val().toString() == "N"
                    || $("#lstIndividualPart option:selected").val().toString() == "N"
                    || ($("#lstIndividualPart option:selected").val().toString() == "N" && $("#txtPartshiptName").val().toString().length >= 1)
                    || ($("#lstIndividualPart option:selected").val().toString() == "Y" && $("#txtPartFirstName").val().toString().length >= 1)
                    || ($("#lstIndividualPart option:selected").val().toString() == "Y" && $("#txtPartMI").val().toString().length >= 1)
                    || ($("#lstIndividualPart option:selected").val().toString() == "Y" && $("#txtPartLastName").val().toString().length >= 1)
                    || ($('#chkCountryPartnership').is(':checked') && $("#txtCountryPartnership").val().toString().length >= 1) /*Other COUNTRY Partnership*/
                    || $("#txtPartStreetName").val().toString().length >= 1
                    || $("#txtPartCity").val().toString().length >= 1
                    || $("#txtPartState").val().toString().length >= 1
                    ||  $("#txtPartZip5").val().toString().length >= 1
                    || $("#txtPartAmtSchedD").val().toString().length >= 1
                    || $("#txtPartExplanationInKind").val().toString().length >= 1) {
                    valid = false;
                }
            } else {

                $m("label[for=txtPartFirstName]").text('');
                $m("#txtPartFirstName").removeClass("error");

                $m("label[for=txtPartnerName]").text('');
                $m("#txtPartnerName").removeClass("error");

                valid = false;
            }

            if (valid) {
                // Close DialgoBox
                dialogPartner.dialog("close");
                // For Defect 707 You don't Refresh the Data on Grid because you just canceled the edit or save function.
                GetPartnershipTotAmtAndUpdateLblPartnershipAmt(true);
            } else {
                //When valid == false
                // Get confirmation Close the DialogBox or Not.
                var resultsClose = "All unsaved data will be lost if you navigate away from this page. Are you sure you want to continue?";

                $m('#modal_dialog').text(resultsClose);
                $m("#modal_dialog").dialog({
                    resizable: false,
                    width: '400px',
                    height: 'auto',
                    bgiframe: false,
                    modal: true,
                    closeOnEscape: false,
                    open: function (event, ui) { hideDialogXButton(this); },
                    buttons: {
                        "OK": function () {
                            //Close Confirm Box.
                            $m(this).dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                            // Close DialgoBox
                            dialogPartner.dialog("close");

                            // For Defect 707 You don't Refresh the Data on Grid because you just canceled the edit or save function.
                            // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
                            GetPartnershipTotAmtAndUpdateLblPartnershipAmt(false);
                        }, // confirm close
                        "Cancel": function () {
                            $m(this).dialog("close");
                        }
                    }
                });
            }

        });

        // Dialog Box - END
        // Dialog Box - END //// /////////////////////////////////////////


        // AUTO COMPLETE NAMES //////////////////////////////////////////////
        // First Name - Auto Complete
        $m("#txtFirstName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/ContributionInKind/AutoCompleteFirsttName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();

                var selectedValue = ui.item.label;
                $.ajax({
                    url: "@Url.Content("~/ContributionInKind/GetAutoCompleteNameData/")",
                    dataType: "json",
                    data: {
                        strValue: selectedValue.toString()
                    },
                    success: function (results) {
                        $.each(results, function (i, item) {
                            $("#txtFirstName").val(item.FilingEntityFirstName.toString());
                            $("#txtMI").val(item.FilingEntityMiddleName.toString());
                            $("#txtLastName").val(item.FilingEntityLastName.toString());
                            $("#txtStreetName").val(item.FilingEntityStreetName.toString());
                            $("#txtCity").val(item.FilingEntityCity.toString());
                            $("#txtState").val(item.FilingEntityState.toString());
                            $("#txtZipCode").val(item.FilingEntityZip.toString());
                            $("#txtCountry").val(item.FilingEntityCountry.toString());
                            if ($("#txtCountry").val().toString() == "United States") {
                                $("#chkCountry").prop('checked', false);
                                $("#txtCountry").prop("disabled", true);
                                $("#txtState").prop('maxLength', '2');
                                if (item.FilingEntityZip.toString() != "") {
                                    $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                                }
                                else {
                                    $("#txtZipCode").addClass("watermarkHTMLTextBox");
                                    $("#txtZipCode").blur();
                                }
                            } else {
                                $("#chkCountry").prop('checked', true);
                                $("#txtCountry").prop("disabled", false);
                                $("#txtState").prop('maxLength', '30');

                                $m('#txtZipCode').attr("placeholder", "");
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            }
                            $m("#txtFirstName").valid();
                            // Address validation
                            $m("#txtCountry").valid();
                            $m("#txtStreetName").valid();
                            $m("#txtCity").valid();
                            $m("#txtState").valid();
                            $m("#txtZipCode").valid();
                        });
                    }
                });
                $("#lstContributionTypeInKind").focus();
            },
            change: function (event, ui) {
                if (ui.item) {
                    // do whatever you want to when the item is found
                    $m("label[for=txtFirstName]").text('');
                    $m("#txtFirstName").removeClass("error");
                }
                else {
                    // do whatever you want to when the item is not found
                    $m("label[for=txtFirstName]").text('');
                    $m("#txtFirstName").removeClass("error");
                }
            }
        });

        // Last Name - Auto Complete
        $m("#txtLastName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/ContributionInKind/AutoCompleteLastName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();

                var selectedValue = ui.item.label;
                $.ajax({
                    url: "@Url.Content("~/ContributionInKind/GetAutoCompleteNameData/")",
                    dataType: "json",
                    data: {
                        strValue: selectedValue.toString()
                    },
                    success: function (results) {
                        $.each(results, function (i, item) {
                            $("#txtFirstName").val(item.FilingEntityFirstName.toString());
                            $("#txtMI").val(item.FilingEntityMiddleName.toString());
                            $("#txtLastName").val(item.FilingEntityLastName.toString());
                            $("#txtStreetName").val(item.FilingEntityStreetName.toString());
                            $("#txtCity").val(item.FilingEntityCity.toString());
                            $("#txtState").val(item.FilingEntityState.toString());
                            $("#txtZipCode").val(item.FilingEntityZip.toString());
                            $("#txtCountry").val(item.FilingEntityCountry.toString());
                            if ($("#txtCountry").val().toString() == "United States") {
                                $("#chkCountry").prop('checked', false);
                                $("#txtCountry").prop("disabled", true);
                                $("#txtState").prop('maxLength', '2');
                                if (item.FilingEntityZip.toString() != "") {
                                    $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                                }
                                else {
                                    $("#txtZipCode").addClass("watermarkHTMLTextBox");
                                    $("#txtZipCode").blur();
                                }
                            } else {
                                $("#chkCountry").prop('checked', true);
                                $("#txtCountry").prop("disabled", false);
                                $("#txtState").prop('maxLength', '30');

                                $m('#txtZipCode').attr("placeholder", "");
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            }
                            $m("#txtLastName").valid();
                            // Address validation
                            $m("#txtCountry").valid();
                            $m("#txtStreetName").valid();
                            $m("#txtCity").valid();
                            $m("#txtState").valid();
                            $m("#txtZipCode").valid();
                        });
                    }
                });
                $("#lstContributionTypeInKind").focus();
            },
            change: function (event, ui) {
                if (ui.item) {
                    // do whatever you want to when the item is found
                    $m("label[for=txtLastName]").text('');
                    $m("#txtLastName").removeClass("error");
                }
                else {
                    // do whatever you want to when the item is not found
                    //$m("#txtLastName").val("");
                    $m("label[for=txtLastName]").text('');
                    $m("#txtLastName").removeClass("error");
                }
            }
        });

        // First Name Partnership - Auto Complete
        $m("#txtPartFirstName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/ContributionInKind/AutoCompleteFirsttName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();

                var selectedValue = ui.item.label;
                $.ajax({
                    url: "@Url.Content("~/ContributionInKind/GetAutoCompleteNameData/")",
                    dataType: "json",
                    data: {
                        strValue: selectedValue.toString()
                    },
                    success: function (results) {
                        $.each(results, function (i, item) {
                            $("#txtPartFirstName").val(item.FilingEntityFirstName.toString());
                            $("#txtPartMI").val(item.FilingEntityMiddleName.toString());
                            $("#txtPartLastName").val(item.FilingEntityLastName.toString());
                            $("#txtPartStreetName").val(item.FilingEntityStreetName.toString());
                            $("#txtPartCity").val(item.FilingEntityCity.toString());
                            $("#txtPartState").val(item.FilingEntityState.toString());
                            $("#txtPartZip5").val(item.FilingEntityZip.toString());
                            $("#txtCountryPartnership").val(item.FilingEntityCountry.toString());
                            if ($("#txtCountryPartnership").val().toString() == "United States") {
                                $("#chkCountryPartnership").prop('checked', false);
                                $("#txtCountryPartnership").prop("disabled", true);
                                $("#txtPartState").prop('maxLength', '2');
                                if (item.FilingEntityZip.toString() != "") {
                                    $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                                }
                                else {
                                    $("#txtZipCode").addClass("watermarkHTMLTextBox");
                                    $("#txtZipCode").blur();
                                }

                            } else {
                                $("#chkCountryPartnership").prop('checked', true);
                                $("#txtCountryPartnership").prop("disabled", false);
                                $("#txtPartState").prop('maxLength', '30');

                                $m('#txtPartZip5').attr("placeholder", "");
                                $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                            }
                            $m("#txtPartFirstName").valid();
                            // Address validation
                            $m("#txtCountryPartnership").valid();
                            $m("#txtPartStreetName").valid();
                            $m("#txtPartCity").valid();
                            $m("#txtPartState").valid();
                            $m("#txtPartZip5").valid();
                        });
                    }
                });
                $("#txtPartAmtSchedD").focus();
            },
            change: function (event, ui) {
                if (ui.item) {
                    // do whatever you want to when the item is found
                    $m("label[for=txtPartFirstName]").text('');
                    $m("#txtPartFirstName").removeClass("error");
                }
                else {
                    // do whatever you want to when the item is not found
                    //$m("#txtPartFirstName").val("");
                    $m("label[for=txtPartFirstName]").text('');
                    $m("#txtPartFirstName").removeClass("error");
                }
            }
        });

        // Last Name Partnership - Auto Complete
        $m("#txtPartLastName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/ContributionInKind/AutoCompleteLastName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();

                var selectedValue = ui.item.label;
                $.ajax({
                    //url: "../ContributionInKind/GetAutoCompleteNameData",
                    url: "@Url.Content("~/ContributionInKind/GetAutoCompleteNameData/")",
                    dataType: "json",
                    data: {
                        strValue: selectedValue.toString()
                    },
                    success: function (results) {
                        $.each(results, function (i, item) {
                            $("#txtPartFirstName").val(item.FilingEntityFirstName.toString());
                            $("#txtPartMI").val(item.FilingEntityMiddleName.toString());
                            $("#txtPartLastName").val(item.FilingEntityLastName.toString());
                            $("#txtPartStreetName").val(item.FilingEntityStreetName.toString());
                            $("#txtPartCity").val(item.FilingEntityCity.toString());
                            $("#txtPartState").val(item.FilingEntityState.toString());
                            $("#txtPartZip5").val(item.FilingEntityZip.toString());
                            $("#txtCountryPartnership").val(item.FilingEntityCountry.toString());
                            if ($("#txtCountryPartnership").val().toString() == "United States") {
                                $("#chkCountryPartnership").prop('checked', false);
                                $("#txtCountryPartnership").prop("disabled", true);
                                $("#txtPartState").prop('maxLength', '2');
                                if (item.FilingEntityZip.toString() != "") {
                                    $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                                }
                                else {
                                    $("#txtPartZip5").addClass("watermarkHTMLTextBox");
                                    $("#txtPartZip5").blur();
                                }
                            } else {
                                $("#chkCountryPartnership").prop('checked', true);
                                $("#txtCountryPartnership").prop("disabled", false);
                                $("#txtPartState").prop('maxLength', '30');

                                $m('#txtPartZip5').attr("placeholder", "");
                                $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                            }
                            $m("#txtPartLastName").valid();
                            // Address validation
                            $m("#txtCountryPartnership").valid();
                            $m("#txtPartStreetName").valid();
                            $m("#txtPartCity").valid();
                            $m("#txtPartState").valid();
                            $m("#txtPartZip5").valid();
                        });
                    }
                });
                $("#txtPartAmtSchedD").focus();
            },
            change: function (event, ui) {
                if (ui.item) {
                    // do whatever you want to when the item is found
                    $m("label[for=txtPartLastName]").text('');
                    $m("#txtPartLastName").removeClass("error");
                }
                else {
                    // do whatever you want to when the item is not found
                    $m("label[for=txtPartLastName]").text('');
                    $m("#txtPartLastName").removeClass("error");
                }
            }
        });

        // Entity Name - Auto Complete
        $m("#txtPartnerShipNameSchedDIN").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/ContributionInKind/AutoCompleteEntityName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();

                var selectedValue = ui.item.label;
                $.ajax({
                    url: "@Url.Content("~/ContributionInKind/GetAutoCompleteNameData/")",
                    dataType: "json",
                    data: {
                        strValue: selectedValue.toString()
                    },
                    success: function (results) {
                        $.each(results, function (i, item) {
                            $("#txtPartnerShipNameSchedDIN").val(item.FilingEntityName.toString());
                            $("#txtStreetName").val(item.FilingEntityStreetName.toString());
                            $("#txtCity").val(item.FilingEntityCity.toString());
                            $("#txtState").val(item.FilingEntityState.toString());
                            $("#txtZipCode").val(item.FilingEntityZip.toString());
                            $("#txtCountry").val(item.FilingEntityCountry.toString());
                            if ($("#txtCountry").val().toString() == "United States") {
                                $("#chkCountry").prop('checked', false);
                                $("#txtCountry").prop("disabled", true);
                                $("#txtState").prop('maxLength', '2');
                                if (item.FilingEntityZip.toString() != "") {
                                    $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                                }
                                else {
                                    $("#txtZipCode").addClass("watermarkHTMLTextBox");
                                    $("#txtZipCode").blur();
                                }
                            } else {
                                $("#chkCountry").prop('checked', true);
                                $("#txtCountry").prop("disabled", false);
                                $("#txtState").prop('maxLength', '30');

                                $m('#txtZipCode').attr("placeholder", "");
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            }
                            $m("#txtPartnerShipNameSchedDIN").valid();
                            // Address validation
                            $m("#txtCountry").valid();
                            $m("#txtStreetName").valid();
                            $m("#txtCity").valid();
                            $m("#txtState").valid();
                            $m("#txtZipCode").valid();
                        });
                    }
                });
                $("#lstContributionTypeInKind").focus();
            },
            change: function (event, ui) {
                if (ui.item) {
                    // do whatever you want to when the item is found
                    $m("label[for=txtPartnerShipNameSchedDIN]").text('');
                    $m("#txtPartnerShipNameSchedDIN").removeClass("error");
                }
                else {
                    // do whatever you want to when the item is not found
                    $m("label[for=txtPartnerShipNameSchedDIN]").text('');
                    $m("#txtPartnerShipNameSchedDIN").removeClass("error");
                }
            }
        });

        // Partner Name Auto Complete.
        $m("#txtPartnerName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/ContributionInKind/AutoCompleteEntityName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();

                var selectedValue = ui.item.label;
                $.ajax({
                    url: "@Url.Content("~/ContributionInKind/GetAutoCompleteNameData/")",
                    dataType: "json",
                    data: {
                        strValue: selectedValue.toString()
                    },
                    success: function (results) {
                        $.each(results, function (i, item) {
                            $("#txtPartnerName").val(item.FilingEntityName.toString());
                            $("#txtPartStreetName").val(item.FilingEntityStreetName.toString());
                            $("#txtPartCity").val(item.FilingEntityCity.toString());
                            $("#txtPartState").val(item.FilingEntityState.toString());
                            $("#txtPartZip5").val(item.FilingEntityZip.toString());
                            $("#txtCountryPartnership").val(item.FilingEntityCountry.toString());
                            if ($("#txtCountryPartnership").val().toString() == "United States") {
                                $("#chkCountryPartnership").prop('checked', false);
                                $("#txtCountryPartnership").prop("disabled", true);
                                $("#txtPartState").prop('maxLength', '2');
                                if (item.FilingEntityZip.toString() != "") {
                                    $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                                }
                                else {
                                    $("#txtPartZip5").addClass("watermarkHTMLTextBox");
                                    $("#txtPartZip5").blur();
                                }
                            } else {
                                $("#chkCountryPartnership").prop('checked', true);
                                $("#txtCountryPartnership").prop("disabled", false);
                                $("#txtPartState").prop('maxLength', '30');

                                $m('#txtPartZip5').attr("placeholder", "");
                                $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                            }
                            $m("#txtPartnerName").valid();
                            // Address validation
                            $m("#txtCountryPartnership").valid();
                            $m("#txtPartStreetName").valid();
                            $m("#txtPartCity").valid();
                            $m("#txtPartState").valid();
                            $m("#txtPartZip5").valid();
                        });
                        $("#txtPartAmtSchedD").focus();
                    }
                });
            },
            change: function (event, ui) {
                if (ui.item) {
                    // do whatever you want to when the item is found
                    $m("label[for=txtPartnerName]").text('');
                    $m("#txtPartnerName").removeClass("error");
                }
                else {
                    // do whatever you want to when the item is not found
                    $m("label[for=txtPartnerName]").text('');
                    $m("#txtPartnerName").removeClass("error");
                }
            }
        });

        // AUTO COMPLETE NAMES //////////////////////////////////////////////

        $("#lstMethod").change(function (e) {

            $("#txtCheck").val("");

            var selectedMethod = $("#lstMethod option:selected").val().toString();

            if (selectedMethod == "1") {
                $("#tdCheckInKind").show();
                $("#lblExplanation").text("* Explanation");

                $m("label[for=txtExplanationInKind]").text('');
                $m("#txtExplanationInKind").removeClass("error");
            }
            else if (selectedMethod == "7") {
                // EXPLANATION MANADATORY
                $("#lblExplanation").text("* Explanation");
                $("#tdCheckInKind").hide();
            }
            else {
                $("#tdCheckInKind").hide();
                $("#lblExplanation").text("* Explanation");

                $m("label[for=txtExplanationInKind]").text('');
                $m("#txtExplanationInKind").removeClass("error");
            }

            $m("label[for=txtCheck]").text('');
            $m("#txtCheck").removeClass("error");
        });

        /**
         * Common code for btnSaveInKind
         * param {boolean} checkPartnersipAmmount when true it will check to see if txtAmtSchedD is > 2,500 and display relevant messages.
         * param {String} resultsPartnershipAmt when true it will check to see if results errors returned an ammount error and display relevant messages
         */
        function UpdateFilingTransContrInKindData(checkPartnersipAmmount, resultsPartnershipAmt) {
            // Because response time can be delayed always show/hide the loading cover during save. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            $m.post("@Url.Content("~/ContributionInKind/UpdateFilingTransContrInKindData/")", {
                strFilingTransId: sessionStorage.getItem("FilingTransId").toString(),
                strFilingEntId: sessionStorage.getItem("FilingEntityId").toString(),
                lstContributionNameInKind: $m("#lstContributionNameInKind option:selected").val(),
                txtDateRcvd: $m("#txtCurrentDate").val(),
                txtCheck: $m("#txtCheck").val(),
                lstMethod: $m("#lstMethod option:selected").val(),
                txtAmtInKind: $m("#txtAmtSchedD").val(),
                txtExplanationInKind: $m("#txtExplanationInKind").val(),
                txtPartnerShipName: $m("#txtPartnerShipNameSchedDIN").val(),
                txtFirstName: $m("#txtFirstName").val(),
                txtMI: $m("#txtMI").val(),
                txtLastName: $m("#txtLastName").val(),
                txtCountry: $m("#txtCountry").val(),
                txtStreetName: $m("#txtStreetName").val(),
                txtCity: $m("#txtCity").val(),
                txtState: $m("#txtState").val(),
                txtZipCode: $m("#txtZipCode").val(),
                lstContributionType: $m("#lstContributionTypeInKind option:selected").val().toString(),
                chkCountry: $('#chkCountry').is(':checked').toString(),
                txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
                strFilingDate: $("#txtNewFilingDate").val(),
                lstItemized: $m("#lstItemized option:selected").val(),
                txtEmployerPCFB: $m("#txtEmployerPCFB").val(),
                txtOccupationPCFB: $m("#txtOccupationPCFB").val(),
                txtContStreetName: $m("#txtContStreetName").val(),
                txtContCity: $m("#txtContCity").val(),
                txtContState: $m("#txtContState").val(),
                txtContZipCode: $m("#txtContZipCode").val(),
                lstRContributions: $m("#lstRContributions option:selected").text()
                }, function (results) {

                if (results.Errors == null) {
                    // Close Dialogbox.
                    dialogInKind.dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                    var stringMessage = "Transaction saved successfully";
                    window.status = stringMessage;

                    // OVER $2500 PARTNERSHIP MESSAGE.
                    if (checkPartnersipAmmount) {
                        var varAmount = parseFloat($m("#txtAmtSchedD").val().toString()).toFixed(2);
                        if (varAmount > 2500.00) {
                            stringMessage = 'Transaction saved successfully. The Contribution amount of this Partnership transaction is greater than $2500. Entering Partner details is mandatory.';
                        }
                    }
                    var doneFunction = function () {
                        // HIDE THE PROCESSING....
                        $("#divLoading").hide();
                        ShowDialogBox('EFS', stringMessage, 'Ok', '');
                    }

                    //Refresh the Data on Grid.
                    GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);

                }
                else if (results.Errors.length >= 0) {
                    $("#divLoading").hide();
                    ClearServerSideErrors(); // Server Side Validation Clear
                    var hasAmmountError = AppendCustomErrorLabels(results.Errors);
                    if (resultsPartnershipAmt && hasAmmountError) {
                        ShowDialogBox('EFS', 'Amount cannot be less than partnership details amount $' + parseFloat(resultsPartnershipAmt).toFixed(2).toString(), 'Ok', '');
                    }
                }
            }).fail(function () {
                $("#divLoading").hide();
            });
        }

        // Button Click Save Filing Transaction Data.
        $m("#btnSaveInKind").click(function () {
            // SHOW THE PROCESSING....
            // Because response time can be delayed always show/hide the loading cover during save. This will keep user from clicking around indiscriminately.
            //$("#divLoading").show();
            // Validation success then Insert/Update Record.
            $m("#DialogBoxSchedDForm").valid();
            if ($m("#DialogBoxSchedDForm").valid()) { // JQuery Validation // UNCOMMENT ONCE SERVER SIDE TESTING DONE.

                var valid = true;
                if (@Session["COMM_TYPE_ID"] == "23") {
                    if ($("#lstContributionNameInKind option:selected").val() != "5" ||
                        $("#lstContributionNameInKind option:selected").val() != "6" ||
                        $("#lstContributionNameInKind option:selected").val() != "9" ||
                        $("#lstContributionNameInKind option:selected").val() != "10" ||
                        $("#lstContributionNameInKind option:selected").val() != "11" ||
                        $("#lstContributionNameInKind option:selected").val() != "12" ||
                        $("#lstContributionNameInKind option:selected").val() != "13" ||
                        $("#lstContributionNameInKind option:selected").val() != "14") {
                        if ($m("#lstRContributions option:selected").text() == "Yes") {
                            if ($m("#txtEmployerPCFB").val() == "" ||
                                $m("#txtOccupationPCFB").val() == "" ||
                                $m("#txtContStreetName").val() == "" ||
                                $m("#txtContCity").val() == "" ||
                                $m("#txtContState").val() == "" ||
                                $m("#txtContZipCode").val() == "") {
                                valid = false;
                            }
                        }
                    }
                }

                if (valid == false) {
                    // Get confirmation the DialogBox or Not.
                    var resultsCloseSchedA = "You have reported a contribution over $100 without Contributor Address, Occupation, Employer and Employer Address. Failure to provide Contributor Address, Occupation, Employer and Employer Address may be cited as a Deficiency by Compliance Review staff.";
                    $m('#modal_dialog').text(resultsCloseSchedA);
                    $m("#modal_dialog").dialog({
                        resizable: false,
                        modal: true,
                        width: '400px',
                        height: 'auto',
                        bgiframe: false,
                        closeOnEscape: false,
                        open: function (event, ui) { hideDialogXButton(this); },
                        buttons: {
                            "OK": function () {
                                $m(this).dialog("close");
                                $("#divLoading").show();
                                    // INSERT
                                if (sessionStorage.getItem("UpdateFlagSchedD").toString() != "Yes") {
                                    // Insert
                                    $.post("@Url.Content("~/ContributionInKind/SaveFilingTransInKindData/")", {
                                        txtFilerId: $("#txtFilerID").val(),
                                        lstElectionCycle: $("#lstElectionCycle option:selected").text(),
                                        lstElectionCycleId: $("#lstElectionCycle option:selected").val(),
                                        lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                                        lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                                        lstElectionType: $("#lstElectionType option:selected").val(),
                                        lstElectionDate: $("#lstElectionDate option:selected").text(),
                                        lstElectionDateId: $("#lstElectionDate option:selected").val(),
                                        lstTransactionType: sessionStorage.getItem("TransactionType").toString(),
                                        txtDateRcvd: $m("#txtCurrentDate").val(),
                                        lstContributionNameInKind: $m("#lstContributionNameInKind option:selected").val(),
                                        txtPartnerShipName: $m("#txtPartnerShipNameSchedDIN").val(),
                                        txtFirstName: $m("#txtFirstName").val(),
                                        txtMI: $m("#txtMI").val().toString(),
                                        txtLastName: $m("#txtLastName").val(),
                                        txtCountry: $m("#txtCountry").val(),
                                        txtStreetName: $m("#txtStreetName").val(),
                                        txtCity: $m("#txtCity").val().toString(),
                                        txtState: $m("#txtState").val().toString(),
                                        txtZip5: $m("#txtZipCode").val().toString(),
                                        lstContributionType: $m("#lstContributionTypeInKind option:selected").val(),
                                        lstMethod: $m("#lstMethod option:selected").val(),
                                        txtCheck: $m("#txtCheck").val(),
                                        txtAmtInKind: $m("#txtAmtSchedD").val(),
                                        txtExplanationInKind: $m("#txtExplanationInKind").val(),
                                        lstItemized: $m("#lstItemized option:selected").val(),
                                        txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
                                        chkCountry: $('#chkCountry').is(':checked').toString(),
                                        lstFilingDate: $m("#lstFilingDate option:selected").text(),
                                        txtReportPeriodDatesTo: sessionStorage.getItem("FilingDate").toString(),
                                        lstResigTermType: $m("#lstResigTermType option:selected").val(),
                                        lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
                                        txtEmployerPCFB: $m("#txtEmployerPCFB").val(),
                                        txtOccupationPCFB: $m("#txtOccupationPCFB").val(),
                                        txtContStreetName: $m("#txtContStreetName").val(),
                                        txtContCity: $m("#txtContCity").val(),
                                        txtContState: $m("#txtContState").val(),
                                        txtContZipCode: $m("#txtContZipCode").val(),
                                        lstRContributions: $m("#lstRContributions option:selected").text()
                                    }, function (results) {

                                        if (results.Errors == null) {
                                            if (results == "Custom Error") {
                                                $("#divLoading").hide();
                                                ShowDialogBox('EFS', 'System Error found. Please try again.', 'Ok', '');
                                                window.location.reload();
                                            } else {
                                                if (results == "0") {
                                                    $("#divLoading").hide();
                                                    ShowDialogBox('EFS', 'System Error Found. Please try again.', 'Ok', '');
                                                    window.location.reload();
                                                } else {
                                                    results = "Custom Error";

                                                    $("#lstItemized").focus();
                                                    var successMessage = 'Transaction saved successfully';

                                                    // OVER $2500 PARTNERSHIP MESSAGE.
                                                    if ($("#lstContributionNameInKind option:selected").val().toString() == "5") {
                                                        var varAmount = parseFloat($m("#txtAmtSchedD").val().toString()).toFixed(2);
                                                        // HIDE THE PROCESSING....
                                                        $("#divLoading").hide();
                                                        if (parseFloat(varAmount).toFixed(2) > 2500.00) {
                                                            successMessage = 'Transaction saved successfully. The Contribution amount of this Partnership transaction is greater than $2500. Entering Partner details is mandatory.';
                                                        }
                                                    }
                                                    doneFunction = function () {
                                                        // HIDE THE PROCESSING....
                                                        $("#divLoading").hide();
                                                        ShowDialogBox('EFS', successMessage, 'Ok', '');
                                                    }
                                                    //Refresh the Data on Grid > hide loading > display 'Transaction saved successfully'.
                                                    GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);

                                                    window.status = "Transaction saved successfully";

                                                    // Clear Form Values
                                                    ClearDialogBoxValidationSchedD();

                                                    $m("label[for=txtFirstName]").text('');
                                                    $m("#txtFirstName").removeClass("error");

                                                    $m("label[for=txtLastName]").text('');
                                                    $m("#txtLastName").removeClass("error");

                                                    $m("label[for=txtPartAmtSchedD]").text('');
                                                    $m("#txtPartAmtSchedD").removeClass("error");

                                                    $("#tdPartnershipNameInKind").hide();
                                                    $("#tdContributionNameInKind").show();
                                                    $("#tdFirstNameInKind").show();
                                                    $("#tdMIInKind").show();
                                                    $("#tdLastNameInKind").show();
                                                    $("#divStreetAddress").show();
                                                    $("#divCity").show();
                                                    $("#divState").show();
                                                    $("#divZip5").show();
                                                    $("#tdContributionTypeInKind").show();
                                                    $("#tdMethodInKind").hide();
                                                    $("#tdCheckInKind").hide();
                                                    $("#tdCountryContributionChk").show("slow");
                                                    $("#tdCountryContributionTxt").show("slow");

                                                    if (@Session["COMM_TYPE_ID"] == "23") {
                                                        $("#lstItemized").prop("disabled", true);
                                                        $("#tdRContributions").show();
                                                        $("#lstRContributions")[0].selectedIndex = 1;
                                                    }
                                                    else {                                 
                                                        $("#lstItemized").prop("disabled", false);
                                                        $("#tdRContributions").hide();
                                                    }
                                                    
                                                    $("#tdEmployer").hide();
                                                    $("#tdOccupation").hide();
                                                    $("#divContStreetAddress").hide();
                                                    $("#divContCity").hide();
                                                    $("#divContState").hide();
                                                    $("#divContZip5").hide();
                                                }
                                            }
                                        } else if (results.Errors.length >= 0) {
                                            $("#divLoading").hide();
                                            ClearServerSideErrors(); // Server Side Validation Clear
                                            AppendCustomErrorLabels(results.Errors);
                                        }
                                    }).fail(function () {
                                        //Hide if SaveFilingTransInKindData fails.
                                        $("#divLoading").hide();
                                    });
                                } else if (sessionStorage.getItem("UpdateFlagSchedD").toString() == "Yes") { // Update UPDATE UPDATE UPDATE......//////
                                    if ($("#lstContributionNameInKind option:selected").val().toString() == "5" || $("#lstContributionNameInKind option:selected").val().toString() == "11") { // Partnership, including LLPs
                                        $.post("@Url.Content("~/ContributionInKind/GetPartnershipTotAmt/")", {
                                            strTransNumber: sessionStorage.getItem("FilingTransId").toString()
                                        }, function (results) {
                                            if (results != "") {
                                                var resultsPartnershipAmt = results.toString();
                                                var originalAmt = $m("#txtAmtSchedD").val().toString();
                                                if (parseFloat(originalAmt) >= parseFloat(resultsPartnershipAmt)) {

                                                    // ADD VALIDATION CONTRIBUTION REFUND AMOUNT SHOULD BE EQUAL OR LESS THAN SCHEDULE D AMOUNT.
                                                    // IT WILL VALIDATE IF REDUCING SCHEDULE D AMOUNT LESS THAN CONTRIBUTION REFUND AMOUNT.
                                                    $m.post("@Url.Content("~/ContributionsCandIndFamily/GetContrRefundedTotalAmt/")", {
                                                        strTransNumber: sessionStorage.getItem("FilingTransId").toString(),
                                                        filerID: $("#txtFilerID").val()
                                                    }, function (resultRefundedAmt) {
                                                        var updatedAmount = $("#txtAmtSchedD").val().toString();
                                                        if (parseFloat(updatedAmount) >= parseFloat(resultRefundedAmt.toString())) {

                                                            // Update Schedule 'D' Transaction
                                                            //UpdateFilingTransContrInKindData and Reload the grid and DO check partnership ammounts and also DO check results for ammount errors.
                                                            UpdateFilingTransContrInKindData(true, resultsPartnershipAmt);
                                                        } else {
                                                            ShowDialogBox('EFS', 'Contributions Refunded (Decreases Balance) Added for Contributions Payment Amount should not be less than Contributions Refunded (Decreases Balance) Amount $' + parseFloat(resultRefundedAmt).toFixed(2).toString(), 'Ok', '');
                                                            $("#divLoading").hide();
                                                        }
                                                    }).fail(function () {
                                                        //Hide if GetContrRefundedTotalAmt fails.
                                                        $("#divLoading").hide();
                                                    });
                                                } else {
                                                    ShowDialogBox('EFS', 'Amount cannot be less than partnership details amount $' + parseFloat(resultsPartnershipAmt).toFixed(2).toString(), 'Ok', '');
                                                    // HIDE THE PROCESSING....
                                                    $("#divLoading").hide();
                                                }
                                            } else {
                                                // ADD VALIDATION CONTRIBUTION REFUND AMOUNT SHOULD BE EQUAL OR LESS THAN SCHEDULE D AMOUNT.
                                                // IT WILL VALIDATE IF REDUCING SCHEDULE D AMOUNT LESS THAN CONTRIBUTION REFUND AMOUNT.
                                                $m.post("@Url.Content("~/ContributionsCandIndFamily/GetContrRefundedTotalAmt/")", {
                                                    strTransNumber: sessionStorage.getItem("FilingTransId").toString(),
                                                    filerID: $("#txtFilerID").val()
                                                }, function (resultRefundedAmt) {
                                                    var updatedAmount = $("#txtAmtSchedD").val().toString();
                                                    if (parseFloat(updatedAmount) >= parseFloat(resultRefundedAmt.toString())) {

                                                        // Update Schedule 'D' Transaction
                                                        //UpdateFilingTransContrInKindData and Reload the grid DO check partnership ammounts but DON'T check results for ammount errors.
                                                        UpdateFilingTransContrInKindData(true, false);
                                                    } else {
                                                        ShowDialogBox('EFS', 'Contributions Refunded (Decreases Balance) Added for Contributions Payment Amount should not be less than Contributions Refunded (Decreases Balance) Amount $' + parseFloat(resultRefundedAmt).toFixed(2).toString(), 'Ok', '');
                                                        $("#divLoading").hide();
                                                    }
                                                }).fail(function () {
                                                    //Hide if GetContrRefundedTotalAmt fails.
                                                    $("#divLoading").hide();
                                                });
                                            }
                                        });
                                    } else {
                                        // Update Schedule 'D' Transaction

                                        // ADD VALIDATION CONTRIBUTION REFUND AMOUNT SHOULD BE EQUAL OR LESS THAN SCHEDULE D AMOUNT.
                                        // IT WILL VALIDATE IF REDUCING SCHEDULE D AMOUNT LESS THAN CONTRIBUTION REFUND AMOUNT.
                                        $m.post("@Url.Content("~/ContributionsCandIndFamily/GetContrRefundedTotalAmt/")", {
                                            strTransNumber: sessionStorage.getItem("FilingTransId").toString(),
                                            filerID: $("#txtFilerID").val()
                                        }, function (resultRefundedAmt) {
                                            var updatedAmount = $("#txtAmtSchedD").val().toString();
                                            if (parseFloat(updatedAmount) >= parseFloat(resultRefundedAmt.toString())) {

                                                // VALIDATION SUCCESS.
                                                //UpdateFilingTransContrInKindData and Reload the grid but DON'T check partnership ammounts OR results for ammount errors.
                                                UpdateFilingTransContrInKindData(false, false);
                                            } else {
                                                ShowDialogBox('EFS', 'Contributions Refunded (Decreases Balance) Added for Contributions Payment Amount should not be less than Contributions Refunded (Decreases Balance) Amount $' + parseFloat(resultRefundedAmt).toFixed(2).toString(), 'Ok', '');
                                                $("#divLoading").hide();
                                            }
                                        }).fail(function () {
                                            //Hide if GetContrRefundedTotalAmt fails.
                                            $("#divLoading").hide();
                                        });
                                    }
                                }
                            },
                            "Cancel": function () {
                                // confirm close
                                $m(this).dialog("close");
                            }
                        }
                    });
                }
                else {
                    $("#divLoading").show();
                    if (sessionStorage.getItem("UpdateFlagSchedD").toString() != "Yes") {
                        // Insert
                        $.post("@Url.Content("~/ContributionInKind/SaveFilingTransInKindData/")", {
                            txtFilerId: $("#txtFilerID").val(),
                            lstElectionCycle: $("#lstElectionCycle option:selected").text(),
                            lstElectionCycleId: $("#lstElectionCycle option:selected").val(),
                            lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                            lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                            lstElectionType: $("#lstElectionType option:selected").val(),
                            lstElectionDate: $("#lstElectionDate option:selected").text(),
                            lstElectionDateId: $("#lstElectionDate option:selected").val(),
                            lstTransactionType: sessionStorage.getItem("TransactionType").toString(),
                            txtDateRcvd: $m("#txtCurrentDate").val(),
                            lstContributionNameInKind: $m("#lstContributionNameInKind option:selected").val(),
                            txtPartnerShipName: $m("#txtPartnerShipNameSchedDIN").val(),
                            txtFirstName: $m("#txtFirstName").val(),
                            txtMI: $m("#txtMI").val().toString(),
                            txtLastName: $m("#txtLastName").val(),
                            txtCountry: $m("#txtCountry").val(),
                            txtStreetName: $m("#txtStreetName").val(),
                            txtCity: $m("#txtCity").val().toString(),
                            txtState: $m("#txtState").val().toString(),
                            txtZip5: $m("#txtZipCode").val().toString(),
                            lstContributionType: $m("#lstContributionTypeInKind option:selected").val(),
                            lstMethod: $m("#lstMethod option:selected").val(),
                            txtCheck: $m("#txtCheck").val(),
                            txtAmtInKind: $m("#txtAmtSchedD").val(),
                            txtExplanationInKind: $m("#txtExplanationInKind").val(),
                            lstItemized: $m("#lstItemized option:selected").val(),
                            txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
                            chkCountry: $('#chkCountry').is(':checked').toString(),
                            lstFilingDate: $m("#lstFilingDate option:selected").text(),
                            txtReportPeriodDatesTo: sessionStorage.getItem("FilingDate").toString(),
                            lstResigTermType: $m("#lstResigTermType option:selected").val(),
                            lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
                            txtEmployerPCFB: $m("#txtEmployerPCFB").val(),
                            txtOccupationPCFB: $m("#txtOccupationPCFB").val(),
                            txtContStreetName: $m("#txtContStreetName").val(),
                            txtContCity: $m("#txtContCity").val(),
                            txtContState: $m("#txtContState").val(),
                            txtContZipCode: $m("#txtContZipCode").val(),
                            lstRContributions: $m("#lstRContributions option:selected").text()
                        }, function (results) {

                            if (results.Errors == null) {
                                if (results == "Custom Error") {
                                    $("#divLoading").hide();
                                    ShowDialogBox('EFS', 'System Error found. Please try again.', 'Ok', '');
                                    window.location.reload();
                                } else {
                                    if (results == "0") {
                                        $("#divLoading").hide();
                                        ShowDialogBox('EFS', 'System Error Found. Please try again.', 'Ok', '');
                                        window.location.reload();
                                    } else {
                                        results = "Custom Error";

                                        $("#lstItemized").focus();
                                        var successMessage = 'Transaction saved successfully';

                                        // OVER $2500 PARTNERSHIP MESSAGE.
                                        if ($("#lstContributionNameInKind option:selected").val().toString() == "5") {
                                            var varAmount = parseFloat($m("#txtAmtSchedD").val().toString()).toFixed(2);
                                            // HIDE THE PROCESSING....
                                            $("#divLoading").hide();
                                            if (parseFloat(varAmount).toFixed(2) > 2500.00) {
                                                successMessage = 'Transaction saved successfully. The Contribution amount of this Partnership transaction is greater than $2500. Entering Partner details is mandatory.';
                                            }
                                        }
                                        doneFunction = function () {
                                            // HIDE THE PROCESSING....
                                            $("#divLoading").hide();
                                            ShowDialogBox('EFS', successMessage, 'Ok', '');
                                        }
                                        //Refresh the Data on Grid > hide loading > display 'Transaction saved successfully'.
                                        GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);

                                        window.status = "Transaction saved successfully";

                                        // Clear Form Values
                                        ClearDialogBoxValidationSchedD();

                                        $m("label[for=txtFirstName]").text('');
                                        $m("#txtFirstName").removeClass("error");

                                        $m("label[for=txtLastName]").text('');
                                        $m("#txtLastName").removeClass("error");

                                        $m("label[for=txtPartAmtSchedD]").text('');
                                        $m("#txtPartAmtSchedD").removeClass("error");

                                        $("#tdPartnershipNameInKind").hide();
                                        $("#tdContributionNameInKind").show();
                                        $("#tdFirstNameInKind").show();
                                        $("#tdMIInKind").show();
                                        $("#tdLastNameInKind").show();
                                        $("#divStreetAddress").show();
                                        $("#divCity").show();
                                        $("#divState").show();
                                        $("#divZip5").show();
                                        $("#tdContributionTypeInKind").show();
                                        $("#tdMethodInKind").hide();
                                        $("#tdCheckInKind").hide();
                                        $("#tdCountryContributionChk").show("slow");
                                        $("#tdCountryContributionTxt").show("slow");

                                        if (@Session["COMM_TYPE_ID"] == "23") {
                                            $("#lstItemized").prop("disabled", true);   
                                            $("#tdRContributions").show();
                                            $("#lstRContributions")[0].selectedIndex = 1;
                                        }
                                        else {
                                            $("#lstItemized").prop("disabled", false);
                                            $("#tdRContributions").hide();
                                        }

                                        $("#tdEmployer").hide();
                                        $("#tdOccupation").hide();
                                        $("#divContStreetAddress").hide();
                                        $("#divContCity").hide();
                                        $("#divContState").hide();
                                        $("#divContZip5").hide();
                                    }
                                }
                            } else if (results.Errors.length >= 0) {
                                $("#divLoading").hide();
                                ClearServerSideErrors(); // Server Side Validation Clear
                                AppendCustomErrorLabels(results.Errors);
                            }
                        }).fail(function () {
                            //Hide if SaveFilingTransInKindData fails.
                            $("#divLoading").hide();
                        });
                    } else if (sessionStorage.getItem("UpdateFlagSchedD").toString() == "Yes") { // Update UPDATE UPDATE UPDATE......//////
                        if ($("#lstContributionNameInKind option:selected").val().toString() == "5" || $("#lstContributionNameInKind option:selected").val().toString() == "11") { // Partnership, including LLPs
                            $.post("@Url.Content("~/ContributionInKind/GetPartnershipTotAmt/")", {
                                strTransNumber: sessionStorage.getItem("FilingTransId").toString()
                            }, function (results) {
                                if (results != "") {
                                    var resultsPartnershipAmt = results.toString();
                                    var originalAmt = $m("#txtAmtSchedD").val().toString();
                                    if (parseFloat(originalAmt) >= parseFloat(resultsPartnershipAmt)) {

                                        // ADD VALIDATION CONTRIBUTION REFUND AMOUNT SHOULD BE EQUAL OR LESS THAN SCHEDULE D AMOUNT.
                                        // IT WILL VALIDATE IF REDUCING SCHEDULE D AMOUNT LESS THAN CONTRIBUTION REFUND AMOUNT.
                                        $m.post("@Url.Content("~/ContributionsCandIndFamily/GetContrRefundedTotalAmt/")", {
                                            strTransNumber: sessionStorage.getItem("FilingTransId").toString(),
                                            filerID: $("#txtFilerID").val()
                                        }, function (resultRefundedAmt) {
                                            var updatedAmount = $("#txtAmtSchedD").val().toString();
                                            if (parseFloat(updatedAmount) >= parseFloat(resultRefundedAmt.toString())) {

                                                // Update Schedule 'D' Transaction
                                                //UpdateFilingTransContrInKindData and Reload the grid and DO check partnership ammounts and also DO check results for ammount errors.
                                                UpdateFilingTransContrInKindData(true, resultsPartnershipAmt);
                                            } else {
                                                ShowDialogBox('EFS', 'Contributions Refunded (Decreases Balance) Added for Contributions Payment Amount should not be less than Contributions Refunded (Decreases Balance) Amount $' + parseFloat(resultRefundedAmt).toFixed(2).toString(), 'Ok', '');
                                                $("#divLoading").hide();
                                            }
                                        }).fail(function () {
                                            //Hide if GetContrRefundedTotalAmt fails.
                                            $("#divLoading").hide();
                                        });
                                    } else {
                                        ShowDialogBox('EFS', 'Amount cannot be less than partnership details amount $' + parseFloat(resultsPartnershipAmt).toFixed(2).toString(), 'Ok', '');
                                        // HIDE THE PROCESSING....
                                        $("#divLoading").hide();
                                    }
                                } else {
                                    // ADD VALIDATION CONTRIBUTION REFUND AMOUNT SHOULD BE EQUAL OR LESS THAN SCHEDULE D AMOUNT.
                                    // IT WILL VALIDATE IF REDUCING SCHEDULE D AMOUNT LESS THAN CONTRIBUTION REFUND AMOUNT.
                                    $m.post("@Url.Content("~/ContributionsCandIndFamily/GetContrRefundedTotalAmt/")", {
                                        strTransNumber: sessionStorage.getItem("FilingTransId").toString(),
                                        filerID: $("#txtFilerID").val()
                                    }, function (resultRefundedAmt) {
                                        var updatedAmount = $("#txtAmtSchedD").val().toString();
                                        if (parseFloat(updatedAmount) >= parseFloat(resultRefundedAmt.toString())) {

                                            // Update Schedule 'D' Transaction
                                            //UpdateFilingTransContrInKindData and Reload the grid DO check partnership ammounts but DON'T check results for ammount errors.
                                            UpdateFilingTransContrInKindData(true, false);
                                        } else {
                                            ShowDialogBox('EFS', 'Contributions Refunded (Decreases Balance) Added for Contributions Payment Amount should not be less than Contributions Refunded (Decreases Balance) Amount $' + parseFloat(resultRefundedAmt).toFixed(2).toString(), 'Ok', '');
                                            $("#divLoading").hide();
                                        }
                                    }).fail(function () {
                                        //Hide if GetContrRefundedTotalAmt fails.
                                        $("#divLoading").hide();
                                    });
                                }
                            });
                        } else {
                            // Update Schedule 'D' Transaction

                            // ADD VALIDATION CONTRIBUTION REFUND AMOUNT SHOULD BE EQUAL OR LESS THAN SCHEDULE D AMOUNT.
                            // IT WILL VALIDATE IF REDUCING SCHEDULE D AMOUNT LESS THAN CONTRIBUTION REFUND AMOUNT.
                            $m.post("@Url.Content("~/ContributionsCandIndFamily/GetContrRefundedTotalAmt/")", {
                                strTransNumber: sessionStorage.getItem("FilingTransId").toString(),
                                filerID: $("#txtFilerID").val()
                            }, function (resultRefundedAmt) {
                                var updatedAmount = $("#txtAmtSchedD").val().toString();
                                if (parseFloat(updatedAmount) >= parseFloat(resultRefundedAmt.toString())) {

                                    // VALIDATION SUCCESS.
                                    //UpdateFilingTransContrInKindData and Reload the grid but DON'T check partnership ammounts OR results for ammount errors.
                                    UpdateFilingTransContrInKindData(false, false);
                                } else {
                                    ShowDialogBox('EFS', 'Contributions Refunded (Decreases Balance) Added for Contributions Payment Amount should not be less than Contributions Refunded (Decreases Balance) Amount $' + parseFloat(resultRefundedAmt).toFixed(2).toString(), 'Ok', '');
                                    $("#divLoading").hide();
                                }
                            }).fail(function () {
                                //Hide if GetContrRefundedTotalAmt fails.
                                $("#divLoading").hide();
                            });
                        }
                    }
                }
            }// IF VALIDATION FAILED.
            else {
                // HIDE THE PROCESSING....
                $("#divLoading").hide();
            }
        }); // SAVE AND UPDATE COMPLETED COMPLETED //  COMPLETED  // COMPLETED //COMPLETED

        $("#btnClearDialog").click(function (e) {

            sessionStorage.setItem("CountryValSchedD", $("#txtCountry").val().toString());
            sessionStorage.setItem("ItemizedSchedDYorN", $("#lstItemized option:selected").val().toString());

            // Clear Form Validation. Schedule 'D'
            var validator = $m("#DialogBoxSchedDForm").validate();
            validator.resetForm();  // clear out the validation errors
            $m("#DialogBoxSchedDForm")[0].reset();   // clear out the form data

            if (sessionStorage.getItem("UpdateFlagSchedD").toString() != "Yes") { // Add New Transaction

                // Set the default values for form.
                $("#txtCountry").val("United States");
                $("#txtCountry").prop("disabled", true);
                $("#chkCountry").prop('checked', false);
                $("#txtState").prop('maxLength', '2');
                $m("#txtCountry").valid();

                // Set the default values for form.
                $("#lblExplanation").text("* Explanation");

                // Set the default values for form.
                $("#lstItemized").prop("disabled", false);
                $("#lstContributionNameInKind").prop("disabled", false);

                // Set the default values for form.
                $("#lstItemized")[0].selectedIndex = 0;
                $("#lstContributionNameInKind")[0].selectedIndex = 0;
                $("#lstContributionTypeInKind")[0].selectedIndex = 0;
                $("#lstMethod")[0].selectedIndex = 0;

                // Set the default values for form.
                $("#txtCurrentDate").blur();
                $("#txtZipCode").blur();
                $("#txtAmtSchedD").blur();

                // Hide/Show
                $("#tdPartnershipNameInKind").hide();
                $("#tdContributionNameInKind").show();
                $("#tdFirstNameInKind").show();
                $("#tdMIInKind").show();
                $("#tdLastNameInKind").show();
                $("#divStreetAddress").show();
                $("#divCity").show();
                $("#divState").show();
                $("#divZip5").show();
                $("#tdContributionTypeInKind").show();
                $("#tdMethodInKind").hide();
                $("#tdCountryContributionChk").show("slow");
                $("#tdCountryContributionTxt").show("slow");

                $("#tdCheckInKind").hide();
                // On focus
                $m("#lstItemized")[0].focus();

                if (@Session["COMM_TYPE_ID"] == "23") {
                    $("#lstItemized").prop("disabled", true);
                    $("#tdRContributions").show();
                    $("#lstRContributions")[0].selectedIndex = 1;
                }
                else {                                        
                    $("#tdRContributions").hide();
                }

                $("#tdEmployer").hide();
                $("#tdOccupation").hide();
                $("#divContStreetAddress").hide();
                $("#divContCity").hide();
                $("#divContState").hide();
                $("#divContZip5").hide();
            }
            else { // Update Transactions.
                if (sessionStorage.getItem("ItemizedSchedDYorN").toString() == "N") { // Unitemized
                    $("#txtCurrentDate").blur();
                    $("#txtAmtSchedD").blur();

                    $("#lstItemized")[0].selectedIndex = 1;
                    $("#lstContributionTypeInKind")[0].selectedIndex = 0;

                    $("#txtCurrentDate").focus();
                }
                else { // Itemized
                    $("#txtCurrentDate").blur();
                    $("#txtAmtSchedD").blur();

                    $("#lstContributionTypeInKind")[0].selectedIndex = 0;
                    $("#lstMethod")[0].selectedIndex = 0;
                    $("#tdCheckInKind").hide();

                    $("#lblExplanation").text("* Explanation");

                    $("#txtCountry").val("United States");
                    $("#txtCountry").prop("disabled", true);
                    $("#chkCountry").prop('checked', false);
                    $("#txtState").prop('maxLength', '2');
                    $("#txtZipCode").blur();

                    $("#txtCurrentDate").focus();
                }
            }
        });

        /**
         * Common code for btnSaveInKindPartners
         * param type expPartAmount OR IndFamPartnershipAmt
         */
        function SaveSchedDPartnersData(type) {
            if (type == "expPartAmount" || type == 'IndFamPartnershipAmt') {
                // Because response time can be delayed always show/hide the loading cover during save. This will keep user from clicking around indiscriminately.
                $("#divLoading").show();
                $.post("@Url.Content("~/ContributionInKind/SaveSchedDPartnersData/")", {
                    strTransNumber: sessionStorage.getItem("FilingTransId").toString(),
                    strFilingSchedId: sessionStorage.getItem("FilingSchedId").toString(),
                    strFilingSchedDate: sessionStorage.getItem("FilingSchedDate").toString(),
                    txtFilerId: $("#txtFilerID").val(),
                    lstElectionCycle: $("#lstElectionCycle option:selected").text(),
                    lstElectionCycleId: $("#lstElectionCycle option:selected").val(),
                    lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                    lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                    lstElectionType: $("#lstElectionType option:selected").text(),
                    lstElectionDate: $("#lstElectionDate option:selected").text(),
                    txtPartnerName: $("#txtPartnerName").val(),
                    txtPartFirstName: $("#txtPartFirstName").val(),
                    txtPartMI: $m("#txtPartMI").val(),
                    txtPartLastName: $m("#txtPartLastName").val(),
                    txtCountryPartnership: $m("#txtCountryPartnership").val(),
                    txtPartStreetName: $m("#txtPartStreetName").val(),
                    txtPartCity: $m("#txtPartCity").val(),
                    txtPartState: $m("#txtPartState").val(),
                    txtPartZip5: $m("#txtPartZip5").val(),
                    txtPartAmt: $m("#txtPartAmtSchedD").val(),
                    txtPartExplanationInKind: $m("#txtPartExplanationInKind").val(),
                    lstItemizedPart: $("#lstItemizedPart option:selected").val(),
                    lstIndividualPart: $("#lstIndividualPart option:selected").val(),
                    chkCountryPartnership: $('#chkCountryPartnership').is(':checked').toString(),
                    outOrginalAmount: sessionStorage.getItem("IndFamPartnershipAmt").toString(),
                    recordCount: sessionStorage.getItem("PartnershipRecCount").toString(),
                    txtEmployerPCFB: $m("#txtPartEmployer").val(),
                    txtOccupationPCFB: $m("#txtPartOccupation").val(),
                    txtContStreetName: $m("#txtPartContStreetName").val(),
                    txtContCity: $m("#txtPartContCity").val(),
                    txtContState: $m("#txtPartContState").val(),
                    txtContZipCode: $m("#txtPartContZipCode").val(),
                    lstRContributions: $m("#lstPartRContributions option:selected").text()
                }, function (results) {

                    if (results.Errors == null) {
                        $("#lstItemizedPart").focus();

                        window.status = "Transaction saved successfully";

                        ClearDialogBoxValidationSchedDPart();
                        var doneFunction = function () {
                            // HIDE THE PROCESSING....
                            $("#divLoading").hide();
                            ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');
                        }

                        //Refresh the Data on Grid > hide loading > display 'Transaction saved successfully'.
                        GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);
                        // Refresh the Data on Grid...
                        GetSchedAPartnersData(tablePartners, true, false);

                        $m("label[for=txtPartFirstName]").text('');
                        $m("#txtPartFirstName").removeClass("error");

                        $m("label[for=txtPartLastName]").text('');
                        $m("#txtPartLastName").removeClass("error");

                        $m("label[for=txtPartnerName]").text('');
                        $m("#txtPartnerName").removeClass("error");

                        $m("label[for=txtPartAmtSchedD]").text('');
                        $m("#txtPartAmtSchedD").removeClass("error");

                        $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipNameEdit").toString());
                        $("#tdPartnershipNamePartner").show();

                        $("#tdPartnerName").hide();

                        $("#tdPartFirstName").show("slow");
                        $("#tdPartMI").show("slow");
                        $("#tdPartLastName").show("slow");

                        $("#dvPartIndividual").show("slow");
                        $("#tdPartnershipName").show("slow");
                        $("#tdPartStreetName").show("slow");
                        $("#tdPartCity").show("slow");
                        $("#tdPartState").show("slow");
                        $("#tdPartZip5").show("slow");
                        $("#tdPartCity").show("slow");
                        $("#tdCountryPartnershipChk").show("slow");
                        $("#tdCountryPartnershipTxt").show("slow");

                        if (@Session["COMM_TYPE_ID"] == "23") {
                            $("#lstItemizedPart").prop("disabled", true);
                            $("#tdPartRContributions").show();
                            $("#lstPartRContributions")[0].selectedIndex = 1;
                            $("#tdPartEmployer").hide();
                            $("#tdPartOccupation").hide();
                            $("#divPartContStreetAddress").hide();
                            $("#divPartContCity").hide();
                            $("#divPartContState").hide();
                            $("#divPartContZip5").hide();
                        }
                        else {
                            $("#lstItemizedPart").prop("disabled", false);
                            $("#tdPartRContributions").hide();
                            $("#lstPartRContributions")[0].selectedIndex = 1;
                            $("#tdPartEmployer").hide();
                            $("#tdPartOccupation").hide();
                            $("#divPartContStreetAddress").hide();
                            $("#divPartContCity").hide();
                            $("#divPartContState").hide();
                            $("#divPartContZip5").hide();
                        }

                        // Fill the Auto fill data.
                        if (sessionStorage.getItem("ValDateReceived") != null) {
                            $("#txtCurrentDatePartAttr").val(sessionStorage.getItem("ValDateReceived").toString());
                        }
                    }
                    else if (results.Errors.length >= 0) {

                        $("#divLoading").hide();

                        ClearServerSideErrorsPartnership(); // Server Side Validation Clear
                        var hasAmmountError = AppendCustomErrorLabels(results.Errors);
                        var floatAmmount = false;

                        if (type == "expPartAmount") {
                            floatAmmount = parseFloat(expPartAmount).toFixed(2).toString();
                        } else if (type == "IndFamPartnershipAmt") {
                            floatAmmount = parseFloat(sessionStorage.getItem("IndFamPartnershipAmt").toString()).toFixed(2).toString();
                        }

                        if (hasAmmountError) {
                            dialogComplexParams.content = 'Partnership amount cannot be more than Outstanding Amount $' + floatAmmount + ".";
                            ShowDialogBoxComplex(dialogComplexParams);//Hides loading.
                        }

                    }
                }).fail(function () {
                    //Hide if SaveSchedDPartnersData fails.
                    $("#divLoading").hide();
                });
            }
            else {
                console.error("SaveSchedDPartnersData unnexpected type = '" + SaveSchedDPartnersData +"'.")
            }
        }

        // Save Partners
        $("#btnSaveInKindPartners").click(function () {

            $m('#DialogBoxSchedDPartnersForm').valid();
            if ($m('#DialogBoxSchedDPartnersForm').valid()) { // ENABLE ONCE SERVER SIDE VALIDAITON DONE.

                var valid = true;
                if (@Session["COMM_TYPE_ID"] == "23") {
                    if ($("#lstIndividualPart option:selected").val() == "Y") {
                        if ($m("#lstPartRContributions option:selected").text() == "Yes") {
                            if ($m("#txtPartEmployer").val() == "" ||
                                $m("#txtPartOccupation").val() == "" ||
                                $m("#txtPartContStreetName").val() == "" ||
                                $m("#txtPartContCity").val() == "" ||
                                $m("#txtPartContState").val() == "" ||
                                $m("#txtPartContZipCode").val() == "") {
                                valid = false;
                            }
                        }
                    }
                }

                if (valid == false) {
                    // Get confirmation the DialogBox or Not.
                    var resultsCloseSchedA = "You have reported a contribution over $100 without Contributor Address, Occupation, Employer and Employer Address. Failure to provide Contributor Address, Occupation, Employer and Employer Address may be cited as a Deficiency by Compliance Review staff.";
                    $m('#modal_dialog').text(resultsCloseSchedA);
                    $m("#modal_dialog").dialog({
                        resizable: false,
                        modal: true,
                        width: '400px',
                        height: 'auto',
                        bgiframe: false,
                        closeOnEscape: false,
                        open: function (event, ui) { hideDialogXButton(this); },
                        buttons: {
                            "OK": function () {
                                $m(this).dialog("close");
                                $("#divLoading").show();
                                // INSERT
                                // Save Data....
                //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
                $("#divLoading").show();
                var dialogComplexParams = {
                    title: 'EFS',
                    content: 'Dialog message not set',
                    btn1text: 'Ok',
                    openFunction: function () { $("#divLoading").hide(); },
                }
                                if (sessionStorage.getItem("UpdateFlagSchedDPart").toString() == "No") {
                                    $.post("@Url.Content("~/ContributionInKind/GetPartnershipTotAmt/")", {
                                        strTransNumber: sessionStorage.getItem("TransIdPartnership")
                                    }, function (result) {
                                        if (result != "") {
                                            var expPartAmount = sessionStorage.getItem("IndFamPartnershipAmt").toString();
                                            var expPayAmount = $("#txtPartAmtSchedD").val().toString();
                                            expPartAmount = parseFloat(expPartAmount) - parseFloat(result);
                                            if (parseFloat(expPayAmount) <= parseFloat(expPartAmount).toFixed(2)) {
                                                SaveSchedDPartnersData("expPartAmount");
                                            }
                                            else {
                                                dialogComplexParams.content = 'Partnership Amount cannot be more than Outstanding Amount $' + parseFloat(expPartAmount).toFixed(2).toString() + ".";
                                                ShowDialogBoxComplex(dialogComplexParams);//Hides loading.
                                            }
                                        }
                                        else {
                                            var partnershipAmount = sessionStorage.getItem("IndFamPartnershipAmt").toString();
                                            var expPayAmount = $("#txtPartAmtSchedD").val().toString();
                                            if (parseFloat(expPayAmount) <= parseFloat(partnershipAmount).toFixed(2)) { //ENABLE ONCE SERVER SIDE VALIDATION DONE.
                                                SaveSchedDPartnersData("IndFamPartnershipAmt");
                                            }
                                            else {
                                                dialogComplexParams.content = 'Partnership amount cannot be more than Outstanding Amount $' + parseFloat(partnershipAmount).toFixed(2).toString() + ".";
                                                ShowDialogBoxComplex(dialogComplexParams);//Hides loading.
                                            }
                                        }
                                    }).fail(function () {
                                        //Hide if GetPartnershipTotAmt fails.
                                        $("#divLoading").hide();
                                    });
                                }
                                else if (sessionStorage.getItem("UpdateFlagSchedDPart").toString() == "Yes") { /// Update data... // UPDATE UPDATE ///
                                    $.post("@Url.Content("~/ContributionInKind/GetPartnershipTotAmt/")", {
                                        strTransNumber: sessionStorage.getItem("TransIdPartnership")
                                    }, function (result) {
                                        if (result != "") {
                                            var partnershipAmount = sessionStorage.getItem("IndFamPartnershipAmt").toString();

                                            var partnershipAttrAmount = sessionStorage.getItem("PartnershipAttrAmount").toString();

                                            result = parseFloat(result) - parseFloat(partnershipAttrAmount); // ENABLE ONCE SERVER SIDE VALIDATION DONE.
                                            var totalExpPayAmt = parseFloat(partnershipAmount) - parseFloat(result);  // ENABLE ONCE SERVER SIDE VALIDATION DONE.
                                            var expPayAmount = $("#txtPartAmtSchedD").val().toString();

                                            if (parseFloat(expPayAmount) <= parseFloat(totalExpPayAmt).toFixed(2)) { // ENABLE ONCE SERVER SIDE VALIDATION DONE.

                                                $.post("@Url.Content("~/ContributionInKind/UpdateSchedDPartnersData/")", {
                                                    strTransNumber: sessionStorage.getItem("FilingTransIdPart").toString(),
                                                    strFilingEntityId: sessionStorage.getItem("FilingEntityIdPart").toString(),
                                                    txtPartshiptName: $("#txtPartnerName").val().toString(),
                                                    txtPartFirstName: $("#txtPartFirstName").val(),
                                                    txtPartMI: $m("#txtPartMI").val(),
                                                    txtPartLastName: $m("#txtPartLastName").val(),
                                                    txtCountryPartnership: $m("#txtCountryPartnership").val(),
                                                    txtPartStreetName: $m("#txtPartStreetName").val(),
                                                    txtPartCity: $m("#txtPartCity").val(),
                                                    txtPartState: $m("#txtPartState").val(),
                                                    txtPartZip5: $m("#txtPartZip5").val(),
                                                    txtPartAmt: $m("#txtPartAmtSchedD").val(),
                                                    txtPartExplanationInKind: $m("#txtPartExplanationInKind").val(),
                                                    lstItemizedPart: $("#lstItemizedPart option:selected").val(),
                                                    lstIndividualPart: $("#lstIndividualPart option:selected").val(),
                                                    chkCountryPartnership: $('#chkCountryPartnership').is(':checked').toString(),
                                                    outOrginalAmount: sessionStorage.getItem("IndFamPartnershipAmt").toString(),
                                                    recordCount: sessionStorage.getItem("PartnershipRecCount").toString(),
                                                    existingAmount: sessionStorage.getItem("PartnershipAttrAmount").toString(),
                                                    txtEmployerPCFB: $m("#txtPartEmployer").val(),
                                                    txtOccupationPCFB: $m("#txtPartOccupation").val(),
                                                    txtContStreetName: $m("#txtPartContStreetName").val(),
                                                    txtContCity: $m("#txtPartContCity").val(),
                                                    txtContState: $m("#txtPartContState").val(),
                                                    txtContZipCode: $m("#txtPartContZipCode").val(),
                                                    lstRContributions: $m("#lstPartRContributions option:selected").text()
                                                }, function (results) {

                                                    if (results.Errors == null) {
                                                        dialogPartner.dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                                        window.status = "Transaction saved successfully";

                                                        var doneFunction = function () {
                                                            // HIDE THE PROCESSING....
                                                            $("#divLoading").hide();
                                                            ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');
                                                        }

                                                        //Refresh the Data on Grid > hide loading > display 'Transaction saved successfully'.
                                                        GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);
                                                        // Reload Partners Grid
                                                        // Refresh the Data on Grid and Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
                                                        GetSchedAPartnersData(tablePartners, true, false);

                                                    } else if (results.Errors.length >= 0) {

                                                        $("#divLoading").hide();

                                                        ClearServerSideErrorsPartnership(); // Server Side Validation Clear
                                                        var hasAmmountError = AppendCustomErrorLabels(results.Errors);

                                                        if (hasAmmountError) {
                                                            dialogComplexParams.content = 'Partnership amount cannot be more than Outstanding Amount $' + parseFloat(totalExpPayAmt).toFixed(2).toString() + ".";
                                                            ShowDialogBoxComplex(dialogComplexParams);//Hides loading.
                                                        }
                                                    }
                                                }).fail(function () {
                                                    //Hide if UpdateSchedDPartnersData fails.
                                                    $("#divLoading").hide();
                                                });
                                            }
                                            else {
                                                dialogComplexParams.content = 'Partnership amount cannot be more than Outstanding Amount $' + parseFloat(totalExpPayAmt).toFixed(2).toString() + ".";
                                                ShowDialogBoxComplex(dialogComplexParams);//Hides loading.
                                            }
                                        }
                                    }).fail(function () {
                                        //Hide if GetPartnershipTotAmt fails.
                                        $("#divLoading").hide();
                                    });
                                }
                            },
                            "Cancel": function () {
                                // confirm close
                                $m(this).dialog("close");
                            }
                        }
                    });
                }
                else {
                    // Save Data....
                //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
                $("#divLoading").show();
                var dialogComplexParams = {
                    title: 'EFS',
                    content: 'Dialog message not set',
                    btn1text: 'Ok',
                    openFunction: function () { $("#divLoading").hide(); },
                }
                    if (sessionStorage.getItem("UpdateFlagSchedDPart").toString() == "No") {
                        $.post("@Url.Content("~/ContributionInKind/GetPartnershipTotAmt/")", {
                            strTransNumber: sessionStorage.getItem("TransIdPartnership")
                        }, function (result) {
                            if (result != "") {
                                var expPartAmount = sessionStorage.getItem("IndFamPartnershipAmt").toString();
                                var expPayAmount = $("#txtPartAmtSchedD").val().toString();
                                expPartAmount = parseFloat(expPartAmount) - parseFloat(result);
                                if (parseFloat(expPayAmount) <= parseFloat(expPartAmount).toFixed(2)) {
                                    SaveSchedDPartnersData("expPartAmount");
                                }
                                else {
                                    dialogComplexParams.content = 'Partnership Amount cannot be more than Outstanding Amount $' + parseFloat(expPartAmount).toFixed(2).toString() + ".";
                                    ShowDialogBoxComplex(dialogComplexParams);//Hides loading.
                                }
                            }
                            else {
                                var partnershipAmount = sessionStorage.getItem("IndFamPartnershipAmt").toString();
                                var expPayAmount = $("#txtPartAmtSchedD").val().toString();
                                if (parseFloat(expPayAmount) <= parseFloat(partnershipAmount).toFixed(2)) { //ENABLE ONCE SERVER SIDE VALIDATION DONE.
                                    SaveSchedDPartnersData("IndFamPartnershipAmt");
                                }
                                else {
                                    dialogComplexParams.content = 'Partnership amount cannot be more than Outstanding Amount $' + parseFloat(partnershipAmount).toFixed(2).toString() + ".";
                                    ShowDialogBoxComplex(dialogComplexParams);//Hides loading.
                                }
                            }
                        }).fail(function () {
                            //Hide if GetPartnershipTotAmt fails.
                            $("#divLoading").hide();
                        });
                    }
                    else if (sessionStorage.getItem("UpdateFlagSchedDPart").toString() == "Yes") { /// Update data... // UPDATE UPDATE ///
                        $.post("@Url.Content("~/ContributionInKind/GetPartnershipTotAmt/")", {
                            strTransNumber: sessionStorage.getItem("TransIdPartnership")
                        }, function (result) {
                            if (result != "") {
                                var partnershipAmount = sessionStorage.getItem("IndFamPartnershipAmt").toString();

                                var partnershipAttrAmount = sessionStorage.getItem("PartnershipAttrAmount").toString();

                                result = parseFloat(result) - parseFloat(partnershipAttrAmount); // ENABLE ONCE SERVER SIDE VALIDATION DONE.
                                var totalExpPayAmt = parseFloat(partnershipAmount) - parseFloat(result);  // ENABLE ONCE SERVER SIDE VALIDATION DONE.
                                var expPayAmount = $("#txtPartAmtSchedD").val().toString();

                                if (parseFloat(expPayAmount) <= parseFloat(totalExpPayAmt).toFixed(2)) { // ENABLE ONCE SERVER SIDE VALIDATION DONE.

                                    $.post("@Url.Content("~/ContributionInKind/UpdateSchedDPartnersData/")", {
                                        strTransNumber: sessionStorage.getItem("FilingTransIdPart").toString(),
                                        strFilingEntityId: sessionStorage.getItem("FilingEntityIdPart").toString(),
                                        txtPartshiptName: $("#txtPartnerName").val().toString(),
                                        txtPartFirstName: $("#txtPartFirstName").val(),
                                        txtPartMI: $m("#txtPartMI").val(),
                                        txtPartLastName: $m("#txtPartLastName").val(),
                                        txtCountryPartnership: $m("#txtCountryPartnership").val(),
                                        txtPartStreetName: $m("#txtPartStreetName").val(),
                                        txtPartCity: $m("#txtPartCity").val(),
                                        txtPartState: $m("#txtPartState").val(),
                                        txtPartZip5: $m("#txtPartZip5").val(),
                                        txtPartAmt: $m("#txtPartAmtSchedD").val(),
                                        txtPartExplanationInKind: $m("#txtPartExplanationInKind").val(),
                                        lstItemizedPart: $("#lstItemizedPart option:selected").val(),
                                        lstIndividualPart: $("#lstIndividualPart option:selected").val(),
                                        chkCountryPartnership: $('#chkCountryPartnership').is(':checked').toString(),
                                        outOrginalAmount: sessionStorage.getItem("IndFamPartnershipAmt").toString(),
                                        recordCount: sessionStorage.getItem("PartnershipRecCount").toString(),
                                        existingAmount: sessionStorage.getItem("PartnershipAttrAmount").toString(),
                                        txtEmployerPCFB: $m("#txtPartEmployer").val(),
                                        txtOccupationPCFB: $m("#txtPartOccupation").val(),
                                        txtContStreetName: $m("#txtPartContStreetName").val(),
                                        txtContCity: $m("#txtPartContCity").val(),
                                        txtContState: $m("#txtPartContState").val(),
                                        txtContZipCode: $m("#txtPartContZipCode").val(),
                                        lstRContributions: $m("#lstPartRContributions option:selected").text()
                                    }, function (results) {

                                        if (results.Errors == null) {
                                            dialogPartner.dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                            window.status = "Transaction saved successfully";

                                            var doneFunction = function () {
                                                // HIDE THE PROCESSING....
                                                $("#divLoading").hide();
                                                ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');
                                            }

                                            //Refresh the Data on Grid > hide loading > display 'Transaction saved successfully'.
                                            GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);
                                            // Reload Partners Grid
                                            // Refresh the Data on Grid and Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
                                            GetSchedAPartnersData(tablePartners, true, false);

                                        } else if (results.Errors.length >= 0) {

                                            $("#divLoading").hide();

                                            ClearServerSideErrorsPartnership(); // Server Side Validation Clear
                                            var hasAmmountError = AppendCustomErrorLabels(results.Errors);

                                            if (hasAmmountError) {
                                                dialogComplexParams.content = 'Partnership amount cannot be more than Outstanding Amount $' + parseFloat(totalExpPayAmt).toFixed(2).toString() + ".";
                                                ShowDialogBoxComplex(dialogComplexParams);//Hides loading.
                                            }
                                        }
                                    }).fail(function () {
                                        //Hide if UpdateSchedDPartnersData fails.
                                        $("#divLoading").hide();
                                    });
                                }
                                else {
                                    dialogComplexParams.content = 'Partnership amount cannot be more than Outstanding Amount $' + parseFloat(totalExpPayAmt).toFixed(2).toString() + ".";
                                    ShowDialogBoxComplex(dialogComplexParams);//Hides loading.
                                }
                            }
                        }).fail(function () {
                            //Hide if GetPartnershipTotAmt fails.
                            $("#divLoading").hide();
                        });
                    }
                }
                
            }//Form valid check
        });

        // Clear Attribution Dialog Box..
        $("#btnClearDialogPartner").click(function () {

            sessionStorage.setItem("ItemizedPartYorN", $("#lstItemizedPart option:selected").val().toString());
            sessionStorage.setItem("IndividualPartYorN", $("#lstIndividualPart option:selected").val().toString());
            sessionStorage.setItem("CountryPartVal", $("#txtCountryPartnership").val().toString());
            sessionStorage.setItem("PartnershipNameEdit", $("#txtPartshiptName").val().toString());

            // Clear the Dialogbox.
            ClearDialogBoxValidationSchedDPart();

            $m("label[for=txtPartFirstName]").text('');
            $m("#txtPartFirstName").removeClass("error");

            $m("label[for=txtPartLastName]").text('');
            $m("#txtPartLastName").removeClass("error");

            $m("label[for=txtPartnerName]").text('');
            $m("#txtPartnerName").removeClass("error");

            $m("label[for=txtPartAmtSchedD]").text('');
            $m("#txtPartAmtSchedD").removeClass("error");

            if (sessionStorage.getItem("UpdateFlagSchedDPart").toString() != "Yes") { // Add Transactions

                $("#txtPartZip5").blur();
                $("#txtPartAmtSchedD").blur();

                // Fill the Auto fill data.
                $("#txtPartshiptName").prop("disabled", true);
                $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());
                $("#tdPartnershipNamePartner").show();

                $("#txtCountryPartnership").val("United States");
                $("#txtCountryPartnership").prop("disabled", true);
                $("#chkCountryPartnership").prop('checked', false);
                $("#txtPartState").prop('maxLength', '2');

                $("#lstItemizedPart")[0].selectedIndex = 0;
                $("#lstIndividualPart")[0].selectedIndex = 0;

                $("#lstItemizedPart").prop("disabled", false);
                $("#lstIndividualPart").prop("disabled", false);

                $("#tdPartnerName").hide();
                $("#tdPartFirstName").show("slow");
                $("#tdPartMI").show("slow");
                $("#tdPartLastName").show("slow");
                $("#dvPartIndividual").show("slow");
                $("#tdPartnershipName").show("slow");
                $("#tdPartStreetName").show("slow");
                $("#tdPartCity").show("slow");
                $("#tdPartState").show("slow");
                $("#tdPartZip5").show("slow");
                $("#tdPartCity").show("slow");
                $("#tdCountryPartnershipChk").show("slow");
                $("#tdCountryPartnershipTxt").show("slow");

                $m("label[for=txtPartFirstName]").text('');
                $m("#txtPartFirstName").removeClass("error");

                $m("label[for=txtPartLastName]").text('');
                $m("#txtPartLastName").removeClass("error");

                $m("label[for=txtPartnerName]").text('');
                $m("#txtPartnerName").removeClass("error");

                $m("label[for=txtPartAmtSchedD]").text('');
                $m("#txtPartAmtSchedD").removeClass("error");

                $m("#lstItemizedPart")[0].focus();

                $("#lstItemizedPart").prop("disabled", false);
                $("#lstIndividualPart").prop("disabled", false);

                if (@Session["COMM_TYPE_ID"] == "23") {
                    $("#lstItemizedPart").prop("disabled", true);
                }

            }
            else { // Edit Transactions
                if (sessionStorage.getItem("ItemizedPartYorN").toString() == "N") { // Unitemized Edit Transactions
                    $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());
                    $("#lstItemizedPart").prop("disabled", true);
                    $("#lstItemizedPart")[0].selectedIndex = 1;
                    $("#txtCurrentDate").blur();
                    $("#txtPartAmtSchedD").blur();
                    $("#txtPartAmtSchedD").focus();
                }
                else { // Itemized Edit Transactions
                    $("#txtCurrentDate").blur();
                    $("#txtPartAmtSchedD").blur();
                    $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipNameEdit").toString());
                    $("#tdPartnershipNamePartner").show();
                    if (sessionStorage.getItem("IndividualPartYorN").toString() == "Y") {
                        $("#lstIndividualPart")[0].selectedIndex = 0;
                        $("#txtPartFirstName").focus();
                    }
                    else {
                        $("#lstIndividualPart")[0].selectedIndex = 1;
                        $("#txtPartnerName").focus();
                    }

                    $("#lstItemizedPart").prop("disabled", true);
                    $("#lstIndividualPart").prop("disabled", true);

                    $("#txtCountryPartnership").val("United States");
                    $("#txtCountryPartnership").prop("disabled", true);
                    $("#chkCountryPartnership").prop('checked', false);
                    $("#txtPartState").prop('maxLength', '2');
                    $("#txtPartZip5").blur();
                }
            }

            // Fill the Auto fill data.
            if (sessionStorage.getItem("ValDateReceived") != null)
                $("#txtCurrentDatePartAttr").val(sessionStorage.getItem("ValDateReceived").toString());

        });


        // Delete Record FILING TRANSACTIONS.
        $m('#gridFilingTransactions tbody').on('click', 'a.editor_remove_Sched_D', function (e) {
            e.preventDefault();
            //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            var dataTrans = tableFilingTransactions.row($(this).parents('tr')).data();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                txtFilerId: $("#txtFilerID").val(),
                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }, function (resultEditFlag) {
                if (resultEditFlag == "TRUE") {

                    $.post("@Url.Content("~/_UC_GridCommonControl/GetDeleteFlag/")", {
                    }, function (resultDeleteFlag) {
                        if (resultDeleteFlag == "True") {

                            // LOAN RECEIVED DELETE CHECK.
                            $.post("@Url.Content("~/LoanReceivedSchedI/ValidateDelete_LoanReceived/")", {
                                loan_Lib_Number: dataTrans[41].toString(),
                            }, function (resultDeleteFlagSchedI) {

                                // CHECK THE VALIDATION IF ANY CONTRIBUTION REFUNDS (SCHEDULE 'M') EXISTS OR NOT.
                                // IF SCHEDULE 'M' EXISTS FOR EITHER SCHEDULE 'A', SCHEUDLE 'B', OR SCHEDULE 'C'...
                                // THEN SHOULD NOT DELETE UNTIL CHILD RECORDS DELETE.
                                $.post("@Url.Content("~/ContributionsCandIndFamily/ContributionsRefundSchedMExists/")", {
                                    strTransNumber: dataTrans[42].toString()
                                }, function (resultDelSchedABC) {

                                    // CHECK THE VALIDATION IF ANY EXPENDITURE REFUNDS (SCHEDULE 'L') EXISTS OR NOT.
                                    // IF SCHEDULE 'L' EXITS THEN SCHEDULE 'F' SHOULD NOT DELETE UNTLI CHILD DELETE ALL.
                                    $.post("@Url.Content("~/ExpenditurePaymentsSchedF/ExpenditureRefundSchedLExists/")", {
                                        strTransNumber: dataTrans[42].toString()
                                    }, function (resultDelSchedF) {

                                        $("#divShowPartnerAdddataInKind").hide();
                                        var deleteData = {
                                            resultDeleteFlagSchedI: resultDeleteFlagSchedI,
                                            resultDelSchedABC: resultDelSchedABC,
                                            resultDelSchedF: resultDelSchedF
                                        }

                                        var resultsDelete = "Are you sure you want to delete this transaction?";
                                        var deleteURL = "";
                                        //Determine if you can 
                                        var veredict = appCommonEFS_DetermineScheduleDelete(dataTrans, deleteData);
                                        if (!veredict || !bUtilIsObject(veredict)) {
                                            $("#divLoading").hide();
                                            return false;
                                        } else {
                                            var resultsDelete = veredict.alertMessageForOperation;
                                            var deleteURL = veredict.deleteURL;
                                        }

                                        $m('#modal_dialog').text(resultsDelete);
                                        $m("#modal_dialog").dialog({
                                            resizable: false,
                                            width: '400px',
                                            height: 'auto',
                                            bgiframe: false,
                                            closeOnEscape: false,
                                            open: function (event, ui) {
                                                hideDialogXButton(this);
                                                $("#divLoading").hide();
                                            },
                                            buttons: {
                                                "OK": function () {
                                                    //Close Confirm Box.
                                                    $m(this).dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                                    $("#divLoading").show();

                                                    var options = {};
                                                    options.url = deleteURL;
                                                    options.type = "GET";
                                                    options.data = {
                                                        strLoanLiabNumberOrg: dataTrans[41].toString(),
                                                        strTransNumber: dataTrans[42].toString(),
                                                        strRLiability: dataTrans[6].toString()
                                                    };
                                                    options.dataType = "json";
                                                    options.contentType = "application/json";
                                                    options.success = function (results) {
                                                        window.status = "Record deleted successfully";
                                                        $("#divLoading").hide();
                                                        //Refresh the Data on Grid.
                                                        GetAllTransactionTypesData(true, tableFilingTransactions, false, false);
                                                    };
                                                    options.error = function () {
                                                        ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                                                    };
                                                    $.ajax(options);
                                                },
                                                "Cancel": function () {
                                                    $m(this).dialog("close");
                                                }
                                            }
                                        });//Dialog End
                                    }).always(function () {
                                        //Allways hide at this level /ExpenditureRefundSchedLExists/
                                        $("#divLoading").hide();
                                    });
                                }).fail(function () {
                                    //Hide if we fail at ContributionsRefundSchedMExists/
                                    $("#divLoading").hide();
                                });
                            }).fail(function () {
                                //Hide if we fail at /ValidateDelete_LoanReceived/
                                $("#divLoading").hide();
                            });
                        }
                        else {
                            $("#divLoading").hide();
                            ShowDialogBox('EFS', 'The last transaction cannot be deleted.  To delete the Disclosure report, a deletion request must be submitted to cfinfo@elections.ny.gov', 'Ok', '');
                        }
                    }).fail(function () {
                        //Hide if we fail at /GetEditFlag/
                        $("#divLoading").hide();
                    });
                }
                else {
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before deleting this Transaction.', 'Ok', '');
                }
            });
        });

        //==============================================================================================================================================
        // EDIT COMMON
        // ---------------------------------------------------------------------------------------------------------------------------------------------
        // Edit from Other Schedule functionality
        if (sessionStorage.getItem("EditFlag") != null) {
            if (sessionStorage.getItem("EditFlag").toString() == "True") {

                $m("#lstTransactionType option").each(function () {
                    if ($(this).val() == sessionStorage.getItem("ScheduleId").toString()) {
                        //$(this).attr('selected', 'selected');
                        $(this).prop("selected", true);
                    }
                });

                // BIND COMMON SESSION VARIABLE.
                sessionStorage.setItem("TransactionType", sessionStorage.getItem("ScheduleId").toString());

                // Clear Form Values
                ClearDialogBoxValidationSchedD();

                $.post("@Url.Content("~/_UC_GridCommonControl/GetEditTransactionData/")", {
                    strTransNumber: sessionStorage.getItem("TransNumberEdit").toString()
                }, function (resultsEditData) {
                    $.each(resultsEditData, function (i, item) {

                        sessionStorage.setItem("FilingTransId", item.TransNumber.toString());
                        sessionStorage.setItem("FilingEntityId", item.FilingEntityId.toString());
                        sessionStorage.setItem("UpdateFlagSchedD", "Yes");

                        if (item.RItemized.toString() == "Yes") { // ITEMIZED

                            if (item.ContributorTypeId.toString() == "5" || item.ContributorTypeId.toString() == "6" || item.ContributorTypeId.toString() == "7" || item.ContributorTypeId.toString() == "9" || item.ContributorTypeId.toString() == "10" || item.ContributorTypeId.toString() == "12" || item.ContributorTypeId.toString() == "11" || item.ContributorTypeId.toString() == "13" || item.ContributorTypeId.toString() == "14") {//Partnership, including LLPs
                                $("#tdContributionNameInKind").show("slow");
                                $("#tdPartnershipNameInKind").show("slow");
                                $("#tdFirstNameInKind").hide("slow");
                                $("#tdMIInKind").hide("slow");
                                $("#tdLastNameInKind").hide("slow");
                                $("#divStreetAddress").show("slow");
                                $("#divCity").show("slow");
                                $("#divState").show("slow");
                                $("#divZip5").show("slow");
                                $("#tdContributionTypeInKind").show("slow");
                                $("#tdMethodInKind").hide("slow");
                                $("#tdCheckInKind").show("slow");

                                $("#tdCountryContributionChk").show("slow");
                                $("#tdCountryContributionTxt").show("slow");

                                $("#txtPartnerShipNameSchedDIN").val(item.FilingEntityName.toString());

                                $(".jqSelectorLblPartnershipName").text("* Contributor Name");

                            }
                            else {

                                // FOR SOLE PROPRIETORSHIP WE HAVE TO SHOW THE ENTITY NAME, FIRST NAME, LAST NAME AND MIDDLE NAME.
                                // AS PER DISCUSSION WITH USERS ON 06/20/2019 WE DID THESE CHANGES.
                                // FIRST NAME AND LAST NAME REQUIRED
                                // ENTITY NAME OPTIONAL.
                                if (item.ContributorTypeId.toString() == "4") {
                                    $("#tdPartnershipNameInKind").show("slow");
                                    $("#txtPartnerShipNameSchedDIN").val(item.FilingEntityName.toString());

                                    $(".jqSelectorLblPartnershipName").text("Contributor Name");
                                }
                                else {
                                    $("#tdPartnershipNameInKind").hide("slow");
                                    $("#txtPartnerShipNameSchedDIN").val("");

                                    $(".jqSelectorLblPartnershipName").text("* Contributor Name");
                                }
                                $("#tdContributionNameInKind").show("slow");
                                $("#tdFirstNameInKind").show("slow");
                                $("#tdMIInKind").show("slow");
                                $("#tdLastNameInKind").show("slow");
                                $("#divStreetAddress").show("slow");
                                $("#divCity").show("slow");
                                $("#divState").show("slow");
                                $("#divZip5").show("slow");
                                $("#tdContributionTypeInKind").show("slow");
                                $("#tdMethodInKind").hide("slow");
                                $("#tdCheckInKind").show("slow");

                                $("#tdCountryContributionChk").show("slow");
                                $("#tdCountryContributionTxt").show("slow");

                                $("#txtFirstName").val(item.FilingFirstName.toString());
                                $("#txtMI").val(item.FilingMiddleName.toString());
                                $("#txtLastName").val(item.FilingLastName.toString());
                            }
                            // Method Check
                            if (item.PaymentTypeId.toString() == "1") {
                                $("#tdCheckInKind").show();
                                $("#txtCheck").val(item.PayNumber.toString());
                            }
                            else {
                                $("#tdCheckInKind").hide();
                            }
                            if (item.PaymentTypeId == "7") {
                                $("#lblExplanation").text("* Explanation");
                            }
                            else if (item.RItemized.toString() == "No") {
                                $("#lblExplanation").text("* Explanation");
                            }

                            // Bind Method Data
                            appCommonEFS_BindAndPopulateDLL("@Url.Content("~/ContributionsCandIndFamily/GetPaymentMethodData/")", item.PaymentTypeId.toString(), "#lstMethod", "Payment Method");

                            // Bind Contribution Code
                            appCommonEFS_BindAndPopulateDLL("@Url.Content("~/ContributionInKind/GetContributionNameData/")", item.ContributorTypeId.toString(), "#lstContributionNameInKind", "Contribution Name");

                            // Bind Contribution Type
                            appCommonEFS_BindAndPopulateDLL("@Url.Content("~/ContributionInKind/GetContributionTypeData/")", item.ContributionTypeId.toString(), "#lstContributionTypeInKind", "Contribution Type");
                            // Itemized No
                            $("#lstItemized")[0].selectedIndex = 0;
                            $("#lstItemized").prop("disabled", true);

                            $("#txtCurrentDate").val(item.SchedDate.toString());
                            $("#txtCurrentDate").removeClass("watermarkHTMLTextBox");
                            if (item.SchedDate.toString() != "" || item.SchedDate.toString() != null) {
                                var MyDate = new Date($("#txtCurrentDate").val().toString());
                                var MyDateString;
                                MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                                    + ('0' + MyDate.getDate()).slice(-2) + '/'
                                    + MyDate.getFullYear();
                                $("#txtCurrentDate").val("");
                                $("#txtCurrentDate").val(MyDateString);
                                $("#txtCurrentDate").removeClass("watermarkHTMLTextBox");
                            }
                            if ($("#txtCurrentDate").val().toString() != "MM/DD/YYYY") {
                                $("#txtCurrentDate").removeClass("watermarkHTMLTextBox");
                            }
                            /// Country
                            $("#txtCountry").val(item.FilingCountry.toString());
                            if (item.FilingCountry.toString() == "United States") {
                                $("#chkCountry").prop('checked', false);
                                $("#txtCountry").prop("disabled", true);
                                $("#txtState").prop('maxLength', '2');
                            }
                            else { // Other Country
                                $("#chkCountry").prop('checked', true);
                                $("#txtCountry").prop("disabled", false);
                                $("#txtState").prop('maxLength', '30');
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                                $m('#txtZipCode').attr("placeholder", "");
                            }
                            $("#txtStreetName").val(item.FilingStreetName.toString());
                            $("#txtCity").val(item.FilingCity.toString());
                            $("#txtState").val(item.FilingState.toString());
                            $("#txtZipCode").val(item.FilingZip.toString());
                            if ($("#txtZipCode").val().toString() != "00000-0000") {
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            }
                            if (item.PaymentTypeId.toString() == "1") {
                                $("#tdCheck").show();
                                $("#txtCheck").val(item.PayNumber.toString());
                            }
                            else {
                                $("#tdCheck").hide();
                            }

                            var originalAmount = item.OriginalAmount.toString();
                            $("#txtAmtSchedD").val(originalAmount);
                            if ($("#txtAmtSchedD").val().toString() != "") {
                                $("#txtAmtSchedD").removeClass("watermarkHTMLTextBox");
                            }
                            $("#txtExplanationInKind").val(item.TransExplanation.toString());                            
                        }
                        else { // UNITEMIZED

                            // Itemized No
                            $("#lstItemized")[0].selectedIndex = 1;
                            $("#lstItemized").prop("disabled", true);

                            $("#tdContributionNameInKind").hide("slow");
                            $("#tdPartnershipNameInKind").hide("slow");
                            $("#tdFirstNameInKind").hide("slow");
                            $("#tdMIInKind").hide("slow");
                            $("#tdLastNameInKind").hide("slow");
                            $("#divStreetAddress").hide("slow");
                            $("#divCity").hide("slow");
                            $("#divState").hide("slow");
                            $("#divZip5").hide("slow");
                            $("#tdMethodInKind").hide("slow");
                            $("#tdCheckInKind").hide("slow");

                            $("#tdCountryContributionChk").hide("slow");
                            $("#tdCountryContributionTxt").hide("slow");

                            $("#tdContributionTypeInKind").show("slow");

                            $("#lstItemized").prop("disabled", true);

                            $("#txtCurrentDate").val(item.SchedDate.toString());
                            if (item.SchedDate.toString() != "" || item.SchedDate.toString() != null) {
                                var MyDate = new Date($("#txtCurrentDate").val().toString());
                                var MyDateString;
                                MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                                    + ('0' + MyDate.getDate()).slice(-2) + '/'
                                    + MyDate.getFullYear();
                                $("#txtCurrentDate").val("");
                                $("#txtCurrentDate").val(MyDateString);
                                $("#txtCurrentDate").removeClass("watermarkHTMLTextBox");
                            }
                            var originalAmount = item.OriginalAmount.toString();
                            $("#txtAmtSchedD").val(originalAmount);
                            if (item.OriginalAmount.toString() != "" || item.OriginalAmount.toString() != null) {
                                $("#txtAmtSchedD").removeClass("watermarkHTMLTextBox");
                            }
                            $("#txtExplanationInKind").val(item.TransExplanation.toString());

                            // Bind Contribution Type
                            appCommonEFS_BindAndPopulateDLL("@Url.Content("~/ContributionInKind/GetContributionTypeData/")",item.ContributionTypeId.toString(), "#lstContributionTypeInKind", "Contribution Type");
                        }

                        if (@Session["COMM_TYPE_ID"] == "23") {
                            if ($m("#lstRContributions option:selected").val() == "0") {
                                $("#tdEmployer").show();
                                $("#tdOccupation").show();
                                $("#divContStreetAddress").show();
                                $("#divContCity").show();
                                $("#divContState").show();
                                $("#divContZip5").show();
                                $("#txtEmployerPCFB").val(item.TreasurerEmployer);
                                $("#txtOccupationPCFB").val(item.TreasurerOccuptaion);
                                $("#txtContStreetName").val(item.TreaAddr1);
                                $("#txtContCity").val(item.TreaCity);
                                $("#txtContState").val(item.TreaState);
                                $("#txtContZipCode").val(item.TreaZipCode);
                            }
                            else {
                                $("#tdEmployer").hide();
                                $("#tdOccupation").hide();
                                $("#divContStreetAddress").hide();
                                $("#divContCity").hide();
                                $("#divContState").hide();
                                $("#divContZip5").hide();
                            }
                        }
                        else {
                            $("#tdRContributions").hide();
                            $("#tdEmployer").hide();
                            $("#tdOccupation").hide();
                            $("#divContStreetAddress").hide();
                            $("#divContCity").hide();
                            $("#divContState").hide();
                            $("#divContZip5").hide();
                        }

                        dialogInKind.dialog("open");

                        // Common Code
                        sessionStorage.setItem("EditFlag", "False");
                    });
                });
            }
        }
        // ---------------------------------------------------------------------------------------------------------------------------------------------
        // EDIT COMMON
        //==============================================================================================================================================


        // Edit Schedule 'D' Transaction .
        $m('#gridFilingTransactions tbody').on('click', 'a.editor_edit_Sched_D', function (e) {
            e.preventDefault();
            //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            var data = tableFilingTransactions.row($(this).parents('tr')).data();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")",
                {
                    txtFilerId: $("#txtFilerID").val(),
                    lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                    strElectionTypeId: $m("#lstElectionType option:selected").val(),
                    lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                    lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                    lstFilingDate: $m("#lstFilingDate option:selected").text(),
                    txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                    electionDateId: $m("#lstElectionDate").val(),
                    lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
                }, function (resultEditFlag) {
                    if (resultEditFlag == "TRUE") {
                        $("#divShowPartnerAdddataInKind").hide();
                        if (data[1].toString() == "4") { // Schedule D
                            $("#divLoading").hide();
                            // Open Dialogbox.
                            dialogInKind.dialog("open");

                            sessionStorage.setItem("UpdateFlagSchedD", "Yes");

                            // Clear Form Values
                            // Clear Form Validation. Schedule 'D'
                            var validator = $m("#DialogBoxSchedDForm").validate();
                            validator.resetForm();  // clear out the validation errors
                            $m("#DialogBoxSchedDForm")[0].reset();   // clear out the form data

                            $("#lblExplanation").text("* Explanation");

                            sessionStorage.setItem("FilingTransId", data[42].toString());
                            sessionStorage.setItem("FilingEntityId", data[2].toString());

                            if (data[37].toString() == "Yes") { // ITEMIZED

                                if (data[3].toString() == "5" || data[3].toString() == "6" || data[3].toString() == "7" || data[3].toString() == "9" || data[3].toString() == "10" || data[3].toString() == "12" || data[3].toString() == "11" || data[3].toString() == "13" || data[3].toString() == "14") { // Partnership, including LLPs
                                    $("#tdContributionNameInKind").show("slow");
                                    $("#tdPartnershipNameInKind").show("slow");
                                    $("#tdFirstNameInKind").hide("slow");
                                    $("#tdMIInKind").hide("slow");
                                    $("#tdLastNameInKind").hide("slow");
                                    $("#divStreetAddress").show("slow");
                                    $("#divCity").show("slow");
                                    $("#divState").show("slow");
                                    $("#divZip5").show("slow");
                                    $("#tdContributionTypeInKind").show("slow");
                                    $("#tdMethodInKind").hide("slow");
                                    $("#tdCheckInKind").show("slow");

                                    $("#tdCountryContributionChk").show("slow");
                                    $("#tdCountryContributionTxt").show("slow");

                                    $("#txtPartnerShipNameSchedDIN").val(data[13].toString());

                                    $(".jqSelectorLblPartnershipName").text("* Contributor Name");
                                } else {

                                    // FOR SOLE PROPRIETORSHIP WE HAVE TO SHOW THE ENTITY NAME, FIRST NAME, LAST NAME AND MIDDLE NAME.
                                    // AS PER DISCUSSION WITH USERS ON 06/20/2019 WE DID THESE CHANGES.
                                    // FIRST NAME AND LAST NAME REQUIRED
                                    // ENTITY NAME OPTIONAL.
                                    if (data[3].toString() == "4") {
                                        $("#tdPartnershipNameInKind").show("slow");
                                        $("#txtPartnerShipNameSchedDIN").val(data[13].toString());

                                        $(".jqSelectorLblPartnershipName").text("Contributor Name");
                                    } else {
                                        $("#tdPartnershipNameInKind").hide("slow");
                                        $("#txtPartnerShipNameSchedDIN").val("");

                                        $(".jqSelectorLblPartnershipName").text("* Contributor Name");
                                    }

                                    $("#tdContributionNameInKind").show("slow");
                                    $("#tdFirstNameInKind").show("slow");
                                    $("#tdMIInKind").show("slow");
                                    $("#tdLastNameInKind").show("slow");
                                    $("#divStreetAddress").show("slow");
                                    $("#divCity").show("slow");
                                    $("#divState").show("slow");
                                    $("#divZip5").show("slow");
                                    $("#tdContributionTypeInKind").show("slow");
                                    $("#tdMethodInKind").hide("slow");
                                    $("#tdCheckInKind").show("slow");

                                    $("#tdCountryContributionChk").show("slow");
                                    $("#tdCountryContributionTxt").show("slow");

                                    $("#txtFirstName").val(data[14].toString());
                                    $("#txtMI").val(data[15].toString());
                                    $("#txtLastName").val(data[16].toString());
                                }
                                // Method Check
                                if (data[5].toString() == "1") {
                                    $("#tdCheckInKind").show();
                                    $("#txtCheck").val(data[23].toString());
                                }
                                else {
                                    $("#tdCheckInKind").hide();
                                }

                                if (data[5].toString() == "7") {
                                    $("#lblExplanation").text("* Explanation");
                                }

                                // Bind Method Data
                                appCommonEFS_BindAndPopulateDLL("@Url.Content("~/ContributionInKind/GetPaymentMethodData/")", data[5].toString(), "#lstMethod", "Payment Method");
                                // Bind Contribution Code
                                appCommonEFS_BindAndPopulateDLL("@Url.Content("~/ContributionInKind/GetContributionNameData/")", data[3].toString(), "#lstContributionNameInKind", "Contribution Name");
                                // Bind Contribution Type
                                appCommonEFS_BindAndPopulateDLL("@Url.Content("~/ContributionInKind/GetContributionTypeData/")", data[4].toString(), "#lstContributionTypeInKind", "Contribution Type");

                                // Itemized No
                                $("#lstItemized")[0].selectedIndex = 0;
                                $("#lstItemized").prop("disabled", true);

                                $("#txtCurrentDate").val(data[10].toString());
                                if (data[10].toString() != "" || data[10].toString() != null) {
                                    var MyDate = new Date($("#txtCurrentDate").val().toString());
                                    var MyDateString;
                                    MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                                        + ('0' + MyDate.getDate()).slice(-2) + '/'
                                        + MyDate.getFullYear();
                                    $("#txtCurrentDate").val("");
                                    $("#txtCurrentDate").val(MyDateString);
                                    $("#txtCurrentDate").removeClass("watermarkHTMLTextBox");
                                }
                                $("#txtCountry").val(data[17].toString());
                                if (data[17].toString() == "United States") {
                                    $("#chkCountry").prop('checked', false);
                                    $("#txtCountry").prop("disabled", true);
                                    $("#txtState").prop('maxLength', '2');
                                }
                                else {
                                    $("#chkCountry").prop('checked', true);
                                    $("#txtCountry").prop("disabled", false);
                                    $("#txtState").prop('maxLength', '30');
                                    $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                                    $m('#txtZipCode').attr("placeholder", "");
                                }

                                $("#txtStreetName").val(data[18].toString());
                                $("#txtCity").val(data[19].toString());
                                $("#txtState").val(data[20].toString());
                                $("#txtZipCode").val(data[21].toString());
                                if (data[21].toString() != "") {
                                    $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                                }
                                else {
                                    if (data[17].toString() == "United States") {
                                        $("#txtZipCode").addClass("watermarkHTMLTextBox");
                                        $("#txtZipCode").blur();
                                    }
                                }
                                var originalAmount = data[24].toString();
                                $("#txtAmtSchedD").val(originalAmount);
                                if (data[24].toString() != "" || data[24].toString() != null) {
                                    $("#txtAmtSchedD").removeClass("watermarkHTMLTextBox");
                                }
                                $("#txtExplanationInKind").val(data[36].toString());
                            }
                            else { // UNITEMIZED

                                $("#lblExplanation").text("* Explanation");

                                // Itemized No
                                $("#lstItemized")[0].selectedIndex = 1;
                                $("#lstItemized").prop("disabled", true);

                                $("#tdContributionNameInKind").hide("slow");
                                $("#tdPartnershipNameInKind").hide("slow");
                                $("#tdFirstNameInKind").hide("slow");
                                $("#tdMIInKind").hide("slow");
                                $("#tdLastNameInKind").hide("slow");
                                $("#divStreetAddress").hide("slow");
                                $("#divCity").hide("slow");
                                $("#divState").hide("slow");
                                $("#divZip5").hide("slow");
                                //$("#tdContributionTypeInKind").hide("slow");
                                $("#tdMethodInKind").hide("slow");
                                $("#tdCheckInKind").hide("slow");

                                $("#tdCountryContributionChk").hide("slow");
                                $("#tdCountryContributionTxt").hide("slow");

                                $("#txtCurrentDate").val(data[10].toString());
                                if (data[10].toString() != "" || data[10].toString() != null) {
                                    var MyDate = new Date($("#txtCurrentDate").val().toString());
                                    var MyDateString;
                                    MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                                        + ('0' + MyDate.getDate()).slice(-2) + '/'
                                        + MyDate.getFullYear();
                                    $("#txtCurrentDate").val("");
                                    $("#txtCurrentDate").val(MyDateString);
                                    $("#txtCurrentDate").removeClass("watermarkHTMLTextBox");
                                }
                                var originalAmount = data[24].toString();
                                $("#txtAmtSchedD").val(originalAmount);
                                if (data[24].toString() != "" || data[24].toString() != null) {
                                    $("#txtAmtSchedD").removeClass("watermarkHTMLTextBox");
                                }
                                $("#txtExplanationInKind").val(data[36].toString());

                                // Bind Contribution Type
                                appCommonEFS_BindAndPopulateDLL("@Url.Content("~/ContributionInKind/GetContributionTypeData/")", data[4].toString(), "#lstContributionTypeInKind", "Contribution Type");
                            }

                            $("#txtCurrentDate").select();

                            if (@Session["COMM_TYPE_ID"] == "23") {
                                if (data[51].toString() == "") {
                                    $("#tdRContributions").hide();
                                    $("#tdEmployer").hide();
                                    $("#tdOccupation").hide();
                                    $("#divContStreetAddress").hide();
                                    $("#divContCity").hide();
                                    $("#divContState").hide();
                                    $("#divContZip5").hide();
                                }
                                else {
                                    $("#tdRContributions").show();
                                    $m("#lstRContributions option").each(function () {
                                        if ($(this).text() == data[51].toString()) {
                                            $(this).prop('selected', true).trigger('change');

                                            if ($(this).text() == "Yes") {
                                                $("#tdEmployer").show();
                                                $("#tdOccupation").show();
                                                $("#divContStreetAddress").show();
                                                $("#divContCity").show();
                                                $("#divContState").show();
                                                $("#divContZip5").show();
                                                $("#txtEmployerPCFB").val(data[52].toString());
                                                $("#txtOccupationPCFB").val(data[53].toString());
                                                $("#txtContStreetName").val(data[55].toString());
                                                $("#txtContCity").val(data[56].toString());
                                                $("#txtContState").val(data[57].toString());
                                                $("#txtContZipCode").val(data[58].toString());
                                            }
                                            else {
                                                $("#tdEmployer").hide();
                                                $("#tdOccupation").hide();
                                                $("#divContStreetAddress").hide();
                                                $("#divContCity").hide();
                                                $("#divContState").hide();
                                                $("#divContZip5").hide();
                                            }
                                        }
                                    });
                                }
                            }
                            else {                                
                                $("#tdRContributions").hide();
                                $("#tdEmployer").hide();
                                $("#tdOccupation").hide();
                                $("#divContStreetAddress").hide();
                                $("#divContCity").hide();
                                $("#divContState").hide();
                                $("#divContZip5").hide();
                            }

                        } // End schedule D and start other Schedules
                        else if (["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "16", "17", "18", "19", "20", "21"].includes(data[1].toString())) {
                            //Common code to determine redirect url and set session varialbes. Also hides $("#divLoading") on fail.
                            //Uses window.location.href
                            appCommonEFS_DetermineScheduleRedirect(data[1].toString(), data[42].toString());
                        }
                    }
                    else {
                        $("#divLoading").hide();
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before editing this Transaction.', 'Ok', '');
                }
            }).fail(function () {
                //GetEditFlag fails get we hide. Otherwise wait for dialog or  redirect to do so.
                $("#divLoading").hide();
            });
        });

        // Unitemized changes.
        $("#lstItemized").change(function () {

            if ($("#lstItemized option:selected").val().toString() == "N") { // UNITEMIZED

                ClearDialogBoxValidationSchedD();

                // Hide/Show Controls
                $("#tdContributionNameInKind").hide("slow");
                $("#tdPartnershipNameInKind").hide("slow");
                $("#tdFirstNameInKind").hide("slow");
                $("#tdMIInKind").hide("slow");
                $("#tdLastNameInKind").hide("slow");
                $("#divStreetAddress").hide("slow");
                $("#divCity").hide("slow");
                $("#divState").hide("slow");
                $("#divZip5").hide("slow");
                $("#tdContributionTypeInKind").show("slow");
                $("#tdMethodInKind").hide("slow");
                $("#tdCheckInKind").hide("slow");

                $("#tdCountryContributionChk").hide("slow");
                $("#tdCountryContributionTxt").hide("slow");

                $("#lstItemized")[0].selectedIndex = 1;

                if (@Session["COMM_TYPE_ID"] == "23") {                    
                    $("#tdRContributions").hide();
                    $("#lstRContributions")[0].selectedIndex = 1;
                }
            }
            else { // ITEMIZED

                ClearDialogBoxValidationSchedD();

                // Hide/Show Controls
                $("#tdPartnershipNameInKind").hide("slow");

                $("#tdContributionNameInKind").show("slow");
                $("#tdFirstNameInKind").show("slow");
                $("#tdMIInKind").show("slow");
                $("#tdLastNameInKind").show("slow");
                $("#divStreetAddress").show("slow");
                $("#divCity").show("slow");
                $("#divState").show("slow");
                $("#divZip5").show("slow");
                $("#tdContributionTypeInKind").show("slow");
                $("#tdMethodInKind").hide("slow");
                $("#tdCheckInKind").hide("slow");

                $("#tdCountryContributionChk").show("slow");
                $("#tdCountryContributionTxt").show("slow");

                $("#lstItemized")[0].selectedIndex = 0;

                if (@Session["COMM_TYPE_ID"] == "23") {
                    $("#tdRContributions").show();
                    $("#tdEmployer").hide();
                    $("#tdOccupation").hide();
                    $("#divContStreetAddress").hide();
                    $("#divContCity").hide();
                    $("#divContState").hide();
                    $("#divContZip5").hide();
                    $m("#txtEmployerPCFB").val("");
                    $m("#txtOccupationPCFB").val("");
                    $m("#txtContStreetName").val("");
                    $m("#txtContCity").val("");
                    $m("#txtContState").val("");
                    $m("#txtContZipCode").val("");
                    $("#lstRContributions")[0].selectedIndex = 1;
                }
            }
        });

        // Unitemized Partnership.
        $("#lstItemizedPart").change(function () {
            if ($("#lstItemizedPart option:selected").val().toString() == "N") { // UNITEMIZED

                ClearDialogBoxValidationSchedDPart();

                // Fill the Auto fill data.
                $("#txtPartshiptName").prop("disabled", true);
                $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());

                $("#txtCurrentDate").blur();
                $("#txtPartAmtSchedD").blur();
                $("#lstItemizedPart").select();

                $("#txtCountryPartnership").val("United States");
                $("#txtCountryPartnership").prop("disabled", true);

                $("#lstIndividualPart")[0].selectedIndex = 0;

                $("#lstItemizedPart")[0].selectedIndex = 1;

                // Hide/Show Controls
                $("#dvPartIndividual").hide("slow");
                $("#tdPartnerName").hide("slow");
                $("#tdPartFirstName").hide("slow");
                $("#tdPartMI").hide("slow");
                $("#tdPartLastName").hide("slow");
                $("#tdPartStreetName").hide("slow");
                $("#tdPartCity").hide("slow");
                $("#tdPartState").hide("slow");
                $("#tdPartZip5").hide("slow");
                $("#tdPartCity").hide("slow");
                $("#tdCountryPartnershipChk").hide("slow");
                $("#tdCountryPartnershipTxt").hide("slow");

                if (@Session["COMM_TYPE_ID"] == "23") {
                    $("#tdPartRContributions").hide();
                    $("#lstPartRContributions")[0].selectedIndex = 1;
                    $("#tdPartEmployer").hide();
                    $("#tdPartOccupation").hide();
                    $("#divPartContStreetAddress").hide();
                    $("#divPartContCity").hide();
                    $("#divPartContState").hide();
                    $("#divPartContZip5").hide();
                }

                // Fill the Auto fill data.
                if (sessionStorage.getItem("ValDateReceived") != null)
                    $("#txtCurrentDatePartAttr").val(sessionStorage.getItem("ValDateReceived").toString());
            }
            else {
                // Clear Form data
                ClearDialogBoxValidationSchedDPart();

                // Fill the Auto fill data.
                $("#txtPartshiptName").prop("disabled", true);
                $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());

                $("#txtCurrentDate").blur();
                $("#txtPartZip5").blur();
                $("#txtPartAmtSchedD").blur();
                $("#lstItemizedPart").select();

                $("#lblExplanationPart").text("Explanation");

                $("#txtCountryPartnership").val("United States");
                $("#txtCountryPartnership").prop("disabled", true);

                $("#lstIndividualPart")[0].selectedIndex = 0;
                $("#lstItemizedPart")[0].selectedIndex = 0;

                $("#tdPartnershipNamePartner").show();

                $("#tdPartFirstName").show("slow");
                $("#tdPartMI").show("slow");
                $("#tdPartLastName").show("slow");

                $("#dvPartIndividual").show("slow");
                $("#tdPartStreetName").show("slow");
                $("#tdPartCity").show("slow");
                $("#tdPartState").show("slow");
                $("#tdPartZip5").show("slow");
                $("#tdPartCity").show("slow");
                $("#tdCountryPartnershipChk").show("slow");
                $("#tdCountryPartnershipTxt").show("slow");

                $m("label[for=txtPartFirstName]").text('');
                $m("#txtPartFirstName").removeClass("error");

                $m("label[for=txtPartLastName]").text('');
                $m("#txtPartLastName").removeClass("error");

                $m("label[for=txtPartMI]").text('');
                $m("#txtPartMI").removeClass("error");

                $m("label[for=txtPartAmtSchedD]").text('');
                $m("#txtPartAmtSchedD").removeClass("error");

                if (@Session["COMM_TYPE_ID"] == "23") {
                    $("#tdPartRContributions").show();
                    $("#lstPartRContributions")[0].selectedIndex = 1;
                    $("#tdPartEmployer").hide();
                    $("#tdPartOccupation").hide();
                    $("#divPartContStreetAddress").hide();
                    $("#divPartContCity").hide();
                    $("#divPartContState").hide();
                    $("#divPartContZip5").hide();
                    $m("#txtPartEmployer").val("");
                    $m("#txtPartOccupation").val("");
                    $m("#txtPartContStreetName").val("");
                    $m("#txtPartContCity").val("");
                    $m("#txtPartContState").val("");
                    $m("#txtPartContZipCode").val("");
                }

                // Fill the Auto fill data.
                if (sessionStorage.getItem("ValDateReceived") != null)
                    $("#txtCurrentDatePartAttr").val(sessionStorage.getItem("ValDateReceived").toString());
            }
        });

        // Partnership Individual Yes or No.
        $("#lstIndividualPart").change(function () {
            if ($("#lstIndividualPart option:selected").val().toString() == "Y") {

                // Fill the Auto fill data.
                $("#txtPartshiptName").prop("disabled", true);
                $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());
                $("#txtPartFirstName").focus();

                $("#tdPartFirstName").show("slow");
                $("#tdPartMI").show("slow");
                $("#tdPartLastName").show("slow");

                $("#tdPartnerName").hide("slow");

                $("#txtPartFirstName").val("");
                $("#txtPartMI").val("");
                $("#txtPartLastName").val("");

                $m("label[for=txtPartFirstName]").text('');
                $m("#txtPartFirstName").removeClass("error");

                $m("label[for=txtPartMI]").text('');
                $m("#txtPartMI").removeClass("error");

                $m("label[for=txtPartLastName]").text('');
                $m("#txtPartLastName").removeClass("error");

                if (@Session["COMM_TYPE_ID"] == "23") {
                    $("#tdPartRContributions").show();
                    $("#lstPartRContributions")[0].selectedIndex = 1;
                    $("#tdPartEmployer").hide();
                    $("#tdPartOccupation").hide();
                    $("#divPartContStreetAddress").hide();
                    $("#divPartContCity").hide();
                    $("#divPartContState").hide();
                    $("#divPartContZip5").hide();
                }
            }
            else {

                // Fill the Auto fill data.
                $("#txtPartshiptName").prop("disabled", true);
                $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());
                $("#txtPartFirstName").focus();

                //$("#lstIndividualPart")[0].selectedIndex = 1;

                $("#tdPartFirstName").hide("slow");
                $("#tdPartMI").hide("slow");
                $("#tdPartLastName").hide("slow");

                $("#tdPartnerName").show("slow");

                $("#txtPartnerName").val("");

                $m("label[for=txtPartnerName]").text('');
                $m("#txtPartnerName").removeClass("error");

                if (@Session["COMM_TYPE_ID"] == "23") {
                    $("#tdPartRContributions").hide();
                    $("#lstPartRContributions")[0].selectedIndex = 1;
                    $("#tdPartEmployer").hide();
                    $("#tdPartOccupation").hide();
                    $("#divPartContStreetAddress").hide();
                    $("#divPartContCity").hide();
                    $("#divPartContState").hide();
                    $("#divPartContZip5").hide();
                }
            }
        });

        // ROW SELECT YELLOW HIGHLIGHTED...
        $m('#gridFilingTransactions tbody').on('click', 'tr', function (e) {
            e.preventDefault();

            var scheduleID = tableFilingTransactions.cell(this, 1).data();

            if ($(this).hasClass('selected') != true) {
                tableFilingTransactions.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
                // Bind Data
            }

            if (sessionStorage.getItem("SchedDLink") != null) {
                if (sessionStorage.getItem("SchedDLink").toString() == "Yes") {
                    if (scheduleID == "4") {
                        sessionStorage.removeItem("SchedDLink");
                        $("#divShowPartnerAdddataInKind").show();
                    }
                    else {
                        sessionStorage.removeItem("SchedDLink");
                        $("#divShowPartnerAdddataInKind").hide();
                    }
                }
                else {
                    sessionStorage.removeItem("SchedDLink");
                    $("#divShowPartnerAdddataInKind").hide();
                }
            }
            else {
                sessionStorage.removeItem("SchedDLink");
                $("#divShowPartnerAdddataInKind").hide();
            }
        });

        sessionStorage.removeItem("SchedDLink");
        // Edit Partnership Record.
        // EDIT FILING TRANSACTIONS GRID.
        $m('#gridFilingTransactions tbody').on('click', 'a.editor_AttributionSchedD', function (e) {
            e.preventDefault();
            $("#divShowPartnerAdddataInKind").show();
            //$("#divPartnerInKing").show();

            var data = tableFilingTransactions.row($(this).parents('tr')).data();

            sessionStorage.setItem("SchedDLink", "Yes");

            sessionStorage.setItem("TransIdPartnership", data[42].toString());

            sessionStorage.setItem("FilingTransIdDel", data[42].toString());

            sessionStorage.setItem("FilingTransId", data[42].toString());
            sessionStorage.setItem("FilingSchedId", data[1].toString());
            sessionStorage.setItem("FilingSchedDate", data[7].toString());
            var varAmt = data[24].toString()

            sessionStorage.setItem("IndFamPartnershipAmt", varAmt);

            var partnershipName = data[13].toString();
            sessionStorage.setItem("PartnershipName", data[13].toString());
            sessionStorage.setItem("PartnershipNameEdit", data[13].toString());
            sessionStorage.setItem("ValDateReceived", data[10].toString());

            // Fill the Auto fill data.
            if (sessionStorage.getItem("ValDateReceived") != null)
                $("#txtCurrentDatePartAttr").val(sessionStorage.getItem("ValDateReceived").toString());

            // ADDED FOR SCHEDULE D ADDING ATTRIBUTION DETAILS FOR PLLC/LLC.
            // DEFECT: 4100 ENHANCEMENT. // satheesh
            if (data[3].toString() == "11") {
                $("#btnAddNewAttribution").prop("value", "Add Attribution");
                $("#btnAddNewAttribution").prop("title", "Add Attribution");
                $m("#h3Partners").text("Attribution(s)");

                $m("#lblIndividualPart").text("Is LLC/PLLC Member owner an Individual?");
                $m("#addEditPartner_lblPartnershipName").text("LLC/PLLC Name");

                $m("#txtCurrentDatePartAttr").prop("disabled", true);
                $m("#dvDateRcvdPartAttr").show();
            }
            else {
                $("#btnAddNewAttribution").prop("value", "Add Partner");
                $("#btnAddNewAttribution").prop("title", "Add Partner");
                $m("#h3Partners").text("Partner(s)");

                $m("#lblIndividualPart").text("Is Partner name an individual?");
                $m("#addEditPartner_lblPartnershipName").text("Partnership Name");

                $m("#dvDateRcvdPartAttr").hide();
                $m("#txtCurrentDatePartAttr").val("");
                sessionStorage.removeItem("ValDateReceived");
            }

            $("#txtPartshiptName").prop("disabled", true);
            $("#txtPartshiptName").val(partnershipName);
            $("#txtPartFirstName").focus();

            $("#divPartnerNCR").show();

            tablePartners = $m('#PartnersGridSchedD').DataTable({
                "bProcessing": true,
                "responsive": true,
                "deferRender": true,
                "retrieve": true,
                "columnDefs": [
                    {
                        "targets": [0, 1, 17, 18],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        "targets": [3],
                        "fnCreatedCell": function (cell) {
                            cell.setAttribute('aria-label', "Row Actions");
                        }
                    }
                ],
                "initComplete": function (settings, json) {
                    //Accessibility: Applies various Accessibility features to this dataTable.
                    makeDataTableAccessible($m('#PartnersGridSchedD').DataTable());
                },
                "fnRowCallback": function (nRow, aaData, iDisplayIndex) {
                    var uniqueID = generateUniqueRowIdForFnRowCallback(iDisplayIndex, nRow);
                    $m('td:eq(1)', nRow).html('<a class="editor_edit_PartnerSchedD" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_PartnerSchedD" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a>');
                },
                "fnDrawCallback": function (oSettings) {
                    var oSettings = this.fnSettings();
                    var iTotalRecords = oSettings.fnRecordsTotal();
                    sessionStorage.setItem("PartnershipRecCount", iTotalRecords);
                },
                "fnServerData": function (url, data, callback) {
                    GetSchedAPartnersData(callback, false, false);
                },
                "order": [[0, "desc"]]
            });
            $m('#PartnersGridSchedD').DataTable().ajax.reload();
            if (@Session["COMM_TYPE_ID"] == "23") {
                tablePartners.column(20).visible(true);
                tablePartners.column(21).visible(true);
                tablePartners.column(22).visible(true);
                tablePartners.column(23).visible(true);                
            }
            else {
                tablePartners.column(20).visible(false);
                tablePartners.column(21).visible(false);
                tablePartners.column(22).visible(false);
                tablePartners.column(23).visible(false);                
            }
            tablePartners.search('').columns().search('').draw();
            tablePartners.responsive.recalc();

            // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
            GetPartnershipTotAmtAndUpdateLblPartnershipAmt(false);
            
            $('html, body').animate({ scrollTop: $("#divShowPartnerAdddataInKind").offset().top }, 500);
        });

        // Update Partnership Data...
        $m('#PartnersGridSchedD tbody').on('click', 'a.editor_edit_PartnerSchedD', function (e) {
            e.preventDefault();
            //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            var dataPartners = tablePartners.row($(this).parents('tr')).data();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                 txtFilerId: $("#txtFilerID").val(),
                 lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                 strElectionTypeId: $m("#lstElectionType option:selected").val(),
                 lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                 lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                 lstFilingDate: $m("#lstFilingDate option:selected").text(),
                 txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
             }, function (resultEditFlag) {
                 if (resultEditFlag == "TRUE") {
                     sessionStorage.setItem("FilingTransIdPart", dataPartners[17].toString());
                     sessionStorage.setItem("FilingEntityIdPart", dataPartners[1].toString());
                     sessionStorage.setItem("PartnershipAttrAmount", dataPartners[12].toString());

                     dialogPartner.dialog("open");

                     ClearDialogBoxValidationSchedDPart();

                     sessionStorage.setItem("UpdateFlagSchedDPart", "Yes");

                     $("#txtPartAmtSchedD").addClass("watermarkHTMLTextBox");

                     var attAmt = dataPartners[14].toString();
                     sessionStorage.setItem("PartnershipAttrAmount", attAmt.toString());

                     if (dataPartners[16].toString() == "No") {
                         $("#lblExplanationPart").text("Explanation");
                     }
                     else {
                         $("#lblExplanationPart").text("Explanation");
                         $("#tdPartnershipNamePartner").show();
                     }

                     $("#lstItemizedPart option")
                         .filter(function () { return $.trim($(this).text()) == dataPartners[16].toString(); })
                         .attr("selected", "selected");

                     if (dataPartners[5].toString() == "") {
                         $("#lstIndividualPart")[0].selectedIndex = 0;
                     }
                     else {
                         $("#lstIndividualPart")[0].selectedIndex = 1;
                     }

                     if (dataPartners[9].toString() == "United States") {
                         $("#chkCountryPartnership").prop('checked', false);
                         $("#txtCountryPartnership").prop("disabled", true);
                         $("#txtPartState").prop('maxLength', '2');
                     }
                     else { // Other Country
                         $("#chkCountryPartnership").prop('checked', true);
                         $("#txtCountryPartnership").prop("disabled", false);

                         $("#txtPartState").prop('maxLength', '30');
                         $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                         $m('#txtPartZip5').attr("placeholder", "");
                     }

                     if (dataPartners[16].toString() == "Yes") {

                         $("#lstItemizedPart")[0].selectedIndex = 0;

                         if (dataPartners[5].toString() != "") { // Individual No
                             $("#lstItemizedPart").prop("disabled", true);
                             $("#lstIndividualPart").prop("disabled", true);

                             $("#tdPartnerName").show();

                             $m("label[for=txtPartFirstName]").text('');
                             $m("#txtPartFirstName").removeClass("error");

                             $m("label[for=txtPartLastName]").text('');
                             $m("#txtPartLastName").removeClass("error");

                             $m("label[for=txtPartnerName]").text('');
                             $m("#txtPartnerName").removeClass("error");

                             $m("label[for=txtPartAmtSchedD]").text('');
                             $m("#txtPartAmtSchedD").removeClass("error");

                             $("#tdPartFirstName").hide("slow");
                             $("#tdPartMI").hide("slow");
                             $("#tdPartLastName").hide("slow");

                             $("#dvPartIndividual").show("slow");
                             $("#tdPartnershipNamePartner").show("slow");
                             $("#tdPartStreetName").show("slow");
                             $("#tdPartCity").show("slow");
                             $("#tdPartState").show("slow");
                             $("#tdPartZip5").show("slow");
                             $("#tdPartCity").show("slow");
                             $("#tdCountryPartnershipChk").show("slow");
                             $("#tdCountryPartnershipTxt").show("slow");

                             $("#txtPartFirstName").val("");
                             $("#txtPartMI").val("");
                             $("#txtPartLastName").val("");

                             $("#txtPartshiptName").val(dataPartners[4].toString());
                             $("#txtPartnerName").val(dataPartners[5].toString());
                             $("#txtCountryPartnership").val(dataPartners[9].toString());
                             $("#txtPartStreetName").val(dataPartners[10].toString());
                             $("#txtPartCity").val(dataPartners[11].toString());
                             $("#txtPartState").val(dataPartners[12].toString());
                             $("#txtPartZip5").val(dataPartners[13].toString());
                             var varAmt = dataPartners[14].toString();
                             $("#txtPartAmtSchedD").val(varAmt);
                             if (dataPartners[14].toString() != "") {
                                 $("#txtPartAmtSchedD").removeClass("watermarkHTMLTextBox");
                             }

                             if (dataPartners[13].toString() != "") {
                                 $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                             }
                             else {
                                 $("#txtPartZip5").addClass("watermarkHTMLTextBox");
                                 if (dataPartners[9].toString() == "United States") {
                                     $("#txtPartZip5").blur();
                                 }
                             }

                             $("#txtPartExplanationInKind").val(dataPartners[15].toString());

                             // Fill the Auto fill data.
                             if (sessionStorage.getItem("ValDateReceived") != null)
                                 $("#txtCurrentDatePartAttr").val(sessionStorage.getItem("ValDateReceived").toString());

                             $("#txtPartnerName").focus();
                         }
                         else { // Individual Yes
                             $("#lstItemizedPart").prop("disabled", true);
                             $("#lstIndividualPart").prop("disabled", true);

                             $("#tdPartnerName").hide();

                             $("#tdPartFirstName").show("slow");
                             $("#tdPartMI").show("slow");
                             $("#tdPartLastName").show("slow");

                             $m("label[for=txtPartFirstName]").text('');
                             $m("#txtPartFirstName").removeClass("error");

                             $m("label[for=txtPartLastName]").text('');
                             $m("#txtPartLastName").removeClass("error");

                             $m("label[for=txtPartnerName]").text('');
                             $m("#txtPartnerName").removeClass("error");

                             $m("label[for=txtPartAmtSchedD]").text('');
                             $m("#txtPartAmtSchedD").removeClass("error");

                             $("#dvPartIndividual").show("slow");
                             $("#tdPartnershipNamePartner").show("slow");
                             $("#tdPartStreetName").show("slow");
                             $("#tdPartCity").show("slow");
                             $("#tdPartState").show("slow");
                             $("#tdPartZip5").show("slow");
                             $("#tdPartCity").show("slow");
                             $("#tdCountryPartnershipChk").show("slow");
                             $("#tdCountryPartnershipTxt").show("slow");

                             $("#txtPartnerName").val("");

                             $("#txtPartshiptName").val(dataPartners[4].toString());
                             $("#txtPartFirstName").val(dataPartners[6].toString());
                             $("#txtPartMI").val(dataPartners[7].toString());
                             $("#txtPartLastName").val(dataPartners[8].toString());
                             $("#txtCountryPartnership").val(dataPartners[9].toString());
                             $("#txtPartStreetName").val(dataPartners[10].toString());
                             $("#txtPartCity").val(dataPartners[11].toString());
                             $("#txtPartState").val(dataPartners[12].toString());
                             $("#txtPartZip5").val(dataPartners[13].toString());
                             var varAmt = dataPartners[14].toString();
                             $("#txtPartAmtSchedD").val(varAmt);
                             if ($("#txtPartAmtSchedD").val().toString() != "" || $("#txtPartAmtSchedD").val().toString() != "999999999.99") {
                                 $("#txtPartAmtSchedD").removeClass("watermarkHTMLTextBox");
                             }

                             if (dataPartners[13].toString() != "") {
                                 $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                             }
                             else {
                                 $("#txtPartZip5").addClass("watermarkHTMLTextBox");
                                 if (dataPartners[9].toString() == "United States") {
                                     $("#txtPartZip5").blur();
                                 }
                             }

                             $("#txtPartExplanationInKind").val(dataPartners[15].toString());

                             // Fill the Auto fill data.
                             if (sessionStorage.getItem("ValDateReceived") != null)
                                 $("#txtCurrentDatePartAttr").val(sessionStorage.getItem("ValDateReceived").toString());

                             $("#txtPartFirstName").focus();
                         }

                         if (@Session["COMM_TYPE_ID"] == "23") {
                             if ($("#lstIndividualPart option:selected").val() == "N") {
                                 $("#tdPartRContributions").hide();
                                 $("#tdPartEmployer").hide();
                                 $("#tdPartOccupation").hide();
                                 $("#divPartContStreetAddress").hide();
                                 $("#divPartContCity").hide();
                                 $("#divPartContState").hide();
                                 $("#divPartContZip5").hide();
                             }
                             else {
                                 $("#tdPartRContributions").show();
                                 $m("#lstPartRContributions option").each(function () {
                                     if ($(this).text() == dataPartners[20].toString()) {
                                         $(this).prop('selected', true).trigger('change');

                                         if ($(this).text() == "Yes") {
                                             $("#tdPartEmployer").show();
                                             $("#tdPartOccupation").show();
                                             $("#divPartContStreetAddress").show();
                                             $("#divPartContCity").show();
                                             $("#divPartContState").show();
                                             $("#divPartContZip5").show();
                                             $("#txtPartEmployer").val(dataPartners[21].toString());
                                             $("#txtPartOccupation").val(dataPartners[22].toString());
                                             $("#txtPartContStreetName").val(dataPartners[24].toString());
                                             $("#txtPartContCity").val(dataPartners[25].toString());
                                             $("#txtPartContState").val(dataPartners[26].toString());
                                             $("#txtPartContZipCode").val(dataPartners[27].toString());
                                         }
                                         else {
                                             $("#tdPartEmployer").hide();
                                             $("#tdPartOccupation").hide();
                                             $("#divPartContStreetAddress").hide();
                                             $("#divPartContCity").hide();
                                             $("#divPartContState").hide();
                                             $("#divPartContZip5").hide();
                                         }
                                     }
                                 });
                             }
                         }
                         else {
                             $("#tdPartRContributions").hide();
                             $("#tdPartEmployer").hide();
                             $("#tdPartOccupation").hide();
                             $("#divPartContStreetAddress").hide();
                             $("#divPartContCity").hide();
                             $("#divPartContState").hide();
                             $("#divPartContZip5").hide();
                         }
                     }
                     else { // Unitemized
                         $("#lstItemizedPart").prop("disabled", true);
                         $("#lstItemizedPart")[0].selectedIndex = 1;

                         $("#tdPartnerName").hide();

                         $("#tdPartFirstName").hide("slow");
                         $("#tdPartMI").hide("slow");
                         $("#tdPartLastName").hide("slow");

                         $("#dvPartIndividual").hide("slow");
                         $("#tdPartStreetName").hide("slow");
                         $("#tdPartCity").hide("slow");
                         $("#tdPartState").hide("slow");
                         $("#tdPartZip5").hide("slow");
                         $("#tdPartCity").hide("slow");
                         $("#tdCountryPartnershipChk").hide("slow");
                         $("#tdCountryPartnershipTxt").hide("slow");

                         $m("label[for=txtPartFirstName]").text('');
                         $m("#txtPartFirstName").removeClass("error");

                         $m("label[for=txtPartLastName]").text('');
                         $m("#txtPartLastName").removeClass("error");

                         $m("label[for=txtPartnerName]").text('');
                         $m("#txtPartnerName").removeClass("error");

                         $m("label[for=txtPartAmtSchedD]").text('');
                         $m("#txtPartAmtSchedD").removeClass("error");

                         $("#txtPartshiptName").val(dataPartners[4].toString());
                         var varAmt = dataPartners[14].toString();
                         $("#txtPartAmtSchedD").val(varAmt);
                         if ($("#txtPartAmtSchedD").val().toString() != "" || $("#txtPartAmtSchedD").val().toString() != "999999999.99") {
                             $("#txtPartAmtSchedD").removeClass("watermarkHTMLTextBox");
                         }
                         $("#txtPartExplanationInKind").val(dataPartners[15].toString());

                         $("#tdPartRContributions").hide();
                         $("#tdPartEmployer").hide();
                         $("#tdPartOccupation").hide();
                         $("#divPartContStreetAddress").hide();
                         $("#divPartContCity").hide();
                         $("#divPartContState").hide();
                         $("#divPartContZip5").hide();

                         // Fill the Auto fill data.
                         if (sessionStorage.getItem("ValDateReceived") != null)
                             $("#txtCurrentDatePartAttr").val(sessionStorage.getItem("ValDateReceived").toString());

                         $("#txtPartAmtSchedD").focus();
                     }
                 }
                 else {
                     ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before editing this Transaction.', 'Ok', '');
                 }
            }).always(function () {
                $("#divLoading").hide();
            });
        });

    // Delete Partnership Data.
        $m('#PartnersGridSchedD tbody').on('click', 'a.editor_remove_PartnerSchedD', function (e) {
            e.preventDefault();
            //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            var dataTrans = tablePartners.row($(this).parents('tr')).data();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                txtFilerId: $("#txtFilerID").val(),
                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }, function (resultEditFlag) {
                if (resultEditFlag == "TRUE") {
                    var resultsPartDel = "Are you sure you want to delete this transaction?";
                    $m('#modal_dialog').text(resultsPartDel);
                    $m("#modal_dialog").dialog({
                        resizable: false,
                        width: '400px',
                        height: 'auto',
                        bgiframe: false,
                        closeOnEscape: false,
                        open: function (event, ui) { hideDialogXButton(this); },
                        buttons: {
                            "OK": function () {
                                // Close Confirm Box.
                                $m(this).dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                $("#divLoading").show();
                                var options = {};
                                options.url = "@Url.Content("~/ContributionInKind/DeleteSchedDPartnersData/")";
                                options.type = "GET";
                                options.data = {
                                    strTransNumber: dataTrans[17].toString()
                                };
                                options.dataType = "json";
                                options.contentType = "application/json";
                                options.success = function (resultsDel) {
                                    if (resultsDel) {
                                        window.status = "Record deleted successfully";
                                        var doneFunction = function () {
                                            // HIDE THE PROCESSING....
                                            $("#divLoading").hide();
                                            ShowDialogBox('EFS', "Record deleted successfully", 'Ok', '');
                                        }
                                        GetSchedAPartnersData(tablePartners, true, doneFunction);
                                    }
                                };
                                options.error = function () {
                                    $("#divLoading").hide();
                                    ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                                };
                                $.ajax(options);
                            },
                            "Cancel": function () {
                                $m(this).dialog("close");
                            }
                        }
                    });
                }
                else {
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before deleting this Transaction.', 'Ok', '');
                }
            }).always(function () {
                $("#divLoading").hide();
            });
        });


        //Contribution Name Selected index changed
        $("#lstContributionNameInKind").change(function () {

            var selectedlstContributionName = $("#lstContributionNameInKind option:selected").val().toString();
            if (selectedlstContributionName == "5" || selectedlstContributionName == "6" || selectedlstContributionName == "7" || selectedlstContributionName == "9" || selectedlstContributionName == "10" || selectedlstContributionName == "12" || selectedlstContributionName == "11" || selectedlstContributionName == "13" || selectedlstContributionName == "14") { // Partnership, including LLPs
                //Show All TD
                $("#tdPartnershipNameInKind").show("slow");
                $("#tdFirstNameInKind").hide("slow");
                $("#tdMIInKind").hide("slow");
                $("#tdLastNameInKind").hide("slow");
                $("#tdStreetNameInKind").show("slow");
                $("#tdCityInKind").show("slow");
                $("#tdStateInKind").show("slow");
                $("#tdZip5InKind").show("slow");
                $("#tdContributionTypeInKind").show("slow");
                $("#tdMethodInKind").hide("slow");

                $("#tAmtInKind").show("slow");
                $("#tdExplanationInKind").show("slow");

                $("#tdCountryContributionChk").show("slow");
                $("#tdCountryContributionTxt").show("slow");

                $("#txtFirstName").val("");
                $("#txtMI").val("");
                $("#txtLastName").val("");

                $m("label[for=txtFirstName]").text('');
                $m("#txtFirstName").removeClass("error");

                $m("label[for=txtLastName]").text('');
                $m("#txtLastName").removeClass("error");

                $m("label[for=txtAmtSchedD]").text('');
                $m("#txtAmtSchedD").removeClass("error");

                $(".jqSelectorLblPartnershipName").text("* Contributor Name");

                if (@Session["COMM_TYPE_ID"] == "23") {
                    $("#tdRContributions").hide();
                    $("#lstRContributions")[0].selectedIndex = 1;
                    $("#tdEmployer").hide();
                    $("#tdOccupation").hide();
                    $("#divContStreetAddress").hide();
                    $("#divContCity").hide();
                    $("#divContState").hide();
                    $("#divContZip5").hide();
                }
            }
            else { // Other than Partnership, including LLPs
                // FOR SOLE PROPRIETORSHIP WE HAVE TO SHOW THE ENTITY NAME, FIRST NAME, LAST NAME AND MIDDLE NAME.
                // AS PER DISCUSSION WITH USERS ON 06/20/2019 WE DID THESE CHANGES.
                // FIRST NAME AND LAST NAME REQUIRED
                // ENTITY NAME OPTIONAL.
                if (@Session["COMM_TYPE_ID"] == "23") {
                    $("#tdRContributions").show();
                    $("#lstRContributions")[0].selectedIndex = 1;
                    $("#tdEmployer").hide();
                    $("#tdOccupation").hide();
                    $("#divContStreetAddress").hide();
                    $("#divContCity").hide();
                    $("#divContState").hide();
                    $("#divContZip5").hide();
                }

                if (selectedlstContributionName == "4") { //SOLE PROPRIETORSHIP
                    $("#tdPartnershipNameInKind").show("slow");
                    $("#txtPartnerShipNameSchedDIN").val("");

                    $(".jqSelectorLblPartnershipName").text("Contributor Name");
                }
                else {
                    $("#tdPartnershipNameInKind").hide("slow");
                    $("#txtPartnerShipNameSchedDIN").val("");

                    $(".jqSelectorLblPartnershipName").text("* Contributor Name");
                }

                //Show All TD
                $("#tdFirstNameInKind").show("slow");
                $("#tdMIInKind").show("slow");
                $("#tdLastNameInKind").show("slow");
                $("#tdStreetNameInKind").show("slow");
                $("#tdCityInKind").show("slow");
                $("#tdStateInKind").show("slow");
                $("#tdZip5InKind").show("slow");
                $("#tdContributionTypeInKind").show("slow");
                $("#tdMethodInKind").hide("slow");
                $("#tAmtInKind").show("slow");
                $("#tdExplanationInKind").show("slow");

                $("#tdCountryContributionChk").show("slow");
                $("#tdCountryContributionTxt").show("slow");

                $m("label[for=txtPartnerShipNameSchedDIN]").text('');
                $m("#txtPartnerShipNameSchedDIN").removeClass("error");
            }

            $m("label[for=txtPartnerShipNameSchedDIN]").text('');
            $m("#txtPartnerShipNameSchedDIN").removeClass("error");
        });

        //==============================================================================================================================================
        // COMMON CODE FOR BUTTON CLEAR AND IT WILL GO TO MAIN PAGE CONTRIBUTION MONETARY.
        //Bind Clear Click
        $(".clsCommonClear").bind('click', function () {
            $("#divGridMonetary").show();
            sessionStorage.setDataTable = "true";
            $("#divShowHideHelp").removeClass("clsShowHideHelpSec");
            $("#divShowHideHelp").addClass("clsShowHideHelpSecInMobileTablet");

            sessionStorage.setItem("FilerId", $("#txtFilerID option:selected").val());
            sessionStorage.setItem("CommitteeName", $("#txtCommitteeName option:selected").val());
            sessionStorage.setItem("ElectionCycle", $("#lstElectionCycle option:selected").val());
            sessionStorage.setItem("ElectionType", $("#lstElectionType option:selected").val());
            sessionStorage.setItem("ElectionDate", $("#lstElectionDate option:selected").val());
            sessionStorage.setItem("DisclosureType", $("#lstDisclosureType option:selected").val());
            sessionStorage.setItem("DisclosurePeriod", $("#lstDisclosurePeriod option:selected").val());
            sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesFrom").val());
            if ($("#lstElectionType option:selected").val() == "6") {
                sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
            }
            else {
                sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
            }
            sessionStorage.setItem("TransactionType", $("#lstTransactionType option:selected").val());
            sessionStorage.setItem("lstResigTermType", $("#lstResigTermType option:selected").val());
            sessionStorage.setItem("lstFilingDate", $("#lstFilingDate option:selected").val());

            sessionStorage.setItem("TransactionTypeId", "true");

            var urlContrHome = "@Url.Content("~/ContributionsMonetary/ContributionsMonetary/")";

            window.location.href = urlContrHome;
        });
        // COMMON CODE FOR BUTTON CLEAR AND IT WILL GO TO MAIN PAGE CONTRIBUTION MONETARY.
        //==============================================================================================================================================


        //=================================================================================================================================================
        // Grid Common Code ///////////////////////////////////////////////////
        //=================================================================================================================================================
        // Grid Common Code ///////////////////////////////////////////////////
        //=================================================================================================================================================
        // CALL LOAD DATA FUNCTION
        LoadData();

        // FUNCTION LOAD DATA
        function LoadData() {
            $("#divLoading").show();
            tableFilingTransactions = $m('#gridFilingTransactions').DataTable({
                "bProcessing": true,
                "responsive": true,
                "deferRender": true,
                "retrieve": true,
                "columnDefs": [
                    {
                        "targets": [0, 1, 2, 3, 4, 5, 6, 7, 38, 39, 41, 42, 43, 44],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        "targets": [9],
                        "fnCreatedCell": function (cell) {
                            cell.setAttribute('aria-label', "Row Actions");
                        }
                    }
                ],
                "initComplete": function (settings, json) {
                    //Accessibility: Applies various Accessibility features to this dataTable.
                    makeDataTableAccessible($m('#gridFilingTransactions').DataTable());
                },
                "fnRowCallback": function (nRow, aaData, iDisplayIndex) {
                    var uniqueID = generateUniqueRowIdForFnRowCallback(iDisplayIndex, nRow);
                    if (aaData[1] == "4") {
                        if (aaData[3] == "5") {
                            $m('td:eq(1)', nRow).html('<a class="editor_edit_Sched_D" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_Sched_D" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_AttributionSchedD lnkGird" href="">Partnership</a>');
                        }
                        else if (aaData[3] == "11") {
                            $m('td:eq(1)', nRow).html('<a class="editor_edit_Sched_D" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_Sched_D" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_AttributionSchedD lnkGird" href="">Attribution</a>');
                        }
                        else {
                            $m('td:eq(1)', nRow).html('<a class="editor_edit_Sched_D" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_Sched_D" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a>');
                        }
                    }
                    else if (aaData[1] == "14") {
                        $m('td:eq(1)', nRow).html('');
                    }
                    else if (aaData[1] == "11") { // LIABILITY/LOANS FORGIVEN
                        $m('td:eq(1)', nRow).html('<a class="editor_remove_Sched_D" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row '+ iDisplayIndex +' Data" style="background-repeat: no-repeat; "  /></a>');
                    }
                    else {
                        if (aaData[1] != "15") {
                            $m('td:eq(1)', nRow).html('<a class="editor_edit_Sched_D" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_Sched_D" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                        }
                        else { // SCHEDULE 15 LEGACY DATA NOT EDIT NO ADD ONLY DELETE.
                            $m('td:eq(1)', nRow).html('<a class="editor_remove_Sched_D" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                        }
                    }
                    return nRow;
                },
                "fnDrawCallback": function () {
                    //Don't put functions here unless you need to run them for every row.
                },
                "fnServerData": function (url, data, callback) {
                    var doneFunction = function () {
                        $("#divLoading").hide();
                    };
                    //Refresh the Data on Grid.
                    GetAllTransactionTypesData(false, callback, false, doneFunction);
                }
            });
            tableFilingTransactions.columns.adjust().draw(true);
            $m('#gridFilingTransactions').DataTable().ajax.reload();
            if (@Session["COMM_TYPE_ID"] == "23") {
                tableFilingTransactions.column(46).visible(true);
                tableFilingTransactions.column(47).visible(true);
                tableFilingTransactions.column(48).visible(true);
                tableFilingTransactions.column(49).visible(true);
                tableFilingTransactions.column(50).visible(true);
                tableFilingTransactions.column(51).visible(true);
                tableFilingTransactions.column(52).visible(true);
                tableFilingTransactions.column(53).visible(true);
                tableFilingTransactions.column(54).visible(true);
            }
            else {
                tableFilingTransactions.column(46).visible(false);
                tableFilingTransactions.column(47).visible(false);
                tableFilingTransactions.column(48).visible(false);
                tableFilingTransactions.column(49).visible(false);
                tableFilingTransactions.column(50).visible(false);
                tableFilingTransactions.column(51).visible(false);
                tableFilingTransactions.column(52).visible(false);
                tableFilingTransactions.column(53).visible(false);
                tableFilingTransactions.column(54).visible(false);
            }

            if (@Session["COMM_TYPE_ID"] == "19") {
                tableFilingTransactions.column(55).visible(true);
            }
            else {
                tableFilingTransactions.column(55).visible(false);
            }

            tableFilingTransactions.columns.adjust().draw(false);
            tableFilingTransactions.order([40, 'desc']).draw();
            tableFilingTransactions.columns.adjust().responsive.recalc();
        }

        //Common Code for Set Preferences - Start
        //---------------------------------------------------------------------------------------------------------------------------------------
        //---------------------------------------------------------------------------------------------------------------------------------------
        $('#btnSetPreferences').click(function () {
            $("#divLoading").show();
            var options = {};
            options.url = "@Url.Content("~/_UC_GridCommonControl/UpdateColumnValue/")";
            options.type = "GET";
            options.data = {
                uniqueValue: $m("#ddlViewableColumn").multipleSelect("getSelects").toString()
            };
            options.dataType = "json";
            options.contentType = "application/json";
            options.success = function (results) {
                window.status = "Preferences set successfully";
                //Bind Grid
                GetAllTransactionTypesData(true, tableFilingTransactions, false, false);
                HideColumn($m("#ddlViewableColumn").multipleSelect("getSelects", "text").toString().split(","));
                $("#divLoading").hide();
            };
            options.error = function () {
                ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ?(518) 474-8200 ', 'Ok', '');
            };
            $.ajax(options);
        });

         /**
         * Common code for invoking GetAllTransactionTypesData from controller.
         * reloadAndRecalc { boolean } reloads and recalculates the table. When we reload we will display the "divLoading" image until the ajax reload call is completed. This was created for ALM Defect 707 where users were intertacting with the table while the "Processing..." text was still visible.
         * dataTableInstanceToReload { function } The referecne to the datatable we will reload in the success callback.
         * dataOverides { ajax data params } pass to overwrite data values when making ajax call.
         * doneFunction { function } A function to be called if the ajax call is completed.
         */
        function GetAllTransactionTypesData(reloadAndRecalc, dataTableInstanceToReload, dataOverides, doneFunction) {

            var data;

            if (dataOverides) {
                //Use different values if they were provided.
                data = dataOverides;
            } else {
                //Commonly used values in this particular page.
                data = {
                    txtFilerID: $("#txtFilerID").val(),
                    lstElectionCycle: $("#lstElectionCycle option:selected").val(),
                    lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                    lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                    lstElectionType: $("#lstElectionType option:selected").val(),
                    lstElectionDateId: $("#lstElectionDate option:selected").val(),
                    lstFilingDate: $m("#lstFilingDate option:selected").text(),
                    txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                    lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
                }
            }

            var callback = dataTableInstanceToReload ? dataTableInstanceToReload : tableFilingTransactions;

            var ajaxParams = {
                "reloadAndRecalc": reloadAndRecalc,// Reloads and recalculates the table. When true it display the "divLoading" and tell the table to reload the data.
                "successCallbackFunction": callback, //Function to be called if the request succeeds.
                "data": data, //Data values when making ajax call.
                "doneFunction": doneFunction,//Function to be called if the ajax call is completed.
                "ajaxUrl": "@Url.Content("~/_UC_GridCommonControl/GetAllTransactionTypesData/")",//Url to make ajax call.
            }

            appCommonEFS_MakeAjaxCallForDataTableGrid(callback, ajaxParams, true);
        }

        $.post("@Url.Content("~/_UC_GridCommonControl/GetSortName/")", {
        }, function (results) {
            HideColumn(results.toString().split(","));
        });

        //Common Code for Set Preferences - End
        //---------------------------------------------------------------------------------------------------------------------------------------
        //---------------------------------------------------------------------------------------------------------------------------------------

        /**
         * Appends label text to _validate elementys based on a list of custom errors returned from the server.
         * It won't do anyting to handle "AmmountError" keys but it will return true if it sees one in the list.
         * param {reuslt.Errors} errorList
         * Replaces this type of code basically:
            for (var i = 0; i < results.Errors.length; i++) {
                if (results.Errors[i].Key == "txtPartAmt") {
                    $("#txtPartAmtSchedD_validate").append('<label for="txtPartAmtSchedD" class="error">' + results.Errors[i].Value + '</label>');
                }
                if (results.Errors[i].Key == "txtPartExplanationInKind") {
                    $("#txtPartExplanationInKind_validate").append('<label for="txtPartExplanationInKind" class="error">' + results.Errors[i].Value + '</label>');
                }
                if (results.Errors[i].Key == "AmountError") {
                    ShowDialogBox('EFS', 'Partnership Amount cannot be more than Outstanding Amount $' + parseFloat(expPartAmount).toFixed(2).toString(), 'Ok', '');
                }
            }
         */
        function AppendCustomErrorLabels(errorList) {
            //Define special error conditions
            var errorLabelDiscrepancies = new Map([["txtPartnerShipName", "txtPartnerShipNameSchedDIN"], ["txtAmt", "txtAmtSchedD"], ["txtPartAmt", "txtPartAmtSchedD"], ["txtPartnerShipName","txtPartnerShipNameSchedDIN"]]);
            return appCommonEFS_AppendCustomErrorLabelsForAmmountError(errorList, errorLabelDiscrepancies);
        }

        /**
         * Use to adjust visible columns.
         * param {array} results an array of column names to help determine which columns to show or hide.
         */
        function HideColumn(results) {
            var rules = {
                "indexesToStartHidden": [0, 1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43],
                "indexesToAlwaysKeepUnhidden": [8, 9], //Will always unhide.
                "columnNamesToUnhide": results,//String to match.
                "columnNamesIndexMappings": appCommonEFS_GetGridColumnSettings("UC_GridCommonControl") //String in header, index to unhide
            }
            appCommonEFS_HideTableColumn(tableFilingTransactions, rules);
        }

        function ClearDialogBoxValidationSchedD() {

            // Clear Form Validation. Schedule 'D'
            var validator = $m("#DialogBoxSchedDForm").validate();
            validator.resetForm();  // clear out the validation errors
            $m("#DialogBoxSchedDForm")[0].reset();   // clear out the form data

            // Set the default values for form.
            $("#txtCountry").val("United States");
            $("#txtCountry").prop("disabled", true);
            $("#chkCountry").prop('checked', false);
            $("#txtState").prop('maxLength', '2');
            $m("#txtCountry").valid();

            // Set the default values for form.
            $("#lblExplanation").text("* Explanation");

            // Set the default values for form.
            $("#lstItemized").prop("disabled", false);
            $("#lstContributionNameInKind").prop("disabled", false);

            // Set the default values for form.
            $("#lstItemized")[0].selectedIndex = 0;
            $("#lstContributionNameInKind")[0].selectedIndex = 0;
            $("#lstContributionTypeInKind")[0].selectedIndex = 0;
            $("#lstMethod")[0].selectedIndex = 0;

            // Set the default values for form.
            $("#txtCurrentDate").blur();
            $("#txtZipCode").blur();
            $("#txtAmtSchedD").blur();

            // Hide/Show
            $("#tdPartnershipNameInKind").hide();
            $("#tdContributionNameInKind").show();
            $("#tdFirstNameInKind").show();
            $("#tdMIInKind").show();
            $("#tdLastNameInKind").show();
            $("#divStreetAddress").show();
            $("#divCity").show();
            $("#divState").show();
            $("#divZip5").show();
            $("#tdContributionTypeInKind").show();
            $("#tdMethodInKind").hide();
            $("#tdCountryContributionChk").show("slow");
            $("#tdCountryContributionTxt").show("slow");

            $("#tdCheckInKind").hide();
            // On focus
            $("#lstItemized").select();
        }

        function ClearDialogBoxValidationSchedDPart() {
            // Clear form Validation Schedule 'D' Partnership
            var validator = $m("#DialogBoxSchedDPartnersForm").validate();
            validator.resetForm();  // clear out the validation errors
            $m("#DialogBoxSchedDPartnersForm")[0].reset();   // clear out the form data
            // Set the default values for form.
            $("#txtCountryPartnership").val("United States");
            $("#txtCountryPartnership").prop("disabled", true);
            $("#chkCountryPartnership").prop('checked', false);
            $("#txtPartState").prop('maxLength', '2');
            $m("#txtCountryPartnership").valid();
            // Set the default values for form.
            $("#lblExplanation").text("* Explanation");
            // Set the default values for form.
            $("#lstItemizedPart").prop("disabled", false);
            $("#lstIndividualPart").prop("disabled", false);
            // Set the default values for form.
            $("#lstItemizedPart")[0].selectedIndex = 0;
            $("#lstIndividualPart")[0].selectedIndex = 0;
            $("#lstMethod")[0].selectedIndex = 0;
            // Set the default values for form.
            $("#txtCurrentDate").blur();
            $("#txtPartZip5").blur();
            $("#txtPartAmtSchedD").blur();

            $("#tdPartnershipNamePartner").show();

            //$("#lstItemizedPart").focus();
        }

        function ClearServerSideErrors() {
            //removing error class and error messages in search form
            $("#txtCurrentDate_validate").empty();
            $("#lstContributionNameInKind_validate").empty();
            $("#txtPartnerShipNameSchedDIN_validate").empty();
            $("#txtFirstName_validate").empty();
            $("#txtMI_validate").empty();
            $("#txtLastName_validate").empty();
            $("#txtCountry_validate").empty();
            $("#txtStreetName_validate").empty();
            $("#txtCity_validate").empty();
            $("#txtState_validate").empty();
            $("#txtZipCode_validate").empty();
            $("#txtCheck_validate").empty();
            $("#txtAmtSchedD_validate").empty();
            $("#txtExplanationInKind_validate").empty();
        }

        function ClearServerSideErrorsPartnership() {
            //removing error class and error messages in search form
            $("#txtPartnerName_validate").empty();
            $("#txtPartFirstName_validate").empty();
            $("#txtPartMI_validate").empty();
            $("#txtPartLastName_validate").empty();
            $("#txtCountryPartnership_validate").empty();
            $("#txtPartStreetName_validate").empty();
            $("#txtPartCity_validate").empty();
            $("#txtPartState_validate").empty();
            $("#txtPartZip5_validate").empty();
            $("#txtPartAmtSchedD_validate").empty();
            $("#txtPartExplanationInKind_validate").empty();
        }

    }); // Document END>>>> END>>>>>>

</script>