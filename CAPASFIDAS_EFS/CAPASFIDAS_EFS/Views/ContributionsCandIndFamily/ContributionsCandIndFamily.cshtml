@{
    ViewBag.Title = ": Contributions - Candidate Individual &  Family";
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
}

<form id="ContributionsCandIndFamilyForm">

    @Html.Partial("UserControls/_UC_Alert_Message")
    @Html.Partial("UserControls/_UC_Delete_Message")

    <div id="divMainNew" class="mainDiv">
        <div class="mainLowerDivCSSDesktop">
            <div id="divhide" class="hideShowButtonCSS">
                <span role="heading" aria-level="1">Filter</span>
                <button id="btnCommonShowHide1" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonShowHide">
                    <img src="~/Content/Images/up20.png" alt="Up/Hide Filter Arrow" />
                </button>
            </div>
            <div id="divshow" class="hideShowButtonCSS">
                <span role="heading" aria-level="1">Filter</span>
                <button id="btnCommonHideShow1" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonHideShow">
                    <img src="~/Content/Images/down20.png" alt="Down/Show Filter Arrow" />
                </button>
            </div>
        </div>
        <div class="mainLowerDivCSS">
            <div id="divhideForMobile" class="hideShowButtonCSS">
                File a New Disclosure Report Filter
                <button id="btnCommonShowHide2" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonShowHide">
                    <img src="~/Content/Images/up20.png" alt="Up/Hide Filter Arrow" />
                </button>
            </div>
            <div id="divshowForMobile" class="hideShowButtonCSS">
                File a New Disclosure Report Filter
                <button id="btnCommonHideShow2" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonHideShow">
                    <img src="~/Content/Images/down20.png" alt="Down/Show Filter Arrow" />
                </button>
            </div>
        </div>
        <div id="divTopSection">
            <div id="selectorItsRpt">
                <div class="divWidth">
                    <fieldset>
                        <legend class="visibleToScreenReaderOnly">Filter Controls Top</legend>
                        <div class="floatRightNew clsShowButtonClass">
                            <input type="button" id="btnCommonSearch1" class="btn btn-default clsCommonSearch clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Apply" title="Apply" style="font-size:12px;" />&nbsp;
                            <input type="button" id="btnCommonClear1" class="btn btn-default clsCommonClear ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />&nbsp;
                            <button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelp();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" class="ButtonImageCSS" title="Help" id="imgHelp1" /></button>
                        </div>
                    </fieldset>
                    <div class="requiredTextFilter">* marks required fields</div>
                    <div id="divFilerID">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilerID">* Filer ID</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("txtFilerID", ViewData["txtFilerID"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblFilerID", required = "required" })
                        </div>
                    </div>
                    <div id="divFilerType">
                        <div class="verticalCSSDestop lblCSS"><span id="lblFilerType">* Filer Type</span></div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.TextBox("txtFilerType", null, new { id = "txtFilerType", @class = "txtWidth txtReportPeriodDatesFrom", aria_labelledby = "lblFilerType", required = "required" })
                        </div>
                    </div>
                    <div id="divCommitteeName">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblCommitteeName">* Candidate/Committee Name</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("txtCommitteeName", ViewData["txtCommitteeName"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblCommitteeName", required = "required" })
                        </div>
                    </div>
                    <div id="divElectionCycle">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblElectionCycle">* Report Year</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstElectionCycle", ViewData["lstElectionCycle"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblElectionCycle", required = "required" })
                        </div>
                    </div>
                    <div id="divOfficeType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblOfficeType">* Election Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstUCOfficeType", null, "- Select -", new { id = "lstUCOfficeType", @class = "spanMobileWidth", aria_labelledby = "lblOfficeType", required = "required" })
                        </div>
                    </div>
                    <div id="divCounty">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblCounty">* County"</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstUCCounty", null, "- Select -", new { @class = "spanMobileWidth", aria_labelledby = "lblCounty", required = "required" })
                        </div>
                    </div>
                    <div id="divMunicipality">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblMunicipality">* Municipality</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstUCMuncipality", null, "- Select -", new { @class = "spanMobileWidth", aria_labelledby = "lblMunicipality", required = "required" })
                        </div>
                    </div>
                    <div id="divElectionType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblElectionType">* Report Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstElectionType", ViewData["lstElectionType"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblElectionType", required = "required" })
                        </div>
                    </div>
                    <div id="divElectionDate">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblElectionDate">* Election Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstElectionDate", ViewData["lstElectionDate"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblElectionDate", required = "required" })
                        </div>
                    </div>
                    <div id="divDisclosureType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblDisclosureType">* Disclosure Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstDisclosureType", ViewData["lstDisclosureType"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblDisclosureType", required = "required" })
                        </div>
                    </div>
                    <div id="divDisclosurePeriod">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblDisclosurePeriod">* Disclosure Period</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstDisclosurePeriod", null, new { @class = "spanMobileWidth", aria_labelledby = "lblDisclosurePeriod", required = "required" })
                        </div>
                    </div>
                    <div id="divReportPeriodDates">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblReportPeriodDatesFrom">* Cut off Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.TextBox("searchTerm", null, new { id = "txtReportPeriodDatesFrom", @class = "txtWidth", aria_labelledby = "lblReportPeriodDatesFrom", required = "required" })
                        </div>
                    </div>
                    <div id="divFilingDateDropDown">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilingDate">* Filing Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstFilingDate", ViewData["lstFilingDate"] as SelectList, "- Select -", new { @class = "spanMobileWidth lstFilingDate", aria_labelledby = "lblFilingDate", required = "required" })
                        </div>
                    </div>
                    <div id="divReportPeriodDatesTo">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblReportPeriodDatesTo">* Filing Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.TextBox("searchTerm", null, new { id = "txtReportPeriodDatesTo", @class = "txtWidth", aria_labelledby = "lblReportPeriodDatesTo", required = "required" })
                        </div>
                    </div>

                    @* OFFICE CYCLE FILING DATE *@
                    <div id="divFilingDateOffCycle">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilingDateOffCycle">* New Filing Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            <input type="text" id="txtNewFilingDate" name="txtNewFilingDate" class="txtWidth txtCurrentDateCls" maxlength="10" aria-labelledby="lblFilingDateOffCycle" required="required" />
                        </div>
                    </div>

                    @* OFFICE CYCLE FILING DATE *@
                    <div id="divFilingReason">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblReasonforFiling">Resignation/Termination, </span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstResigTermType", ViewData["lstResigTermType"] as SelectList, "- Not Applicable -", new { @class = "spanMobileWidth lstResigTermType", aria_labelledby = "lblReasonforFiling" })
                        </div>
                    </div>

                    <div class="floatRightNew" style="padding-bottom: 2em;">
                        <fieldset>
                            <legend class="visibleToScreenReaderOnly">Filter Controls Bottom</legend>
                            <input type="button" id="btnCommonSearch2" class="btn btn-default clsCommonSearch ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Apply" title="Search" style="font-size:12px;" />&nbsp;
                            <input type="button" id="btnCommonClear2" class="btn btn-default clsCommonClear ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />&nbsp;
                            <button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelp();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" class="ButtonImageCSS" title="Help" id="imgHelp2" /></button>
                        </fieldset>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="divBreadCrumb" class="breadCrumbDivCSS" style="width: 46em;">
        <nav aria-label="Breadcrumbs">
            <ol class="breadcrumb">
                <li>@Html.ActionLink("File a Disclosure Report", "ContributionsMonetary", "ContributionsMonetary", null, new { @class = "lnkLogout" })</li>
                <li id="breadCrumbSchedA" class="active">Contributions - Candidate, Individual & Family</li>
                <li id="breadCrumbSchedB" class="active">Contributions – Corporation</li>
                <li id="breadCrumbSchedC" class="active">Contributions – All Other</li>
            </ol>
        </nav>
        <div id="divHeader1" class="paddingtoppt5 clsHeaderWidth">
            <h1>
                <span id="lblHeader">File a Disclosure Report</span> -
                <span id="lblHEleYear">File a Disclosure Report</span> -
                <span id="lblHDisclPer">File a Disclosure Report</span>
            </h1>
        </div>
        <div id="divHeader2" class="paddingtoppt5 PageHeaderWidth">
            <div class="paddingTop0em2em DisplayInlineBlock">
                <h2><span id="lblHeaderID">Contributions - Candidate, Individual & Family</span></h2>
            </div>
            <button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelpSchedABC();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" class="ButtonImageCSS" title="Help" id="imgHelpSchedABC" /></button>
        </div>
    </div>

    <div id="divGridLoading" class="divGridCSSTransferin">
        @Html.Partial("UserControls/_UC_Loding")
        @Html.Partial("UserControls/_UC_GridCommonControl")
    </div>

    <div id="divShowPartnerAdddataNCR" class="divGridCSS">
        <div class="paddingLeft2em paddingBottom2em paddingtop2em">
            <table role="presentation">
                <tr>
                    <td><h2>Partner(s)</h2></td>
                    <td style="padding-left: 0.8em;">
                        <input type="button" id="btnAddNewAttribution" class="btn btn-default ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Add Partner" title="Add Partner" style="font-size:12px;" />
                    </td>
                </tr>
            </table>
        </div>
        <div style="float: right; margin-right: 4em;">
            <span id="lblPartnershipAmt" class="clsOutstandingAmt">"Outstanding Amount: "</span>
        </div>
        <div id="divPartnerNCR1">
            <table id="PartnersGridShechA" class="table-bordered display nowrap" style="width:100%; border-spacing: 0px;">
                <thead id="thdGrid1" class="header">
                    <tr>
                        <th class="never">Filing Trans Id</th> @* 0 *@
                        <th class="never">Filing Entity Id</th> @* 1 *@
                        <th>Expand</th> @* 2 *@
                        <th>Action</th> @* 3 *@
                        <th>Partnership Name</th> @* 4 *@
                        <th>Partner Name</th> @* 5 *@
                        <th>First Name</th> @* 6 *@
                        <th>Middle Name</th> @* 7 *@
                        <th>Last Name</th> @* 8 *@
                        <th>Country</th> @* 9 *@
                        <th>Street Address</th> @* 10 *@
                        <th>City</th> @* 11 *@
                        <th>State</th> @* 12 *@
                        <th>Zip Code</th> @* 13 *@
                        <th>Amount Attributed $</th> @* 14 *@
                        <th>Explanation</th> @* 15 *@
                        <th>Itemized</th> @* 16 *@
                        <th class="never">Trans Number</th> @* 17 *@
                        <th class="never">Trans Mapping</th> @* 18 *@
                        <th class="never">DateReceivedPrimary</th> @* 19 *@
                        <th>Is Contribution greater than or equal to $100 in the aggregate?</th> @* 20 *@
                        <th>Employer</th> @* 21 *@
                        <th>Occupation</th> @* 22 *@
                        <th>Employer Address</th> @* 23 *@
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
    <div id="divShowAttributionSchedC" class="divGridCSS">
        <div class="paddingLeft2em paddingBottom2em paddingtop2em">
            <table role="presentation">
                <tr>
                    <td><h2>Attribution(s)</h2></td>
                    <td style="padding-left: 0.8em;">
                        <input type="button" id="btnAddNewAttributionSchedC" class="btn btn-default ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Add Attribution" title="Add Attribution" style="font-size:12px;" />
                    </td>
                </tr>
            </table>
        </div>
        <div style="float: right; margin-right: 4em;">
            <span id="lblAttributionAmt" class="clsOutstandingAmt">Outstanding Amount: </span>
        </div>
        <div id="divPartnerNCR2">
            <table id="AttributionGridShechC" class="table-bordered display nowrap" style="width:100%; border-spacing: 0px;">
                <thead id="thdGrid2" class="header">
                    <tr>
                        <th class="never">Filing Trans Id</th> @* 0 *@
                        <th class="never">Filing Entity Id</th> @* 1 *@
                        <th>Expand</th> @* 2 *@
                        <th>Action</th> @* 3 *@
                        <th>Contributor Name</th> @* 4 *@
                        <th>Member Name</th> @* 5 *@
                        <th>First Name</th> @* 6 *@
                        <th>Middle Name</th> @* 7 *@
                        <th>Last Name</th> @* 8 *@
                        <th>Country</th> @* 9 *@
                        <th>Street Address</th> @* 10 *@
                        <th>City</th> @* 11 *@
                        <th>State</th> @* 12 *@
                        <th>Zip Code</th> @* 13 *@
                        <th>Amount Attributed $</th> @* 14 *@
                        <th>Explanation</th> @* 15 *@
                        <th>Itemized</th> @* 16 *@
                        <th class="never">Trans Number</th> @* 17 *@
                        <th class="never">Trans Mapping</th> @* 18 *@
                        <th class="never">DateReceivedPrimary</th> @* 19 *@
                        <th>Is Contribution greater than or equal to $100 in the aggregate?</th> @* 20 *@
                        <th>Employer</th> @* 21 *@
                        <th>Occupation</th> @* 22 *@
                        <th>Employer Address</th> @* 23 *@
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>

</form>

<div id="dialog-form_Sched_A" title="Add/Edit Transaction">
    <form id="DialogBoxSchedAForm">
        <div class="divWidthSchedABC">
            <div style="width: 100%;">
                <div class="requiredTextDialogs">Required fields are marked with an *</div>
                <div id="dvUnitemized1">
                    <div class="verticalCSSDestopForLblLSC lblCSSAdd">
                        <span id="lblDatePaid">Is Transaction Itemized?</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxLSC DDLCSSAdd">
                        @Html.DropDownList("lstItemized", ViewData["lstItemized"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblDatePaid", aria_describedby = "descriptionForLstItemized" })
                    </div>
                    <span id="descriptionForLstItemized" class="visibleToScreenReaderOnly">
                        The values selected in the "Is Transaction Itemized?" question automatically change the structure of this dialog form by adding or removing fields.
                    </span>
                </div>
                <div id="tdIsClaim">
                    <div id="lstIsClaim_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblIsClaim">* Is Transaction Being Submitted for Claim?</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstIsClaim", ViewData["lstIsClaim"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblIsClaim", aria_describedby = "alertForLstContributionName", required = "required" })
                    </div>
                </div>
                <div id="tdInDistrict">
                    <div id="lstInDistrict_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblInDistrict">* In District</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstInDistrict", ViewData["lstInDistrict"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblInDistrict", aria_describedby = "alertForLstContributionName", required = "required" })
                    </div>
                </div>
                <div id="tdMinor">
                    <div id="lstMinor_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblMinor">* Minor</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstMinor", ViewData["lstMinor"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblMinor", aria_describedby = "alertForLstContributionName", required = "required" })
                    </div>
                </div>
                <div id="tdVendor">
                    <div id="lstVendor_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblVendor">* Vendor</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstVendor", ViewData["lstVendor"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblVendor", aria_describedby = "alertForLstContributionName", required = "required" })
                    </div>
                </div>
                <div id="tdLobbyist">
                    <div id="lstLobbyist_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblLobbyist">* Lobbyist</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstLobbyist", ViewData["lstLobbyist"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblLobbyist", aria_describedby = "alertForLstContributionName", required = "required" })
                    </div>
                </div>
                <div id="tdDateRcvd">
                    <div id="txtCurrentDate_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblDateReceived_DialogBoxSchedAForm">* Date Received</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        <input type="text" id="txtCurrentDate" name="txtCurrentDate" class="datepicker txtWidthForDateSched_ABC txtCurrentDateCls" maxlength="10" aria-labelledby="lblDateReceived_DialogBoxSchedAForm" required="required" />
                    </div>
                </div>

                <div id="tdContributionName">
                    <div id="lstContributionName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblContributionName">* Contributor Type</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstContributionName", ViewData["lstContributionName"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblContributionName", aria_describedby = "alertForLstContributionName", required = "required" })
                    </div>
                    <div id="alertForLstContributionName" class="alert alert-info divClearBoth" role="alert">
                        <strong>Schedule A (Family Members):</strong> The election limit for family members is an aggregate limit from all of the candidate's family (defined as the candidate's child, parent, grandparent, brother, sister, and spouses of any such persons). (EL 14 - 114(1)(a).)
                        <span id="descriptionForLstContributionName" class="visibleToScreenReaderOnly">

                            The values selected in the "Contributor Type" question automatically change the structure of this dialog form by adding or removing fields.
                        </span>
                    </div>
                </div>

                <div id="tdPartnershipName">
                    <div id="txtPartnerShipName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblPartnershipName">* Partnership Name</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtPartnerShipName", null, new { id = "txtPartnerShipName", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "40", aria_labelledby = "lblPartnershipName", required = "required" })
                    </div>
                </div>

                <div id="tdFirstName">
                    <div id="txtFirstName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblFirstName_DialogBoxSchedAForm">* First Name</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtFirstName", null, new { id = "txtFirstName", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "30", aria_labelledby = "lblFirstName_DialogBoxSchedAForm", required = "required" })
                    </div>
                </div>

                <div id="tdMI">
                    <div id="txtMI_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblMiddleName_DialogBoxSchedAForm">Middle Name</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtMI", null, new { id = "txtMI", @class = "txtWidthForDialogSched_A", @maxlength = "30", aria_labelledby = "lblMiddleName_DialogBoxSchedAForm" })
                    </div>
                </div>

                <div id="tdLastName">
                    <div id="txtLastName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblLastName_DialogBoxSchedAForm">* Last Name</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtLastName", null, new { id = "txtLastName", @class = "txtWidthForDialogSched_A required", @maxlength = "30", aria_labelledby = "lblLastName_DialogBoxSchedAForm", required = "required" })
                    </div>
                </div>

                <div id="tdCountryContributionChk">
                    <div class="verticalCSSDestopForLableSched_ABC lblCSSAdd">
                        <span id="lblOtherCountry">Other Country</span>
                    </div>
                    <div class="verticalCSSDestopForCheckBoxSched_ABC DDLCSSAdd">
                        @Html.CheckBox("chkCountry", false, new { @class = "txtWidthForDialogSched_ABC_CountryChkbox", aria_labelledby = "lblOtherCountry" })
                    </div>
                </div>
                <div id="tdCountryContributionTxt" class="divClearBoth">
                    <div id="txtCountry_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSched_ABC lblCSSAdd">
                        <span id="lblCountry">* Country</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSched_ABC DDLCSSAdd">
                        @Html.TextBox("txtCountry", null, new { id = "txtCountry", @class = "txtWidthForDialogSched_A required", @maxlength = "30", aria_labelledby = "lblCountry", required = "required" })
                    </div>
                </div>

                <div id="divStreetAddress">
                    <div id="txtStreetName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblStreetName">* Street Address</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtStreetName", null, new { id = "txtStreetName", @class = "txtWidthForDialogSched_A required", @maxlength = "60", aria_labelledby = "lblStreetName", required = "required" })
                    </div>
                </div>

                <div id="divCity">
                    <div id="txtCity_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblCity_DialogBoxSchedAForm">* City</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtCity", null, new { id = "txtCity", @class = "txtWidthForDialogSched_A required", @maxlength = "30", aria_labelledby = "lblCity_DialogBoxSchedAForm", required = "required" })
                    </div>
                </div>

                <div id="divState">
                    <div id="txtState_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblState_DialogBoxSchedAForm">* State</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtState", null, new { id = "txtState", @class = "txtWidthForDialogSched_A required", @maxlength = "2", aria_labelledby = "lblState_DialogBoxSchedAForm", required = "required" })
                    </div>
                </div>

                <div id="divZip5">
                    <div id="txtZipCode_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblZip5_DialogBoxSchedAForm">* Zip Code</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtZipCode", null, new { id = "txtZipCode", @class = "txtWidthForDialogSched_A required", @maxlength = "10", aria_labelledby = "lblZip5_DialogBoxSchedAForm", required = "required" })
                    </div>
                </div>

                <div id="tdMethod">
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblMethod">* Method</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstMethod", ViewData["lstMethod"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblMethod", aria_describedby = "descriptionForLstMethod" })
                    </div>
                    <span id="descriptionForLstMethod" class="visibleToScreenReaderOnly">
                        The values selected in the "Method" question automatically change the structure of this dialog form by adding or removing fields.
                    </span>
                </div>
                <div id="tdCheck">
                    <div id="txtCheck_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblCheck">* Check #</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtCheck", null, new { id = "txtCheck", @class = "txtWidthForDialogSched_A required", @maxlength = "30", aria_labelledby = "lblCheck", required = "required" })
                    </div>
                </div>

                <div id="tAmt" class="divClearBoth">
                    <div id="txtAmtABC_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblAmount">* Amount $</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtAmtABC", null, new { id = "txtAmtABC", @class = "txtWidthForDialogSched_A required", @maxlength = "12", aria_required = "true", aria_labelledby = "lblAmount", required = "required" })
                    </div>
                </div>
                <div id="tdRContributions">
                    <div id="lstRContributions_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblRContributions">* Is Contribution greater than or equal to $100 in the aggregate?</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstRContributions", ViewData["lstRContributions"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblRContributions", aria_describedby = "alertForLstContributionName", required = "required" })
                    </div>
                </div>
                <div id="divHidden">
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                    </div>
                </div>
                <div id="tdEmployer">
                    <div id="txtEmployerPCFB_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblEmployer">Employer</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtEmployerPCFB", null, new { id = "txtEmployerPCFB", @class = "txtWidthForDialogSched_A", @maxlength = "200", aria_labelledby = "lblEmployer" })
                    </div>
                </div>
                <div id="tdOccupation">
                    <div id="txtOccupationPCFB_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblOccupation">Occupation</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtOccupationPCFB", null, new { id = "txtOccupationPCFB", @class = "txtWidthForDialogSched_A", @maxlength = "50", aria_labelledby = "lblOccupation" })
                    </div>
                </div>
                <div id="divContStreetAddress">
                    <div id="txtContStreetName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblContStreetName">Employer Street Address</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtContStreetName", null, new { id = "txtContStreetName", @class = "txtWidthForDialogSched_A", @maxlength = "60", aria_labelledby = "lblContStreetName" })
                    </div>
                </div>

                <div id="divContCity">
                    <div id="txtContCity_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblContCity_DialogBoxSchedAForm">Employer City</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtContCity", null, new { id = "txtContCity", @class = "txtWidthForDialogSched_A", @maxlength = "30", aria_labelledby = "lblContCity_DialogBoxSchedAForm" })
                    </div>
                </div>

                <div id="divContState">
                    <div id="txtContState_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblContState_DialogBoxSchedAForm">Employer State</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtContState", null, new { id = "txtContState", @class = "txtWidthForDialogSched_A", @maxlength = "2", aria_labelledby = "lblContState_DialogBoxSchedAForm" })
                    </div>
                </div>

                <div id="divContZip5">
                    <div id="txtContZipCode_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblContZip5_DialogBoxSchedAForm">Employer Zip Code</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtContZipCode", null, new { id = "txtContZipCode", @class = "txtWidthForDialogSched_A", @maxlength = "10", aria_labelledby = "lblContZip5_DialogBoxSchedAForm" })
                    </div>
                </div>
                <div id="tdExplanation">
                    <div id="txtExplanation_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblExplanation">Explanation</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtExplanation", null, new { id = "txtExplanation", @class = "txtWidthForDialogSched_A", @maxlength = "250", aria_labelledby = "lblExplanation" })
                    </div>
                </div>

                <div id="AddUpdateBtnIdSchedA" class="AddLeftCSSSchedABC">
                    <input type="button" id="btnSaveSchedA" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Save" title="Save" style="font-size:12px;" />
                    <input type="button" id="btnClearDialog" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all cancel" name="Command" value="Clear" title="Clear" style="font-size:12px;" />
                    <input type="button" id="btnCloseDialog" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Close" title="Close" style="font-size:12px;" />
                </div>
            </div>
        </div>
    </form>
</div>

<div id="dialog-form_NCRPartner" title="Add/Edit Partner">
    <form id="DialogBoxSchedAPartnershipForm">
        <div id="helpPLLCsLLCsScheduleC" class="ScheduleCPLLCsLLCs">
            <button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelpSchedABC();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" class="ButtonImageCSS" title="Help" id="imgHelpSchedC" /></button>
        </div>
        <div class="divWidth divClearBoth">
            <div class="requiredTextDialogs">Required fields are marked with an *</div>
            <div id="dvUnitemized2">
                <div class="verticalCSSDestopForLblLSC lblCSSAdd">
                    <span id="lblUnitemizedPart">Is Transaction Itemized?</span>
                </div>
                <div class="verticalCSSDestopForTextboxLSC DDLCSSAdd">
                    @Html.DropDownList("lstItemizedPart", ViewData["lstItemizedPart"] as SelectList, new { @class = "txtWidthForDialogSched_APartner", aria_labelledby = "lblUnitemizedPart" })
                </div>
            </div>
            <div id="dvPartIndividual" class="divClearBoth">
                <div class="verticalCSSDestopForLblLSC lblCSSAdd">
                    <span id="lblIndividualPart">Is Partner name an individual?</span>
                </div>
                <div class="verticalCSSDestopForTextboxLSC DDLCSSAdd">
                    @Html.DropDownList("lstIndividualPart", ViewData["lstIndividualPart"] as SelectList, new { @class = "txtWidthForDialogSched_APartner", aria_labelledby = "lblIndividualPart" })
                </div>
            </div>
            <div id="dvDateRcvdPartAttr">
                <div id="txtCurrentDatePartAttr_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                    <span id="lblDateReceived_DialogBoxSchedAPartnershipForm">* Date Received</span>
                </div>
                <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                    <input type="text" id="txtCurrentDatePartAttr" name="txtCurrentDatePartAttr" class="txtWidthForDialogSched_APartner txtCurrentDateCls" maxlength="10" aria-labelledby="lblDateReceived_DialogBoxSchedAPartnershipForm" required="required" />
                </div>
            </div>
            <div id="tdPartnershipNamePartner">
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblPartnershipNamePartAttr">Partnership Name</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("searchTerm", null, new { id = "txtPartshiptName", @class = "txtWidthForDialogSched_APartner", aria_labelledby = "lblPartnershipNamePartAttr" })
                </div>
            </div>
            <div id="tdPartnerName">
                <div id="txtPartnerName_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblPartnerName">* Partner Name</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartnerName", null, new { id = "txtPartnerName", @class = "txtWidthForDialogSched_APartner", @maxlength = "40", aria_labelledby = "lblPartnerName", required = "required" })
                </div>
            </div>

            <div id="tdPartFirstName">
                <div id="txtPartFirstName_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblFirstName_DialogBoxSchedAPartnershipForm">* First Name</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartFirstName", null, new { id = "txtPartFirstName", @class = "txtWidthForDialogSched_APartner", @maxlength = "30", aria_labelledby = "lblFirstName_DialogBoxSchedAPartnershipForm", required = "required" })
                </div>
            </div>

            <div id="tdPartMI">
                <div id="txtPartMI_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblMiddleName_DialogBoxSchedAPartnershipForm">Middle Name</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartMI", null, new { id = "txtPartMI", @class = "txtWidthForDialogSched_APartner", @maxlength = "30", aria_labelledby = "lblMiddleName_DialogBoxSchedAPartnershipForm" })
                </div>
            </div>

            <div id="tdPartLastName">
                <div id="txtPartLastName_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblLastName_DialogBoxSchedAPartnershipForm">* Last Name</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartLastName", null, new { id = "txtPartLastName", @class = "txtWidthForDialogSched_APartner", @maxlength = "30", aria_labelledby = "lblLastName_DialogBoxSchedAPartnershipForm", required = "required" })
                </div>
            </div>

            <div id="tdCountryPartnershipChk">
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblOtherCountryPartnership">Other Country</span>
                </div>
                <div class="verticalCSSDestopForCheckBoxSched_ABC DDLCSSAdd">
                    @Html.CheckBox("chkCountryPartnership", false, new { @class = "txtWidthForDialogSched_ABC_CountryChkbox", aria_labelledby = "lblOtherCountryPartnership" })
                </div>
            </div>
            <div id="tdCountryPartnershipTxt" class="divClearBoth">
                <div id="txtCountryPartnership_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblCountryPartnership">* Country</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtCountryPartnership", null, new { id = "txtCountryPartnership", @class = "txtWidthForDialogSched_APartner", @maxlength = "30", aria_labelledby = "lblCountryPartnership", required = "required" })
                </div>
            </div>

            <div id="tdPartStreetName">
                <div id="txtPartStreetName_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblStreetAddress">* Street Address</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartStreetName", null, new { id = "txtPartStreetName", @class = "txtWidthForDialogSched_APartner required", @maxlength = "60", aria_labelledby = "lblStreetAddress", required = "required" })
                </div>
            </div>

            <div id="tdPartCity">
                <div id="txtPartCity_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblCity_DialogBoxSchedAPartnershipForm">* City</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartCity", null, new { id = "txtPartCity", @class = "txtWidthForDialogSched_APartner required", @maxlength = "30", aria_labelledby = "lblCity_DialogBoxSchedAPartnershipForm", required = "required" })
                </div>
            </div>
            <div id="tdPartState">
                <div id="txtPartState_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblState_DialogBoxSchedAPartnershipForm">* State</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartState", null, new { id = "txtPartState", @class = "txtWidthForDialogSched_APartner required", @maxlength = "2", aria_labelledby = "lblState_DialogBoxSchedAPartnershipForm", required = "required" })
                </div>
            </div>
            <div id="tdPartZip5">
                <div id="txtPartZip5_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblZip5_DialogBoxSchedAPartnershipForm">* Zip Code</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartZip5", null, new { id = "txtPartZip5", @class = "txtWidthForDialogSched_APartner required", @maxlength = "10", aria_labelledby = "lblZip5_DialogBoxSchedAPartnershipForm", required = "required" })
                </div>
            </div>
            <div id="tdPartAmt" class="divClearBoth">
                <div id="txtPartAmtAC_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblAmtAttributed">* Amount Attributed $</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartAmtAC", null, new { id = "txtPartAmtAC", @class = "txtWidthForDialogSched_APartner", @maxlength = "12", aria_labelledby = "lblAmtAttributed", required = "required" })
                </div>
            </div>
            <div id="tdPartRContributions">
                @*<div id="lstPartRContributions_validate" class="verticalCSSDestopForError"></div>*@
                <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                    <span id="lblPartRContributions">* Is Contribution greater than or equal to $100 in the aggregate?</span>
                </div>
                <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                    @Html.DropDownList("lstPartRContributions", ViewData["lstRContributions"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblPartRContributions", aria_describedby = "alertForLstContributionName", required = "required" })
                </div>
            </div>
            @*<div id="divPartHidden">
                <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                </div>
                <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                </div>
            </div>*@
            <div id="tdPartEmployer">
                <div id="txtPartEmployer_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                    <span id="lblPartEmployer">Employer</span>
                </div>
                <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                    @Html.TextBox("txtPartEmployer", null, new { id = "txtPartEmployer", @class = "txtWidthForDialogSched_A", @maxlength = "200", aria_labelledby = "lblPartEmployer" })
                </div>
            </div>
            <div id="tdPartOccupation">
                <div id="txtPartOccupation_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                    <span id="lblOccupation">Occupation</span>
                </div>
                <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                    @Html.TextBox("txtPartOccupation", null, new { id = "txtPartOccupation", @class = "txtWidthForDialogSched_A", @maxlength = "50", aria_labelledby = "lblPartOccupation" })
                </div>
            </div>
            <div id="divPartContStreetAddress">
                <div id="txtPartContStreetName_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                    <span id="lblPartContStreetName">Employer Street Address</span>
                </div>
                <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                    @Html.TextBox("txtPartContStreetName", null, new { id = "txtPartContStreetName", @class = "txtWidthForDialogSched_A", @maxlength = "60", aria_labelledby = "lblPartContStreetName" })
                </div>
            </div>

            <div id="divPartContCity">
                <div id="txtPartContCity_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                    <span id="lblPartContCity_DialogBoxSchedAForm">Employer City</span>
                </div>
                <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                    @Html.TextBox("txtPartContCity", null, new { id = "txtPartContCity", @class = "txtWidthForDialogSched_A", @maxlength = "30", aria_labelledby = "lblPartContCity_DialogBoxSchedAForm" })
                </div>
            </div>

            <div id="divPartContState">
                <div id="txtPartContState_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                    <span id="lblPartContState_DialogBoxSchedAForm">Employer State</span>
                </div>
                <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                    @Html.TextBox("txtPartContState", null, new { id = "txtPartContState", @class = "txtWidthForDialogSched_A", @maxlength = "2", aria_labelledby = "lblPartContState_DialogBoxSchedAForm" })
                </div>
            </div>

            <div id="divPartContZip5">
                <div id="txtPartContZipCode_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                    <span id="lblPartContZip5_DialogBoxSchedAForm">Employer Zip Code</span>
                </div>
                <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                    @Html.TextBox("txtPartContZipCode", null, new { id = "txtPartContZipCode", @class = "txtWidthForDialogSched_A", @maxlength = "10", aria_labelledby = "lblPartContZip5_DialogBoxSchedAForm" })
                </div>
            </div>
            <div id="tdPartExplanation">
                <div id="txtPartExplanationInKind_validate" class="verticalCSSDestopForError"></div>
                <div class="verticalCSSDestopForLablePartnerSchedA lblCSSAdd">
                    <span id="lblExplanationPart">Explanation</span>
                </div>
                <div class="verticalCSSDestopForTextboxPartnerSchedA DDLCSSAdd">
                    @Html.TextBox("txtPartExplanationInKind", null, new { id = "txtPartExplanationInKind", @class = "txtWidthForDialogSched_APartner", @maxlength = "250", aria_labelledby = "lblExplanationPart" })
                </div>
            </div>

            <div id="AddUpdateBtnIdSchedAPart" class="AddLeftCSSPartnerSchedA">
                <br />
                <input type="button" id="btnSaveSchedAPartners" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Save" title="Save" style="font-size:12px;" />
                <input type="button" id="btnClearDialogPartner" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />
                <input type="button" id="btnCloseDialogPartner" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Close" title="Close" style="font-size:12px;" />
            </div>
        </div>
    </form>
</div>

<div id="dialog-form_Import" title="Import Monetary Contributions">
    <form id="DialogBoxSchedAImportDataForm">
        <div class="divWidthSchedABCImport">
            <div style="width: 100%;">
                <div class="paddingTop1em">
                    <p>
                        Acceptable file types: <strong>CSV</strong>
                        <button id="btnDownloadHelpDocument" formnovalidate="formnovalidate" class="btn btn-default clsCommonSearchSDR" name="Command" value="btnDownloadHelpDocumentPDF" title="Download File Format Reference" style="display: none;">
                            Download File Format Reference
                        </button>
                        <button id="btnDownloadPCFHelpDocument" formnovalidate="formnovalidate" class="btn btn-default clsCommonSearchSDR" name="Command" value="btnDownloadPCFHelpDocumentPDF" title="Download File Format Reference" style="display: none;">
                            Download File Format Reference
                        </button>
                        <button id="btnDownloadHelpTemplate" formnovalidate="formnovalidate" class="btn btn-default clsCommonSearchSDR" name="Command" value="btnDownloadSchedAImportTemplate" title="Download File Format Reference" style="display: none;">
                            Download File Format Template
                        </button>
                        <button id="btnDownloadPCFHelpTemplate" formnovalidate="formnovalidate" class="btn btn-default clsCommonSearchSDR" name="Command" value="btnDownloadSchedAImportPCFTemplate" title="Download File Format Reference" style="display: none;">
                            Download File Format Template
                        </button>
                    </p>
                    <p>
                        <strong>Note: The Template document provides the header row (CSV position) information that must be included with the import file in the order specified.  The Reference document includes all the data element requirements for each header row (CSV position).</strong>
                    </p>
                </div>                
                <div class="requiredTextDialogs">Required fields are marked with an *</div>
                <div id="tdTreasurerName" style="float:left;">
                    <div id="txtFileUpload_validate" class="verticalCSSDestopForErrorCampMater"></div>
                    <div class="verticalCSSDestopForLableSchedImport" style="float:left;">
                        <label id="lblFileUpload">* File to Upload</label>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtFileUpload", null, new { id = "txtFileUpload", type = "file", @class = "txtWidthForDialogSched_A required zIndexCSS", aria_labelledby = "lblFileUpload" })
                    </div>
                </div>

                <div id="AUSchedA24HNoticeId" class="AddLeftCSSImportDiscRpts">
                    <input type="button" id="btnUploadImportFile" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Upload" title="Upload" style="font-size:12px;" />
                    <input type="button" id="btnClearDialogImport" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all cancel" name="Command" value="Clear" title="Clear" style="font-size:12px;" />
                    <input type="button" id="btnCloseDialogImport" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Close" title="Close" style="font-size:12px;" />
                </div>
            </div>
        </div>        
        <div id="divgridErrorMessage">
            <div>
                <p style="float:right;padding-bottom:0.2em;padding-right:.7em;" class="clearBothPaddingTop1em">
                <span style="float: right; padding-bottom: 0.3em;">
                    <button id="btnCSVDownloadData" formnovalidate="formnovalidate" class="btn btn-default clsCommonSearchSDR" name="Command" value="btnCSVAsEntered" title="Validation Errors CSV">
                        <img src="@Url.Content("~/Content/Images/images.png")" class="ButtonImageCSS" alt="CSV Icon" />
                        Validation Errors CSV
                    </button>
                </span>
            </p>
            </div>
            <table id="gridErrorMessage" class="table-bordered display nowrap" style="width:100%; border-spacing: 0px;">
                <thead id="thdGrid2" class="header">
                    <tr>
                        <th>Expand</th>
                        <th>Row Number</th>
                        <th>Column Name</th>
                        <th>Error Message</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </form>
</div>
<script>
    $m = jQuery.noConflict();
    function CallHelpSchedC() {
        ShowDialogBox('EFS-Help', 'Amount Attribution Amount more than $5000.00 Attribution details transactions should be added. ', 'Ok', '');
    }

    function CallHelpSchedABC() {

        var myWidth = 1050;
        var myHeight = 550;

        var left = (screen.width - myWidth) / 2;
        var top = (screen.height - myHeight) / 4;

        if (sessionStorage.getItem("Corporate") != null) {
            if (sessionStorage.getItem("Corporate").toString() == "Yes") {
                window.open("../../ContributionsCandIndFamily/GetScheduleBHelpPopUp", "Help", 'width=550, height=600,scrollbars=1, width=' + myWidth + ', height=' + myHeight + ', top=' + top + ', left=' + left);
            }
            else if (sessionStorage.getItem("IndPart").toString() == "Yes") {
                window.open("../../ContributionsCandIndFamily/GetScheduleAHelpPopUp", "Help", 'width=550, height=600,scrollbars=1, width=' + myWidth + ', height=' + myHeight + ', top=' + top + ', left=' + left);
            }
            else if (sessionStorage.getItem("Other").toString() == "Yes") {
                window.open("../../ContributionsCandIndFamily/GetScheduleCHelpPopUp", "Help", 'width=550, height=600,scrollbars=1, width=' + myWidth + ', height=' + myHeight + ', top=' + top + ', left=' + left);
            }
        }

    }    

    function CallHelpImport() {

        var myWidth = 1050;
        var myHeight = 550;

        var left = (screen.width - myWidth) / 2;
        var top = (screen.height - myHeight) / 4;

        window.open("../../ContributionsCandIndFamily/GetScheduleAHelpPopUp_Import", "Help", 'width=550, height=600,scrollbars=1, width=' + myWidth + ', height=' + myHeight + ', top=' + top + ', left=' + left);

    }    

    $('#menuNav').css('opacity', 0);
    $('#ContributionsCandIndFamilyForm').css('opacity', 0);
    $('#DialogBoxSchedAForm').css('opacity', 0);
    $('#DialogBoxSchedAPartnershipForm').css('opacity', 0);
    $('#divWelcomeBanner').css('opacity', 0);
    $(window).on('load', function () {
        $('#menuNav').css('opacity', 1);
        $('#ContributionsCandIndFamilyForm').css('opacity', 1);
        $('#DialogBoxSchedAForm').css('opacity', 1);
        $('#DialogBoxSchedAPartnershipForm').css('opacity', 1);
        $('#divWelcomeBanner').css('opacity', 1);
    });


    $m(document).ready(function () {


        $m("#txtAmtABC").attr('aria-required', true);

        // FORM VALIDATION SCHEDULE 'A' JQUERY VALIDATOR
        //----------------------------------------------------------------------------------------------------------------------------------------------

        // Common Function in EFS-Validation.js file - Start
        validatePage("DialogBoxSchedAForm"); // SERVER SIDE VALIDATION TESTING REMOVE AFTER TESTING DONE.
        PartnershipValidation("DialogBoxSchedAPartnershipForm");  // SERVER SIDE VALIDATION TESTING REMOVE AFTER TESTING DONE.
        validatePage("DialogBoxSchedAImportDataForm");
        LefthandFilterValues();
        // JQUERY VALIDATITON REGULAR EXPRESSIONS.
        //----------------------------------------------------------------------------------------------------------------------------------------------

        // This is Server Side Validaiton Don't remove.
        sessionStorage.setItem("SchedCValidation", "No");

        sessionStorage.setItem("CommTypeIDVal", @Session["COMM_TYPE_ID"]);

        // HELP FOR SCHEDULE C ITEMIZED FOR CONTRIBUTOR TPE CODE FOR PLLC/LLC SELECT.
        $("#helpPLLCsLLCsScheduleC").hide();

        $("#tdEmployer").hide();
        $("#tdOccupation").hide();
        $("#divContStreetAddress").hide();
        $("#divContCity").hide();
        $("#divContState").hide();
        $("#divContZip5").hide();

        // Schedule A, B, and C Headers.
        if (sessionStorage.getItem("IndPart").toString() == "Yes") {
            $("#lblHeaderID").text("Contributions - Candidate, Individual & Family");
            $("#breadCrumbSchedA").show();
            $("#breadCrumbSchedB").hide();
            $("#breadCrumbSchedC").hide();
            $("#spanImportData").show(); 
            if (@Session["COMM_TYPE_ID"] == "23") {                
                $("#lstItemized").prop("disabled", true);
                $("#tdIsClaim").show();
                $("#tdInDistrict").hide();
                $("#tdMinor").hide();
                $("#tdVendor").hide();
                $("#tdLobbyist").hide();
                $("#tdRContributions").show();
                $("#lstIsClaim")[0].selectedIndex = 0;
                $("#lstInDistrict")[0].selectedIndex = 1;
                $("#lstMinor")[0].selectedIndex = 1;
                $("#lstVendor")[0].selectedIndex = 1;
                $("#lstLobbyist")[0].selectedIndex = 1;
                $("#lstRContributions")[0].selectedIndex = 1;
            }
            else {                
                $("#lstItemized").prop("disabled", false);
                $("#tdIsClaim").hide();
                $("#tdInDistrict").hide();
                $("#tdMinor").hide();
                $("#tdVendor").hide();
                $("#tdLobbyist").hide();
                $("#tdRContributions").hide();
                $("#divHidden").hide();
                //$("#divPartHidden").hide();
            }
        }
        else if (sessionStorage.getItem("Corporate").toString() == "Yes") {
            $("#lblHeaderID").text("Contributions - Corporation");
            $("#breadCrumbSchedB").show();
            $("#breadCrumbSchedA").hide();
            $("#breadCrumbSchedC").hide();
            $("#spanImportData").hide();

            $("#tdIsClaim").hide();
            $("#tdInDistrict").hide();
            $("#tdMinor").hide();
            $("#tdVendor").hide();
            $("#tdLobbyist").hide();
            $("#tdRContributions").hide();
            $("#divHidden").hide();
            //$("#divPartHidden").hide();
        }
        else if (sessionStorage.getItem("Other").toString() == "Yes") {
            $("#lblHeaderID").text("Contributions - All Other");
            $("#breadCrumbSchedC").show();
            $("#breadCrumbSchedB").hide();
            $("#breadCrumbSchedA").hide();
            $("#spanImportData").hide(); 

            $("#tdIsClaim").hide();
            $("#tdInDistrict").hide();
            $("#tdMinor").hide();
            $("#tdVendor").hide();
            $("#tdLobbyist").hide();
            $("#tdRContributions").hide();
            $("#divHidden").hide();
            //$("#divPartHidden").hide();
        }

        $("#lstItemizedPart").prop("disabled", false);
        //$("divImportData").css("display", "block");
        //$("divImportData").attr("style", "display:block");
        
        // PARTNERSHIP TABLE DEFINE.
        var tablePartners = '';
        var tableAttribution = '';

        /// Dialog Box Code /////////////////////////////////////////////////////////////////////
        var dialog_Sched_A;

        dialog_Sched_A = $m("#dialog-form_Sched_A").dialog({
            autoOpen: false,
            resizable: false,
            draggable: false,
            height: 'auto',
            width: 456,
            position: {
                my: "center top",
                at: "center top+250"
            },
            //draggable: false, // TESTING PURPOSE ONLY.
            modal: true,
            resizable: false,
            closeOnEscape: false,
            open: function (event, ui) { hideDialogXButton(this); }
        });

        $(window).resize(function () {
            //// get the screen height and width
            if ($(window).width() < 500) {
                dialog_Sched_A = $m("#dialog-form_Sched_A").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 300,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 500 && $(window).width() <= 900) {
                dialog_Sched_A = $m("#dialog-form_Sched_A").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 456,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 900) {
                dialog_Sched_A = $m("#dialog-form_Sched_A").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 456,
                    modal: true,
                    dialogClass: 'DialogCustomStyle',
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
        }).resize();

        var dialogPartner;

        // Partners Dialog Box.
        dialogPartner = $m("#dialog-form_NCRPartner").dialog({
            autoOpen: false,
            resizable: false,
            height: 'auto',
            width: 456,
            position: {
                my: "center top",
                at: "center top+200"
            },
            modal: true,
            resizable: false,
            closeOnEscape: false,
            open: function (event, ui) { hideDialogXButton(this); }
        });

        $(window).resize(function () {
            //// get the screen height and width
            if ($(window).width() < 500) {
                dialog = $m("#dialog-form_NCRPartner").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 300,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });

            }
            else if ($(window).width() > 500 && $(window).width() <= 900) {
                dialog = $m("#dialog-form_NCRPartner").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 456,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 900) {
                dialog = $m("#dialog-form_NCRPartner").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 456,
                    modal: true,
                    dialogClass: 'DialogCustomStyleDetails',
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
        }).resize();

        // Button Add New Partnership
        //---------------------------------------------------------------------------------------------------------------------------
        $m("#btnAddNewAttribution").button().on("click", function () {
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                txtFilerId: $("#txtFilerID").val(),
                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }, function (resultEditFlag) {
                if (resultEditFlag == "TRUE") {
                    // CHECK IF ITS FOR SCHEDULE 'A' PARTERNSHIP OR ITS SCHEDULE 'C' ATTRIBUTION.
                    // SAME DIALOGBOX USING FOR SCHEDULE 'A' AND SCHEDULE 'C' DETAILS DIALOGBOX.
                    $("#dvDateRcvdPartAttr").hide();
                    $("#lblIndividualPart").text("Is Partner name an individual?");
                    $("#lblPartnershipNamePartAttr").text("Partnership Name");
                    $("#lblPartnerName").text("* Partner Name");

                    $("#ui-id-2").text("Add/Edit Partner");

                    $("#helpPLLCsLLCsScheduleC").hide();

                    dialogPartner.dialog("open");

                    sessionStorage.setItem("UpdateFlagSchedAPart", "No");

                    var validator = $m("#DialogBoxSchedAPartnershipForm").validate();
                    validator.resetForm();  // clear out the validation errors
                    $m("#DialogBoxSchedAPartnershipForm")[0].reset();   // clear out the form data

                    $("#lstItemizedPart").select();
                    $("#txtPartshiptName").focus();

                    // Fill the Auto fill data.
                    $("#txtPartshiptName").prop("disabled", true);
                    $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());

                    $("#lblExplanationPart").text("Explanation");

                    $("#txtCountryPartnership").val("United States");
                    $("#txtCountryPartnership").prop("disabled", true);
                    $("#txtPartState").prop('maxLength', '2');

                    $("#txtPartZip5").blur();
                    $("#txtPartAmtAC").blur();

                    $m("label[for=txtPartFirstName]").text('');
                    $m("#txtPartFirstName").removeClass("error");

                    $m("label[for=txtPartMI]").text('');
                    $m("#txtPartMI").removeClass("error");

                    $m("label[for=txtPartLastName]").text('');
                    $m("#txtPartLastName").removeClass("error");

                    $m("label[for=txtPartAmtAC]").text('');
                    $m("#txtPartAmtAC").removeClass("error");

                    $("#txtPartFirstName").removeClass("ui-state-error error");

                    $("#lstItemizedPart")[0].selectedIndex = 0;
                    $("#lstIndividualPart")[0].selectedIndex = 0;

                    $("#lstItemizedPart").prop("disabled", false);
                    $("#lstIndividualPart").prop("disabled", false);

                    $("#tdPartnerName").hide();

                    $("#tdPartFirstName").show("slow");
                    $("#tdPartMI").show("slow");
                    $("#tdPartLastName").show("slow");

                    $("#dvPartIndividual").show("slow");
                    $("#tdPartnershipNamePartner").show("slow");
                    $("#tdPartStreetName").show("slow");
                    $("#tdPartCity").show("slow");
                    $("#tdPartState").show("slow");
                    $("#tdPartZip5").show("slow");
                    $("#tdPartCity").show("slow");
                    $("#tdCountryPartnershipChk").show("slow");
                    $("#tdCountryPartnershipTxt").show("slow");
                    
                    if (@Session["COMM_TYPE_ID"] == "23") {
                        $("#lstItemizedPart").prop("disabled", true);
                         $("#tdPartRContributions").show();
                         $("#lstPartRContributions")[0].selectedIndex = 1;
                         $("#tdPartEmployer").hide();
                         $("#tdPartOccupation").hide();
                         $("#divPartContStreetAddress").hide();
                         $("#divPartContCity").hide();
                         $("#divPartContState").hide();
                         $("#divPartContZip5").hide();
                     }
                    else {
                        $("#lstItemizedPart").prop("disabled", false);
                         $("#tdPartRContributions").hide();
                         $("#lstPartRContributions")[0].selectedIndex = 1;
                         $("#tdPartEmployer").hide();
                         $("#tdPartOccupation").hide();
                         $("#divPartContStreetAddress").hide();
                         $("#divPartContCity").hide();
                         $("#divPartContState").hide();
                         $("#divPartContZip5").hide();
                     }
                }
                else {
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before adding this Transaction.', 'Ok', '');
                }
            });
        });
        // Button Add New Partnership
        //---------------------------------------------------------------------------------------------------------------------------

        // Button Add New Partnership SCHEDULE 'C'
        //---------------------------------------------------------------------------------------------------------------------------
        $m("#btnAddNewAttributionSchedC").button().on("click", function () {
            $("#divLoading").show();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                txtFilerId: $("#txtFilerID").val(),
                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }, function (resultEditFlag) {
                if (resultEditFlag == "TRUE") {
                    // CHECK IF ITS FOR SCHEDULE 'A' PARTERNSHIP OR ITS SCHEDULE 'C' ATTRIBUTION.
                    // SAME DIALOGBOX USING FOR SCHEDULE 'A' AND SCHEDULE 'C' DETAILS DIALOGBOX.
                    $("#dvDateRcvdPartAttr").show();
                    $("#lblIndividualPart").text("Is LLC/PLLC Member owner an Individual?");
                    $("#lblPartnershipNamePartAttr").text("LLC/PLLC Name");
                    $("#lblPartnerName").text("* Member Name");

                    $("#ui-id-2").text("Add/Edit Attribution Details");

                    $("#helpPLLCsLLCsScheduleC").show();

                    dialogPartner.dialog("open");

                    sessionStorage.setItem("UpdateFlagSchedAPart", "No");

                    var validator = $m("#DialogBoxSchedAPartnershipForm").validate();
                    validator.resetForm();  // clear out the validation errors
                    $m("#DialogBoxSchedAPartnershipForm")[0].reset();   // clear out the form data

                    $("#lstItemizedPart").focus(); // ADDED THIS ON 05.19.2021 USER REPORTED ISSUE.

                    // Fill the Auto fill data.
                    $("#txtPartshiptName").prop("disabled", true);
                    $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());

                    // Fill the Auto fill data.
                    $("#txtCurrentDatePartAttr").prop("disabled", true);
                    $("#txtCurrentDatePartAttr").val(sessionStorage.getItem("DateReceivedAttr").toString());

                    $("#lblExplanationPart").text("Explanation");

                    $("#txtCountryPartnership").val("United States");
                    $("#txtCountryPartnership").prop("disabled", true);
                    $("#txtPartState").prop('maxLength', '2');

                    $("#txtPartZip5").blur();
                    $("#txtPartAmtAC").blur();

                    $m("label[for=txtPartFirstName]").text('');
                    $m("#txtPartFirstName").removeClass("error");

                    $m("label[for=txtPartMI]").text('');
                    $m("#txtPartMI").removeClass("error");

                    $m("label[for=txtPartLastName]").text('');
                    $m("#txtPartLastName").removeClass("error");

                    $m("label[for=txtPartAmtAC]").text('');
                    $m("#txtPartAmtAC").removeClass("error");

                    $("#txtPartFirstName").removeClass("ui-state-error error");

                    $("#lstItemizedPart")[0].selectedIndex = 0;
                    $("#lstIndividualPart")[0].selectedIndex = 0;

                    $("#lstItemizedPart").prop("disabled", false); // ADDED THIS ON 05.19.2021 USER REPORTED ISSUE.
                    $("#lstIndividualPart").prop("disabled", false);

                    $("#txtPartState").val("NY");

                    $("#tdPartnerName").hide();

                    $("#tdPartFirstName").show("slow");
                    $("#tdPartMI").show("slow");
                    $("#tdPartLastName").show("slow");

                    $("#dvPartIndividual").show("slow");
                    $("#tdPartnershipNamePartner").show("slow");
                    $("#tdPartStreetName").show("slow");
                    $("#tdPartCity").show("slow");
                    $("#tdPartState").show("slow");
                    $("#tdPartZip5").show("slow");
                    $("#tdPartCity").show("slow");
                    $("#tdCountryPartnershipChk").show("slow");
                    $("#tdCountryPartnershipTxt").show("slow");

                    if (@Session["COMM_TYPE_ID"] == "23") {
                        $("#lstItemizedPart").prop("disabled", true);
                         $("#tdPartRContributions").show();
                         $("#lstPartRContributions")[0].selectedIndex = 1;
                         $("#tdPartEmployer").hide();
                         $("#tdPartOccupation").hide();
                         $("#divPartContStreetAddress").hide();
                         $("#divPartContCity").hide();
                         $("#divPartContState").hide();
                         $("#divPartContZip5").hide();
                     }
                    else {
                        $("#lstItemizedPart").prop("disabled", false);
                         $("#tdPartRContributions").hide();
                         $("#lstPartRContributions")[0].selectedIndex = 1;
                         $("#tdPartEmployer").hide();
                         $("#tdPartOccupation").hide();
                         $("#divPartContStreetAddress").hide();
                         $("#divPartContCity").hide();
                         $("#divPartContState").hide();
                         $("#divPartContZip5").hide();
                     }                    
                } else {
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before adding this Transaction.', 'Ok', '');
                }
            }).always(function () {
                $("#divLoading").hide();// GetEditFlag.
            });
        });
        // Button Add New Partnership
        //---------------------------------------------------------------------------------------------------------------------------

        // Closes dialog_Sched_A Dialog.
        $m("#btnCloseDialog").button().on("click", function () {

            // ITS COMMON EDIT FLAG WEATHER ITS COMING FROM DIFFERENT SCHEDULE TO EDIT DIFFERENT SCHEDULE
            // THEN IT WILL SET FLAG ONCE THEY CLOSE THE WINDOW OR SAVE WINDOW IT WILL REMOVE THE SESSION.
            sessionStorage.removeItem("EditFlag");

            var valid = true;

            if (sessionStorage.getItem("UpdateFlagSchedA").toString() == "No") { // Only New Transactions

                if ($("#lstItemized option:selected").val().toString() == "N"
                    || ($("#txtCurrentDate").val().toString() != "MM/DD/YYYY" && $("#txtCurrentDate").val().toString().length >= 1)
                    || $("#lstContributionName option:selected").val().toString() != "0"
                    || ($("#lstContributionName option:selected").val().toString() == "5" && $("#txtPartnerShipName").val().toString().length >= 1)) {
                    valid = false;

                }

                if ($("#lblContributionName").text().toString() == "* Contributor Type") {
                    if ($("#txtPartnerShipName").val().toString().length >= 1) {
                        valid = false;
                    }
                }

                if (sessionStorage.getItem("Corporate").toString() == "Yes") {
                    if ($("#txtPartnerShipName").val().toString().length >= 1) {
                        valid = false;
                    }
                }

                if (sessionStorage.getItem("Other").toString() == "Yes") {
                    if ($("#txtPartnerShipName").val().toString().length >= 1) {
                        valid = false;
                    }
                }

                if ($("#lstContributionName option:selected").val().toString() != "5" && ($("#txtFirstName").val().toString().length >= 1
                    || $("#txtMI").val().toString().length >= 1
                    || $("#txtLastName").val().toString().length >= 1)) {
                    valid = false;
                }

                if ($('#chkCountry').is(':checked') /*Other COUNTRY*/ && $("#txtCountry").val().toString().length >= 1) {
                    valid = false;
                }

                if ($("#txtStreetName").val().toString().length >= 1
                    || $("#txtCity").val().toString().length >= 1
                    || $("#txtState").val().toString().length >= 1) {
                    valid = false;
                }
                if ($("#txtZipCode").val().toString().length >= 1) {
                    valid = false;
                }

                if ($("#lstMethod option:selected").val().toString() != "0") {
                    valid = false;
                }

                if ($("#lstMethod option:selected").val().toString() == "1" && $("#txtCheck").val().toString().length >= 1) {
                    valid = false;
                }

                if ($("#txtAmtABC").val().toString().length >= 1
                    || $("#txtExplanation").val().toString().length >= 1) {
                    valid = false;
                }
            } else {

                valid = false;
            }

            //A valid form indicates that the user has not made changes to the form therefore we don't need to refresh the grid.
            if (valid) {
                //Close Dialogbox.
                dialog_Sched_A.dialog("close");
            } else {
                // Get confirmation Close the DialogBox or Not.
                var resultsCloseSchedA = "All unsaved data will be lost if you navigate away from this page. Are you sure you want to continue?";

                $m('#modal_dialog').text(resultsCloseSchedA);
                $m("#modal_dialog").dialog({
                    resizable: false,
                    modal: true,
                    width: '400px',
                    height: 'auto',
                    bgiframe: false,
                    closeOnEscape: false,
                    open: function (event, ui) { hideDialogXButton(this); },
                    buttons: {
                        "OK": function () {
                            // Close Confirm Box.
                            $m(this).dialog("close");//Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                            // Close the DialogBox
                            dialog_Sched_A.dialog("close");
                            // For Defect 707 You don't Refresh the Data on Grid because you just canceled the edit or save function.
                        },
                        "Cancel": function () {
                            // confirm close
                            $m(this).dialog("close");
                        }
                    }
                });
            }
        });
        /**
         * Common function
         * Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
         * {string} targetLabel which can be "#lblAttributionAmt" or "#lblPartnershipAmt".
         * {bool} displayBtnAddNewAttribution will show $("#btnAddNewAttribution") when the ammount is not $0.00.
         */
        function GetPartnershipTotAmt(targetLabel, displayBtnAddNewAttribution) {
            $.post("@Url.Content("~/ContributionsCandIndFamily/GetPartnershipTotAmt/")", {
                strTransNumber: sessionStorage.getItem("TransIdPartnership")
            }, function (result) {
                var expSubContrAmount = '0';
                if (result != "") {
                    var subContTotalAmt = result.toString();
                    expSubContrAmount = sessionStorage.getItem("IndFamPartnershipAmt").toString();
                    var resBalAmt = parseFloat(expSubContrAmount) - parseFloat(subContTotalAmt);
                    $(targetLabel).text("Outstanding Amount: $" + resBalAmt.toFixed(2).toString());
                    if (displayBtnAddNewAttribution == true && resBalAmt.toFixed(2).toString() != "0.00") {
                        $("#btnAddNewAttribution").show();
                    }
                }
                else {
                    expSubContrAmount = parseFloat(sessionStorage.getItem("IndFamPartnershipAmt"));
                    $(targetLabel).text("Outstanding Amount: $" + expSubContrAmount.toFixed(2).toString());
                    if (displayBtnAddNewAttribution == true && expSubContrAmount.toFixed(2).toString() != "0.00") {
                        $("#btnAddNewAttribution").show();
                    }
                }
                $(targetLabel).show();
            });
        }
        // Get Partners Data.
        /* Checks the UpdateFlagSchedAPart flag and if it's "No" it sets a munch of values
         * Otherwise it brings up confirmation modal dialog.
         * Ok checks session storage and calls ~/ContributionsCandIndFamily/GetPartnershipTotAmt/ OR ~/ContributionsCandIndFamily/GetPartnershipTotAmt/
         * Cancel does nothing.
        */
        $m("#btnCloseDialogPartner").button().on("click", function () {
            var valid = true;
            if (sessionStorage.getItem("UpdateFlagSchedAPart").toString() == "No") {
                if ($("#lstItemizedPart option:selected").val().toString() == "N"
                    || $("#lstIndividualPart option:selected").val().toString() == "N"
                    || ($("#lstIndividualPart option:selected").val().toString() == "N" && $("#txtPartshiptName").val().toString().length >= 1)
                    || ($("#lstIndividualPart option:selected").val().toString() == "Y" && ($("#txtPartFirstName").val().toString().length >= 1 || $("#txtPartMI").val().toString().length >= 1 || $("#txtPartLastName").val().toString().length >= 1))
                    || ($('#chkCountryPartnership').is(':checked') /*Other COUNTRY Partnership*/ && $("#txtCountryPartnership").val().toString().length >= 1)
                    || $("#txtPartStreetName").val().toString().length >= 1
                    || $("#txtPartCity").val().toString().length >= 1
                    || (sessionStorage.getItem("Other").toString() != "Yes" && $("#txtPartState").val().toString().length >= 1)
                    || $("#txtPartZip5").val().toString().length >= 1
                    || $("#txtPartAmtAC").val().toString().length >= 1
                    || $("#txtPartExplanationInKind").val().toString().length >= 1) {
                    valid = false;
                }
            } else {
                $m("label[for=txtPartFirstName]").text('');
                $m("#txtPartFirstName").removeClass("error");
                $m("label[for=txtPartnerName]").text('');
                $m("#txtPartnerName").removeClass("error");
                valid = false;
            }

            if (valid) {
                // Close DialgoBox
                dialogPartner.dialog("close");
                // For Defect 707 You don't Refresh the Data on Grid because you just canceled the edit or save function.

            } else {
                // Get confirmation Close the DialogBox or Not.
                var resultsClose = "All unsaved data will be lost if you navigate away from this page. Are you sure you want to continue?";

                $m('#modal_dialog').text(resultsClose);
                $m("#modal_dialog").dialog({
                    resizable: false,
                    width: '400px',
                    height: 'auto',
                    bgiframe: false,
                    closeOnEscape: false,
                    open: function (event, ui) { hideDialogXButton(this); },
                    buttons: {
                        "OK": function () {
                            // Close Confirm Box.
                            $m(this).dialog("close");//Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                            // Close DialgoBox
                            dialogPartner.dialog("close");
                            // For Defect 707 You don't Refresh the Data on Grid because you just canceled the edit or save function.
                        }, // confirm close
                        "Cancel": function () {
                            $m(this).dialog("close");
                        }
                    }
                });
            }
        });
        /// Dialog Box Code /////////////////////////////////////////////////////////////////////

        //====================================================================================================================
        // Date picker validation based on Filing Type.
        if ($("#lstElectionType option:selected").val().toString() == "6") { // Off-Cycle
            if ($("#lstFilingDate option:selected").text().toString() == "- New Filing Date -") {
                sessionStorage.setItem("CuttOffDateForFiling", sessionStorage.getItem("FilingDate").toString());
            }
            else {
                sessionStorage.setItem("CuttOffDateForFiling", $("#lstFilingDate option:selected").text().toString());
            }
        }
        else {
            sessionStorage.setItem("CuttOffDateForFiling", sessionStorage.getItem("CutOffDate").toString());
        }

        // DATE FORMATE....///////////////////////////////////////////////
        // DATE PICKER CONTROL
        $m("#txtCurrentDate").datepicker({
            showOn: "button",
            buttonImage: "../../Content/Images/Calendar.png",
            buttonImageOnly: false,
            buttonText: "Select From Date",
            changeMonth: true,
            changeYear: true,
            numberOfMonths: 1,
            maxDate: sessionStorage.getItem("CuttOffDateForFiling").toString(),
            dateFormat: 'mm/dd/yy',
            onChange: function () {
                $m("#txtCurrentDate").valid();
            },
        });


        $m('.datepicker').attr("placeholder", "MM/DD/YYYY");
        $("#txtCurrentDate").addClass("watermarkHTMLTextBox");
        $("#txtCurrentDate").focusin(function () {
            $("#txtCurrentDate").removeClass("watermarkHTMLTextBox");
        });

        // Watermark TextBox. ////////////////////////////////////////////////////

        // DATE FORMATE....///////////////////////////////////////////////
        $("#txtCurrentDate").focusout(function () {
            if ($("#txtCurrentDate").val().toString() != "") {
                if ($("#txtCurrentDate").val().toString() != "MM/DD/YYYY") {
                    var results = GetValidDate();

                    if (results == "") {
                        var MyDate = new Date($("#txtCurrentDate").val().toString());
                        var MyDateString;
                        MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                            + ('0' + MyDate.getDate()).slice(-2) + '/'
                            + MyDate.getFullYear();
                        $("#txtCurrentDate").val("");
                        $("#txtCurrentDate").val(MyDateString);
                    }
                }
            }
            else {
                $("#txtCurrentDate").addClass("watermarkHTMLTextBox");
            }
        });
        // DATE FORMATE....///////////////////////////////////////////////
        //====================================================================================================================

        $("#lstIsClaim").change(function () {
            
            if ($("#lstIsClaim option:selected").val().toString() == "1") {

                if (sessionStorage.getItem("UpdateFlagSchedA").toString() == "Yes") {
                    if (sessionStorage.getItem("UpdateFlagSchedA_RClaim").toString() == "") {
                        if ($("#lstContributionName option:selected").val().toString() == "4" ||
                            $("#lstContributionName option:selected").val().toString() == "5") {
                            ShowDialogBox('EFS', "'Is Transaction Being Submitted for Claim?' can not be Yes for Contributor Type's 'Partnership, including LLPs' and 'Sole Proprietorship'.", 'Ok', '');
                            $("#lstIsClaim")[0].selectedIndex = 2;
                        }
                        else {
                            $("#tdInDistrict").show();
                            $("#tdMinor").show();
                            $("#tdVendor").show();
                            $("#tdLobbyist").show();
                            $("#lstInDistrict")[0].selectedIndex = 0;
                            $("#lstMinor")[0].selectedIndex = 1;
                            $("#lstVendor")[0].selectedIndex = 1;
                            $("#lstLobbyist")[0].selectedIndex = 1;

                            $("#lstContributionName option[value='4']").hide();
                            $("#lstContributionName option[value='5']").hide();
                            if (sessionStorage.getItem("UpdateFlagSchedA").toString() == "No") {
                                $("#lstContributionName")[0].selectedIndex = 0;
                            }

                            $("#tdPartnershipName").hide("slow");
                            $("#tdFirstName").show("slow");
                            $("#tdMI").show("slow");
                            $("#tdLastName").show("slow");
                        }
                    }
                    else {
                        sessionStorage.setItem("UpdateFlagSchedA_RClaim", "");
                        $("#tdInDistrict").show();
                        $("#tdMinor").show();
                        $("#tdVendor").show();
                        $("#tdLobbyist").show();
                        $("#lstInDistrict")[0].selectedIndex = 0;
                        $("#lstMinor")[0].selectedIndex = 1;
                        $("#lstVendor")[0].selectedIndex = 1;
                        $("#lstLobbyist")[0].selectedIndex = 1;

                        $("#lstContributionName option[value='4']").hide();
                        $("#lstContributionName option[value='5']").hide();
                        if (sessionStorage.getItem("UpdateFlagSchedA").toString() == "No") {
                            $("#lstContributionName")[0].selectedIndex = 0;
                        }

                        $("#tdPartnershipName").hide("slow");
                        $("#tdFirstName").show("slow");
                        $("#tdMI").show("slow");
                        $("#tdLastName").show("slow");
                    }
                }
                else {
                    sessionStorage.setItem("UpdateFlagSchedA_RClaim", "");
                    $("#tdInDistrict").show();
                    $("#tdMinor").show();
                    $("#tdVendor").show();
                    $("#tdLobbyist").show();
                    $("#lstInDistrict")[0].selectedIndex = 0;
                    $("#lstMinor")[0].selectedIndex = 1;
                    $("#lstVendor")[0].selectedIndex = 1;
                    $("#lstLobbyist")[0].selectedIndex = 1;

                    $("#lstContributionName option[value='4']").hide();
                    $("#lstContributionName option[value='5']").hide();
                    if (sessionStorage.getItem("UpdateFlagSchedA").toString() == "No") {
                        $("#lstContributionName")[0].selectedIndex = 0;
                    }

                    $("#tdPartnershipName").hide("slow");
                    $("#tdFirstName").show("slow");
                    $("#tdMI").show("slow");
                    $("#tdLastName").show("slow");
                }
            }
            else {
                sessionStorage.setItem("UpdateFlagSchedA_RClaim", "");
                $("#tdInDistrict").hide();
                $("#tdMinor").hide();
                $("#tdVendor").hide();
                $("#tdLobbyist").hide();

                $("#lstContributionName option[value='4']").show();
                $("#lstContributionName option[value='5']").show();
            }
        });

        $("#lstRContributions").change(function () {
            if ($("#lstRContributions option:selected").val().toString() == "0") {
                $("#tdEmployer").show();
                $("#tdOccupation").show();
                $("#divContStreetAddress").show();
                $("#divContCity").show();
                $("#divContState").show();
                $("#divContZip5").show();
                $m("#txtEmployerPCFB").val("");
                $m("#txtOccupationPCFB").val("");
                $m("#txtContStreetName").val("");
                $m("#txtContCity").val("");
                $m("#txtContState").val("");
                $m("#txtContZipCode").val("");
            }
            else {
                $("#tdEmployer").hide();
                $("#tdOccupation").hide();
                $("#divContStreetAddress").hide();
                $("#divContCity").hide();
                $("#divContState").hide();
                $("#divContZip5").hide();
                $m("#txtEmployerPCFB").val("");
                $m("#txtOccupationPCFB").val("");
                $m("#txtContStreetName").val("");
                $m("#txtContCity").val("");
                $m("#txtContState").val("");
                $m("#txtContZipCode").val("");
            }
        });

        //Partnership Contribution check
        $("#lstPartRContributions").change(function () {
            if ($("#lstPartRContributions option:selected").val().toString() == "0") {
                $("#tdPartEmployer").show();
                $("#tdPartOccupation").show();
                $("#divPartContStreetAddress").show();
                $("#divPartContCity").show();
                $("#divPartContState").show();
                $("#divPartContZip5").show();
                $m("#txtPartEmployer").val("");
                $m("#txtPartOccupation").val("");
                $m("#txtPartContStreetName").val("");
                $m("#txtPartContCity").val("");
                $m("#txtPartContState").val("");
                $m("#txtPartContZipCode").val("");
            }
            else {
                $("#tdPartEmployer").hide();
                $("#tdPartOccupation").hide();
                $("#divPartContStreetAddress").hide();
                $("#divPartContCity").hide();
                $("#divPartContState").hide();
                $("#divPartContZip5").hide();
                $m("#txtPartEmployer").val("");
                $m("#txtPartOccupation").val("");
                $m("#txtPartContStreetName").val("");
                $m("#txtPartContCity").val("");
                $m("#txtPartContState").val("");
                $m("#txtPartContZipCode").val("");
            }
        });

        // Method Change
        // ------------------------------------------------------------------------------------------------------------------------------------------
        $("#lstMethod").change(function () {

            $("#txtCheck").val("");

            if ($("#lstMethod option:selected").val().toString() == "1") { // CHECK
                $("#tdCheck").show();
                $("#lblCheck").text("* Check #");
                if ($("#lstContributionName option:selected").val().toString() == "14") {
                    $("#lblExplanation").text("* Explanation");
                }
                else {
                    $("#lblExplanation").text("Explanation");

                    $m("label[for=txtExplanation]").text('');
                    $m("#txtExplanation").removeClass("error");
                }
            }
            else if ($("#lstMethod option:selected").val().toString() == "8") { // CHECK
                $("#tdCheck").show();
                $("#lblCheck").text("* Money Order #");
                if ($("#lstContributionName option:selected").val().toString() == "14") {
                    $("#lblExplanation").text("* Explanation");
                }
                else {
                    $("#lblExplanation").text("Explanation");

                    $m("label[for=txtExplanation]").text('');
                    $m("#txtExplanation").removeClass("error");
                }
            }
            else if ($("#lstMethod option:selected").val().toString() == "7") { // OTHER
                // EXPLANATION MANADATORY
                $("#lblExplanation").text("* Explanation");
                $("#tdCheck").hide();
            }
            else {
                $("#lblExplanation").text("Explanation");
                $("#tdCheck").hide();

                $m("label[for=txtExplanation]").text('');
                $m("#txtExplanation").removeClass("error");
            }

            if ($("#lstContributionName option:selected").val().toString() == "14") {
                $("#lblExplanation").text("* Explanation");
            }

            $m("label[for=txtCheck]").text('');
            $m("#txtCheck").removeClass("error");
        });
        // Method Change
        // ------------------------------------------------------------------------------------------------------------------------------------------

        // Button Add New Transactions...
        //--------------------------------------------------------------------------------------------------------------------------------------------------------
        $m("#btnAddNewTransaction").button().on("click", function () {
            $("#divLoading").show();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                txtFilerId: $("#txtFilerID").val(),
                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }, function (resultEditFlag) {
                if (resultEditFlag == "TRUE") {
                    $("#divShowPartnerAdddataNCR").hide();
                    $("#divShowAttributionSchedC").hide();

                    sessionStorage.setItem("UpdateFlagSchedA", "No");

                    dialog_Sched_A.dialog("open");

                    // ADDED THIS DEFECT: 4061 ON 06.25.2021
                    // BY DEFAULT IT WILL SHOW.
                    $("#alertForLstContributionName").show();

                    var validator = $m("#DialogBoxSchedAForm").validate();
                    validator.resetForm();  // clear out the validation errors
                    $m("#DialogBoxSchedAForm")[0].reset();   // clear out the form data

                    $("#lblExplanation").text("Explanation");
                    $("#lblContributionName").text("* Contributor Type");

                    $("#txtCurrentDate").blur();
                    $("#txtZipCode").blur(); // REMOVE ONCE SERVER SIDE CODE TESTING DONE.
                    $("#txtAmtABC").blur();

                    $("#txtCountry").val("United States");
                    $("#txtCountry").prop("disabled", true);
                    $("#chkCountry").prop('checked', false);
                    $("#txtState").prop('maxLength', '2');

                    $("#lstContributionName").prop("disabled", false);

                    $("#tdCheck").hide();

                    $m("label[for=txtCheck]").text('');
                    $m("#txtCheck").removeClass("error");

                    // Schedule 'A' Monetary Contributions Received From Individual & Partnerships
                    if (sessionStorage.getItem("IndPart").toString() == "Yes") {

                        $("#lstMethod option[value='8']").show();

                        // Bind Contributor Type
                        var options = {};
                        options.url = "@Url.Content("~/ContributionsCandIndFamily/GetContributorCodeSchedA/")";
                        options.type = "POST";
                        options.data = null;
                        options.dataType = "json";
                        options.contentType = "application/json";
                        options.success = function (results) {
                            $("#lstContributionName").empty();
                            for (var i = 0; i < results.length; i++) {
                                $("#lstContributionName").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                            }
                        };
                        options.error = function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                        };
                        $.ajax(options);

                        $("#lblPartnershipName").text("* Partnership Name");

                        $("#tdDateRcvd").show("slow");
                        $("#tdContributionName").show("slow");
                        $("#tdPartnershipName").hide("slow");
                        $("#tdFirstName").show("slow");
                        $("#tdMI").show("slow");
                        $("#tdLastName").show("slow");
                        $("#divStreetAddress").show("slow");
                        $("#divCity").show("slow");
                        $("#divState").show("slow");
                        $("#divZip5").show("slow");
                        $("#tdMethod").show("slow");
                        $("#tAmt").show("slow");
                        $("#tdExplanation").show("slow");
                        $("#tdCountryContributionChk").show("slow");
                        $("#tdCountryContributionTxt").show("slow");

                        $("#lstContributionName")[0].selectedIndex = 0;
                        $("#lstMethod")[0].selectedIndex = 0;

                        $("#lstItemized").prop("disabled", false);
                        $("#lstItemized")[0].selectedIndex = 0;

                        $m("#lstItemized").focus();
                        if (@Session["COMM_TYPE_ID"] == "23") {
                            $m("label[for=lstIsClaim]").text('');
                            $m("#lstIsClaim").removeClass("error");
                            $("#lstItemized").prop("disabled", true);
                            $("#lstIsClaim").show();      
                            $("#lstIsClaim")[0].selectedIndex = 0;   

                            $("#tdRContributions").show();
                            $("#lstRContributions")[0].selectedIndex = 1;   
                            $("#alertForLstContributionName").hide();
                        }
                        else {
                            $("#lstItemized").prop("disabled", false);
                            $("#lstIsClaim").hide();       
                            $("#tdRContributions").hide();                            
                        }

                        $("#tdInDistrict").hide();
                        $("#tdMinor").hide();
                        $("#tdVendor").hide();
                        $("#tdLobbyist").hide();
                        $("#tdEmployer").hide(); 
                        $("#tdOccupation").hide();            
                        $("#divContStreetAddress").hide();
                        $("#divContCity").hide();
                        $("#divContState").hide();
                        $("#divContZip5").hide();


                    } // Monetary Contributions Received From Corporate
                    else if (sessionStorage.getItem("Corporate").toString() == "Yes") {

                        $("#lstMethod option[value='8']").hide();
                        $("#lblPartnershipName").text("* Contributor Name");

                        $("#tdDateRcvd").show("slow");
                        $("#tdContributionName").hide("slow");
                        $("#tdPartnershipName").show("slow");
                        $("#tdFirstName").hide("slow");
                        $("#tdMI").hide("slow");
                        $("#tdLastName").hide("slow");
                        $("#tdCountryContributionChk").show("slow");
                        $("#tdCountryContributionTxt").show("slow");
                        $("#divStreetAddress").show("slow");
                        $("#divCity").show("slow");
                        $("#divState").show("slow");
                        $("#divZip5").show("slow");
                        $("#tdMethod").show("slow");
                        $("#tAmt").show("slow");
                        $("#tdExplanation").show("slow");

                        $("#lstItemized")[0].selectedIndex = 0;
                        $("#lstContributionName")[0].selectedIndex = 0;
                        $("#lstMethod")[0].selectedIndex = 0;

                        $("#lstItemized").prop("disabled", false);

                        //$("#lstItemized").prop("disabled", false);

                        $("#lstItemized").focus();

                        if (@Session["COMM_TYPE_ID"] == "23") {
                            $("#lstItemized").prop("disabled", true);   
                        }
                        else {
                            $("#lstItemized").prop("disabled", false);
                        }

                    } // Monetary Contributions Received From All Other
                    else if (sessionStorage.getItem("Other").toString() == "Yes") {

                        $("#lstMethod option[value='8']").hide();
                        // ADDED THIS DEFECT: 4061 ON 06.25.2021
                        $("#alertForLstContributionName").hide();

                        // Bind Contributor Type
                        var options = {};
                        options.url = "@Url.Content("~/ContributionsCandIndFamily/GetContributorTypeCodeSchedC/")";
                        options.type = "POST";
                        options.data = null;
                        options.dataType = "json";
                        options.contentType = "application/json";
                        options.success = function (results) {
                            $("#lstContributionName").empty();
                            for (var i = 0; i < results.length; i++) {
                                $("#lstContributionName").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                            }
                        };
                        options.error = function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                        };
                        $.ajax(options);

                        $("#lblPartnershipName").text("* Contributor Name");

                        // Show Fileds
                        $("#tdContributionName").show("slow");
                        $("#tdPartnershipName").show("slow");
                        $("#tdFirstName").hide("slow");
                        $("#tdMI").hide("slow");
                        $("#tdLastName").hide("slow");
                        $("#divStreetAddress").show("slow");
                        $("#divCity").show("slow");
                        $("#divState").show("slow");
                        $("#divZip5").show("slow");
                        $("#tdMethod").show("slow");
                        $("#tdCountryContributionChk").show("slow");
                        $("#tdCountryContributionTxt").show("slow");
                        $("#tdCheck").hide("slow");

                        $("#lstContributionName")[0].selectedIndex = 0;
                        $("#lstMethod")[0].selectedIndex = 0;
                        $("#lstItemized")[0].selectedIndex = 0;

                        $("#lstItemized").prop("disabled", false);

                        $("#lblContributionName").text("* Contributor Type");

                        sessionStorage.setItem("SchedCValidation", "Yes");

                        if (@Session["COMM_TYPE_ID"] == "23") {
                            $("#lstItemized").prop("disabled", true);   
                        }
                        else {
                            $("#lstItemized").prop("disabled", false);
                        }

                        $("#lstItemized").focus();
                    }
                    // Clear the JQuery Error Message
                    $m("label[for=txtCurrentDate]").text('');
                    $m("#txtCurrentDate").removeClass("error");
                }
                else {
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before adding this Transaction.', 'Ok', '');
                }
            }).always(function () {
                $("#divLoading").hide();// GetEditFlag.
            });
        });
        // Button Add New Transactions...
        //--------------------------------------------------------------------------------------------------------------------------------------------------------

        // BIND DISCLOSURE PERIOD DATA
        var options = {};
        options.url = "@Url.Content("~/ContributionsMonetary/BindDisclosurePeriod/")";
        options.type = "POST";
        options.dataType = "json";
        options.contentType = "application/json";
        options.success = function (disclosurePeriod) {
            $("#lstDisclosurePeriod").empty();
            for (var i = 0; i < disclosurePeriod.length; i++) {
                $("#lstDisclosurePeriod").append("<option value='" + disclosurePeriod[i].Value + "'>" + disclosurePeriod[i].Text + "</option>");
            }
            $('#lstDisclosurePeriod').val(sessionStorage.getItem("DisclosurePeriod").toString());
        };
        options.error = function () {

        };
        $.ajax(options);
        // BIND DISCLOSURE PERIOD DATA

        /// AUTO COMPLETE SEARCH CODE //////////////////////////////////////////////////////////////////////////////////////
        //----------------------------------------------------------------------------------------------------------------------------------------
        // First Name Auto Complete.
        $m("#txtFirstName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/ContributionsCandIndFamily/AutoCompleteFirstName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();

                var selectedValue = ui.item.label;
                $.ajax({
                    url: "@Url.Content("~/ContributionsCandIndFamily/GetAutoCompleteNameData/")",
                    dataType: "json",
                    data: {
                        strValue: selectedValue.toString()
                    },
                    success: function (results) {
                        $.each(results, function (i, item) {
                            $("#txtFirstName").val(item.FilingEntityFirstName.toString());
                            $("#txtMI").val(item.FilingEntityMiddleName.toString());
                            $("#txtLastName").val(item.FilingEntityLastName.toString());
                            $("#txtStreetName").val(item.FilingEntityStreetName.toString());
                            $("#txtCity").val(item.FilingEntityCity.toString());
                            $("#txtState").val(item.FilingEntityState.toString());
                            $("#txtZipCode").val(item.FilingEntityZip.toString());
                            $("#txtCountry").val(item.FilingEntityCountry.toString());
                            if ($("#txtCountry").val().toString() == "United States") {
                                $("#chkCountry").prop('checked', false);
                                $("#txtCountry").prop("disabled", true);
                                $("#txtState").prop('maxLength', '2');
                                if (item.FilingEntityZip.toString() != "") {
                                    $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                                }
                                else {
                                    $("#txtZipCode").addClass("watermarkHTMLTextBox");
                                    $("#txtZipCode").blur();
                                }
                            } else {
                                $("#chkCountry").prop('checked', true);
                                $("#txtCountry").prop("disabled", false);
                                $("#txtState").prop('maxLength', '30');

                                $m('#txtZipCode').attr("placeholder", "");
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            }

                            $m("#txtFirstName").valid();
                            // Address validation
                            $m("#txtCountry").valid();
                            $m("#txtStreetName").valid();
                            $m("#txtCity").valid();
                            $m("#txtState").valid();
                            $m("#txtZipCode").valid();
                        });
                    }
                });
                $("#lstMethod").focus();
            },
            change: function (event, ui) {
                if (ui.item) {
                    // do whatever you want to when the item is found
                    $m("label[for=txtFirstName]").text('');
                    $m("#txtFirstName").removeClass("error");
                }
                else {
                    // do whatever you want to when the item is not found
                    $m("label[for=txtFirstName]").text('');
                    $m("#txtFirstName").removeClass("error");
                }
            }
        });

        // Last Name - Auto Complete
        $m("#txtLastName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/ContributionsCandIndFamily/AutoCompleteLastName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();

                var selectedValue = ui.item.label;
                $.ajax({
                    url: "@Url.Content("~/ContributionsCandIndFamily/GetAutoCompleteNameData/")",
                    dataType: "json",
                    data: {
                        strValue: selectedValue.toString()
                    },
                    success: function (results) {
                        $.each(results, function (i, item) {
                            $("#txtFirstName").val(item.FilingEntityFirstName.toString());
                            $("#txtMI").val(item.FilingEntityMiddleName.toString());
                            $("#txtLastName").val(item.FilingEntityLastName.toString());
                            $("#txtStreetName").val(item.FilingEntityStreetName.toString());
                            $("#txtCity").val(item.FilingEntityCity.toString());
                            $("#txtState").val(item.FilingEntityState.toString());
                            $("#txtZipCode").val(item.FilingEntityZip.toString());
                            $("#txtCountry").val(item.FilingEntityCountry.toString());
                            if ($("#txtCountry").val().toString() == "United States") {
                                $("#chkCountry").prop('checked', false);
                                $("#txtCountry").prop("disabled", true);
                                $("#txtState").prop('maxLength', '2');
                                if (item.FilingEntityZip.toString() != "") {
                                    $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                                }
                                else {
                                    $("#txtZipCode").addClass("watermarkHTMLTextBox");
                                    $("#txtZipCode").blur();
                                }
                            } else {
                                $("#chkCountry").prop('checked', true);
                                $("#txtCountry").prop("disabled", false);
                                $("#txtState").prop('maxLength', '30');

                                $m('#txtZipCode').attr("placeholder", "");
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            }
                            $m("#txtLastName").valid();
                            // Address validation
                            $m("#txtCountry").valid();
                            $m("#txtStreetName").valid();
                            $m("#txtCity").valid();
                            $m("#txtState").valid();
                            $m("#txtZipCode").valid();
                        });
                    }
                });
                $("#lstMethod").focus();
            },
            change: function (event, ui) {
                if (ui.item) {
                    // do whatever you want to when the item is found
                    $m("label[for=txtLastName]").text('');
                    $m("#txtLastName").removeClass("error");
                }
                else {
                    // do whatever you want to when the item is not found
                    $m("label[for=txtLastName]").text('');
                    $m("#txtLastName").removeClass("error");
                }
            }
        });

        // Partnership Name Auto Complete.
        $m("#txtPartnerShipName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/ContributionsCandIndFamily/AutoCompleteEntityName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();

                var selectedValue = ui.item.label;
                $.ajax({
                    url: "@Url.Content("~/ContributionsCandIndFamily/GetAutoCompleteNameData/")",
                    dataType: "json",
                    data: {
                        strValue: selectedValue.toString()
                    },
                    success: function (results) {
                        $.each(results, function (i, item) {
                            $("#txtPartnerShipName").val(item.FilingEntityName.toString());
                            $("#txtStreetName").val(item.FilingEntityStreetName.toString());
                            $("#txtCity").val(item.FilingEntityCity.toString());
                            $("#txtState").val(item.FilingEntityState.toString());
                            $("#txtZipCode").val(item.FilingEntityZip.toString());
                            $("#txtCountry").val(item.FilingEntityCountry.toString());
                            if ($("#txtCountry").val().toString() == "United States") {
                                $("#chkCountry").prop('checked', false);
                                $("#txtCountry").prop("disabled", true);
                                $("#txtState").prop('maxLength', '2');
                                if (item.FilingEntityZip.toString() != "") {
                                    $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                                }
                                else {
                                    $("#txtZipCode").addClass("watermarkHTMLTextBox");
                                    $("#txtZipCode").blur();
                                }
                            } else {
                                $("#chkCountry").prop('checked', true);
                                $("#txtCountry").prop("disabled", false);
                                $("#txtState").prop('maxLength', '30');

                                $m('#txtZipCode').attr("placeholder", "");
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            }
                            $m("#txtPartnerShipName").valid();
                            // Address validation
                            $m("#txtCountry").valid();
                            $m("#txtStreetName").valid();
                            $m("#txtCity").valid();
                            $m("#txtState").valid();
                            $m("#txtZipCode").valid();
                        });
                    }
                });
                $("#lstMethod").focus();
            },
            change: function (event, ui) {
                if (ui.item) {
                    // do whatever you want to when the item is found
                    $m("label[for=txtPartnerShipName]").text('');
                    $m("#txtPartnerShipName").removeClass("error");
                }
                else {
                    // do whatever you want to when the item is not found
                    $m("label[for=txtPartnerShipName]").text('');
                    $m("#txtPartnerShipName").removeClass("error");
                }
            }
        });

        // Attribution Partners First Name
        $m("#txtPartFirstName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/ContributionsCandIndFamily/AutoCompleteFirstName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();

                var selectedValue = ui.item.label;
                $.ajax({
                    url: "@Url.Content("~/ContributionsCandIndFamily/GetAutoCompleteNameData/")",
                    dataType: "json",
                    data: {
                        strValue: selectedValue.toString()
                    },
                    success: function (results) {
                        $.each(results, function (i, item) {
                            $("#txtPartFirstName").val(item.FilingEntityFirstName.toString());
                            $("#txtPartMI").val(item.FilingEntityMiddleName.toString());
                            $("#txtPartLastName").val(item.FilingEntityLastName.toString());
                            $("#txtPartStreetName").val(item.FilingEntityStreetName.toString());
                            $("#txtPartCity").val(item.FilingEntityCity.toString());
                            $("#txtPartState").val(item.FilingEntityState.toString());
                            $("#txtPartZip5").val(item.FilingEntityZip.toString());
                            $("#txtCountryPartnership").val(item.FilingEntityCountry.toString());
                            if ($("#txtCountryPartnership").val().toString() == "United States") {
                                $("#chkCountryPartnership").prop('checked', false);
                                $("#txtCountryPartnership").prop("disabled", true);
                                $("#txtPartState").prop('maxLength', '2');
                                if (item.FilingEntityZip.toString() != "") {
                                    $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                                }
                                else {
                                    $("#txtPartZip5").addClass("watermarkHTMLTextBox");
                                    $("#txtPartZip5").blur();
                                }
                            } else {
                                $("#chkCountryPartnership").prop('checked', true);
                                $("#txtCountryPartnership").prop("disabled", false);
                                $("#txtPartState").prop('maxLength', '30');

                                $m('#txtPartZip5').attr("placeholder", "");
                                $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                            }
                            $m("#txtPartFirstName").valid();
                            // Address validation
                            $m("#txtCountryPartnership").valid();
                            $m("#txtPartStreetName").valid();
                            $m("#txtPartCity").valid();
                            $m("#txtPartState").valid();
                            $m("#txtPartZip5").valid();
                        });
                        $("#txtPartAmtAC").focus();
                    }
                });
            },
            change: function (event, ui) {
                if (ui.item) {
                    // do whatever you want to when the item is found
                    $m("label[for=txtPartFirstName]").text('');
                    $m("#txtPartFirstName").removeClass("error");
                }
                else {
                    // do whatever you want to when the item is not found
                    //$m("#txtPartFirstName").val("");
                    $m("label[for=txtPartFirstName]").text('');
                    $m("#txtPartFirstName").removeClass("error");
                }
            }
        });

        // Attribution Partners Last Name
        $m("#txtPartLastName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/ContributionsCandIndFamily/AutoCompleteLastName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();

                var selectedValue = ui.item.label;
                $.ajax({
                    url: "@Url.Content("~/ContributionsCandIndFamily/GetAutoCompleteNameData/")",
                    dataType: "json",
                    data: {
                        strValue: selectedValue.toString()
                    },
                    success: function (results) {
                        $.each(results, function (i, item) {
                            $("#txtPartFirstName").val(item.FilingEntityFirstName.toString());
                            $("#txtPartMI").val(item.FilingEntityMiddleName.toString());
                            $("#txtPartLastName").val(item.FilingEntityLastName.toString());
                            $("#txtPartStreetName").val(item.FilingEntityStreetName.toString());
                            $("#txtPartCity").val(item.FilingEntityCity.toString());
                            $("#txtPartState").val(item.FilingEntityState.toString());
                            $("#txtPartZip5").val(item.FilingEntityZip.toString());
                            $("#txtCountryPartnership").val(item.FilingEntityCountry.toString());
                            if ($("#txtCountryPartnership").val().toString() == "United States") {
                                $("#chkCountryPartnership").prop('checked', false);
                                $("#txtCountryPartnership").prop("disabled", true);
                                $("#txtPartState").prop('maxLength', '2');
                                if (item.FilingEntityZip.toString() != "") {
                                    $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                                }
                                else {
                                    $("#txtPartZip5").addClass("watermarkHTMLTextBox");
                                    $("#txtPartZip5").blur();
                                }
                            } else {
                                $("#chkCountryPartnership").prop('checked', true);
                                $("#txtCountryPartnership").prop("disabled", false);
                                $("#txtPartState").prop('maxLength', '30');

                                $m('#txtPartZip5').attr("placeholder", "");
                                $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                            }
                            $m("#txtPartLastName").valid();
                            // Address validation
                            $m("#txtCountryPartnership").valid();
                            $m("#txtPartStreetName").valid();
                            $m("#txtPartCity").valid();
                            $m("#txtPartState").valid();
                            $m("#txtPartZip5").valid();
                        });
                        $("#txtPartAmtAC").focus();
                    }
                });
            },
            change: function (event, ui) {
                if (ui.item) {
                    // do whatever you want to when the item is found
                    $m("label[for=txtPartLastName]").text('');
                    $m("#txtPartLastName").removeClass("error");
                }
                else {
                    // do whatever you want to when the item is not found
                    $m("label[for=txtPartLastName]").text('');
                    $m("#txtPartLastName").removeClass("error");
                }
            }
        });

        // Partner Name Auto Complete.
        $m("#txtPartnerName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/ContributionsCandIndFamily/AutoCompleteEntityName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();

                var selectedValue = ui.item.label;
                $.ajax({
                    url: "@Url.Content("~/ContributionsCandIndFamily/GetAutoCompleteNameData/")",
                    dataType: "json",
                    data: {
                        strValue: selectedValue.toString()
                    },
                    success: function (results) {
                        $.each(results, function (i, item) {
                            $("#txtPartnerName").val(item.FilingEntityName.toString());
                            $("#txtPartStreetName").val(item.FilingEntityStreetName.toString());
                            $("#txtPartCity").val(item.FilingEntityCity.toString());
                            $("#txtPartState").val(item.FilingEntityState.toString());
                            $("#txtPartZip5").val(item.FilingEntityZip.toString());
                            $("#txtCountryPartnership").val(item.FilingEntityCountry.toString());
                            if ($("#txtCountryPartnership").val().toString() == "United States") {
                                $("#chkCountryPartnership").prop('checked', false);
                                $("#txtCountryPartnership").prop("disabled", true);
                                $("#txtPartState").prop('maxLength', '2');
                                if (item.FilingEntityZip.toString() != "") {
                                    $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                                }
                                else {
                                    $("#txtPartZip5").addClass("watermarkHTMLTextBox");
                                    $("#txtPartZip5").blur();
                                }
                            } else {
                                $("#chkCountryPartnership").prop('checked', true);
                                $("#txtCountryPartnership").prop("disabled", false);
                                $("#txtPartState").prop('maxLength', '30');

                                $m('#txtPartZip5').attr("placeholder", "");
                                $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                            }
                            $m("#txtPartnerName").valid();
                            // Address validation
                            $m("#txtCountryPartnership").valid();
                            $m("#txtPartStreetName").valid();
                            $m("#txtPartCity").valid();
                            $m("#txtPartState").valid();
                            $m("#txtPartZip5").valid();
                        });
                        $("#txtPartAmtAC").focus();
                    }
                });
            },
            change: function (event, ui) {
                if (ui.item) {
                    // do whatever you want to when the item is found
                    $m("label[for=txtPartnerName]").text('');
                    $m("#txtPartnerName").removeClass("error");
                }
                else {
                    // do whatever you want to when the item is not found
                    $m("label[for=txtPartnerName]").text('');
                    $m("#txtPartnerName").removeClass("error");
                }
            }
        });

        $m("#txtPartFirstName").focusout(function (e) {
            if ($m("#txtPartFirstName").val().toString() != "") {
                $m("#txtPartFirstName").valid();
            }
        });

        // SEARCH FILTER HIDE/SHOW CODE ////////////////////////////////////////////////
        //Show Hide Lookups
        $("#divshow").hide();
        $("#divshowForMobile").hide();

        $m(".clsbtnCommonHideShow").bind('click', function (e) {

            $("#selectorCandIndRpt").toggle("slow");
            $("#divhide").show("slow");
            $("#divshow").hide("slow");

            $("#divhideForMobile").show("slow");
            $("#divshowForMobile").hide("slow");

            $("div[id^='divGrid']").addClass("Per80hideShowButtonCSS");
            $("div[id^='divGrid']").removeClass("Per100hideShowButtonCSS");


            $("#divGridMonetary").addClass("Per80hideShowButtonCSS");
            $("#divGridMonetary").removeClass("Per100hideShowButtonCSS");

            $("#divShowPartnerAdddataMonetary").addClass("Per80hideShowButtonCSS");
            $("#divShowPartnerAdddataMonetary").removeClass("Per100hideShowButtonCSS");
        });

        $("#btnShowHide").click(function () {
            if ($("#divShowHide").is(":hidden")) {
                $("#divMainNew").removeClass("mainDivNew");
                $("#divMainNew").addClass("mainDiv");

            } else {
                $("#divMainNew").removeClass("mainDiv");
                $("#divMainNew").addClass("mainDivNew");
            }
        });

        $m(".clsbtnCommonShowHide").bind('click', function (e) {

            $("#selectorCandIndRpt").toggle("slow");
            $("#divhide").hide("slow");
            $("#divshow").show("slow");

            $("#divhideForMobile").hide("slow");
            $("#divshowForMobile").show("slow");

            $("div[id^='divGrid']").addClass("Per100hideShowButtonCSS");
            $("div[id^='divGrid']").removeClass("Per80hideShowButtonCSS");

            $("#ContributionsMonetaryGrid").addClass("Per100hideShowButtonCSS");
            $("#ContributionsMonetaryGrid").removeClass("Per80hideShowButtonCSS");

            $("#PartnersGridMonetary").addClass("Per100hideShowButtonCSS");
            $("#PartnersGridMonetary").removeClass("Per80hideShowButtonCSS");

            $("thead[id^='thdGrid']").addClass("Per100hideShowButtonCSS");
            $("thead[id^='thdGrid']").removeClass("Per80hideShowButtonCSS");

            $("#divGridMonetary").addClass("Per100hideShowButtonCSS");
            $("#divGridMonetary").removeClass("Per80hideShowButtonCSS");

            $("#divShowPartnerAdddataMonetary").addClass("Per100hideShowButtonCSS");
            $("#divShowPartnerAdddataMonetary").removeClass("Per80hideShowButtonCSS");

        });
        // SEARCH FILTER HIDE/SHOW CODE ////////////////////////////////////////////////


        $("#divShowPartnerAdddataMonetary").hide();
        $("#divPartnerMonetary").hide();
        $("#PartnersGridMonetary").addClass("Per100hideShowButtonCSS");

        sessionStorage.removeItem("SchedALink");
        // EDIT FILING TRANSACTIONS GRID
        $m('#gridFilingTransactions tbody').on('click', 'a.editor_AttributionSchedA', function (e) {
            e.preventDefault();

            $("#divShowPartnerAdddataNCR").show();
            $("#divShowAttributionSchedC").hide();

            $("#tdButtonUpdatePartners").hide();
            $("#tdButtonSavePartners").show();

            sessionStorage.setItem("SchedALink", "Yes");

            var data = tableFilingTransactions.row($(this).parents('tr')).data();

            var transNumber = data[42].toString();

            // SET THE WHICH SCHEDULE EDITING EITHER A, B, OR C.
            if (data[1].toString() == "1") {
                sessionStorage.setItem("IndPart", "Yes"); // Schedule '1' - A
                sessionStorage.setItem("Corporate", "No"); // Schedule '2' - B
                sessionStorage.setItem("Other", "No"); // Schedule '3' - C
            }
            else if (data[1].toString() == "2") {
                sessionStorage.setItem("IndPart", "No"); // Schedule '1' - A
                sessionStorage.setItem("Corporate", "Yes"); // Schedule '2' - B
                sessionStorage.setItem("Other", "No"); // Schedule '3' - C
            }
            else if (data[1].toString() == "3") {
                sessionStorage.setItem("IndPart", "No"); // Schedule '1' - A
                sessionStorage.setItem("Corporate", "No"); // Schedule '2' - B
                sessionStorage.setItem("Other", "Yes"); // Schedule '3' - C
            }

            sessionStorage.setItem("TransIdPartnership", data[42].toString());

            sessionStorage.setItem("TransNumberDel", data[42].toString());

            sessionStorage.setItem("TransNumber", data[42].toString());
            sessionStorage.setItem("FilingSchedId", data[1].toString());
            sessionStorage.setItem("FilingSchedDate", data[7].toString());
            var varAmt = data[24].toString();

            sessionStorage.setItem("IndFamPartnershipAmt", varAmt);

            var partnershipName = data[13].toString();
            sessionStorage.setItem("PartnershipName", data[13].toString());

            $("#txtPartshiptName").prop("disabled", true);
            $("#txtPartshiptName").val(partnershipName);
            $("#txtPartFirstName").focus();

            $("div[id^='divPartnerNCR']").show();

            tablePartners = $m('#PartnersGridShechA').DataTable({
                "bProcessing": true,
                "responsive": true,
                "deferRender": true,
                "retrieve": true,
                "columnDefs": [
                    {
                        "targets": [0, 1, 17, 18, 19],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        "targets": [3],
                        "fnCreatedCell": function (cell) {
                            cell.setAttribute('aria-label', "Row Actions");
                        }
                    }
                ],
                "initComplete": function (settings, json) {
                    //Accessibility: Applies various Accessibility features to this dataTable.
                    makeDataTableAccessible($m('#PartnersGridShechA').DataTable());
                },
                "fnRowCallback": function (nRow, aaData, iDisplayIndex) {
                    var uniqueID = generateUniqueRowIdForFnRowCallback(iDisplayIndex, nRow);
                    $m('td:eq(1)', nRow).html('<a class="editor_edit_PartnerSchedA" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_PartnerSchedA" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                },
                "fnDrawCallback": function (oSettings) {
                    var oSettings = this.fnSettings();
                    var iTotalRecords = oSettings.fnRecordsTotal();
                    sessionStorage.setItem("PartnershipRecCount", iTotalRecords);
                },
                "fnServerData": function (url, data, callback) {
                    GetSchedAPartnersData(false, callback, false, false);
                },
                "order": [[0, "desc"]]
            });

            $m('#PartnersGridShechA').DataTable().ajax.reload();
            if (@Session["COMM_TYPE_ID"] == "23") {
                tablePartners.column(20).visible(true);
                tablePartners.column(21).visible(true);
                tablePartners.column(22).visible(true);
                tablePartners.column(23).visible(true);                
            }
            else {
                tablePartners.column(20).visible(false);
                tablePartners.column(21).visible(false);
                tablePartners.column(22).visible(false);
                tablePartners.column(23).visible(false);                
            }
            tablePartners.columns.adjust().draw(false);
            tablePartners.search('').columns().search('').draw();
            tablePartners.responsive.recalc();

            // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
            GetPartnershipTotAmt("#lblPartnershipAmt", true);

            $('html, body').animate({ scrollTop: $("#divShowPartnerAdddataNCR").offset().top }, 500);
        });

        sessionStorage.removeItem("AttrLink");
        // EDIT FILING TRANSACTIONS GRID SCHEDULE C ATTRIBUTION
        $m('#gridFilingTransactions tbody').on('click', 'a.editor_AttributionSchedC', function (e) {
            e.preventDefault();

            $("#divShowPartnerAdddataNCR").hide();
            $("#divShowAttributionSchedC").show();
            $("#tdButtonUpdatePartners").hide();
            $("#tdButtonSavePartners").show();

            var data = tableFilingTransactions.row($(this).parents('tr')).data();

            sessionStorage.setItem("AttrLink", "Yes");

            var transNumber = data[42].toString();

            // SET THE WHICH SCHEDULE EDITING EITHER A, B, OR C.
            if (data[1].toString() == "1") {
                sessionStorage.setItem("IndPart", "Yes"); // Schedule '1' - A
                sessionStorage.setItem("Corporate", "No"); // Schedule '2' - B
                sessionStorage.setItem("Other", "No"); // Schedule '3' - C
            }
            else if (data[1].toString() == "2") {
                sessionStorage.setItem("IndPart", "No"); // Schedule '1' - A
                sessionStorage.setItem("Corporate", "Yes"); // Schedule '2' - B
                sessionStorage.setItem("Other", "No"); // Schedule '3' - C
            }
            else if (data[1].toString() == "3") {
                sessionStorage.setItem("IndPart", "No"); // Schedule '1' - A
                sessionStorage.setItem("Corporate", "No"); // Schedule '2' - B
                sessionStorage.setItem("Other", "Yes"); // Schedule '3' - C
            }

            sessionStorage.setItem("TransIdPartnership", data[42].toString());

            sessionStorage.setItem("TransNumberDel", data[42].toString());

            sessionStorage.setItem("TransNumber", data[42].toString());
            sessionStorage.setItem("FilingSchedId", data[1].toString());
            sessionStorage.setItem("FilingSchedDate", data[7].toString());
            var varAmt = data[24].toString();
            sessionStorage.setItem("IndFamPartnershipAmt", varAmt);

            var attributionDateReceived = data[10].toString();
            sessionStorage.setItem("DateReceivedAttr", data[10].toString());

            var partnershipName = data[13].toString();
            sessionStorage.setItem("PartnershipName", data[13].toString());
            //Date REceived.

            $("#txtPartshiptName").prop("disabled", true);
            $("#txtPartshiptName").val(partnershipName);
            $("#txtPartFirstName").focus();

            $("#txtCurrentDatePartAttr").prop("disabled", true);
            $("#txtCurrentDatePartAttr").val(attributionDateReceived);

            $("div[id^='divPartnerNCR']").show();

            tableAttribution = $m('#AttributionGridShechC').DataTable({
                "bProcessing": true,
                "responsive": true,
                "deferRender": true,
                "retrieve": true,
                "columnDefs": [
                    {
                        "targets": [0, 1, 17, 18],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        "targets": [3],
                        "fnCreatedCell": function (cell) {
                            cell.setAttribute('aria-label', "Row Actions");
                        }
                    }
                ],
                "initComplete": function (settings, json) {
                    //Accessibility: Applies various Accessibility features to this dataTable.
                    makeDataTableAccessible($m('#AttributionGridShechC').DataTable());
                },
                "fnRowCallback": function (nRow, aaData, iDisplayIndex) {
                    var uniqueID = generateUniqueRowIdForFnRowCallback(iDisplayIndex, nRow);
                    $m('td:eq(1)', nRow).html('<a class="editor_edit_AttrSchedC" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_AttrSchedC" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                },
                "fnDrawCallback": function (oSettings) {
                    var oSettings = this.fnSettings();
                    var iTotalRecords = oSettings.fnRecordsTotal();
                    sessionStorage.setItem("PartnershipRecCount", iTotalRecords);
                },
                "fnServerData": function (url, data, callback) {
                    GetSchedAPartnersData(false, callback, false, false);
                },
                "order": [[0, "desc"]],
            });

            $m('#AttributionGridShechC').DataTable().ajax.reload();

            if (@Session["COMM_TYPE_ID"] == "23") {
                tableAttribution.column(20).visible(true);
                tableAttribution.column(21).visible(true);
                tableAttribution.column(22).visible(true);
                tableAttribution.column(23).visible(true);                
            }
            else {
                tableAttribution.column(20).visible(false);
                tableAttribution.column(21).visible(false);
                tableAttribution.column(22).visible(false);
                tableAttribution.column(23).visible(false);                
            }

            tableAttribution.search('').columns().search('').draw();
            tableAttribution.responsive.recalc();

            // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
            GetPartnershipTotAmt("#lblAttributionAmt", true);

            $('html, body').animate({ scrollTop: $("#divShowAttributionSchedC").offset().top }, 500);

        }); // END END ATTRITUBITON SCHEDULE C LINK.

        // Update Partnership Data.
        $m('#PartnersGridShechA tbody').on('click', 'a.editor_edit_PartnerSchedA', function (e) {
            e.preventDefault();
            //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            var dataPartners = tablePartners.row($(this).parents('tr')).data();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                txtFilerId: $("#txtFilerID").val(),
                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }, function (resultEditFlag) {
                if (resultEditFlag == "TRUE") {
                    dialogPartner.dialog("open");

                    var validator = $m("#DialogBoxSchedAPartnershipForm").validate();
                    validator.resetForm();  // clear out the validation errors
                    $m("#DialogBoxSchedAPartnershipForm")[0].reset();   // clear out the form data

                    //==============================================================
                    // CLEAR THE ERRORS ON EDIT DIALOGBOX.
                    $m("label[for=txtPartshiptName]").text('');
                    $m("#txtPartshiptName").removeClass("error");

                    $m("label[for=txtPartnerName]").text('');
                    $m("#txtPartnerName").removeClass("error");

                    $m("label[for=txtPartnerName]").text('');
                    $m("#txtPartnerName").removeClass("error");

                    $m("label[for=txtPartFirstName]").text('');
                    $m("#txtPartFirstName").removeClass("error");

                    $m("label[for=txtPartMI]").text('');
                    $m("#txtPartMI").removeClass("error");

                    $m("label[for=txtPartLastName]").text('');
                    $m("#txtPartLastName").removeClass("error");

                    $m("label[for=txtCountryPartnership]").text('');
                    $m("#txtCountryPartnership").removeClass("error");

                    $m("label[for=txtPartStreetName]").text('');
                    $m("#txtPartStreetName").removeClass("error");

                    $m("label[for=txtPartCity]").text('');
                    $m("#txtPartCity").removeClass("error");

                    $m("label[for=txtPartState]").text('');
                    $m("#txtPartState").removeClass("error");

                    $m("label[for=txtPartZip5]").text('');
                    $m("#txtPartZip5").removeClass("error");

                    $m("label[for=txtPartAmtAC]").text('');
                    $m("#txtPartAmtAC").removeClass("error");

                    $m("label[for=txtPartExplanationInKind]").text('');
                    $m("#txtPartExplanationInKind").removeClass("error");

                    // CLEAR THE ERRORS ON EDIT DIALOGBOX.
                    //==============================================================

                    $("#dvDateRcvdPartAttr").hide();
                    $("#lblIndividualPart").text("Is Partner name an individual?");
                    $("#lblPartnershipNamePartAttr").text("Partnership Name");
                    $("#lblPartnerName").text("* Partner Name");

                    sessionStorage.setItem("FilingEntityIdPartner", dataPartners[1].toString());
                    sessionStorage.setItem("TransNumberPartnership", dataPartners[17].toString());

                    // EDIT SCHEDULE C '&' VALIDATION.
                    sessionStorage.setItem("ScheduleCSchedId", "1");

                    $("#txtPartAmtAC").addClass("watermarkHTMLTextBox");

                    var attAmt = dataPartners[14].toString();
                    sessionStorage.setItem("PartnershipAttrAmount", attAmt.toString());

                    sessionStorage.setItem("UpdateFlagSchedAPart", "Yes");

                    if (dataPartners[16].toString() == "No") {
                        $("#lblExplanationPart").text("Explanation");
                        $("#tdPartnershipNamePartner").hide();
                    }
                    else {
                        $("#lblExplanationPart").text("Explanation");
                        $("#tdPartnershipNamePartner").show();
                    }

                    $("#lstItemizedPart option")
                        .filter(function () { return $.trim($(this).text()) == dataPartners[16].toString(); })
                        .attr("selected", "selected");

                    if (dataPartners[5].toString() == "") {
                        $("#lstIndividualPart")[0].selectedIndex = 0;
                    }
                    else {
                        $("#lstIndividualPart")[0].selectedIndex = 1;
                    }

                    if (dataPartners[9].toString() == "United States") {
                        $("#chkCountryPartnership").prop('checked', false);
                        $("#txtCountryPartnership").prop("disabled", true);
                        $("#txtPartState").prop('maxLength', '2');
                    }
                    else { // Other Country
                        $("#chkCountryPartnership").prop('checked', true);
                        $("#txtCountryPartnership").prop("disabled", false);

                        $("#txtPartState").prop('maxLength', '30');
                        $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                        $m('#txtPartZip5').attr("placeholder", "");
                    }

                    if (dataPartners[16].toString() == "Yes") {

                        $("#lstItemizedPart")[0].selectedIndex = 0;

                        if (dataPartners[5].toString() != "") { // Individual No
                            $("#lstItemizedPart").prop("disabled", true);
                            $("#lstIndividualPart").prop("disabled", true);

                            $("#tdPartnerName").show();

                            $m("label[for=txtPartFirstName]").text('');
                            $m("#txtPartFirstName").removeClass("error");

                            $m("label[for=txtPartLastName]").text('');
                            $m("#txtPartLastName").removeClass("error");

                            $m("label[for=txtPartAmtAC]").text('');
                            $m("#txtPartAmtAC").removeClass("error");

                            $("#tdPartFirstName").hide("slow");
                            $("#tdPartMI").hide("slow");
                            $("#tdPartLastName").hide("slow");

                            $("#dvPartIndividual").show("slow");
                            $("#tdPartnershipNamePartner").show("slow");
                            $("#tdPartStreetName").show("slow");
                            $("#tdPartCity").show("slow");
                            $("#tdPartState").show("slow");
                            $("#tdPartZip5").show("slow");
                            $("#tdPartCity").show("slow");
                            $("#tdCountryPartnershipChk").show("slow");
                            $("#tdCountryPartnershipTxt").show("slow");

                            $("#txtPartFirstName").val("");
                            $("#txtPartMI").val("");
                            $("#txtPartLastName").val("");

                            $("#txtPartshiptName").val(dataPartners[4].toString());
                            $("#txtPartnerName").val(dataPartners[5].toString());
                            $("#txtCountryPartnership").val(dataPartners[9].toString());
                            $("#txtPartStreetName").val(dataPartners[10].toString());
                            $("#txtPartCity").val(dataPartners[11].toString());
                            $("#txtPartState").val(dataPartners[12].toString());
                            $("#txtPartZip5").val(dataPartners[13].toString());
                            var varAmt = dataPartners[14].toString();
                            $("#txtPartAmtAC").val(varAmt);
                            if (dataPartners[14].toString() != "") {
                                $("#txtPartAmtAC").removeClass("watermarkHTMLTextBox");
                            }

                            if (dataPartners[13].toString() != "") {
                                $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                            }
                            else {
                                $("#txtPartZip5").addClass("watermarkHTMLTextBox");
                                if (dataPartners[9].toString() == "United States") {
                                    $("#txtPartZip5").blur();
                                }
                            }

                            $("#txtPartExplanationInKind").val(dataPartners[15].toString());

                            $("#txtPartnerName").focus();
                        }
                        else { // Individual Yes
                            $("#lstItemizedPart").prop("disabled", true);
                            $("#lstIndividualPart").prop("disabled", true);

                            $("#tdPartnerName").hide();

                            $("#tdPartFirstName").show("slow");
                            $("#tdPartMI").show("slow");
                            $("#tdPartLastName").show("slow");

                            $m("label[for=txtPartFirstName]").text('');
                            $m("#txtPartFirstName").removeClass("error");

                            $m("label[for=txtPartLastName]").text('');
                            $m("#txtPartLastName").removeClass("error");

                            $m("label[for=txtPartAmtAC]").text('');
                            $m("#txtPartAmtAC").removeClass("error");

                            $("#dvPartIndividual").show("slow");
                            $("#tdPartnershipNamePartner").show("slow");
                            $("#tdPartStreetName").show("slow");
                            $("#tdPartCity").show("slow");
                            $("#tdPartState").show("slow");
                            $("#tdPartZip5").show("slow");
                            $("#tdPartCity").show("slow");
                            $("#tdCountryPartnershipChk").show("slow");
                            $("#tdCountryPartnershipTxt").show("slow");

                            $("#txtPartnerName").val("");

                            $("#txtPartshiptName").val(dataPartners[4].toString());
                            $("#txtPartFirstName").val(dataPartners[6].toString());
                            $("#txtPartMI").val(dataPartners[7].toString());
                            $("#txtPartLastName").val(dataPartners[8].toString());
                            $("#txtCountryPartnership").val(dataPartners[9].toString());
                            $("#txtPartStreetName").val(dataPartners[10].toString());
                            $("#txtPartCity").val(dataPartners[11].toString());
                            $("#txtPartState").val(dataPartners[12].toString());
                            $("#txtPartZip5").val(dataPartners[13].toString());
                            var varAmt = dataPartners[14].toString();

                            $("#txtPartAmtAC").val(varAmt);
                            if ($("#txtPartAmtAC").val().toString() != "" || $("#txtPartAmtAC").val().toString() != "999999999.99") {
                                $("#txtPartAmtAC").removeClass("watermarkHTMLTextBox");
                            }

                            if (dataPartners[13].toString() != "") {
                                $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                            }
                            else {
                                $("#txtPartZip5").addClass("watermarkHTMLTextBox");
                                if (dataPartners[9].toString() == "United States") {
                                    $("#txtPartZip5").blur();
                                }
                            }

                            $("#txtPartExplanationInKind").val(dataPartners[15].toString());

                            $("#txtPartFirstName").focus();
                        }
                        
                         if (@Session["COMM_TYPE_ID"] == "23") {
                             if ($("#lstIndividualPart option:selected").val() == "N") {
                                 $("#tdPartRContributions").hide();
                                 $("#tdPartEmployer").hide();
                                 $("#tdPartOccupation").hide();
                                 $("#divPartContStreetAddress").hide();
                                 $("#divPartContCity").hide();
                                 $("#divPartContState").hide();
                                 $("#divPartContZip5").hide();
                             }
                             else {
                                 $("#tdPartRContributions").show();
                                 $m("#lstPartRContributions option").each(function () {
                                     if ($(this).text() == dataPartners[20].toString()) {
                                         $(this).prop('selected', true).trigger('change');

                                         if ($(this).text() == "Yes") {
                                             $("#tdPartEmployer").show();
                                             $("#tdPartOccupation").show();
                                             $("#divPartContStreetAddress").show();
                                             $("#divPartContCity").show();
                                             $("#divPartContState").show();
                                             $("#divPartContZip5").show();
                                             $("#txtPartEmployer").val(dataPartners[21].toString());
                                             $("#txtPartOccupation").val(dataPartners[22].toString());
                                             $("#txtPartContStreetName").val(dataPartners[24].toString());
                                             $("#txtPartContCity").val(dataPartners[25].toString());
                                             $("#txtPartContState").val(dataPartners[26].toString());
                                             $("#txtPartContZipCode").val(dataPartners[27].toString());
                                         }
                                         else {
                                             $("#tdPartEmployer").hide();
                                             $("#tdPartOccupation").hide();
                                             $("#divPartContStreetAddress").hide();
                                             $("#divPartContCity").hide();
                                             $("#divPartContState").hide();
                                             $("#divPartContZip5").hide();
                                         }
                                     }
                                 });
                             }
                         }
                         else {
                             $("#tdPartRContributions").hide();
                             $("#tdPartEmployer").hide();
                             $("#tdPartOccupation").hide();
                             $("#divPartContStreetAddress").hide();
                             $("#divPartContCity").hide();
                             $("#divPartContState").hide();
                             $("#divPartContZip5").hide();
                         }
                    }
                    else { // Unitemized
                        $("#lstItemizedPart").prop("disabled", true);
                        $("#lstItemizedPart")[0].selectedIndex = 1;

                        $("#tdPartnerName").hide();

                        $("#tdPartFirstName").hide("slow");
                        $("#tdPartMI").hide("slow");
                        $("#tdPartLastName").hide("slow");

                        $("#dvPartIndividual").hide("slow");
                        $("#tdPartnershipNamePartner").show("slow");
                        $("#tdPartStreetName").hide("slow");
                        $("#tdPartCity").hide("slow");
                        $("#tdPartState").hide("slow");
                        $("#tdPartZip5").hide("slow");
                        $("#tdPartCity").hide("slow");
                        $("#tdCountryPartnershipChk").hide("slow");
                        $("#tdCountryPartnershipTxt").hide("slow");

                        $m("label[for=txtPartFirstName]").text('');
                        $m("#txtPartFirstName").removeClass("error");

                        $m("label[for=txtPartLastName]").text('');
                        $m("#txtPartLastName").removeClass("error");

                        $m("label[for=txtPartAmtAC]").text('');
                        $m("#txtPartAmtAC").removeClass("error");

                        $("#txtPartshiptName").val(dataPartners[4].toString());
                        var varAmt = dataPartners[14].toString();
                        $("#txtPartAmtAC").val(varAmt);
                        if ($("#txtPartAmtAC").val().toString() != "" || $("#txtPartAmtAC").val().toString() != "999999999.99") {
                            $("#txtPartAmtAC").removeClass("watermarkHTMLTextBox");
                        }
                        $("#txtPartExplanationInKind").val(dataPartners[15].toString());

                        $("#txtPartAmtAC").focus();

                        $("#tdPartRContributions").hide();
                        $("#tdPartEmployer").hide();
                        $("#tdPartOccupation").hide();
                        $("#divPartContStreetAddress").hide();
                        $("#divPartContCity").hide();
                        $("#divPartContState").hide();
                        $("#divPartContZip5").hide();
                    }
                }
                else {
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before editing this Transaction.', 'Ok', '');
                }
            }).always(function () {
                $("#divLoading").hide();
            });
        });

        // Update Attribution Data.
        $m('#AttributionGridShechC tbody').on('click', 'a.editor_edit_AttrSchedC', function (e) {
            e.preventDefault();
            //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            var dataPartners = tableAttribution.row($(this).parents('tr')).data();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                txtFilerId: $("#txtFilerID").val(),
                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }, function (resultEditFlag) {
                if (resultEditFlag == "TRUE") {
                    dialogPartner.dialog("open");

                    var validator = $m("#DialogBoxSchedAPartnershipForm").validate();
                    validator.resetForm();  // clear out the validation errors
                    $m("#DialogBoxSchedAPartnershipForm")[0].reset();   // clear out the form data

                    //==============================================================
                    // CLEAR THE ERRORS ON EDIT DIALOGBOX.
                    $m("label[for=txtPartshiptName]").text('');
                    $m("#txtPartshiptName").removeClass("error");

                    $m("label[for=txtPartnerName]").text('');
                    $m("#txtPartnerName").removeClass("error");

                    $m("label[for=txtPartnerName]").text('');
                    $m("#txtPartnerName").removeClass("error");

                    $m("label[for=txtPartFirstName]").text('');
                    $m("#txtPartFirstName").removeClass("error");

                    $m("label[for=txtPartMI]").text('');
                    $m("#txtPartMI").removeClass("error");

                    $m("label[for=txtPartLastName]").text('');
                    $m("#txtPartLastName").removeClass("error");

                    $m("label[for=txtCountryPartnership]").text('');
                    $m("#txtCountryPartnership").removeClass("error");

                    $m("label[for=txtPartStreetName]").text('');
                    $m("#txtPartStreetName").removeClass("error");

                    $m("label[for=txtPartCity]").text('');
                    $m("#txtPartCity").removeClass("error");

                    $m("label[for=txtPartState]").text('');
                    $m("#txtPartState").removeClass("error");

                    $m("label[for=txtPartZip5]").text('');
                    $m("#txtPartZip5").removeClass("error");

                    $m("label[for=txtPartAmtAC]").text('');
                    $m("#txtPartAmtAC").removeClass("error");

                    $m("label[for=txtPartExplanationInKind]").text('');
                    $m("#txtPartExplanationInKind").removeClass("error");

                    // CLEAR THE ERRORS ON EDIT DIALOGBOX.
                    //==============================================================

                    $("#ui-id-2").text("Add/Edit Attribution Details");

                    $("#helpPLLCsLLCsScheduleC").show();

                    $("#dvDateRcvdPartAttr").show();
                    $("#lblIndividualPart").text("Is LLC/PLLC Member owner an Individual?");
                    $("#lblPartnershipNamePartAttr").text("LLC/PLLC Name");
                    $("#lblPartnerName").text("* Member Name");

                    sessionStorage.setItem("FilingEntityIdPartner", dataPartners[1].toString());
                    sessionStorage.setItem("TransNumberPartnership", dataPartners[17].toString());

                    // EDIT SCHEDULE C '&' VALIDATION.
                    sessionStorage.setItem("ScheduleCSchedId", "3");

                    $("#txtPartAmtAC").addClass("watermarkHTMLTextBox");

                    var attAmt = dataPartners[14].toString();
                    sessionStorage.setItem("PartnershipAttrAmount", attAmt.toString());

                    sessionStorage.setItem("UpdateFlagSchedAPart", "Yes");

                    if (dataPartners[16].toString() == "No") {
                        $("#lblExplanationPart").text("Explanation");
                        $("#tdPartnershipNamePartner").hide();
                    }
                    else {
                        $("#lblExplanationPart").text("Explanation");
                        $("#tdPartnershipNamePartner").show();
                    }

                    $("#lstItemizedPart option")
                        .filter(function () { return $.trim($(this).text()) == dataPartners[16].toString(); })
                        .attr("selected", "selected");

                    if (dataPartners[5].toString() == "") {
                        $("#lstIndividualPart")[0].selectedIndex = 0;
                    }
                    else {
                        $("#lstIndividualPart")[0].selectedIndex = 1;
                    }

                    if (dataPartners[9].toString() == "United States") {
                        $("#chkCountryPartnership").prop('checked', false);
                        $("#txtCountryPartnership").prop("disabled", true);
                        $("#txtPartState").prop('maxLength', '2');
                    }
                    else { // Other Country
                        $("#chkCountryPartnership").prop('checked', true);
                        $("#txtCountryPartnership").prop("disabled", false);

                        $("#txtPartState").prop('maxLength', '30');
                        $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                        $m('#txtPartZip5').attr("placeholder", "");
                    }

                    if (dataPartners[16].toString() == "Yes") { // [16] ITEMIZED OR NOT.

                        $("#lstItemizedPart")[0].selectedIndex = 0;

                        if (dataPartners[5].toString() != "") { // Individual No
                            $("#lstItemizedPart").prop("disabled", true);
                            $("#lstIndividualPart").prop("disabled", true);

                            $("#tdPartnerName").show();

                            $m("label[for=txtPartFirstName]").text('');
                            $m("#txtPartFirstName").removeClass("error");

                            $m("label[for=txtPartLastName]").text('');
                            $m("#txtPartLastName").removeClass("error");

                            $m("label[for=txtPartAmtAC]").text('');
                            $m("#txtPartAmtAC").removeClass("error");

                            $("#tdPartFirstName").hide("slow");
                            $("#tdPartMI").hide("slow");
                            $("#tdPartLastName").hide("slow");

                            $("#dvPartIndividual").show("slow");
                            $("#tdPartnershipNamePartner").show("slow");
                            $("#tdPartStreetName").show("slow");
                            $("#tdPartCity").show("slow");
                            $("#tdPartState").show("slow");
                            $("#tdPartZip5").show("slow");
                            $("#tdPartCity").show("slow");
                            $("#tdCountryPartnershipChk").show("slow");
                            $("#tdCountryPartnershipTxt").show("slow");

                            $("#txtPartFirstName").val("");
                            $("#txtPartMI").val("");
                            $("#txtPartLastName").val("");

                            $("#txtCurrentDatePartAttr").val(dataPartners[19].toString());
                            $("#txtPartshiptName").val(dataPartners[4].toString());
                            $("#txtPartnerName").val(dataPartners[5].toString());
                            $("#txtCountryPartnership").val(dataPartners[9].toString());
                            $("#txtPartStreetName").val(dataPartners[10].toString());
                            $("#txtPartCity").val(dataPartners[11].toString());
                            $("#txtPartState").val(dataPartners[12].toString());
                            $("#txtPartZip5").val(dataPartners[13].toString());
                            var varAmt = dataPartners[14].toString();
                            $("#txtPartAmtAC").val(varAmt);
                            if (dataPartners[14].toString() != "") {
                                $("#txtPartAmtAC").removeClass("watermarkHTMLTextBox");
                            }

                            if (dataPartners[13].toString() != "") {
                                $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                            }
                            else {
                                $("#txtPartZip5").addClass("watermarkHTMLTextBox");
                                if (dataPartners[9].toString() == "United States") {
                                    $("#txtPartZip5").blur();
                                }
                            }

                            $("#txtPartExplanationInKind").val(dataPartners[15].toString());

                            $("#txtPartnerName").focus();
                            $("#tdPartRContributions").hide();
                            $("#tdPartEmployer").hide();
                            $("#tdPartOccupation").hide();
                            $("#divPartContStreetAddress").hide();
                            $("#divPartContCity").hide();
                            $("#divPartContState").hide();
                            $("#divPartContZip5").hide();
                        }
                        else { // Individual Yes
                            $("#lstItemizedPart").prop("disabled", true);
                            $("#lstIndividualPart").prop("disabled", true);

                            $("#tdPartnerName").hide();

                            $("#tdPartFirstName").show("slow");
                            $("#tdPartMI").show("slow");
                            $("#tdPartLastName").show("slow");

                            $m("label[for=txtPartFirstName]").text('');
                            $m("#txtPartFirstName").removeClass("error");

                            $m("label[for=txtPartLastName]").text('');
                            $m("#txtPartLastName").removeClass("error");

                            $m("label[for=txtPartAmtAC]").text('');
                            $m("#txtPartAmtAC").removeClass("error");

                            $("#dvPartIndividual").show("slow");
                            $("#tdPartnershipNamePartner").show("slow");
                            $("#tdPartStreetName").show("slow");
                            $("#tdPartCity").show("slow");
                            $("#tdPartState").show("slow");
                            $("#tdPartZip5").show("slow");
                            $("#tdPartCity").show("slow");
                            $("#tdCountryPartnershipChk").show("slow");
                            $("#tdCountryPartnershipTxt").show("slow");

                            $("#txtPartnerName").val("");

                            $("#txtCurrentDatePartAttr").val(dataPartners[19].toString());
                            $("#txtPartshiptName").val(dataPartners[4].toString());
                            $("#txtPartFirstName").val(dataPartners[6].toString());
                            $("#txtPartMI").val(dataPartners[7].toString());
                            $("#txtPartLastName").val(dataPartners[8].toString());
                            $("#txtCountryPartnership").val(dataPartners[9].toString());
                            $("#txtPartStreetName").val(dataPartners[10].toString());
                            $("#txtPartCity").val(dataPartners[11].toString());
                            $("#txtPartState").val(dataPartners[12].toString());
                            $("#txtPartZip5").val(dataPartners[13].toString());
                            var varAmt = dataPartners[14].toString();
                            $("#txtPartAmtAC").val(varAmt);
                            if ($("#txtPartAmtAC").val().toString() != "" || $("#txtPartAmtAC").val().toString() != "999999999.99") {
                                $("#txtPartAmtAC").removeClass("watermarkHTMLTextBox");
                            }

                            if (dataPartners[13].toString() != "") {
                                $("#txtPartZip5").removeClass("watermarkHTMLTextBox");
                            }
                            else {
                                $("#txtPartZip5").addClass("watermarkHTMLTextBox");
                                if (dataPartners[9].toString() == "United States") {
                                    $("#txtPartZip5").blur();
                                }
                            }

                            $("#txtPartExplanationInKind").val(dataPartners[15].toString());

                            $("#txtPartFirstName").focus();

                            if (@Session["COMM_TYPE_ID"] == "23") {
                                if ($("#lstIndividualPart option:selected").val() == "N") {
                                    $("#tdPartRContributions").hide();
                                    $("#tdPartEmployer").hide();
                                    $("#tdPartOccupation").hide();
                                    $("#divPartContStreetAddress").hide();
                                    $("#divPartContCity").hide();
                                    $("#divPartContState").hide();
                                    $("#divPartContZip5").hide();
                                }
                                else {
                                    $("#tdPartRContributions").show();
                                    $m("#lstPartRContributions option").each(function () {
                                        if ($(this).text() == dataPartners[20].toString()) {
                                            $(this).prop('selected', true).trigger('change');

                                            if ($(this).text() == "Yes") {
                                                $("#tdPartEmployer").show();
                                                $("#tdPartOccupation").show();
                                                $("#divPartContStreetAddress").show();
                                                $("#divPartContCity").show();
                                                $("#divPartContState").show();
                                                $("#divPartContZip5").show();
                                                $("#txtPartEmployer").val(dataPartners[21].toString());
                                                $("#txtPartOccupation").val(dataPartners[22].toString());
                                                $("#txtPartContStreetName").val(dataPartners[24].toString());
                                                $("#txtPartContCity").val(dataPartners[25].toString());
                                                $("#txtPartContState").val(dataPartners[26].toString());
                                                $("#txtPartContZipCode").val(dataPartners[27].toString());
                                            }
                                            else {
                                                $("#tdPartEmployer").hide();
                                                $("#tdPartOccupation").hide();
                                                $("#divPartContStreetAddress").hide();
                                                $("#divPartContCity").hide();
                                                $("#divPartContState").hide();
                                                $("#divPartContZip5").hide();
                                            }
                                        }
                                    });
                                }
                            }
                            else {
                                $("#tdPartRContributions").hide();
                                $("#tdPartEmployer").hide();
                                $("#tdPartOccupation").hide();
                                $("#divPartContStreetAddress").hide();
                                $("#divPartContCity").hide();
                                $("#divPartContState").hide();
                                $("#divPartContZip5").hide();
                            }
                        }
                    }
                    else { // Unitemized
                        $("#lstItemizedPart").prop("disabled", true);
                        $("#lstItemizedPart")[0].selectedIndex = 1;

                        $("#tdPartnerName").hide();

                        $("#tdPartFirstName").hide("slow");
                        $("#tdPartMI").hide("slow");
                        $("#tdPartLastName").hide("slow");

                        $("#dvPartIndividual").hide("slow");
                        $("#tdPartnershipNamePartner").show("slow");
                        $("#tdPartStreetName").hide("slow");
                        $("#tdPartCity").hide("slow");
                        $("#tdPartState").hide("slow");
                        $("#tdPartZip5").hide("slow");
                        $("#tdPartCity").hide("slow");
                        $("#tdCountryPartnershipChk").hide("slow");
                        $("#tdCountryPartnershipTxt").hide("slow");

                        $m("label[for=txtPartFirstName]").text('');
                        $m("#txtPartFirstName").removeClass("error");

                        $m("label[for=txtPartLastName]").text('');
                        $m("#txtPartLastName").removeClass("error");

                        $m("label[for=txtPartAmtAC]").text('');
                        $m("#txtPartAmtAC").removeClass("error");

                        $("#txtCurrentDatePartAttr").val(dataPartners[19].toString());
                        $("#txtPartshiptName").val(dataPartners[4].toString());
                        var varAmt = dataPartners[14].toString();
                        $("#txtPartAmtAC").val(varAmt);
                        if ($("#txtPartAmtAC").val().toString() != "" || $("#txtPartAmtAC").val().toString() != "999999999.99") {
                            $("#txtPartAmtAC").removeClass("watermarkHTMLTextBox");
                        }
                        $("#txtPartExplanationInKind").val(dataPartners[15].toString());

                        $("#txtPartAmtAC").focus();
                        $("#tdPartRContributions").hide();
                        $("#tdPartEmployer").hide();
                        $("#tdPartOccupation").hide();
                        $("#divPartContStreetAddress").hide();
                        $("#divPartContCity").hide();
                        $("#divPartContState").hide();
                        $("#divPartContZip5").hide();
                    }
                }
                else {
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before editing this Transaction.', 'Ok', '');
                }
            }).always(function () {
                $("#divLoading").hide();
            });
        });

        // Delete Partnership Data.
        $m('#PartnersGridShechA tbody').on('click', 'a.editor_remove_PartnerSchedA', function (e) {
            e.preventDefault();
            //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            var dataPartners = tablePartners.row($(this).parents('tr')).data();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                txtFilerId: $("#txtFilerID").val(),
                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }, function (resultEditFlag) {
                if (resultEditFlag == "TRUE") {
                    var results = "Are you sure you want to delete the partnership details?";
                    $m('#modal_dialog').text(results);
                    $m("#modal_dialog").dialog({
                        resizable: false,
                        width: '400px',
                        height: 'auto',
                        bgiframe: false,
                        closeOnEscape: false,
                        open: function (event, ui) { hideDialogXButton(this); },
                        buttons: {
                            "OK": function () {
                                // Close Confirm Box.
                                $m(this).dialog("close");//Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                var options = {};
                                options.url = "@Url.Content("~/ContributionsCandIndFamily/DeleteSchedAPartnersData/")";
                                options.type = "GET";
                                options.data = {
                                    strTransNumber: dataPartners[17].toString()
                                };
                                options.dataType = "json";
                                options.contentType = "application/json";
                                options.success = function (resultsDel) {
                                    if (resultsDel) {
                                        window.status = "Record deleted successfully";
                                        GetSchedAPartnersData(true, tablePartners, false, false);
                                        // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
                                        GetPartnershipTotAmt("#lblPartnershipAmt");
                                    }
                                };
                                options.error = function () {
                                    ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                                };
                                $.ajax(options);
                            },
                            "Cancel": function () {
                                $m(this).dialog("close");
                            }
                        }
                    });
                }
                else {
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before editing this Transaction.', 'Ok', '');
                }
            }).always(function () {
                $("#divLoading").hide();
            });
        });

        //Some common code that gets called alot on the page.
        function CheckTheCommitteeType(contributorType, focusLstItemized) {
            // CHECK THE COMMITTEE TYPE IF HOUSEKEEPING THEN YOU SHOULD NOT SHOW THE MESSAGE OVER $5000
            // IF OTHER THAN HOSUE KEEPING YOU CAN SHOW THE MESSAGE OVER $5000.
            // CALL THE CONTROLLER METHOD TO GET THE COMMITTEE TYPE ID.
            $.post("@Url.Content("~/ContributionsCandIndFamily/GetCommitteeTypeId/")", {
            }, function (commTypeId) {
                var message = 'Transaction saved successfully.';
                var message;
                /*Note: We used to have a condition that checked to see if the contributorType was "Corp" (Coorporation). If so the message woudl be 'Transaction saved successfully. Note that Corporations are limited to an aggregate $5, 000 annual contribution limit.Any amount received over $5, 000 must be refunded.' Gayathir explained we don't need it so I am keeping a note for reference.*/
                if (contributorType == "LLC") {
                    message = 'Transaction saved successfully. Note that LLCs/PLLCs are limited to an aggregate $5,000 annual contribution limit. Any amount received over $5,000 must be refunded. Contributions of any amount from an LLC/PLLC must be attributed to the member owners. Entering member owner details is mandatory. ';
                } else {
                    message = 'Transaction saved successfully. Note that entities may be limited to an aggregate $5,000 annual contribution limit. Any amount received over $5,000 must be refunded.';
                }
                //commTypeId we care about.
                var CommittesSuported = ["1", "2", "3", "5", "7", "9", "11", "12", "17", "18"];
                var hasSpecialCommTypeId = commTypeId != "" && CommittesSuported.includes(commTypeId.toString());
                //Message varies by Ammount
                if (hasSpecialCommTypeId == true) {
                    //Custom message only happens when the ammount is > 5000 and hasSpecialCommTypeId is not false.
                    if (focusLstItemized) {
                        $m("#lstItemized").focus();
                    }
                    ShowDialogBox('EFS', message, 'Ok', '');
                } else {
                    //Anything bellow 5000 triggers this.
                    ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');
                }
                $("#divLoading").hide();
            });
        }

        // Delete Attribution Data.
        $m('#AttributionGridShechC tbody').on('click', 'a.editor_remove_AttrSchedC', function (e) {
            e.preventDefault();
            //Because response time can be delayed always show/hide the loadingthe attribution cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            var dataPartners = tableAttribution.row($(this).parents('tr')).data();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                txtFilerId: $("#txtFilerID").val(),
                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }, function (resultEditFlag) {
                if (resultEditFlag == "TRUE") {
                    var results = "Are you sure you want to delete the attribution details?";
                    $m('#modal_dialog').text(results);
                    $m("#modal_dialog").dialog({
                        resizable: false,
                        width: '400px',
                        height: 'auto',
                        bgiframe: false,
                        closeOnEscape: false,
                        open: function (event, ui) { hideDialogXButton(this); },
                        buttons: {
                            "OK": function () {
                                // Close Confirm Box.
                                $m(this).dialog("close");//Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                $("#divLoading").show();
                                var options = {};
                                options.url = "@Url.Content("~/ContributionsCandIndFamily/DeleteSchedAPartnersData/")";
                                options.type = "GET";
                                options.data = {
                                    strTransNumber: dataPartners[17].toString()
                                };
                                options.dataType = "json";
                                options.contentType = "application/json";
                                options.success = function (resultsDel) {
                                    $("#divLoading").hide();
                                    if (resultsDel) {
                                        window.status = "Record deleted successfully";
                                        GetSchedAPartnersData(true, tableAttribution, false, false);

                                        // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
                                        GetPartnershipTotAmt("#lblAttributionAmt");
                                    }
                                };
                                options.error = function () {
                                    ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                                    $("#divLoading").hide();
                                };
                                $.ajax(options);
                            },
                            "Cancel": function () {
                                $m(this).dialog("close");
                            }
                        }
                    });
                }
                else {
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before editing this Transaction.', 'Ok', '');
                }
            }).always(function () {
                $("#divLoading").hide();
            });
        });

        // Partnership Individual Yes or No.
        $("#lstIndividualPart").change(function () {
            if ($("#lstIndividualPart option:selected").val().toString() == "Y") {

                // Fill the Auto fill data.
                $("#txtPartshiptName").prop("disabled", true);
                $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());
                $("#txtPartFirstName").focus();

                if (sessionStorage.getItem("Other").toString() == "Yes") { // SCHEDULE 'C'.
                    // Fill the Auto fill data.
                    $("#txtCurrentDatePartAttr").prop("disabled", true);
                    $("#txtCurrentDatePartAttr").val(sessionStorage.getItem("DateReceivedAttr").toString());
                }

                $("#tdPartFirstName").show("slow");
                $("#tdPartMI").show("slow");
                $("#tdPartLastName").show("slow");

                $("#tdPartnerName").hide("slow");

                $("#txtPartFirstName").val("");
                $("#txtPartMI").val("");
                $("#txtPartLastName").val("");

                $m("label[for=txtPartFirstName]").text('');
                $m("#txtPartFirstName").removeClass("error");

                $m("label[for=txtPartMI]").text('');
                $m("#txtPartMI").removeClass("error");

                $m("label[for=txtPartLastName]").text('');
                $m("#txtPartLastName").removeClass("error");
                if (@Session["COMM_TYPE_ID"] == "23") {
                    $("#tdPartRContributions").show();
                    $("#lstPartRContributions")[0].selectedIndex = 1;
                    $("#tdPartEmployer").hide();
                    $("#tdPartOccupation").hide();
                    $("#divPartContStreetAddress").hide();
                    $("#divPartContCity").hide();
                    $("#divPartContState").hide();
                    $("#divPartContZip5").hide();
                }
            }
            else {
                // Fill the Auto fill data.
                $("#txtPartshiptName").prop("disabled", true);
                $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());
                $("#txtPartnerName").focus();

                if (sessionStorage.getItem("Other").toString() == "Yes") { // SCHEDULE 'C'.
                    // Fill the Auto fill data.
                    $("#txtCurrentDatePartAttr").prop("disabled", true);
                    $("#txtCurrentDatePartAttr").val(sessionStorage.getItem("DateReceivedAttr").toString());
                }

                $("#tdPartFirstName").hide("slow");
                $("#tdPartMI").hide("slow");
                $("#tdPartLastName").hide("slow");

                $("#tdPartnerName").show("slow");

                $("#txtPartnerName").val("");

                $m("label[for=txtPartnerName]").text('');
                $m("#txtPartnerName").removeClass("error");
                
                if (@Session["COMM_TYPE_ID"] == "23") {
                    $("#tdPartRContributions").hide();
                    $("#lstPartRContributions")[0].selectedIndex = 1;
                    $("#tdPartEmployer").hide();
                    $("#tdPartOccupation").hide();
                    $("#divPartContStreetAddress").hide();
                    $("#divPartContCity").hide();
                    $("#divPartContState").hide();
                    $("#divPartContZip5").hide();
                }
            }
        });

        // Unitemized Partnership.
        $("#lstItemizedPart").change(function () {
            if ($("#lstItemizedPart option:selected").val().toString() == "N") { // UNITEMIZED

                var validator = $m("#DialogBoxSchedAPartnershipForm").validate();
                validator.resetForm();  // clear out the validation errors
                $m("#DialogBoxSchedAPartnershipForm")[0].reset();   // clear out the form data

                // FOR SCHEDULE 'A' PARTNERSHIP HIDE THE DATE RECEIVED.
                $("#dvDateRcvdPartAttr").hide();

                // Fill the Auto fill data.
                $("#txtPartshiptName").prop("disabled", true);
                $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());

                if (sessionStorage.getItem("Other").toString() == "Yes") { // SCHEDULE 'C'.
                    // Fill the Auto fill data.
                    $("#txtCurrentDatePartAttr").prop("disabled", true);
                    $("#txtCurrentDatePartAttr").val(sessionStorage.getItem("DateReceivedAttr").toString());

                    // SCHEDULE C SHOW THE DATE RECEIVED AND PLLC/LLC NAME FROM MAIN TRANSACTIONS.
                    // FOR SCHEDULE 'C' ATTRIBUTION SHOW THE DATE RECEIVED.
                    $("#dvDateRcvdPartAttr").show();
                    $("#tdPartnershipNamePartner").show();
                }
                else {
                    $("#tdPartnershipNamePartner").show();
                }

                if (sessionStorage.getItem("Other").toString() == "Yes") { // SCHEDULE 'C'.
                    // Fill the Auto fill data.
                    $("#txtCurrentDatePartAttr").prop("disabled", true);
                    $("#txtCurrentDatePartAttr").val(sessionStorage.getItem("DateReceivedAttr").toString());
                }

                $("#txtCurrentDate").blur();
                $("#txtPartAmtAC").blur();
                $("#lstItemizedPart").select();

                $("#txtCountryPartnership").val("United States");
                $("#txtCountryPartnership").prop("disabled", true);

                $("#lstIndividualPart")[0].selectedIndex = 0;

                $("#lstItemizedPart")[0].selectedIndex = 1;

                // Hide/Show Controls
                $("#dvPartIndividual").hide("slow");
                $("#tdPartnerName").hide("slow");
                $("#tdPartFirstName").hide("slow");
                $("#tdPartMI").hide("slow");
                $("#tdPartLastName").hide("slow");
                $("#tdPartStreetName").hide("slow");
                $("#tdPartCity").hide("slow");
                $("#tdPartState").hide("slow");
                $("#tdPartZip5").hide("slow");
                $("#tdPartCity").hide("slow");
                $("#tdCountryPartnershipChk").hide("slow");
                $("#tdCountryPartnershipTxt").hide("slow");
                if (@Session["COMM_TYPE_ID"] == "23") {
                    $("#tdPartRContributions").hide();
                    $("#lstPartRContributions")[0].selectedIndex = 1;
                    $("#tdPartEmployer").hide();
                    $("#tdPartOccupation").hide();
                    $("#divPartContStreetAddress").hide();
                    $("#divPartContCity").hide();
                    $("#divPartContState").hide();
                    $("#divPartContZip5").hide();
                }
            }
            else {
                // Clear Form data
                var validator = $m("#DialogBoxSchedAPartnershipForm").validate();
                validator.resetForm();  // clear out the validation errors
                $m("#DialogBoxSchedAPartnershipForm")[0].reset();   // clear out the form data

                // FOR SCHEDULE 'A' PARTNERSHIP HIDE THE DATE RECEIVED.
                $("#dvDateRcvdPartAttr").hide();

                // Fill the Auto fill data.
                $("#txtPartshiptName").prop("disabled", true);
                $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());

                if (sessionStorage.getItem("Other").toString() == "Yes") { // SCHEDULE 'C'.
                    // Fill the Auto fill data.
                    $("#txtCurrentDatePartAttr").prop("disabled", true);
                    $("#txtCurrentDatePartAttr").val(sessionStorage.getItem("DateReceivedAttr").toString());

                    // FOR SCHEDULE 'C' ATTRIBUTION SHOW THE DATE RECEIVED.
                    $("#dvDateRcvdPartAttr").show();
                }

                $("#txtCurrentDate").blur();
                $("#txtPartZip5").blur();
                $("#txtPartAmtAC").blur();
                $("#lstItemizedPart").select();

                $("#lblExplanationPart").text("Explanation");

                $("#txtCountryPartnership").val("United States");
                $("#txtCountryPartnership").prop("disabled", true);

                $("#lstIndividualPart")[0].selectedIndex = 0;
                $("#lstItemizedPart")[0].selectedIndex = 0;

                $("#tdPartnershipNamePartner").show();

                $("#tdPartFirstName").show("slow");
                $("#tdPartMI").show("slow");
                $("#tdPartLastName").show("slow");

                $("#dvPartIndividual").show("slow");
                $("#tdPartStreetName").show("slow");
                $("#tdPartCity").show("slow");
                $("#tdPartState").show("slow");
                $("#tdPartZip5").show("slow");
                $("#tdPartCity").show("slow");
                $("#tdCountryPartnershipChk").show("slow");
                $("#tdCountryPartnershipTxt").show("slow");

                $m("label[for=txtPartFirstName]").text('');
                $m("#txtPartFirstName").removeClass("error");

                $m("label[for=txtPartMI]").text('');
                $m("#txtPartMI").removeClass("error");

                $m("label[for=txtPartLastName]").text('');
                $m("#txtPartLastName").removeClass("error");
                
                if (@Session["COMM_TYPE_ID"] == "23") {
                    $("#tdPartRContributions").show();
                    $("#lstPartRContributions")[0].selectedIndex = 1;
                    $("#tdPartEmployer").hide();
                    $("#tdPartOccupation").hide();
                    $("#divPartContStreetAddress").hide();
                    $("#divPartContCity").hide();
                    $("#divPartContState").hide();
                    $("#divPartContZip5").hide();
                    $m("#txtPartEmployer").val("");
                    $m("#txtPartOccupation").val("");
                    $m("#txtPartContStreetName").val("");
                    $m("#txtPartContCity").val("");
                    $m("#txtPartContState").val("");
                    $m("#txtPartContZipCode").val("");
                }
            }
        });


        // Unitemzied then hide controls
        $("#lstItemized").change(function () {

            var selectedUnitemzied = $("#lstItemized option:selected").val();

            if (selectedUnitemzied == "N") {

                var validator = $m("#DialogBoxSchedAForm").validate();
                validator.resetForm();  // clear out the validation errors
                $m("#DialogBoxSchedAForm")[0].reset();   // clear out the form data

                if (sessionStorage.getItem("Other").toString() == "Yes") {
                    $("#tdContributionName").hide("slow"); // ADDED DEFECT: 4101 ON 06.25.2021.
                }
                else {
                    $("#tdContributionName").hide("slow");
                }

                $("#txtCurrentDate").blur();
                $("#txtAmtABC").blur();

                $("#txtCountry").val("United States");
                $("#lstItemized")[0].selectedIndex = 1;

                $("#lstMethod")[0].selectedIndex = 0;
                $("#lblExplanation").text("Explanation");

                // Hide fields
                $("#tdPartnershipName").hide("slow");
                $("#tdFirstName").hide("slow");
                $("#tdMI").hide("slow");
                $("#tdLastName").hide("slow");
                $("#divStreetAddress").hide("slow");
                $("#divCity").hide("slow");
                $("#divState").hide("slow");
                $("#divZip5").hide("slow");
                $("#tdMethod").hide("slow");
                $("#tdCountryContributionChk").hide("slow");
                $("#tdCountryContributionTxt").hide("slow");
                $("#tdCheck").hide("slow");
                if (@Session["COMM_TYPE_ID"] == "23") {
                    $("#tdIsClaim").hide();
                    $("#lstIsClaim")[0].selectedIndex = 2;
                    $("#tdInDistrict").hide();
                    $("#tdMinor").hide();
                    $("#tdVendor").hide();
                    $("#tdLobbyist").hide();
                    $("#tdRContributions").hide();
                    $("#lstRContributions")[0].selectedIndex = 1;
                }
            }
            else { // 'Y'

                var validator = $m("#DialogBoxSchedAForm").validate();
                validator.resetForm();  // clear out the validation errors
                $m("#DialogBoxSchedAForm")[0].reset();   // clear out the form data

                $("#lstItemized").select();

                $("#txtCurrentDate").blur();
                $("#txtZipCode").blur();
                $("#txtAmtABC").blur();

                $("#txtCountry").val("United States");
                $("#lblExplanation").text("Explanation");

                $("#lstItemized")[0].selectedIndex = 0;

                if (sessionStorage.getItem("Other").toString() == "Yes") { // Schedule 'C'

                    // Show Fileds
                    $("#tdContributionName").show("slow");
                    $("#tdPartnershipName").show("slow");
                    $("#tdFirstName").hide("slow");
                    $("#tdMI").hide("slow");
                    $("#tdLastName").hide("slow");
                    $("#divStreetAddress").show("slow");
                    $("#divCity").show("slow");
                    $("#divState").show("slow");
                    $("#divZip5").show("slow");
                    $("#tdMethod").show("slow");
                    $("#tdCountryContributionChk").show("slow");
                    $("#tdCountryContributionTxt").show("slow");

                    $("#txtCountry").val("United States");
                    $("#txtCountry").prop("disabled", true);
                    $("#chkCountry").prop('checked', false);
                    $("#txtState").prop('maxLength', '2');

                    $("#lstContributionName")[0].selectedIndex = 0;
                    $("#lstMethod")[0].selectedIndex = 0;
                }
                else if (sessionStorage.getItem("Corporate").toString() == "Yes") { // Schedule 'B'

                    $("#lblPartnershipName").text("* Contributor Name");

                    $("#txtCountry").val("United States");
                    $("#txtCountry").prop("disabled", true);
                    $("#chkCountry").prop('checked', false);
                    $("#txtState").prop('maxLength', '2');

                    $("#lstMethod")[0].selectedIndex = 0;

                    $("#tdDateRcvd").show("slow");
                    $("#tdContributionName").hide("slow");
                    $("#tdPartnershipName").show("slow");
                    $("#tdFirstName").hide("slow");
                    $("#tdMI").hide("slow");
                    $("#tdLastName").hide("slow");
                    $("#tdCountryContributionChk").show("slow");
                    $("#tdCountryContributionTxt").show("slow");
                    $("#divStreetAddress").show("slow");
                    $("#divCity").show("slow");
                    $("#divState").show("slow");
                    $("#divZip5").show("slow");
                    $("#tdMethod").show("slow");
                    $("#tAmt").show("slow");
                    $("#tdExplanation").show("slow");

                    $("#lstItemized").prop("disabled", false);
                }
                else {
                    // Show Fileds
                    $("#tdContributionName").show("slow");
                    $("#tdPartnershipName").hide("slow");
                    $("#tdFirstName").show("slow");
                    $("#tdMI").show("slow");
                    $("#tdLastName").show("slow");
                    $("#divStreetAddress").show("slow");
                    $("#divCity").show("slow");
                    $("#divState").show("slow");
                    $("#divZip5").show("slow");
                    $("#tdMethod").show("slow");
                    $("#tdCountryContributionChk").show("slow");
                    $("#tdCountryContributionTxt").show("slow");

                    $("#txtCountry").val("United States");
                    $("#txtCountry").prop("disabled", true);
                    $("#chkCountry").prop('checked', false);
                    $("#txtState").prop('maxLength', '2');

                    $("#lstContributionName")[0].selectedIndex = 0;
                    $("#lstMethod")[0].selectedIndex = 0;

                    $m("label[for=txtFirstName]").text('');
                    $m("#txtFirstName").removeClass("error");

                    $m("label[for=txtLastName]").text('');
                    $m("#txtLastName").removeClass("error");
                }
                if (sessionStorage.getItem("IndPart").toString() == "Yes") {
                    if (@Session["COMM_TYPE_ID"] == "23") {
                        $("#tdIsClaim").show();
                        $("#tdInDistrict").hide();
                        $("#tdMinor").hide();
                        $("#tdVendor").hide();
                        $("#tdLobbyist").hide();
                        $("#tdRContributions").show();
                        $("#tdEmployer").hide();
                        $("#tdOccupation").hide();
                        $("#divContStreetAddress").hide();
                        $("#divContCity").hide();
                        $("#divContState").hide();
                        $("#divContZip5").hide();
                        $m("#txtEmployerPCFB").val("");
                        $m("#txtOccupationPCFB").val("");
                        $m("#txtContStreetName").val("");
                        $m("#txtContCity").val("");
                        $m("#txtContState").val("");
                        $m("#txtContZipCode").val("");
                        $("#lstIsClaim")[0].selectedIndex = 2;
                        $("#lstInDistrict")[0].selectedIndex = 1;
                        $("#lstMinor")[0].selectedIndex = 1;
                        $("#lstVendor")[0].selectedIndex = 1;
                        $("#lstLobbyist")[0].selectedIndex = 1;
                        $("#lstRContributions")[0].selectedIndex = 1;
                    }
                }
            }
        });
        /**
         * Common code used by "#btnSaveSchedA".
         * Calls UpdateFlngTransMonetaryContrData and refreshes the "tableFilingTransactions" grid using GetAllTransactionTypesData.
         * param {String} lstContributorNameValue
         * param {boolean } notifyPartnershipDetailsAmmountError
         */
        function UpdateFlngTransMonetaryContrData(lstContributorNameValue, notifyPartnershipDetailsAmmountError) {
            $m.post("@Url.Content("~/ContributionsCandIndFamily/UpdateFlngTransMonetaryContrData/")", {
                strTransNumber: sessionStorage.getItem("TransNumber").toString(),
                strFilingEntId: sessionStorage.getItem("FilingEntityId").toString(),
                lstContributorName: lstContributorNameValue,
                txtDateRcvd: $m("#txtCurrentDate").val(),
                txtCheck: $m("#txtCheck").val(),
                lstMethod: $m("#lstMethod option:selected").val(),
                txtAmt: $m("#txtAmtABC").val(),
                txtExplanation: $m("#txtExplanation").val(),
                txtPartnerShipName: $m("#txtPartnerShipName").val(),
                txtFirstName: $m("#txtFirstName").val(),
                txtMI: $m("#txtMI").val(),
                txtLastName: $m("#txtLastName").val(),
                txtStreetName: $m("#txtStreetName").val(),
                txtCity: $m("#txtCity").val(),
                txtState: $m("#txtState").val(),
                txtZipCode: $m("#txtZipCode").val(),
                txtCountry: $("#txtCountry").val(),
                chkCountry: $('#chkCountry').is(':checked').toString(),
                txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
                strFilingDate: $("#txtNewFilingDate").val(),
                lstItemized: $m("#lstItemized option:selected").val(),
                outOrginalAmount: sessionStorage.getItem("EditPartnershipOrgAmt").toString(),
                validateSchedCCTC: sessionStorage.getItem("SchedCValidation").toString(),
                lstUCOfficeType: $m("#lstUCOfficeType option:selected").val(),
                lstDisclosurePeriod: $m("#lstDisclosurePeriod option:selected").val(),
                lstElectionCycle: $m("#lstElectionCycle option:selected").val(),
                lstElectionType: $("#lstElectionType option:selected").val(),
                txtFilerId: $("#txtFilerID").val(),
                txtReportPeriodDatesTo: sessionStorage.getItem("FilingDate").toString(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                lstIsClaim: $m("#lstIsClaim option:selected").text(),
                lstInDistrict: $m("#lstInDistrict option:selected").text(),
                lstMinor: $m("#lstMinor option:selected").text(),
                lstVendor: $m("#lstVendor option:selected").text(),
                lstLobbyist: $m("#lstLobbyist option:selected").text(),
                txtEmployerPCFB: $m("#txtEmployerPCFB").val(),
                txtOccupationPCFB: $m("#txtOccupationPCFB").val(),
                txtContStreetName: $m("#txtContStreetName").val(),
                txtContCity: $m("#txtContCity").val(),
                txtContState: $m("#txtContState").val(),
                txtContZipCode: $m("#txtContZipCode").val(),
                lstRContributions: $m("#lstRContributions option:selected").text(),
                lstTransactionType: $("#lstTransactionType option:selected").val()
            }, function (results) {
                if (results) {
                    if (results.Errors == null) {
                        var doneFunction = false;
                        // Close Dialog Box.
                        dialog_Sched_A.dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                        if (sessionStorage.getItem("Corporate").toString() == "Yes") { // SCHEDULE B.
                            // CHECK THE COMMITTEE TYPE IF HOUSEKEEPING THEN YOU SHOULD NOT SHOW THE MESSAGE OVER $5000
                            // IF OTHER THAN HOSUE KEEPING YOU CAN SHOW THE MESSAGE OVER $5000.
                            // CALL THE CONTROLLER METHOD TO GET THE COMMITTEE TYPE ID.
                            CheckTheCommitteeType("Corp", false);
                        } else {
                            var dialogText = 'Transaction saved successfully';
                            // OVER $2500 PARTNERSHIP MESSAGE.
                            if ($("#lstContributionName option:selected").val().toString() == "5") {
                                var varAmount = parseFloat($m("#txtAmtABC").val().toString()).toFixed(2);
                                if (varAmount > 2500.00) {
                                    dialogText = 'Transaction saved successfully. The Contribution amount of this Partnership transaction is greater than $2500. Entering Partner details is mandatory.';
                                }
                            } else if ($("#lstContributionName option:selected").val().toString() == "11") { // OVER $5000 ATTRIBUTION SCHEDULE 'C'.
                                // CHECK THE COMMITTEE TYPE IF HOUSEKEEPING THEN YOU SHOULD NOT SHOW THE MESSAGE OVER $5000
                                // IF OTHER THAN HOSUE KEEPING YOU CAN SHOW THE MESSAGE OVER $5000.
                                // CALL THE CONTROLLER METHOD TO GET THE COMMITTEE TYPE ID.
                                CheckTheCommitteeType("LLC", false);
                                dialogText = false;
                            }
                            if (dialogText) {
                                doneFunction = function () {
                                    $("#divLoading").hide();
                                    ShowDialogBox('EFS', dialogText, 'Ok', '');
                                }
                            }
                        }
                        // Saved
                        window.status = "Transaction saved successfully";
                        // Refresh the Data on Grid.
                        GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);
                    } else if (results.Errors.length >= 0) {
                        $("#divLoading").hide();
                        ClearServerSideErrors(); // Server Side Validation Clear
                        var hasAmmountError = AppendCustomErrorLabels(results.Errors);
                        if (hasAmmountError && notifyPartnershipDetailsAmmountError) {
                            ShowDialogBox('EFS', 'Amount cannot be less than partnership details amount $' + parseFloat(resultsPartnershipAmt).toFixed(2).toString(), 'Ok', '');
                        }
                    }
                }
            });
        }

        //Save  DialogBoxSchedAForm
        $("#btnSaveSchedA").bind('click', function (e) {

            // ITS COMMON EDIT FLAG WEATHER ITS COMING FROM DIFFERENT SCHEDULE TO EDIT DIFFERENT SCHEDULE
            // THEN IT WILL SET FLAG ONCE THEY CLOSE THE WINDOW OR SAVE WINDOW IT WILL REMOVE THE SESSION.
            sessionStorage.removeItem("EditFlag");

            // FOR TESTING WE REMOVED CLIENT SIDE VALIDATIONS ONCE ITS DONE PUT VALIDATION BACK.
            $m('#DialogBoxSchedAForm').valid();
            if ($m('#DialogBoxSchedAForm').valid()) {
                var valid = true;
                if (@Session["COMM_TYPE_ID"] == "23") {
                    if (sessionStorage.getItem("IndPart").toString() == "Yes") {
                        if ($("#lstContributionName option:selected").val() != "5") {
                            if ($m("#lstRContributions option:selected").text() == "Yes") {
                                if ($m("#txtEmployerPCFB").val() == "" ||
                                    $m("#txtOccupationPCFB").val() == "" ||
                                    $m("#txtContStreetName").val() == "" ||
                                    $m("#txtContCity").val() == "" ||
                                    $m("#txtContState").val() == "" ||
                                    $m("#txtContZipCode").val() == "") {
                                    valid = false;
                                }
                            }
                        }
                    }
                }

                if (sessionStorage.getItem("UpdateFlagSchedA").toString() == "No") { // Save
                    var varContrubtionName = "";
                    if (sessionStorage.getItem("Corporate").toString() != "Yes") {
                        varContrubtionName = $("#lstContributionName option:selected").val();
                    }

                    if (valid == false) {
                        // Get confirmation the DialogBox or Not.
                        var resultsCloseSchedA = "You have reported a contribution over $100 without Contributor Address, Occupation, Employer and Employer Address. Failure to provide Contributor Address, Occupation, Employer and Employer Address may be cited as a Deficiency by Compliance Review staff.";
                        $m('#modal_dialog').text(resultsCloseSchedA);
                        $m("#modal_dialog").dialog({
                            resizable: false,
                            modal: true,
                            width: '400px',
                            height: 'auto',
                            bgiframe: false,
                            closeOnEscape: false,
                            open: function (event, ui) { hideDialogXButton(this); },
                            buttons: {
                                "OK": function () {
                                    $m(this).dialog("close");
                                    $("#divLoading").show();
                                    // INSERT
                                    $.post("@Url.Content("~/ContributionsCandIndFamily/SaveFilingTransContrMonetaryData/")", {
                                        txtFilerId: $("#txtFilerID").val(),
                                        lstElectionCycle: $("#lstElectionCycle option:selected").text(),
                                        lstElectionCycleId: $("#lstElectionCycle option:selected").val(),
                                        lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                                        lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                                        lstElectionType: $("#lstElectionType option:selected").val(),
                                        lstElectionDate: $("#lstElectionDate option:selected").text(),
                                        lstElectionDateId: $("#lstElectionDate option:selected").val(),
                                        lstTransactionType: sessionStorage.getItem("TransactionType").toString(),
                                        txtDateRcvd: $m("#txtCurrentDate").val().toString(),
                                        lstContributionName: varContrubtionName,
                                        txtPartnerShipName: $m("#txtPartnerShipName").val(),
                                        txtFirstName: $m("#txtFirstName").val(),
                                        txtMI: $m("#txtMI").val(),
                                        txtLastName: $m("#txtLastName").val(),
                                        txtStreetName: $m("#txtStreetName").val(),
                                        txtCity: $m("#txtCity").val(),
                                        txtState: $m("#txtState").val(),
                                        txtZipCode: $m("#txtZipCode").val(),
                                        lstMethod: $m("#lstMethod option:selected").val(),
                                        txtCheck: $m("#txtCheck").val(),
                                        txtAmt: $m("#txtAmtABC").val(),
                                        txtExplanation: $m("#txtExplanation").val(),
                                        lstItemized: $m("#lstItemized option:selected").val(),
                                        txtCountry: $m("#txtCountry").val(),
                                        txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
                                        chkCountry: $('#chkCountry').is(':checked').toString(),
                                        validateSchedCCTC: sessionStorage.getItem("SchedCValidation").toString(),
                                        lstFilingDate: $m("#lstFilingDate option:selected").text(),
                                        txtReportPeriodDatesTo: sessionStorage.getItem("FilingDate").toString(),
                                        lstResigTermType: $m("#lstResigTermType option:selected").val(),
                                        lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
                                        lstIsClaim: $m("#lstIsClaim option:selected").text(),
                                        lstInDistrict: $m("#lstInDistrict option:selected").text(),
                                        lstMinor: $m("#lstMinor option:selected").text(),
                                        lstVendor: $m("#lstVendor option:selected").text(),
                                        lstLobbyist: $m("#lstLobbyist option:selected").text(),
                                        txtEmployerPCFB: $m("#txtEmployerPCFB").val(),
                                        txtOccupationPCFB: $m("#txtOccupationPCFB").val(),
                                        txtContStreetName: $m("#txtContStreetName").val(),
                                        txtContCity: $m("#txtContCity").val(),
                                        txtContState: $m("#txtContState").val(),
                                        txtContZipCode: $m("#txtContZipCode").val(),
                                        lstRContributions: $m("#lstRContributions option:selected").text()
                                    }, function (results) {
                                        if (results.Errors == null) {
                                            if (results == "Custom Error") {
                                                $("#divLoading").hide();
                                                ShowDialogBox('EFS', 'System Error Found. Please try again.', 'Ok', '');
                                                window.location.reload();
                                            }
                                            else {
                                                if (results == "0") {
                                                    $("#divLoading").hide();
                                                    ShowDialogBox('EFS', 'System Error Found. Please try again.', 'Ok', '');
                                                    window.location.reload();
                                                }
                                                else {
                                                    results = "Custom Error";
                                                    $("#lstItemized").focus();

                                                    // GET THE AMOUNT VALUE.
                                                    sessionStorage.setItem("LLCAmount", $m("#txtAmtABC").val().toString());
                                                    var doneFunction = false;
                                                    if (sessionStorage.getItem("Corporate").toString() == "Yes") { // SCHEDULE B.
                                                        // CHECK THE COMMITTEE TYPE IF HOUSEKEEPING THEN YOU SHOULD NOT SHOW THE MESSAGE OVER $5000
                                                        // IF OTHER THAN HOSUE KEEPING YOU CAN SHOW THE MESSAGE OVER $5000.
                                                        // CALL THE CONTROLLER METHOD TO GET THE COMMITTEE TYPE ID.
                                                        doneFunction = function () { CheckTheCommitteeType("Corp", true); }
                                                    }
                                                    else { // OTHER THAN SCHEDULE B AND SCHEDUE C WITH CONTRIBUTOR TYPE.
                                                        // OVER $2500 PARTNERSHIP MESSAGE.
                                                        if ($("#lstContributionName option:selected").val().toString() == "5") {
                                                            var varAmount = parseFloat(sessionStorage.getItem("LLCAmount").toString()).toFixed(2);
                                                            if (varAmount > 2500.00) {
                                                                doneFunction = function () { ShowDialogBox('EFS', 'Transaction saved successfully. The Contribution amount of this Partnership transaction is greater than $2500. Entering Partner details is mandatory.', 'Ok', ''); }
                                                            }
                                                            else {
                                                                doneFunction = function () { ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', ''); }
                                                            }
                                                        }
                                                        else if ($("#lstContributionName option:selected").val().toString() == "11") { // OVER $5000 ATTRIBUTION SCHEDULE 'C'.
                                                            // CHECK THE COMMITTEE TYPE IF HOUSEKEEPING THEN YOU SHOULD NOT SHOW THE MESSAGE OVER $5000
                                                            // IF OTHER THAN HOSUE KEEPING YOU CAN SHOW THE MESSAGE OVER $5000.
                                                            // CALL THE CONTROLLER METHOD TO GET THE COMMITTEE TYPE ID.
                                                            doneFunction = function () { CheckTheCommitteeType("LLC", true); }
                                                        }
                                                        else {
                                                            doneFunction = function () {
                                                                ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');
                                                            }
                                                        }
                                                    }
                                                    // Data Added Sucussfully.
                                                    window.status = "Transaction saved successfully";
                                                    //New feature. Always refresh the grid when save is successful.
                                                    GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);

                                                    var validator = $m("#DialogBoxSchedAForm").validate();
                                                    validator.resetForm();  // clear out the validation errors
                                                    $m("#DialogBoxSchedAForm")[0].reset();// clear out the form data

                                                    ResetDialogBoxSchedAFormDefaultFields();

                                                    if (@Session["COMM_TYPE_ID"] == "23") {
                                                        $("#lstItemized").prop("disabled", true);   
                                                        $("#lstIsClaim").show();
                                                        $("#lstIsClaim")[0].selectedIndex = 2;

                                                        $("#tdRContributions").show();
                                                        $("#lstRContributions")[0].selectedIndex = 1;
                                                    }
                                                    else {
                                                        $("#lstItemized").prop("disabled", false);
                                                        $("#lstIsClaim").hide();
                                                        $("#tdRContributions").hide();
                                                    }

                                                    $("#tdInDistrict").hide();
                                                    $("#tdMinor").hide();
                                                    $("#tdVendor").hide();
                                                    $("#tdLobbyist").hide();
                                                    $("#tdEmployer").hide();
                                                    $("#tdOccupation").hide();
                                                    $("#divContStreetAddress").hide();
                                                    $("#divContCity").hide();
                                                    $("#divContState").hide();
                                                    $("#divContZip5").hide();

                                                    $("#lstItemized")[0].selectedIndex = 0;
                                                    $("#lstContributionName")[0].selectedIndex = 0;
                                                    $("#lstMethod")[0].selectedIndex = 0;
                                                    $("#lblExplanation").text("Explanation");

                                                    $m("label[for=txtFirstName]").text('');
                                                    $m("#txtFirstName").removeClass("error");

                                                    $m("label[for=txtLastName]").text('');
                                                    $m("#txtLastName").removeClass("error");

                                                    var internalCommonHide = function () {
                                                        $m("#divStreetAddress").show("slow");
                                                        $m("#divCity").show("slow");
                                                        $m("#divState").show("slow");
                                                        $m("#divState").show("slow");
                                                        $m("#divZip5").show("slow");
                                                        $m("#tdMethod").show("slow");
                                                        $m("#tAmt").show("slow");
                                                        $m("#tdExplanation").show("slow");
                                                        $m("#tdCountryContributionChk").show("slow");
                                                        $m("#tdCountryContributionTxt").show("slow");
                                                        $m("#tdCheck").hide("slow");
                                                    }

                                                    if (sessionStorage.getItem("IndPart").toString() == "Yes") {
                                                        internalCommonHide();
                                                        // show/hide based on Transaction Type
                                                        $m("#tdContributionName").show("slow");
                                                        $m("#tdFirstName").show("slow");
                                                        $m("#tdMI").show("slow");
                                                        $m("#tdLastName").show("slow");
                                                        $m("#tdPartnershipName").hide("slow");
                                                        $("#lstContributionName option[value='4']").show();
                                                        $("#lstContributionName option[value='5']").show();
                                                    } else if (sessionStorage.getItem("Corporate").toString() == "Yes" || sessionStorage.getItem("Other").toString() == "Yes") {
                                                        //Common field manipulation
                                                        $("#lstIsClaim").hide();
                                                        $("#tdRContributions").hide();
                                                        $m("#tdFirstName").hide("slow");
                                                        $m("#tdMI").hide("slow");
                                                        $m("#tdLastName").hide("slow");
                                                        $m("#tdPartnershipName").show("slow");
                                                        internalCommonHide();
                                                        //Special field manipulations
                                                        if (sessionStorage.getItem("Corporate").toString() == "Yes") {
                                                            $m("#lblPartnershipName").text("* Contributor Name");
                                                            $m("#tdDateRcvd").show("slow");
                                                            $m("#tdContributionName").hide("slow");
                                                            $m("#lstItemized").prop("disabled", false);
                                                        }
                                                        else if (sessionStorage.getItem("Other").toString() == "Yes") {
                                                            // show/hide based on Transaction Type
                                                            $m("#tdContributionName").show("slow");
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        else if (results.Errors.length >= 0) {
                                            $("#divLoading").hide();
                                            ClearServerSideErrors(); // Server Side Validation Clear
                                            AppendCustomErrorLabels(results.Errors);
                                        }
                                    });
                                },
                                "Cancel": function () {
                                    // confirm close
                                    $m(this).dialog("close");
                                }
                            }
                        });
                    }
                    else {
                        // INSERT
                        $.post("@Url.Content("~/ContributionsCandIndFamily/SaveFilingTransContrMonetaryData/")", {
                            txtFilerId: $("#txtFilerID").val(),
                            lstElectionCycle: $("#lstElectionCycle option:selected").text(),
                            lstElectionCycleId: $("#lstElectionCycle option:selected").val(),
                            lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                            lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                            lstElectionType: $("#lstElectionType option:selected").val(),
                            lstElectionDate: $("#lstElectionDate option:selected").text(),
                            lstElectionDateId: $("#lstElectionDate option:selected").val(),
                            lstTransactionType: sessionStorage.getItem("TransactionType").toString(),
                            txtDateRcvd: $m("#txtCurrentDate").val().toString(),
                            lstContributionName: varContrubtionName,
                            txtPartnerShipName: $m("#txtPartnerShipName").val(),
                            txtFirstName: $m("#txtFirstName").val(),
                            txtMI: $m("#txtMI").val(),
                            txtLastName: $m("#txtLastName").val(),
                            txtStreetName: $m("#txtStreetName").val(),
                            txtCity: $m("#txtCity").val(),
                            txtState: $m("#txtState").val(),
                            txtZipCode: $m("#txtZipCode").val(),
                            lstMethod: $m("#lstMethod option:selected").val(),
                            txtCheck: $m("#txtCheck").val(),
                            txtAmt: $m("#txtAmtABC").val(),
                            txtExplanation: $m("#txtExplanation").val(),
                            lstItemized: $m("#lstItemized option:selected").val(),
                            txtCountry: $m("#txtCountry").val(),
                            txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
                            chkCountry: $('#chkCountry').is(':checked').toString(),
                            validateSchedCCTC: sessionStorage.getItem("SchedCValidation").toString(),
                            lstFilingDate: $m("#lstFilingDate option:selected").text(),
                            txtReportPeriodDatesTo: sessionStorage.getItem("FilingDate").toString(),
                            lstResigTermType: $m("#lstResigTermType option:selected").val(),
                            lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
                            lstIsClaim: $m("#lstIsClaim option:selected").text(),
                            lstInDistrict: $m("#lstInDistrict option:selected").text(),
                            lstMinor: $m("#lstMinor option:selected").text(),
                            lstVendor: $m("#lstVendor option:selected").text(),
                            lstLobbyist: $m("#lstLobbyist option:selected").text(),
                            txtEmployerPCFB: $m("#txtEmployerPCFB").val(),
                            txtOccupationPCFB: $m("#txtOccupationPCFB").val(),
                            txtContStreetName: $m("#txtContStreetName").val(),
                            txtContCity: $m("#txtContCity").val(),
                            txtContState: $m("#txtContState").val(),
                            txtContZipCode: $m("#txtContZipCode").val(),
                            lstRContributions: $m("#lstRContributions option:selected").text()
                        }, function (results) {
                            if (results.Errors == null) {
                                if (results == "Custom Error") {
                                    $("#divLoading").hide();
                                    ShowDialogBox('EFS', 'System Error Found. Please try again.', 'Ok', '');
                                    window.location.reload();
                                }
                                else {
                                    if (results == "0") {
                                        $("#divLoading").hide();
                                        ShowDialogBox('EFS', 'System Error Found. Please try again.', 'Ok', '');
                                        window.location.reload();
                                    }
                                    else {
                                        results = "Custom Error";
                                        $("#lstItemized").focus();

                                        // GET THE AMOUNT VALUE.
                                        sessionStorage.setItem("LLCAmount", $m("#txtAmtABC").val().toString());
                                        var doneFunction = false;
                                        if (sessionStorage.getItem("Corporate").toString() == "Yes") { // SCHEDULE B.
                                            // CHECK THE COMMITTEE TYPE IF HOUSEKEEPING THEN YOU SHOULD NOT SHOW THE MESSAGE OVER $5000
                                            // IF OTHER THAN HOSUE KEEPING YOU CAN SHOW THE MESSAGE OVER $5000.
                                            // CALL THE CONTROLLER METHOD TO GET THE COMMITTEE TYPE ID.
                                            doneFunction = function () { CheckTheCommitteeType("Corp", true); }
                                            if (@Session["COMM_TYPE_ID"] == "23") {
                                                $("#lstItemized").prop("disabled", true);
                                            }
                                            else {
                                                $("#lstItemized").prop("disabled", false);
                                            }
                                        }
                                        else { // OTHER THAN SCHEDULE B AND SCHEDUE C WITH CONTRIBUTOR TYPE.
                                            // OVER $2500 PARTNERSHIP MESSAGE.
                                            if ($("#lstContributionName option:selected").val().toString() == "5") {
                                                var varAmount = parseFloat(sessionStorage.getItem("LLCAmount").toString()).toFixed(2);
                                                if (varAmount > 2500.00) {
                                                    doneFunction = function () { ShowDialogBox('EFS', 'Transaction saved successfully. The Contribution amount of this Partnership transaction is greater than $2500. Entering Partner details is mandatory.', 'Ok', ''); }
                                                }
                                                else {
                                                    doneFunction = function () { ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', ''); }
                                                }
                                            }
                                            else if ($("#lstContributionName option:selected").val().toString() == "11") { // OVER $5000 ATTRIBUTION SCHEDULE 'C'.
                                                // CHECK THE COMMITTEE TYPE IF HOUSEKEEPING THEN YOU SHOULD NOT SHOW THE MESSAGE OVER $5000
                                                // IF OTHER THAN HOSUE KEEPING YOU CAN SHOW THE MESSAGE OVER $5000.
                                                // CALL THE CONTROLLER METHOD TO GET THE COMMITTEE TYPE ID.
                                                doneFunction = function () { CheckTheCommitteeType("LLC", true); }
                                            }
                                            else {
                                                doneFunction = function () {
                                                    ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');
                                                }
                                            }
                                        }
                                        // Data Added Sucussfully.
                                        window.status = "Transaction saved successfully";
                                        //New feature. Always refresh the grid when save is successful.
                                        GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);

                                        var validator = $m("#DialogBoxSchedAForm").validate();
                                        validator.resetForm();  // clear out the validation errors
                                        $m("#DialogBoxSchedAForm")[0].reset();// clear out the form data

                                        ResetDialogBoxSchedAFormDefaultFields();

                                        if (@Session["COMM_TYPE_ID"] == "23") {
                                            $("#lstItemized").prop("disabled", true);   
                                            $("#lstIsClaim").show();
                                            $("#lstIsClaim")[0].selectedIndex = 2;

                                            $("#tdRContributions").show();
                                            $("#lstRContributions")[0].selectedIndex = 1;
                                        }
                                        else {
                                            $("#lstItemized").prop("disabled", false);
                                            $("#lstIsClaim").hide();
                                            $("#tdRContributions").hide();
                                        }

                                        $("#tdInDistrict").hide();
                                        $("#tdMinor").hide();
                                        $("#tdVendor").hide();
                                        $("#tdLobbyist").hide();
                                        $("#tdEmployer").hide();
                                        $("#tdOccupation").hide();
                                        $("#divContStreetAddress").hide();
                                        $("#divContCity").hide();
                                        $("#divContState").hide();
                                        $("#divContZip5").hide();

                                        $("#lstItemized")[0].selectedIndex = 0;
                                        $("#lstContributionName")[0].selectedIndex = 0;
                                        $("#lstMethod")[0].selectedIndex = 0;
                                        $("#lblExplanation").text("Explanation");

                                        $m("label[for=txtFirstName]").text('');
                                        $m("#txtFirstName").removeClass("error");

                                        $m("label[for=txtLastName]").text('');
                                        $m("#txtLastName").removeClass("error");

                                        var internalCommonHide = function () {
                                            $m("#divStreetAddress").show("slow");
                                            $m("#divCity").show("slow");
                                            $m("#divState").show("slow");
                                            $m("#divState").show("slow");
                                            $m("#divZip5").show("slow");
                                            $m("#tdMethod").show("slow");
                                            $m("#tAmt").show("slow");
                                            $m("#tdExplanation").show("slow");
                                            $m("#tdCountryContributionChk").show("slow");
                                            $m("#tdCountryContributionTxt").show("slow");
                                            $m("#tdCheck").hide("slow");
                                        }

                                        if (sessionStorage.getItem("IndPart").toString() == "Yes") {
                                            internalCommonHide();
                                            // show/hide based on Transaction Type
                                            $m("#tdContributionName").show("slow");
                                            $m("#tdFirstName").show("slow");
                                            $m("#tdMI").show("slow");
                                            $m("#tdLastName").show("slow");
                                            $m("#tdPartnershipName").hide("slow");
                                            $("#lstContributionName option[value='4']").show();
                                            $("#lstContributionName option[value='5']").show();
                                        } else if (sessionStorage.getItem("Corporate").toString() == "Yes" || sessionStorage.getItem("Other").toString() == "Yes") {
                                            //Common field manipulation
                                            $("#lstIsClaim").hide();
                                            $("#tdRContributions").hide();
                                            $m("#tdFirstName").hide("slow");
                                            $m("#tdMI").hide("slow");
                                            $m("#tdLastName").hide("slow");
                                            $m("#tdPartnershipName").show("slow");
                                            internalCommonHide();
                                            //Special field manipulations
                                            if (sessionStorage.getItem("Corporate").toString() == "Yes") {
                                                $m("#lblPartnershipName").text("* Contributor Name");
                                                $m("#tdDateRcvd").show("slow");
                                                $m("#tdContributionName").hide("slow");
                                                //$m("#lstItemized").prop("disabled", false);
                                            }
                                            else if (sessionStorage.getItem("Other").toString() == "Yes") {
                                                // show/hide based on Transaction Type
                                                $m("#tdContributionName").show("slow");
                                            }
                                        }
                                    }
                                }
                            }
                            else if (results.Errors.length >= 0) {
                                $("#divLoading").hide();
                                ClearServerSideErrors(); // Server Side Validation Clear
                                AppendCustomErrorLabels(results.Errors);
                            }
                        });
                    }
                    if (@Session["COMM_TYPE_ID"] == "23") {
                        $("#lstItemized").prop("disabled", true);
                    }
                    else {
                        $("#lstItemized").prop("disabled", false);
                    }
                }
                // Update
                else if (sessionStorage.getItem("UpdateFlagSchedA").toString() == "Yes") {
                    // UPDATE UPDATE UPDATE SCHEDULE A, B, AND C.
                    $m('#DialogBoxSchedAForm').valid();
                    if ($m('#DialogBoxSchedAForm').valid()) { // TESTING SERVER SIDE VALIDATIONS REMOVE AFTER TESTING.

                        if (valid == false) {
                            // Get confirmation the DialogBox or Not.
                            var resultsCloseSchedA = "You have reported a contribution over $100 without Contributor Address, Occupation, Employer and Employer Address. Failure to provide Contributor Address, Occupation, Employer and Employer Address may be cited as a Deficiency by Compliance Review staff.";
                            $m('#modal_dialog').text(resultsCloseSchedA);
                            $m("#modal_dialog").dialog({
                                resizable: false,
                                modal: true,
                                width: '400px',
                                height: 'auto',
                                bgiframe: false,
                                closeOnEscape: false,
                                open: function (event, ui) { hideDialogXButton(this); },
                                buttons: {
                                    "OK": function () {
                                        $m(this).dialog("close");
                                        $("#divLoading").show();
                                        $("#divShowPartnerAdddataNCR").hide();
                                        $("#divShowAttributionSchedC").hide();

                                        var varContrubtionName = "";
                                        if (sessionStorage.getItem("Corporate").toString() != "Yes") {
                                            varContrubtionName = $("#lstContributionName option:selected").val();
                                        }
                                        // GET THE AMOUNT VALUE.
                                        sessionStorage.setItem("LLCAmount", $m("#txtAmtABC").val().toString());
                                        // SCHEDULE 'A' PARTNERSHIP. AND SCHEDULE 'C' ATTRIBUTION.
                                        if ($("#lstContributionName option:selected").val().toString() == "5" || $("#lstContributionName option:selected").val().toString() == "11") {
                                            // GET AMOUNT.
                                            $m.post("@Url.Content("~/ContributionsCandIndFamily/GetPartnershipTotAmt/")", {
                                                strTransNumber: sessionStorage.getItem("TransNumber").toString()
                                            }, function (result) {
                                                if (result != "") {
                                                    var resultsPartnershipAmt = result.toString();
                                                    var originalAmt = $m("#txtAmtABC").val().toString();
                                                    if (parseFloat(originalAmt) >= parseFloat(resultsPartnershipAmt)) {

                                                        // ADD VALIDATION IF ANY CONTRIBUTION REFUNDS THERE THEN...
                                                        // THEY SHOULD NOT REDUCE LESSER THAN REFUNDS.
                                                        $m.post("@Url.Content("~/ContributionsCandIndFamily/GetContrRefundedTotalAmt/")", {
                                                            strTransNumber: sessionStorage.getItem("TransNumber").toString()
                                                        }, function (resultRefundedAmt) {
                                                            var updatedAmount = $("#txtAmtABC").val().toString();
                                                            if (parseFloat(updatedAmount) >= parseFloat(resultRefundedAmt.toString())) {
                                                                //Calls UpdateFlngTransMonetaryContrData and refreshes the "tableFilingTransactions" grid using GetAllTransactionTypesData.
                                                                UpdateFlngTransMonetaryContrData(varContrubtionName, true);
                                                            }
                                                            else {
                                                                ShowDialogBox('EFS', 'Contributions Refunded (Decreases Balance) Added for Contributions Payment Amount should not be less than Contributions Refunded (Decreases Balance) Amount $' + parseFloat(resultRefundedAmt).toFixed(2).toString(), 'Ok', '');
                                                                $("#divLoading").hide();
                                                            }
                                                        });
                                                    }
                                                    else {
                                                        if ($("#lstContributionName option:selected").val().toString() == "5") {
                                                            ShowDialogBox('EFS', 'Amount cannot be less than partnership details amount $' + parseFloat(resultsPartnershipAmt).toFixed(2).toString(), 'Ok', '');
                                                        }
                                                        else {
                                                            ShowDialogBox('EFS', 'Amount cannot be less than attribution details amount $' + parseFloat(resultsPartnershipAmt).toFixed(2).toString(), 'Ok', '');
                                                        }
                                                        $("#divLoading").hide();
                                                    }
                                                }
                                                else { //Schedule 'A' With Parternship With No Records with Partnership Details.
                                                    // ADD VALIDATION IF ANY CONTRIBUTION REFUNDS THERE THEN...
                                                    // THEY SHOULD NOT REDUCE LESSER THAN REFUNDS.
                                                    $m.post("@Url.Content("~/ContributionsCandIndFamily/GetContrRefundedTotalAmt/")", {
                                                        strTransNumber: sessionStorage.getItem("TransNumber").toString()
                                                    }, function (resultRefundedAmt) {
                                                        var updatedAmount = $("#txtAmtABC").val().toString();
                                                        if (parseFloat(updatedAmount) >= parseFloat(resultRefundedAmt.toString())) {

                                                            //Calls UpdateFlngTransMonetaryContrData and refreshes the "tableFilingTransactions" grid using GetAllTransactionTypesData.
                                                            UpdateFlngTransMonetaryContrData(varContrubtionName, false);
                                                        }
                                                        else {
                                                            ShowDialogBox('EFS', 'Contributions Refunded (Decreases Balance) Added for Contributions Payment Amount should not be less than Contributions Refunded (Decreases Balance) Amount $' + parseFloat(resultRefundedAmt).toFixed(2).toString(), 'Ok', '');
                                                            $("#divLoading").hide();
                                                        }
                                                    });
                                                }
                                            });
                                        }
                                        else {  // WITHOUT PARTNERSHIP DETAILS EDIT SCHEDULE A TRANSACTIONS
                                            // ADD VALIDATION IF ANY CONTRIBUTION REFUNDS THERE THEN...
                                            // THEY SHOULD NOT REDUCE LESSER THAN REFUNDS.
                                            $m.post("@Url.Content("~/ContributionsCandIndFamily/GetContrRefundedTotalAmt/")", {
                                                strTransNumber: sessionStorage.getItem("TransNumber").toString()
                                            }, function (resultRefundedAmt) {
                                                var updatedAmount = $("#txtAmtABC").val().toString();
                                                if (parseFloat(updatedAmount) >= parseFloat(resultRefundedAmt.toString())) {

                                                    //Calls UpdateFlngTransMonetaryContrData and refreshes the "tableFilingTransactions" grid using GetAllTransactionTypesData.
                                                    UpdateFlngTransMonetaryContrData(varContrubtionName, false);
                                                }
                                                else {
                                                    ShowDialogBox('EFS', 'Contributions Refunded (Decreases Balance) Added for Contributions Payment Amount should not be less than Contributions Refunded (Decreases Balance) Amount $' + parseFloat(resultRefundedAmt).toFixed(2).toString(), 'Ok', '');
                                                    $("#divLoading").hide();
                                                }
                                            });
                                        }
                                        if (@Session["COMM_TYPE_ID"] == "23") {
                                            $("#lstItemized").prop("disabled", true);
                                        }
                                        else {
                                            $("#lstItemized").prop("disabled", false);
                                        }
                                    },
                                    "Cancel": function () {
                                        // confirm close
                                        $m(this).dialog("close");
                                        $("#divLoading").hide();
                                    }
                                }
                            });
                        }
                        else {
                            $("#divShowPartnerAdddataNCR").hide();
                            $("#divShowAttributionSchedC").hide();

                            var varContrubtionName = "";
                            if (sessionStorage.getItem("Corporate").toString() != "Yes") {
                                varContrubtionName = $("#lstContributionName option:selected").val();
                            }
                            // GET THE AMOUNT VALUE.
                            sessionStorage.setItem("LLCAmount", $m("#txtAmtABC").val().toString());
                            // SCHEDULE 'A' PARTNERSHIP. AND SCHEDULE 'C' ATTRIBUTION.
                            if ($("#lstContributionName option:selected").val().toString() == "5" || $("#lstContributionName option:selected").val().toString() == "11") {
                                // GET AMOUNT.
                                $m.post("@Url.Content("~/ContributionsCandIndFamily/GetPartnershipTotAmt/")", {
                                    strTransNumber: sessionStorage.getItem("TransNumber").toString()
                                }, function (result) {
                                    if (result != "") {
                                        var resultsPartnershipAmt = result.toString();
                                        var originalAmt = $m("#txtAmtABC").val().toString();
                                        if (parseFloat(originalAmt) >= parseFloat(resultsPartnershipAmt)) {

                                            // ADD VALIDATION IF ANY CONTRIBUTION REFUNDS THERE THEN...
                                            // THEY SHOULD NOT REDUCE LESSER THAN REFUNDS.
                                            $m.post("@Url.Content("~/ContributionsCandIndFamily/GetContrRefundedTotalAmt/")", {
                                                strTransNumber: sessionStorage.getItem("TransNumber").toString()
                                            }, function (resultRefundedAmt) {
                                                var updatedAmount = $("#txtAmtABC").val().toString();
                                                if (parseFloat(updatedAmount) >= parseFloat(resultRefundedAmt.toString())) {
                                                    //Calls UpdateFlngTransMonetaryContrData and refreshes the "tableFilingTransactions" grid using GetAllTransactionTypesData.
                                                    UpdateFlngTransMonetaryContrData(varContrubtionName, true);
                                                }
                                                else {
                                                    ShowDialogBox('EFS', 'Contributions Refunded (Decreases Balance) Added for Contributions Payment Amount should not be less than Contributions Refunded (Decreases Balance) Amount $' + parseFloat(resultRefundedAmt).toFixed(2).toString(), 'Ok', '');
                                                    $("#divLoading").hide();
                                                }
                                            });
                                        }
                                        else {
                                            if ($("#lstContributionName option:selected").val().toString() == "5") {
                                                ShowDialogBox('EFS', 'Amount cannot be less than partnership details amount $' + parseFloat(resultsPartnershipAmt).toFixed(2).toString(), 'Ok', '');
                                            }
                                            else {
                                                ShowDialogBox('EFS', 'Amount cannot be less than attribution details amount $' + parseFloat(resultsPartnershipAmt).toFixed(2).toString(), 'Ok', '');
                                            }
                                            $("#divLoading").hide();
                                        }
                                    }
                                    else { //Schedule 'A' With Parternship With No Records with Partnership Details.
                                        // ADD VALIDATION IF ANY CONTRIBUTION REFUNDS THERE THEN...
                                        // THEY SHOULD NOT REDUCE LESSER THAN REFUNDS.
                                        $m.post("@Url.Content("~/ContributionsCandIndFamily/GetContrRefundedTotalAmt/")", {
                                            strTransNumber: sessionStorage.getItem("TransNumber").toString()
                                        }, function (resultRefundedAmt) {
                                            var updatedAmount = $("#txtAmtABC").val().toString();
                                            if (parseFloat(updatedAmount) >= parseFloat(resultRefundedAmt.toString())) {

                                                //Calls UpdateFlngTransMonetaryContrData and refreshes the "tableFilingTransactions" grid using GetAllTransactionTypesData.
                                                UpdateFlngTransMonetaryContrData(varContrubtionName, false);
                                            }
                                            else {
                                                ShowDialogBox('EFS', 'Contributions Refunded (Decreases Balance) Added for Contributions Payment Amount should not be less than Contributions Refunded (Decreases Balance) Amount $' + parseFloat(resultRefundedAmt).toFixed(2).toString(), 'Ok', '');
                                                $("#divLoading").hide();
                                            }
                                        });
                                    }
                                });
                            }
                            else {  // WITHOUT PARTNERSHIP DETAILS EDIT SCHEDULE A TRANSACTIONS
                                // ADD VALIDATION IF ANY CONTRIBUTION REFUNDS THERE THEN...
                                // THEY SHOULD NOT REDUCE LESSER THAN REFUNDS.
                                $m.post("@Url.Content("~/ContributionsCandIndFamily/GetContrRefundedTotalAmt/")", {
                                    strTransNumber: sessionStorage.getItem("TransNumber").toString()
                                }, function (resultRefundedAmt) {
                                    var updatedAmount = $("#txtAmtABC").val().toString();
                                    if (parseFloat(updatedAmount) >= parseFloat(resultRefundedAmt.toString())) {

                                        //Calls UpdateFlngTransMonetaryContrData and refreshes the "tableFilingTransactions" grid using GetAllTransactionTypesData.
                                        UpdateFlngTransMonetaryContrData(varContrubtionName, false);
                                    }
                                    else {
                                        ShowDialogBox('EFS', 'Contributions Refunded (Decreases Balance) Added for Contributions Payment Amount should not be less than Contributions Refunded (Decreases Balance) Amount $' + parseFloat(resultRefundedAmt).toFixed(2).toString(), 'Ok', '');
                                        $("#divLoading").hide();
                                    }
                                });
                            }
                            
                        }
                    }
                }
            } // IF VALIDATION FAILED.
            else {
                // HIDE THE PROCESSING....
                $("#divLoading").hide();
            }
        });

        // Save Schedule 'A' Partnership Data.
        // Updates the grid on every save.
        $m("#btnSaveSchedAPartners").click(function () {
            $m('#DialogBoxSchedAPartnershipForm').valid();
            if ($m('#DialogBoxSchedAPartnershipForm').valid()) {

                var valid = true;
                if (@Session["COMM_TYPE_ID"] == "23") {
                    if ($("#lstIndividualPart option:selected").val() == "Y") {
                        if ($m("#lstPartRContributions option:selected").text() == "Yes") {
                            if ($m("#txtPartEmployer").val() == "" ||
                                $m("#txtPartOccupation").val() == "" ||
                                $m("#txtPartContStreetName").val() == "" ||
                                $m("#txtPartContCity").val() == "" ||
                                $m("#txtPartContState").val() == "" ||
                                $m("#txtPartContZipCode").val() == "") {
                                valid = false;
                            }
                        }
                    }
                }
                
                if (valid == false) {
                    // Get confirmation the DialogBox or Not.
                    var resultsCloseSchedA = "You have reported a contribution over $100 without Contributor Address, Occupation, Employer and Employer Address. Failure to provide Contributor Address, Occupation, Employer and Employer Address may be cited as a Deficiency by Compliance Review staff.";
                    $m('#modal_dialog').text(resultsCloseSchedA);
                    $m("#modal_dialog").dialog({
                        resizable: false,
                        modal: true,
                        width: '400px',
                        height: 'auto',
                        bgiframe: false,
                        closeOnEscape: false,
                        open: function (event, ui) { hideDialogXButton(this); },
                        buttons: {
                            "OK": function () {
                                $m(this).dialog("close");
                                $("#divLoading").show();
                                // INSERT
                                var SaveSchedAPartnersDataParams = {
                    strTransNumber: sessionStorage.getItem("TransIdPartnership").toString(),
                    strFilingSchedId: sessionStorage.getItem("FilingSchedId").toString(),
                    strFilingSchedDate: sessionStorage.getItem("FilingSchedDate").toString(),
                    txtFilerId: $("#txtFilerID").val(),
                    lstElectionCycle: $("#lstElectionCycle option:selected").text(),
                    lstElectionCycleId: $("#lstElectionCycle option:selected").val(),
                    lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                    lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                    lstElectionType: $("#lstElectionType option:selected").val(),
                    lstElectionDate: $("#lstElectionDate option:selected").text(),
                    txtPartnerName: $("#txtPartnerName").val(),
                    txtPartFirstName: $("#txtPartFirstName").val(),
                    txtPartMI: $m("#txtPartMI").val(),
                    txtPartLastName: $m("#txtPartLastName").val(),
                    txtPartStreetName: $m("#txtPartStreetName").val(),
                    txtPartCity: $m("#txtPartCity").val(),
                    txtPartState: $m("#txtPartState").val(),
                    txtPartZip5: $m("#txtPartZip5").val(),
                    txtPartAmt: $m("#txtPartAmtAC").val(),
                    txtPartExplanationInKind: $m("#txtPartExplanationInKind").val(),
                    lstItemizedPart: $("#lstItemizedPart option:selected").val(),
                    txtCountryPartnership: $m("#txtCountryPartnership").val(),
                    lstIndividualPart: $("#lstIndividualPart option:selected").val(),
                    chkCountryPartnership: $('#chkCountryPartnership').is(':checked').toString(),
                    outOrginalAmount: sessionStorage.getItem("IndFamPartnershipAmt").toString(),
                    recordCount: sessionStorage.getItem("PartnershipRecCount").toString(),
                    txtEmployerPCFB: $m("#txtPartEmployer").val(),
                    txtOccupationPCFB: $m("#txtPartOccupation").val(),
                    txtContStreetName: $m("#txtPartContStreetName").val(),
                    txtContCity: $m("#txtPartContCity").val(),
                    txtContState: $m("#txtPartContState").val(),
                    txtContZipCode: $m("#txtPartContZipCode").val(),
                    lstRContributions: $m("#lstPartRContributions option:selected").text()
                };
                //Clears the form fields.
                var showTransactionSavedSuccessfullyHideLoading = function () {
                    $("#divLoading").hide();
                    ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');
                }
                var doneFunction = function () {
                    if (sessionStorage.getItem("Other").toString() == "Yes") {
                        $("#lstIndividualPart").focus();
                    }
                    else {
                        $("#lstItemizedPart").focus();
                    }
                    window.status = "Transaction saved successfully";
                    var validator = $m("#DialogBoxSchedAPartnershipForm").validate();
                    validator.resetForm();  // clear out the validation errors
                    $m("#DialogBoxSchedAPartnershipForm")[0].reset();   // clear out the form data

                    $("#txtCountryPartnership").val("United States");
                    $("#txtCountryPartnership").prop("disabled", true);
                    $("#chkCountryPartnership").prop('checked', false);
                    $("#txtSttxtPartStateate").prop('maxLength', '2');

                    //Reset Common Fields fields for DialogBoxSchedAPartnershipForm
                    ResetDialogBoxSchedAPartnershipFormDefaultFields();

                    $m("label[for=txtPartAmtAC]").text('');
                    $m("#txtPartAmtAC").removeClass("error");

                    $("#txtCurrentDate").blur();
                    $("#txtPartAmtAC").blur();                    

                    if (@Session["COMM_TYPE_ID"] == "23") {
                            if (sessionStorage.getItem("Other").toString() == "Yes") { // SCHEDULE 'C'.
                                // Fill the Auto fill data.
                                $("#txtCurrentDatePartAttr").prop("disabled", true);
                                $("#txtCurrentDatePartAttr").val(sessionStorage.getItem("DateReceivedAttr").toString());
                                $("#tdPartRContributions").show();
                                $("#lstPartRContributions")[0].selectedIndex = 1;
                                $("#tdPartEmployer").hide();
                                $("#tdPartOccupation").hide();
                                $("#divPartContStreetAddress").hide();
                                $("#divPartContCity").hide();
                                $("#divPartContState").hide();
                                $("#divPartContZip5").hide();
                            }
                        }
                        else {
                            if (sessionStorage.getItem("Other").toString() == "Yes") { // SCHEDULE 'C'.
                                // Fill the Auto fill data.
                                $("#txtCurrentDatePartAttr").prop("disabled", true);
                                $("#txtCurrentDatePartAttr").val(sessionStorage.getItem("DateReceivedAttr").toString());
                                $("#tdPartRContributions").hide();                                
                            }
                        }

                    // For Defect 707 Refresh other Data on Grid because you just canceled the edit or save function.
                    if (sessionStorage.getItem("Other").toString() != "Yes") {
                        // Refresh the Data on Grid.
                        GetSchedAPartnersData(true, tablePartners, false, false);
                        // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
                        GetPartnershipTotAmt("#lblPartnershipAmt", false);
                    }
                    else { // SCHEDULE 'C'.
                        // Refresh the Data on Grid.  Hides loading in the showTransactionSavedSuccessfullyHideLoading function .
                        GetSchedAPartnersData(true, tableAttribution, false, showTransactionSavedSuccessfullyHideLoading);
                        // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
                        GetPartnershipTotAmt("#lblAttributionAmt", false);
                    }
                };
                var displayAmmountErrorMessage = function (ammountToDisplay) {
                    $("#divLoading").hide();
                    if (sessionStorage.getItem("Other").toString() == "Yes") {
                        $("#txtPartAmtAC").select();
                        if ($("#txtPartAmtAC").val().toString() != "") {
                            ShowDialogBox('EFS', 'Attribution Amount cannot be more than total LLC Contribution $' + ammountToDisplay, 'Ok', '');
                        }
                    } else {
                        ShowDialogBox('EFS', 'Attributed Amount should not be more Partnership Contribution $' + ammountToDisplay, 'Ok', '');
                    }
                };
                $("#divLoading").show();
                // Try to Save Data..
                                if (sessionStorage.getItem("UpdateFlagSchedAPart").toString() == "No") { // Save
                                    $.post("@Url.Content("~/ContributionsCandIndFamily/GetPartnershipTotAmt/")", {
                                        strTransNumber: sessionStorage.getItem("TransIdPartnership")
                                    }, function (result) {
                                        var expIndFamPartnershipAmt = sessionStorage.getItem("IndFamPartnershipAmt").toString();
                                        var expPayAmount = ($("#txtPartAmtAC").val().toString() == "999999999.99" || $("#txtPartAmtAC").val().toString() == "") ? "0" : $("#txtPartAmtAC").val().toString();
                                        if (result != "") {
                                            expIndFamPartnershipAmt = parseFloat(expIndFamPartnershipAmt) - parseFloat(result);
                                            if (parseFloat(expPayAmount) <= parseFloat(expIndFamPartnershipAmt).toFixed(2)) {
                                                $.post("@Url.Content("~/ContributionsCandIndFamily/SaveSchedAPartnersData/")",
                                                    SaveSchedAPartnersDataParams,
                                                    function (results) {
                                                        if (results.Errors == null) {
                                                            //Custom code not found in doneFunction.
                                                            if (sessionStorage.getItem("Other").toString() == "Yes") { // SCHEDULE 'C'.
                                                                // BY DEFAULT STATE "NEW YORK".
                                                                $("#txtPartState").val("NY");
                                                            }
                                                            //Refresh the Data on Grid. Hides loading in the doneFunction.
                                                            ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');
                                                            GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);
                                                        } else if (results.Errors.length >= 0) {
                                                            ClearServerSideErrorsPartnership(); // Server Side Validation Clear
                                                            var hasAmmountError = AppendCustomErrorLabels(results.Errors);
                                                            if (hasAmmountError) {
                                                                displayAmmountErrorMessage(parseFloat(expIndFamPartnershipAmt).toFixed(2).toString());
                                                            } else {
                                                                $("#divLoading").hide();
                                                            }
                                                        }
                                                    });
                                            } else {
                                                displayAmmountErrorMessage(parseFloat(expIndFamPartnershipAmt).toFixed(2).toString());
                                            }
                                        } else {
                                            if (parseFloat(expPayAmount) <= parseFloat(expIndFamPartnershipAmt).toFixed(2)) {
                                                $.post("@Url.Content("~/ContributionsCandIndFamily/SaveSchedAPartnersData/")",
                                                    SaveSchedAPartnersDataParams,
                                                    function (results) {
                                                        if (results.Errors == null) {
                                                            //Refresh the Data on Grid. Hides loading in the doneFunction.
                                                            ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');
                                                            GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);

                                                        } else if (results.Errors.length >= 0) {
                                                            ClearServerSideErrorsPartnership(); // Server Side Validation Clear
                                                            var hasAmmountError = AppendCustomErrorLabels(results.Errors);
                                                            if (hasAmmountError) {
                                                                displayAmmountErrorMessage(parseFloat(sessionStorage.getItem("IndFamPartnershipAmt").toString()).toFixed(2).toString());
                                                            } else {
                                                                $("#divLoading").hide();
                                                            }
                                                        }
                                                    });
                                            } else {
                                                displayAmmountErrorMessage(parseFloat(sessionStorage.getItem("IndFamPartnershipAmt").toString()).toFixed(2).toString());
                                            }
                                        }
                                    }).fail(function () {
                                        $("#divLoading").hide();///GetPartnershipTotAmt failed
                                    });
                                } else if (sessionStorage.getItem("UpdateFlagSchedAPart").toString() == "Yes") { /// Update Data.
                                    $.post("@Url.Content("~/ContributionsCandIndFamily/GetPartnershipTotAmt/")", {
                                        strTransNumber: sessionStorage.getItem("TransIdPartnership")
                                    }, function (result) {
                                        if (result != "") {
                                            var partnershipAmount = sessionStorage.getItem("IndFamPartnershipAmt").toString();
                                            var partnershipAttrAmount = sessionStorage.getItem("PartnershipAttrAmount").toString();
                                            var resultOut = parseFloat(result) - parseFloat(partnershipAttrAmount);
                                            var totalExpPayAmt = parseFloat(partnershipAmount) - parseFloat(resultOut);
                                            var expPayAmount = $("#txtPartAmtAC").val().toString();
                                            if (parseFloat(expPayAmount) <= parseFloat(totalExpPayAmt).toFixed(2)) { // REMOVE SERVER SIDE TESTING DONE.
                                                $.post("@Url.Content("~/ContributionsCandIndFamily/UpdateSchedAPartnersData/")", {
                                                    strTransNumber: sessionStorage.getItem("TransNumberPartnership").toString(),
                                                    strFilingEntityId: sessionStorage.getItem("FilingEntityIdPartner").toString(),
                                                    txtPartshiptName: $("#txtPartnerName").val().toString(),
                                                    txtPartFirstName: $("#txtPartFirstName").val(),
                                                    txtPartMI: $m("#txtPartMI").val(),
                                                    txtPartLastName: $m("#txtPartLastName").val(),
                                                    txtPartStreetName: $m("#txtPartStreetName").val(),
                                                    txtPartCity: $m("#txtPartCity").val(),
                                                    txtPartState: $m("#txtPartState").val(),
                                                    txtPartZip5: $m("#txtPartZip5").val(),
                                                    txtPartAmt: $m("#txtPartAmtAC").val(),
                                                    txtPartExplanationInKind: $m("#txtPartExplanationInKind").val(),
                                                    txtCountryPartnership: $m("#txtCountryPartnership").val(),
                                                    lstItemizedPart: $("#lstItemizedPart option:selected").val(),
                                                    lstIndividualPart: $("#lstIndividualPart option:selected").val(),
                                                    chkCountryPartnership: $('#chkCountryPartnership').is(':checked').toString(),
                                                    outOrginalAmount: sessionStorage.getItem("IndFamPartnershipAmt").toString(),
                                                    recordCount: sessionStorage.getItem("PartnershipRecCount").toString(),
                                                    existingAmount: sessionStorage.getItem("PartnershipAttrAmount").toString(),
                                                    strFilingSchedId: sessionStorage.getItem("ScheduleCSchedId").toString(),
                                                    txtEmployerPCFB: $m("#txtPartEmployer").val(),
                                                    txtOccupationPCFB: $m("#txtPartOccupation").val(),
                                                    txtContStreetName: $m("#txtPartContStreetName").val(),
                                                    txtContCity: $m("#txtPartContCity").val(),
                                                    txtContState: $m("#txtPartContState").val(),
                                                    txtContZipCode: $m("#txtPartContZipCode").val(),
                                                    lstRContributions: $m("#lstPartRContributions option:selected").text()
                                                }, function (results) {
                                                    if (results.Errors == null) {
                                                        dialogPartner.dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                                        window.status = "Transaction saved successfully";

                                                        if (sessionStorage.getItem("Other").toString() != "Yes") {
                                                            // Reload Partners Grid
                                                            // Refresh the Data on Grid. Hides loading in the showTransactionSavedSuccessfullyHideLoading function.
                                                            GetSchedAPartnersData(true, tablePartners, false, showTransactionSavedSuccessfullyHideLoading);
                                                            // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
                                                            GetPartnershipTotAmt("#lblPartnershipAmt", true);
                                                        }
                                                        else {
                                                            // Reload Partners Grid
                                                            // Refresh the Data on Grid. Hides loading in the showTransactionSavedSuccessfullyHideLoading function.
                                                            GetSchedAPartnersData(true, tableAttribution, false, showTransactionSavedSuccessfullyHideLoading);
                                                            // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
                                                            GetPartnershipTotAmt("#lblAttributionAmt", true);
                                                        }

                                                    } else if (results.Errors.length >= 0) {
                                                        ClearServerSideErrorsPartnership(); // Server Side Validation Clear
                                                        var hasAmmountError = AppendCustomErrorLabels(results.Errors);
                                                        if (hasAmmountError) {
                                                            displayAmmountErrorMessage(parseFloat(totalExpPayAmt).toFixed(2).toString());
                                                        } else {
                                                            $("#divLoading").hide();
                                                        }
                                                    }
                                                });
                                            } else {
                                                displayAmmountErrorMessage(parseFloat(totalExpPayAmt).toFixed(2).toString());
                                            }
                                        }
                                    }).fail(function () {
                                        $("#divLoading").hide();///GetPartnershipTotAmt failed
                                    });
                                } else { $("#divLoading").hide(); }
                            },
                            "Cancel": function () {
                                // confirm close
                                $m(this).dialog("close");
                            }
                        }
                    });
                }
                else {
                    var SaveSchedAPartnersDataParams = {
                        strTransNumber: sessionStorage.getItem("TransIdPartnership").toString(),
                        strFilingSchedId: sessionStorage.getItem("FilingSchedId").toString(),
                        strFilingSchedDate: sessionStorage.getItem("FilingSchedDate").toString(),
                        txtFilerId: $("#txtFilerID").val(),
                        lstElectionCycle: $("#lstElectionCycle option:selected").text(),
                        lstElectionCycleId: $("#lstElectionCycle option:selected").val(),
                        lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                        lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                        lstElectionType: $("#lstElectionType option:selected").val(),
                        lstElectionDate: $("#lstElectionDate option:selected").text(),
                        txtPartnerName: $("#txtPartnerName").val(),
                        txtPartFirstName: $("#txtPartFirstName").val(),
                        txtPartMI: $m("#txtPartMI").val(),
                        txtPartLastName: $m("#txtPartLastName").val(),
                        txtPartStreetName: $m("#txtPartStreetName").val(),
                        txtPartCity: $m("#txtPartCity").val(),
                        txtPartState: $m("#txtPartState").val(),
                        txtPartZip5: $m("#txtPartZip5").val(),
                        txtPartAmt: $m("#txtPartAmtAC").val(),
                        txtPartExplanationInKind: $m("#txtPartExplanationInKind").val(),
                        lstItemizedPart: $("#lstItemizedPart option:selected").val(),
                        txtCountryPartnership: $m("#txtCountryPartnership").val(),
                        lstIndividualPart: $("#lstIndividualPart option:selected").val(),
                        chkCountryPartnership: $('#chkCountryPartnership').is(':checked').toString(),
                        outOrginalAmount: sessionStorage.getItem("IndFamPartnershipAmt").toString(),
                        recordCount: sessionStorage.getItem("PartnershipRecCount").toString(),
                        txtEmployerPCFB: $m("#txtPartEmployer").val(),
                        txtOccupationPCFB: $m("#txtPartOccupation").val(),
                        txtContStreetName: $m("#txtPartContStreetName").val(),
                        txtContCity: $m("#txtPartContCity").val(),
                        txtContState: $m("#txtPartContState").val(),
                        txtContZipCode: $m("#txtPartContZipCode").val(),
                        lstRContributions: $m("#lstPartRContributions option:selected").text()
                    };
                    //Clears the form fields.
                    var showTransactionSavedSuccessfullyHideLoading = function () {
                        $("#divLoading").hide();
                        ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');
                    }
                    var doneFunction = function () {
                        if (sessionStorage.getItem("Other").toString() == "Yes") {
                            $("#lstIndividualPart").focus();
                        }
                        else {
                            $("#lstItemizedPart").focus();
                        }
                        window.status = "Transaction saved successfully";
                        var validator = $m("#DialogBoxSchedAPartnershipForm").validate();
                        validator.resetForm();  // clear out the validation errors
                        $m("#DialogBoxSchedAPartnershipForm")[0].reset();   // clear out the form data

                        $("#txtCountryPartnership").val("United States");
                        $("#txtCountryPartnership").prop("disabled", true);
                        $("#chkCountryPartnership").prop('checked', false);
                        $("#txtSttxtPartStateate").prop('maxLength', '2');

                        //Reset Common Fields fields for DialogBoxSchedAPartnershipForm
                        ResetDialogBoxSchedAPartnershipFormDefaultFields();

                        $m("label[for=txtPartAmtAC]").text('');
                        $m("#txtPartAmtAC").removeClass("error");

                        $("#txtCurrentDate").blur();
                        $("#txtPartAmtAC").blur();                       

                        if (@Session["COMM_TYPE_ID"] == "23") {
                            if (sessionStorage.getItem("Other").toString() == "Yes") { // SCHEDULE 'C'.
                                // Fill the Auto fill data.
                                $("#txtCurrentDatePartAttr").prop("disabled", true);
                                $("#txtCurrentDatePartAttr").val(sessionStorage.getItem("DateReceivedAttr").toString());
                                $("#tdPartRContributions").show();
                                $("#lstPartRContributions")[0].selectedIndex = 1;
                                $("#tdPartEmployer").hide();
                                $("#tdPartOccupation").hide();
                                $("#divPartContStreetAddress").hide();
                                $("#divPartContCity").hide();
                                $("#divPartContState").hide();
                                $("#divPartContZip5").hide();
                            }
                        }
                        else {
                            if (sessionStorage.getItem("Other").toString() == "Yes") { // SCHEDULE 'C'.
                                // Fill the Auto fill data.
                                $("#txtCurrentDatePartAttr").prop("disabled", true);
                                $("#txtCurrentDatePartAttr").val(sessionStorage.getItem("DateReceivedAttr").toString());
                                $("#tdPartRContributions").hide();                                
                            }
                        }

                        // For Defect 707 Refresh other Data on Grid because you just canceled the edit or save function.
                        if (sessionStorage.getItem("Other").toString() != "Yes") {
                            // Refresh the Data on Grid.
                            GetSchedAPartnersData(true, tablePartners, false, false);
                            // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
                            GetPartnershipTotAmt("#lblPartnershipAmt", false);
                        }
                        else { // SCHEDULE 'C'.
                            // Refresh the Data on Grid.  Hides loading in the showTransactionSavedSuccessfullyHideLoading function .
                            GetSchedAPartnersData(true, tableAttribution, false, showTransactionSavedSuccessfullyHideLoading);
                            // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
                            GetPartnershipTotAmt("#lblAttributionAmt", false);
                        }
                    };
                    var displayAmmountErrorMessage = function (ammountToDisplay) {
                        $("#divLoading").hide();
                        if (sessionStorage.getItem("Other").toString() == "Yes") {
                            $("#txtPartAmtAC").select();
                            if ($("#txtPartAmtAC").val().toString() != "") {
                                ShowDialogBox('EFS', 'Attribution Amount cannot be more than total LLC Contribution $' + ammountToDisplay, 'Ok', '');
                            }
                        } else {
                            ShowDialogBox('EFS', 'Attributed Amount should not be more Partnership Contribution $' + ammountToDisplay, 'Ok', '');
                        }
                    };
                    $("#divLoading").show();
                    // Try to Save Data..
                    if (sessionStorage.getItem("UpdateFlagSchedAPart").toString() == "No") { // Save
                        $.post("@Url.Content("~/ContributionsCandIndFamily/GetPartnershipTotAmt/")", {
                            strTransNumber: sessionStorage.getItem("TransIdPartnership")
                        }, function (result) {
                            var expIndFamPartnershipAmt = sessionStorage.getItem("IndFamPartnershipAmt").toString();
                            var expPayAmount = ($("#txtPartAmtAC").val().toString() == "999999999.99" || $("#txtPartAmtAC").val().toString() == "") ? "0" : $("#txtPartAmtAC").val().toString();
                            if (result != "") {
                                expIndFamPartnershipAmt = parseFloat(expIndFamPartnershipAmt) - parseFloat(result);
                                if (parseFloat(expPayAmount) <= parseFloat(expIndFamPartnershipAmt).toFixed(2)) {
                                    $.post("@Url.Content("~/ContributionsCandIndFamily/SaveSchedAPartnersData/")",
                                        SaveSchedAPartnersDataParams,
                                        function (results) {
                                            if (results.Errors == null) {
                                                //Custom code not found in doneFunction.
                                                if (sessionStorage.getItem("Other").toString() == "Yes") { // SCHEDULE 'C'.
                                                    // BY DEFAULT STATE "NEW YORK".
                                                    $("#txtPartState").val("NY");
                                                }
                                                //Refresh the Data on Grid. Hides loading in the doneFunction.
                                                ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');
                                                GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);
                                            } else if (results.Errors.length >= 0) {
                                                ClearServerSideErrorsPartnership(); // Server Side Validation Clear
                                                var hasAmmountError = AppendCustomErrorLabels(results.Errors);
                                                if (hasAmmountError) {
                                                    displayAmmountErrorMessage(parseFloat(expIndFamPartnershipAmt).toFixed(2).toString());
                                                } else {
                                                    $("#divLoading").hide();
                                                }
                                            }
                                        });
                                } else {
                                    displayAmmountErrorMessage(parseFloat(expIndFamPartnershipAmt).toFixed(2).toString());
                                }
                            } else {
                                if (parseFloat(expPayAmount) <= parseFloat(expIndFamPartnershipAmt).toFixed(2)) {
                                    $.post("@Url.Content("~/ContributionsCandIndFamily/SaveSchedAPartnersData/")",
                                        SaveSchedAPartnersDataParams,
                                        function (results) {
                                            if (results.Errors == null) {
                                                //Refresh the Data on Grid. Hides loading in the doneFunction.
                                                ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');
                                                GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);

                                            } else if (results.Errors.length >= 0) {
                                                ClearServerSideErrorsPartnership(); // Server Side Validation Clear
                                                var hasAmmountError = AppendCustomErrorLabels(results.Errors);
                                                if (hasAmmountError) {
                                                    displayAmmountErrorMessage(parseFloat(sessionStorage.getItem("IndFamPartnershipAmt").toString()).toFixed(2).toString());
                                                } else {
                                                    $("#divLoading").hide();
                                                }
                                            }
                                        });
                                } else {
                                    displayAmmountErrorMessage(parseFloat(sessionStorage.getItem("IndFamPartnershipAmt").toString()).toFixed(2).toString());
                                }
                            }
                        }).fail(function () {
                            $("#divLoading").hide();///GetPartnershipTotAmt failed
                        });
                    } else if (sessionStorage.getItem("UpdateFlagSchedAPart").toString() == "Yes") { /// Update Data.
                        $.post("@Url.Content("~/ContributionsCandIndFamily/GetPartnershipTotAmt/")", {
                            strTransNumber: sessionStorage.getItem("TransIdPartnership")
                        }, function (result) {
                            if (result != "") {
                                var partnershipAmount = sessionStorage.getItem("IndFamPartnershipAmt").toString();
                                var partnershipAttrAmount = sessionStorage.getItem("PartnershipAttrAmount").toString();
                                var resultOut = parseFloat(result) - parseFloat(partnershipAttrAmount);
                                var totalExpPayAmt = parseFloat(partnershipAmount) - parseFloat(resultOut);
                                var expPayAmount = $("#txtPartAmtAC").val().toString();
                                if (parseFloat(expPayAmount) <= parseFloat(totalExpPayAmt).toFixed(2)) { // REMOVE SERVER SIDE TESTING DONE.
                                    $.post("@Url.Content("~/ContributionsCandIndFamily/UpdateSchedAPartnersData/")", {
                                        strTransNumber: sessionStorage.getItem("TransNumberPartnership").toString(),
                                        strFilingEntityId: sessionStorage.getItem("FilingEntityIdPartner").toString(),
                                        txtPartshiptName: $("#txtPartnerName").val().toString(),
                                        txtPartFirstName: $("#txtPartFirstName").val(),
                                        txtPartMI: $m("#txtPartMI").val(),
                                        txtPartLastName: $m("#txtPartLastName").val(),
                                        txtPartStreetName: $m("#txtPartStreetName").val(),
                                        txtPartCity: $m("#txtPartCity").val(),
                                        txtPartState: $m("#txtPartState").val(),
                                        txtPartZip5: $m("#txtPartZip5").val(),
                                        txtPartAmt: $m("#txtPartAmtAC").val(),
                                        txtPartExplanationInKind: $m("#txtPartExplanationInKind").val(),
                                        txtCountryPartnership: $m("#txtCountryPartnership").val(),
                                        lstItemizedPart: $("#lstItemizedPart option:selected").val(),
                                        lstIndividualPart: $("#lstIndividualPart option:selected").val(),
                                        chkCountryPartnership: $('#chkCountryPartnership').is(':checked').toString(),
                                        outOrginalAmount: sessionStorage.getItem("IndFamPartnershipAmt").toString(),
                                        recordCount: sessionStorage.getItem("PartnershipRecCount").toString(),
                                        existingAmount: sessionStorage.getItem("PartnershipAttrAmount").toString(),
                                        strFilingSchedId: sessionStorage.getItem("ScheduleCSchedId").toString(),
                                        txtEmployerPCFB: $m("#txtPartEmployer").val(),
                                        txtOccupationPCFB: $m("#txtPartOccupation").val(),
                                        txtContStreetName: $m("#txtPartContStreetName").val(),
                                        txtContCity: $m("#txtPartContCity").val(),
                                        txtContState: $m("#txtPartContState").val(),
                                        txtContZipCode: $m("#txtPartContZipCode").val(),
                                        lstRContributions: $m("#lstPartRContributions option:selected").text()
                                    }, function (results) {
                                        if (results.Errors == null) {
                                            dialogPartner.dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                            window.status = "Transaction saved successfully";

                                            if (sessionStorage.getItem("Other").toString() != "Yes") {
                                                // Reload Partners Grid
                                                // Refresh the Data on Grid. Hides loading in the showTransactionSavedSuccessfullyHideLoading function.
                                                GetSchedAPartnersData(true, tablePartners, false, showTransactionSavedSuccessfullyHideLoading);
                                                // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
                                                GetPartnershipTotAmt("#lblPartnershipAmt", true);
                                            }
                                            else {
                                                // Reload Partners Grid
                                                // Refresh the Data on Grid. Hides loading in the showTransactionSavedSuccessfullyHideLoading function.
                                                GetSchedAPartnersData(true, tableAttribution, false, showTransactionSavedSuccessfullyHideLoading);
                                                // Show the Balance Amount for Partnership for Contribution Monetary For Individual And Family.
                                                GetPartnershipTotAmt("#lblAttributionAmt", true);
                                            }

                                        } else if (results.Errors.length >= 0) {
                                            ClearServerSideErrorsPartnership(); // Server Side Validation Clear
                                            var hasAmmountError = AppendCustomErrorLabels(results.Errors);
                                            if (hasAmmountError) {
                                                displayAmmountErrorMessage(parseFloat(totalExpPayAmt).toFixed(2).toString());
                                            } else {
                                                $("#divLoading").hide();
                                            }
                                        }
                                    });
                                } else {
                                    displayAmmountErrorMessage(parseFloat(totalExpPayAmt).toFixed(2).toString());
                                }
                            }
                        }).fail(function () {
                            $("#divLoading").hide();///GetPartnershipTotAmt failed
                        });
                    } else { $("#divLoading").hide(); }
                }
            } // REMOVED FOR SERVER SIDE VALIDATION
            else {
                $("#divLoading").hide();
            }
        });

        /**
         * Resets the fields default fields for DialogBoxSchedAForm
         */
        function ResetDialogBoxSchedAFormDefaultFields() {
            $("#txtCountry").val("United States");
            $("#txtCountry").prop("disabled", true);
            $("#chkCountry").prop('checked', false);
            $("#txtState").prop('maxLength', '2');
            $("#txtCurrentDate").blur();
            $("#txtZipCode").blur();
            $("#txtAmtABC").blur();
        }

        //DialogBoxSchedAForm clear button.
        $("#btnClearDialog").click(function () {
            sessionStorage.setItem("CountryVal", $("#txtCountry").val().toString());
            sessionStorage.setItem("ItemizedYorN", $("#lstItemized option:selected").val().toString());

            var validator = $m("#DialogBoxSchedAForm").validate();
            validator.resetForm();  // clear out the validation errors
            $m("#DialogBoxSchedAForm")[0].reset();// clear out the form data
            
            if (@Session["COMM_TYPE_ID"] == "23") {
                $("#lstItemized").prop("disabled", true);
                $("#lstIsClaim").show();      
                $("#lstIsClaim")[0].selectedIndex = 2;
                $("#lstInDistrict")[0].selectedIndex = 1;
                $("#lstMinor")[0].selectedIndex = 1;
                $("#lstVendor")[0].selectedIndex = 1;
                $("#lstLobbyist")[0].selectedIndex = 1;  

                $("#tdRContributions").show();
                $("#lstRContributions")[0].selectedIndex = 1;

            }
            else {
                //$("#lstItemized").prop("disabled", false);
                $("#lstIsClaim").hide();      
                $("#tdRContributions").hide();        
            }

            $("#tdInDistrict").hide();
            $("#tdMinor").hide();
            $("#tdVendor").hide();
            $("#tdLobbyist").hide();
            $("#tdEmployer").hide(); 
            $("#tdOccupation").hide();            
            $("#divContStreetAddress").hide();
            $("#divContCity").hide();
            $("#divContState").hide();
            $("#divContZip5").hide();

            //Reusable inner function.
            var ResetCommonFields = function () {
                $("#tdCountryContributionChk").show("slow");
                $("#tdCountryContributionTxt").show("slow");
                $("#divStreetAddress").show("slow");
                $("#divCity").show("slow");
                $("#divState").show("slow");
                $("#divZip5").show("slow");
                $("#tdMethod").show("slow");
                $("#lstItemized")[0].selectedIndex = 0;
                $("#lstContributionName")[0].selectedIndex = 0;
                $("#lstMethod")[0].selectedIndex = 0;
                $("#lblExplanation").text("Explanation");
                $("#lstItemized").prop("disabled", false);
            };

            if (sessionStorage.getItem("IndPart").toString() == "Yes") {
                if (sessionStorage.getItem("UpdateFlagSchedA").toString() != "Yes") { // Add New transactions
                    $("#lstContributionName option[value='4']").show();
                    $("#lstContributionName option[value='5']").show();
                    //Reset Common Fields
                    ResetDialogBoxSchedAFormDefaultFields();
                    ResetCommonFields();
                    //Set fields
                    $("#lblPartnershipName").text("* Partnership Name");
                    //Show fields
                    $("#tdDateRcvd").show("slow");
                    $("#tdContributionName").show("slow");
                    $("#tdPartnershipName").hide("slow");
                    $("#tdFirstName").show("slow");
                    $("#tdMI").show("slow");
                    $("#tdLastName").show("slow");
                    $("#tAmt").show("slow");
                    $("#tdExplanation").show("slow");
                    //Hide fields
                    $("#tdCheck").hide();
                    //Trigger Event
                    $("#lstItemized").select();
                }
                else { // Edit Transactions
                    if (sessionStorage.getItem("ItemizedYorN").toString() == "N") { // Unitemized
                        //Blur fields
                        $("#txtCurrentDate").blur();
                        $("#txtAmtABC").blur();
                        //Set fields
                        $("#lstItemized")[0].selectedIndex = 1;
                    }
                    else { // Itemized
                        //Reset Common Fields
                        ResetDialogBoxSchedAFormDefaultFields();
                        //Set fields
                        $("#lstMethod")[0].selectedIndex = 0;
                        $("#lblExplanation").text("Explanation");
                        //Hide fields
                        $("#tdCheck").hide();
                    }
                    if ($("#lstContributionName option:selected").val().toString() == "5") {                          
                        $("#tdRContributions").hide();
                    }
                }
                if (@Session["COMM_TYPE_ID"] == "23") {
                    $("#lstItemized").prop("disabled", true);
                }
                //else {
                //    $("#lstItemized").prop("disabled", false);
                //}
            }
            else if (sessionStorage.getItem("Corporate").toString() == "Yes") { // Schedule 'B'
                //$("#lstItemized").prop("disabled", false);
                $("#lstIsClaim").hide();
                $("#tdRContributions").hide();    
                if (sessionStorage.getItem("UpdateFlagSchedA").toString() != "Yes") { // Add new transaction
                    //Reset Common Fields
                    ResetDialogBoxSchedAFormDefaultFields();
                    ResetCommonFields();
                    //Show fields
                    $("#tdDateRcvd").show("slow");
                    $("#tAmt").show("slow");
                    $("#tdExplanation").show("slow");
                    $("#tdPartnershipName").show("slow");
                    //Hide fields
                    $("#tdContributionName").hide("slow");
                    //Set fields
                    $("#lblPartnershipName").text("* Contributor Name");
                    //Hide Fields
                    $("#tdFirstName").hide("slow");
                    $("#tdMI").hide("slow");
                    $("#tdLastName").hide("slow");
                    $("#tdCheck").hide();
                }
                else { // Edit Transaction
                    if (sessionStorage.getItem("ItemizedYorN").toString() == "N") { // Unitemized
                        //Blur
                        $("#txtCurrentDate").blur();
                        $("#txtAmtABC").blur();
                        //Set
                        $("#lstItemized")[0].selectedIndex = 1;
                    }
                    else { // Itemized
                        //Reset Common Fields
                        ResetDialogBoxSchedAFormDefaultFields();
                        //Set Values
                        $("#lblPartnershipName").text("* Contributor Name");
                        $("#lstMethod")[0].selectedIndex = 0;
                        $("#lblExplanation").text("Explanation");
                        //Hide Fields
                        $("#tdCheck").hide();
                    }
                }

            }
            else if (sessionStorage.getItem("Other").toString() == "Yes") { // Schedule 'C'
                //$("#lstItemized").prop("disabled", false);
                $("#lstIsClaim").hide();
                $("#tdRContributions").hide();    
                if (sessionStorage.getItem("UpdateFlagSchedA").toString() != "Yes") {
                    //Reset Common Fields
                    ResetDialogBoxSchedAFormDefaultFields();
                    ResetCommonFields();
                    // Show Fields
                    $("#tdContributionName").show("slow");
                    $("#lblPartnershipName").text("* Contributor Name");
                    $("#tdPartnershipName").show("slow");
                    //Hide Fields
                    $("#tdFirstName").hide("slow");
                    $("#tdMI").hide("slow");
                    $("#tdLastName").hide("slow");
                    $("#tdCheck").hide("slow");
                    //Set Values
                    $("#lblContributionName").text("* Contributor Type");
                }
                else {
                    if (sessionStorage.getItem("ItemizedYorN").toString() == "N") {
                        // Unitemized
                        $("#txtCurrentDate").blur();
                        $("#txtAmtABC").blur();
                        $("#lstItemized")[0].selectedIndex = 1;
                    } else {
                        // Itemized
                        //Reset Common Fields
                        ResetDialogBoxSchedAFormDefaultFields();
                        //Set Values
                        $("#lstMethod")[0].selectedIndex = 0;
                        $("#lblPartnershipName").text("* Contributor Name");
                        $("#lblContributionName").text("* Contributor Type");
                        //Hide Field
                        $("#tdCheck").hide();
                    }
                    if ($("#lstContributionName option:selected").val().toString() == "14") {
                        $("#lblExplanation").text("* Explanation");
                    } else {
                        $("#lblExplanation").text("Explanation");
                    }
                }
            }
            $m("#lstItemized").focus();
        });


        /**
         * Resets the fields default fields for DialogBoxSchedAPartnershipForm
         */
        function ResetDialogBoxSchedAPartnershipFormDefaultFields() {

            $m("label[for=txtPartFirstName]").text('');
            $m("#txtPartFirstName").removeClass("error");

            $m("label[for=txtPartMI]").text('');
            $m("#txtPartMI").removeClass("error");

            $m("label[for=txtPartLastName]").text('');
            $m("#txtPartLastName").removeClass("error");

            $("#txtPartZip5").blur();

            // Fill the Auto fill data.
            $("#txtPartshiptName").prop("disabled", true);
            $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipName").toString());

            $("#lstItemizedPart")[0].selectedIndex = 0;
            $("#lstIndividualPart")[0].selectedIndex = 0;

            $("#tdPartnerName").hide();
            $("#tdPartFirstName").show("slow");
            $("#tdPartMI").show("slow");
            $("#tdPartLastName").show("slow");

            $("#tdPartnershipNamePartner").show("slow");
            $("#dvPartIndividual").show("slow");
            $("#tdPartnershipName").show("slow");
            $("#tdPartStreetName").show("slow");
            $("#tdPartCity").show("slow");
            $("#tdPartState").show("slow");
            $("#tdPartZip5").show("slow");
            $("#tdPartCity").show("slow");
            $("#tdCountryPartnershipChk").show("slow");
            $("#tdCountryPartnershipTxt").show("slow");
            if (@Session["COMM_TYPE_ID"] == "23") {
                $("#tdPartRContributions").show();
                $("#lstPartRContributions")[0].selectedIndex = 1;
                $("#tdPartEmployer").hide();
                $("#tdPartOccupation").hide();
                $("#divPartContStreetAddress").hide();
                $("#divPartContCity").hide();
                $("#divPartContState").hide();
                $("#divPartContZip5").hide();
                $m("#txtPartEmployer").val("");
                $m("#txtPartOccupation").val("");
                $m("#txtPartContStreetName").val("");
                $m("#txtPartContCity").val("");
                $m("#txtPartContState").val("");
                $m("#txtPartContZipCode").val("");
            }
        }

        // Clear Attribution Dialog Box.
        $("#btnClearDialogPartner").click(function () {

            sessionStorage.setItem("ItemizedPartYorN", $("#lstItemizedPart option:selected").val().toString());
            sessionStorage.setItem("IndividualPartYorN", $("#lstIndividualPart option:selected").val().toString());
            sessionStorage.setItem("CountryPartVal", $("#txtCountryPartnership").val().toString());
            sessionStorage.setItem("PartnershipNameEdit", $("#txtPartshiptName").val().toString());

            var validator = $m("#DialogBoxSchedAPartnershipForm").validate();
            validator.resetForm();  // clear out the validation errors
            $m("#DialogBoxSchedAPartnershipForm")[0].reset();   // clear out the form data

            $("#txtCountryPartnership").val("United States");
            $("#txtCountryPartnership").prop("disabled", true);
            $("#chkCountryPartnership").prop('checked', false);
            $("#txtPartState").prop('maxLength', '2');
            $("#txtPartAmtAC").blur();

            if (sessionStorage.getItem("UpdateFlagSchedAPart").toString() != "Yes") { // Add Transactions
                //Reset Common Fields fields for DialogBoxSchedAPartnershipForm
                ResetDialogBoxSchedAPartnershipFormDefaultFields();

                if (sessionStorage.getItem("Other").toString() == "Yes") { // SCHEDULE 'C'.
                    // Fill the Auto fill data.
                    $("#txtCurrentDatePartAttr").prop("disabled", true);
                    $("#txtCurrentDatePartAttr").val(sessionStorage.getItem("DateReceivedAttr").toString());

                    $("#txtPartState").val("NY");
                    $("#tdPartRContributions").hide();
                    $("#lstPartRContributions")[0].selectedIndex = 1;
                    $("#tdPartEmployer").hide();
                    $("#tdPartOccupation").hide();
                    $("#divPartContStreetAddress").hide();
                    $("#divPartContCity").hide();
                    $("#divPartContState").hide();
                    $("#divPartContZip5").hide();
                }

                $("#lstItemizedPart").prop("disabled", false);
                $("#lstIndividualPart").prop("disabled", false);

                $m("#lstItemizedPart").focus();

                if (sessionStorage.getItem("IndPart").toString() == "Yes") {
                    if (@Session["COMM_TYPE_ID"] == "23") {
                        $("#lstItemizedPart").prop("disabled", true);
                    }
                }
            }
            else { // Edit Transactions
                $("#txtCurrentDate").blur();

                if (sessionStorage.getItem("Other").toString() == "Yes") { // SCHEDULE 'C'.
                    // Fill the Auto fill data.
                    $("#txtCurrentDatePartAttr").prop("disabled", true);
                    $("#txtCurrentDatePartAttr").val(sessionStorage.getItem("DateReceivedAttr").toString());
                    $("#tdPartRContributions").hide();
                    $("#lstPartRContributions")[0].selectedIndex = 1;
                    $("#tdPartEmployer").hide();
                    $("#tdPartOccupation").hide();
                    $("#divPartContStreetAddress").hide();
                    $("#divPartContCity").hide();
                    $("#divPartContState").hide();
                    $("#divPartContZip5").hide();
                }

                $("#txtPartshiptName").val(sessionStorage.getItem("PartnershipNameEdit").toString());
                $("#lstItemizedPart").prop("disabled", true);

                if (sessionStorage.getItem("ItemizedPartYorN").toString() == "N") { // Unitemized Edit Transactions
                    $("#lstItemizedPart")[0].selectedIndex = 1;
                    $("#txtCurrentDate").focus();
                }

                else { // Itemized Edit Transactions
                    if (sessionStorage.getItem("IndividualPartYorN").toString() == "Y") {
                        $("#lstItemizedPart")[0].selectedIndex = 0;
                        $("#lstIndividualPart")[0].selectedIndex = 0;
                        $("#txtPartFirstName").focus();
                    }
                    else {
                        $("#lstIndividualPart")[0].selectedIndex = 1;
                        $("#txtPartnerName").focus();
                    }
                    $("#lstIndividualPart").prop("disabled", true);
                    $("#txtPartZip5").blur();

                    if (sessionStorage.getItem("IndPart").toString() == "Yes") {
                        if (@Session["COMM_TYPE_ID"] == "23") {
                            $("#lstItemizedPart").prop("disabled", true);
                        }
                    }
                }
            }

            if (sessionStorage.getItem("Other").toString() == "Yes") { // SCHEDULE 'C'.
                // BY DEFAULT STATE "NEW YORK".
                $("#txtPartState").val("NY");
                $("#lstItemizedPart").prop("disabled", true);

                $m("#lstIndividualPart").focus();
                $("#tdPartRContributions").hide();
                $("#lstPartRContributions")[0].selectedIndex = 1;
                $("#tdPartEmployer").hide();
                $("#tdPartOccupation").hide();
                $("#divPartContStreetAddress").hide();
                $("#divPartContCity").hide();
                $("#divPartContState").hide();
                $("#divPartContZip5").hide();
            }
            else {
                $m("#lstItemizedPart").focus();
            }
        });

        $m('#gridFilingTransactions tbody').on('click', 'tr', function (e) {
            e.preventDefault();

            var scheduleID = tableFilingTransactions.cell(this, 1).data();
            var selectedAttribution = tableFilingTransactions.cell(this, 3).data();


            if (!$(this).hasClass('selected')) {
                tableFilingTransactions.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
                // Bind Data
            }

            //  SCHEDULE A DETAILS LINK...
            if (sessionStorage.getItem("SchedALink") != null) {
                if (sessionStorage.getItem("SchedALink").toString() == "Yes") {
                    if (scheduleID == "1") {
                        sessionStorage.removeItem("SchedALink");
                        $("#divShowPartnerAdddataNCR").show();
                    }
                    else {
                        sessionStorage.removeItem("SchedALink");
                        $("#divShowPartnerAdddataNCR").hide();
                    }
                }
                else {
                    sessionStorage.removeItem("SchedALink");
                    $("#divShowPartnerAdddataNCR").hide();
                }
            }
            else {
                sessionStorage.removeItem("SchedALink");
                $("#divShowPartnerAdddataNCR").hide();
            }

            //SCHEDULE C DETAILS LINK.
            if (sessionStorage.getItem("AttrLink") != null) {
                if (sessionStorage.getItem("AttrLink").toString() == "Yes") {
                    if (scheduleID == "3") {
                        sessionStorage.removeItem("AttrLink");
                        $("#divShowAttributionSchedC").show();
                    }
                    else {
                        sessionStorage.removeItem("AttrLink");
                        $("#divShowAttributionSchedC").hide();
                    }
                }
                else {
                    sessionStorage.removeItem("AttrLink");
                    $("#divShowAttributionSchedC").hide();
                }
            }
            else {
                sessionStorage.removeItem("AttrLink");
                $("#divShowAttributionSchedC").hide();
            }

        });

        //==============================================================================================================================================
        // COMMON CODE FOR BUTTON CLEAR AND IT WILL GO TO MAIN PAGE CONTRIBUTION MONETARY.
        //Bind Clear Click
        $(".clsCommonClear").bind('click', function () {
            $("#divGridMonetary").show();
            sessionStorage.setDataTable = "true";
            $("#divShowHideHelp").removeClass("clsShowHideHelpSec");
            $("#divShowHideHelp").addClass("clsShowHideHelpSecInMobileTablet");

            sessionStorage.setItem("FilerId", $("#txtFilerID option:selected").val());
            sessionStorage.setItem("CommitteeName", $("#txtCommitteeName option:selected").val());
            sessionStorage.setItem("ElectionCycle", $("#lstElectionCycle option:selected").val());
            sessionStorage.setItem("ElectionType", $("#lstElectionType option:selected").val());
            sessionStorage.setItem("ElectionDate", $("#lstElectionDate option:selected").val());
            sessionStorage.setItem("DisclosureType", $("#lstDisclosureType option:selected").val());
            sessionStorage.setItem("DisclosurePeriod", $("#lstDisclosurePeriod option:selected").val());
            sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesFrom").val());
            if ($("#lstElectionType option:selected").val() == "6") {
                sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
            }
            else {
                sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
            }
            sessionStorage.setItem("TransactionType", $("#lstTransactionType option:selected").val());
            sessionStorage.setItem("lstResigTermType", $("#lstResigTermType option:selected").val());
            sessionStorage.setItem("lstFilingDate", $("#lstFilingDate option:selected").val());

            sessionStorage.setItem("TransactionTypeId", "true");

            var urlContrHome = "@Url.Content("~/ContributionsMonetary/ContributionsMonetary/")";

            window.location.href = urlContrHome;
        });
        // COMMON CODE FOR BUTTON CLEAR AND IT WILL GO TO MAIN PAGE CONTRIBUTION MONETARY.
        //==============================================================================================================================================


        //$("#divDTInKind").hide();
        $("#divShowPartnerAdddataInKind").hide();
        $("div[id^='divPartnerNCR']").hide();
        $("#PartnersGridNCR").addClass("Per100hideShowButtonCSS");
        //Bind Search Click
        $m(".clsCommonSearch").bind('click', function (searchCustomers) {
            $("#divGridInKind").show();
            sessionStorage.setDataTable = "true";
            $("#divShowHideHelp").removeClass("clsShowHideHelpSec");
            $("#divShowHideHelp").addClass("clsShowHideHelpSecInMobileTablet");

            sessionStorage.setItem("FilerId", $("#txtFilerID option:selected").val());
            sessionStorage.setItem("CommitteeName", $("#txtCommitteeName option:selected").val());
            sessionStorage.setItem("ElectionCycle", $("#lstElectionCycle option:selected").val());
            sessionStorage.setItem("ElectionType", $("#lstElectionType option:selected").val());
            sessionStorage.setItem("ElectionDate", $("#lstElectionDate option:selected").val());
            sessionStorage.setItem("DisclosureType", $("#lstDisclosureType option:selected").val());
            sessionStorage.setItem("DisclosurePeriod", $("#lstDisclosurePeriod option:selected").val());
            sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesFrom").val());
            //sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
            if ($("#lstElectionType option:selected").val() == "6") {
                sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
            }
            else {
                sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
            }
            sessionStorage.setItem("TransactionType", $("#lstTransactionType option:selected").val());
            sessionStorage.setItem("TransactionTypeId", "true");

            var urlContrHome = "../ContributionsMonetary/ContributionsMonetary";
            window.location.href = urlContrHome;
        });
        // COMMON CODE FOR BUTTON CLEAR AND IT WILL GO TO MAIN PAGE CONTRIBUTION MONETARY.
        //==============================================================================================================================================


        //==============================================================================================================================================
        // EDIT COMMON
        // ---------------------------------------------------------------------------------------------------------------------------------------------
        // Edit from Other Schedule functionality
        if (sessionStorage.getItem("EditFlag") != null) {
            if (sessionStorage.getItem("EditFlag").toString() == "True") {

                dialog_Sched_A.dialog("open");

                sessionStorage.setItem("UpdateFlagSchedA", "Yes");

                var validator = $m("#DialogBoxSchedAForm").validate();
                validator.resetForm();  // clear out the validation errors
                $m("#DialogBoxSchedAForm")[0].reset();   // clear out the form data

                $("#lstTransactionType option").each(function () {
                    if ($(this).val() == sessionStorage.getItem("ScheduleId").toString()) {
                        //$(this).attr('selected', 'selected');
                        $(this).prop("selected", true);
                    }
                });

                // BIND COMMON SESSION VARIABLE.
                sessionStorage.setItem("TransactionType", sessionStorage.getItem("ScheduleId").toString());

                $("#lstContributionName").prop("disabled", true);

                // ADDED THIS DEFECT: 4061 ON 06.25.2021
                // BY DEFAULT.
                $("#alertForLstContributionName").show();

                // Schedule A
                if (sessionStorage.getItem("IndPart").toString() == "Yes") { // SCHEDULE 'A'
                    $("#lstMethod option[value='8']").show();
                    $.post("@Url.Content("~/_UC_GridCommonControl/GetEditTransactionData/")", {
                        strTransNumber: sessionStorage.getItem("TransNumberEdit").toString()
                    }, function (resultsEditData) {
                        $.each(resultsEditData, function (i, item) {

                            $("#txtDateRcvd1").hide();

                            var selectedlstContributorCode = item.ContributorTypeId.toString();

                            sessionStorage.setItem("TransNumber", item.TransNumber.toString());
                            sessionStorage.setItem("FilingEntityId", item.FilingEntityId.toString());

                            $("#txtCurrentDate").val(item.SchedDate.toString());
                            $("#txtCurrentDate").removeClass("watermarkHTMLTextBox");
                            if (item.SchedDate.toString() != "" || item.SchedDate.toString() != null) {
                                var MyDate = new Date($("#txtCurrentDate").val().toString());
                                var MyDateString;
                                MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                                    + ('0' + MyDate.getDate()).slice(-2) + '/'
                                    + MyDate.getFullYear();
                                $("#txtCurrentDate").val("");
                                $("#txtCurrentDate").val(MyDateString);
                                $("#txtCurrentDate").removeClass("watermarkHTMLTextBox");
                            }
                            $("#txtCurrentDate").focus();
                            if ($("#txtCurrentDate").val().toString() != "MM/DD/YYYY") {
                                $("#txtCurrentDate").removeClass('watermark');
                            }

                            $("#lstContributionName option").each(function () {
                                if ($(this).text() == item.ContributorTypeDesc.toString()) {
                                    //$(this).attr('selected', 'selected');
                                    $(this).prop("selected", true);
                                }
                            });
                            $("#txtPartnershipName").val(item.FilingEntityName.toString());
                            $("#txtStreetName").val(item.FilingStreetName.toString());
                            $("#txtCity").val(item.FilingCity.toString());
                            $("#txtState").val(item.FilingState.toString());
                            $("#txtZipCode").val(item.FilingZip.toString());
                            /// Country
                            $("#txtCountry").val(item.FilingCountry.toString());
                            if (item.FilingCountry.toString() == "United States") {
                                $("#chkCountry").prop('checked', false);
                                $("#txtCountry").prop("disabled", true);
                                $("#txtState").prop('maxLength', '2');
                            }
                            else { // Other Country
                                $("#chkCountry").prop('checked', true);
                                $("#txtCountry").prop("disabled", false);
                                $("#txtState").prop('maxLength', '30');
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                                $m('#txtZipCode').attr("placeholder", "");
                            }
                            if ($("#txtZipCode").val().toString() != "00000-0000") {
                                $("#txtZipCode").removeClass('watermarkHTMLTextBox');
                            }
                            if (item.FilingZip.toString() != "") {
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            }
                            else {
                                $("#txtZipCode").blur();
                            }
                            $("#lstMethod option").each(function () {
                                if ($(this).text() == item.PaymentTypeDesc.toString()) {
                                    //$(this).attr('selected', 'selected');
                                    $(this).prop("selected", true);
                                }
                            });
                            if (item.PaymentTypeId.toString() == "1") {
                                $("#tdCheck").show();
                                $("#txtCheck").val(item.PayNumber.toString());
                            }
                            else if (item.PaymentTypeId.toString() == "8") {
                                $("#tdCheck").show();
                                $("#txtCheck").val(item.PayNumber.toString());
                            }
                            else {
                                $("#tdCheck").hide();
                            }
                            var originalAmount = item.OriginalAmount.toString();
                            sessionStorage.setItem("EditPartnershipOrgAmt", originalAmount);
                            $("#txtAmtABC").val(originalAmount);
                            if (item.OriginalAmount.toString() != "") {
                                $("#txtAmtABC").removeClass("watermarkHTMLTextBox");
                            }
                            $("#txtExplanation").val(item.TransExplanation.toString());

                            if (item.RItemized.toString() == "No") {   // Unitemized Transaction
                                // Itemized 'Y/N'
                                $("#lstItemized")[0].selectedIndex = 1;
                                $("#lstItemized").prop("disabled", true);

                                //Show All TD
                                $("#tAmt").show("slow");
                                $("#tdExplanation").show("slow");

                                $("#tdContributionName").hide("slow");
                                $("#tdFirstName").hide("slow");
                                $("#tdMI").hide("slow");
                                $("#tdLastName").hide("slow");
                                $("#tdStreet").hide("slow");
                                $m("#divStreetAddress").hide("slow");
                                $m("#divCity").hide("slow");
                                $m("#divState").hide("slow");
                                $m("#divZip5").hide("slow");
                                $("#tdMethod").hide("slow");
                                $("#tdCountryContributionChk").hide("slow");
                                $("#tdCountryContributionTxt").hide("slow");

                                $("#divErrorStreetName").hide("slow");
                                $("#divErrorCity").hide("slow");
                                $("#divErrorState").hide("slow");
                                $("#divErrorZip5").hide("slow");

                                $("#tdPartnershipName").hide("slow");
                            }
                            else { // Itemized Transaction.

                                $("#lstItemized")[0].selectedIndex = 0;
                                $("#lstItemized").prop("disabled", true);

                                // show/hide based on Transaction Type
                                $("#tdContributionName").show("slow");
                                $("#tdFirstName").show("slow");
                                $("#tdMI").show("slow");
                                $("#tdLastName").show("slow");
                                $m("#divStreetAddress").show("slow");
                                $m("#divCity").show("slow");
                                $m("#divState").show("slow");
                                $m("#divZip5").show("slow");
                                $("#tdMethod").show("slow");
                                $("#tAmt").show("slow");
                                $("#tdExplanation").show("slow");
                                $("#tdCountryContributionChk").show("slow");
                                $("#tdCountryContributionTxt").show("slow");

                                $("#tdPartnershipName").hide("slow");

                                $("#lstItemized")[0].selectedIndex = 0;
                                $("#lstItemized").prop("disabled", true);
                            }

                            if (selectedlstContributorCode == "5") {

                                $("#tdPartnershipName").show("slow");

                                //Show All TD
                                $("#tdFirstName").hide("slow");
                                $("#tdMI").hide("slow");
                                $("#tdLastName").hide("slow");
                                $("#tdStreet").show("slow");
                                $m("#divStreetAddress").show("slow");
                                $m("#divCity").show("slow");
                                $m("#divState").show("slow");
                                $m("#divZip5").show("slow");
                                $("#tdMethod").show("slow");
                                $("#tAmt").show("slow");
                                $("#tdExplanation").show("slow");

                                $("#txtPartnerShipName").val(item.FilingEntityName.toString());
                            }
                            else {
                                if (item.RItemized.toString() == "Yes") {
                                    $("#tdFirstName").show("slow");
                                    $("#tdMI").show("slow");
                                    $("#tdLastName").show("slow");
                                    $("#tdStreet").show("slow");
                                    $m("#divStreetAddress").show("slow");
                                    $m("#divCity").show("slow");
                                    $m("#divState").show("slow");
                                    $m("#divZip5").show("slow");
                                    $("#tdMethod").show("slow");
                                    $("#tAmt").show("slow");
                                    $("#tdExplanation").show("slow");

                                    $("#tdPartnershipName").hide("slow");

                                    $("#txtFirstName").val(item.FilingFirstName.toString());
                                    $("#txtMI").val(item.FilingMiddleName.toString());
                                    $("#txtLastName").val(item.FilingLastName.toString());
                                }
                            }
                            
                            if (@Session["COMM_TYPE_ID"] == "23") {
                                $m("label[for=lstIsClaim]").text('');
                                $m("#lstIsClaim").removeClass("error");
                                 $("#tdIsClaim").show();
                                $("#lstIsClaim").show();
                                $("#alertForLstContributionName").hide();
                                 $m("#lstIsClaim option").each(function () {
                                     if ($(this).text() == item.RClaim) {
                                         //$(this).prop('selected', true).trigger('change');
                                         $("#lstIsClaim")[0].selectedIndex = $(this).val();;
                                         if ($(this).text() == "Yes") {
                                             $("#tdInDistrict").show();
                                             $m("#lstInDistrict option").each(function () {
                                                 if ($(this).text() == item.InDistrict) {
                                                     $(this).prop('selected', true).trigger('change');
                                                 }
                                             });

                                             $("#tdMinor").show();
                                             $m("#lstMinor option").each(function () {
                                                 if ($(this).text() == item.RMinor) {
                                                     $(this).prop('selected', true).trigger('change');
                                                 }
                                             });

                                             $("#tdVendor").show();
                                             $m("#lstVendor option").each(function () {
                                                 if ($(this).text() == item.RVendor) {
                                                     $(this).prop('selected', true).trigger('change');
                                                 }
                                             });

                                             $("#tdLobbyist").show();
                                             $m("#lstLobbyist option").each(function () {
                                                 if ($(this).text() == item.RLobbyist) {
                                                     $(this).prop('selected', true).trigger('change');
                                                 }
                                             });
                                         }
                                         else if ($(this).text() == "No") {
                                             $("#tdInDistrict").hide();
                                             $("#tdMinor").hide();
                                             $("#tdVendor").hide();
                                             $("#tdLobbyist").hide();
                                         }
                                         else {
                                             $("#tdInDistrict").hide();
                                             $("#tdMinor").hide();
                                             $("#tdVendor").hide();
                                             $("#tdLobbyist").hide();
                                         }
                                         return false;
                                     }
                                 });
                                

                                $("#lstRContributions option").each(function () {
                                    if ($(this).text() == item.RContributions.toString()) {
                                        //$(this).attr('selected', 'selected');
                                        $(this).prop("selected", true);
                                    }
                                });

                                if ($m("#lstRContributions option:selected").val() == "0") {
                                    if ($m("#lstContributionName option:selected").val() == "5") {
                                        $("#tdRContributions").hide();
                                        $("#tdEmployer").hide();
                                        $("#tdOccupation").hide();
                                        $("#divContStreetAddress").hide();
                                        $("#divContCity").hide();
                                        $("#divContState").hide();
                                        $("#divContZip5").hide();
                                    }
                                    else {
                                        $("#tdEmployer").show();
                                        $("#tdOccupation").show();
                                        $("#divContStreetAddress").show();
                                        $("#divContCity").show();
                                        $("#divContState").show();
                                        $("#divContZip5").show();
                                        $("#txtEmployerPCFB").val(item.TreasurerEmployer);
                                        $("#txtOccupationPCFB").val(item.TreasurerOccuptaion);
                                        $("#txtContStreetName").val(item.TreaAddr1);
                                        $("#txtContCity").val(item.TreaCity);
                                        $("#txtContState").val(item.TreaState);
                                        $("#txtContZipCode").val(item.TreaZipCode);
                                    }
                                 }
                                else {
                                     $("#tdEmployer").hide(); 
                                     $("#tdOccupation").hide();
                                     $("#divContStreetAddress").hide();
                                     $("#divContCity").hide();
                                     $("#divContState").hide();
                                     $("#divContZip5").hide();
                                 }
                             }
                             else {
                                 $("#tdIsClaim").hide();
                                 $("#tdInDistrict").hide();
                                 $("#tdMinor").hide();
                                 $("#tdVendor").hide();
                                $("#tdLobbyist").hide();
                                $("#tdRContributions").hide();
                                $("#tdEmployer").hide(); 
                                 $("#tdOccupation").hide();
                                 $("#divContStreetAddress").hide();
                                 $("#divContCity").hide();
                                 $("#divContState").hide();
                                $("#divContZip5").hide();                                
                             }

                            sessionStorage.setItem("EditFlag", "False");

                        });
                    });
                }
                else if (sessionStorage.getItem("Corporate").toString() == "Yes") {  // SCHEDULE 'B'
                    $("#lstMethod option[value='8']").hide();
                    $.post("@Url.Content("~/_UC_GridCommonControl/GetEditTransactionData/")", {
                        strTransNumber: sessionStorage.getItem("TransNumberEdit").toString()
                    }, function (resultsEditData) {
                        $.each(resultsEditData, function (i, item) {

                            $("#txtDateRcvd1").hide();

                            dialog_Sched_A.dialog("open");

                            sessionStorage.setItem("TransNumber", item.TransNumber.toString());
                            sessionStorage.setItem("FilingEntityId", item.FilingEntityId.toString());

                            $("#txtCurrentDate").val(item.SchedDate.toString());
                            $("#txtCurrentDate").focus();
                            if ($("#txtCurrentDate").val().toString() != "MM/DD/YYYY") {
                                $("#txtCurrentDate").removeClass('watermark');
                            }
                            $("#lstContributionName option").each(function () {
                                if ($(this).text() == item.ContributorTypeDesc.toString()) {
                                    //$(this).attr('selected', 'selected');
                                    $(this).prop("selected", true);
                                }
                            });
                            $("#txtPartnershipName").val(item.FilingEntityName.toString());
                            $("#txtStreetName").val(item.FilingStreetName.toString());
                            $("#txtCity").val(item.FilingCity.toString());
                            $("#txtState").val(item.FilingState.toString());
                            $("#txtZipCode").val(item.FilingZip.toString());
                            /// Country
                            $("#txtCountry").val(item.FilingCountry.toString());
                            if (item.FilingCountry.toString() == "United States") {
                                $("#chkCountry").prop('checked', false);
                                $("#txtCountry").prop("disabled", true);
                                $("#txtState").prop('maxLength', '2');
                            }
                            else { // Other Country
                                $("#chkCountry").prop('checked', true);
                                $("#txtCountry").prop("disabled", false);
                                $("#txtState").prop('maxLength', '30');
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                                $m('#txtZipCode').attr("placeholder", "");
                            }
                            if ($("#txtZipCode").val().toString() != "00000-0000") {
                                $("#txtZipCode").removeClass('watermark');
                            }
                            if (item.FilingZip.toString() != "") {
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            }
                            else {
                                $("#txtZipCode").blur();
                            }
                            $("#lstMethod option").each(function () {
                                if ($(this).text() == item.PaymentTypeDesc.toString()) {
                                    //$(this).attr('selected', 'selected');
                                    $(this).prop("selected", true);
                                }
                            });
                            if (item.PaymentTypeId.toString() == "1") {
                                $("#tdCheck").show();
                                $("#txtCheck").val(item.PayNumber.toString());
                            }
                            else if (item.PaymentTypeId.toString() == "8") {
                                $("#tdCheck").show();
                                $("#txtCheck").val(item.PayNumber.toString());
                            }
                            else {
                                $("#tdCheck").hide();
                            }
                            var originalAmount = item.OriginalAmount.toString();
                            $("#txtAmtABC").val(originalAmount);
                            if (item.OriginalAmount.toString() != "") {
                                $("#txtAmtABC").removeClass("watermarkHTMLTextBox");
                            }
                            sessionStorage.setItem("EditPartnershipOrgAmt", "");
                            $("#txtExplanation").val(item.TransExplanation.toString());

                            if (item.RItemized.toString() == "No") { // UNITEMIZED TRANSACTION

                                $("#lstItemized")[0].selectedIndex = 1;
                                $("#lstItemized").prop("disabled", true);

                                $("#lstItemized")[0].selectedIndex = 1;
                                $("#lstItemized").prop("disabled", true);

                                //Show All TD
                                $("#tAmt").show("slow");
                                $("#tdExplanation").show("slow");

                                $("#tdContributionName").hide("slow");
                                $("#tdFirstName").hide("slow");
                                $("#tdMI").hide("slow");
                                $("#tdLastName").hide("slow");
                                $("#tdStreet").hide("slow");
                                $m("#divStreetAddress").hide("slow");
                                $m("#divCity").hide("slow");
                                $m("#divState").hide("slow");
                                $m("#divZip5").hide("slow");
                                $("#tdMethod").hide("slow");
                                $("#tdCountryContributionChk").hide("slow");
                                $("#tdCountryContributionTxt").hide("slow");

                                $("#divErrorStreetName").hide("slow");
                                $("#divErrorCity").hide("slow");
                                $("#divErrorState").hide("slow");
                                $("#divErrorZip5").hide("slow");

                                $("#tdPartnershipName").hide("slow");
                            }
                            else { // ITEMIZED TRANSACTION

                                $("#lstItemized")[0].selectedIndex = 0;
                                $("#lstItemized").prop("disabled", true);

                                // show/hide based on Transaction Type
                                $("#tdContributionName").hide("slow");
                                $("#tdFirstName").hide("slow");
                                $("#tdMI").hide("slow");
                                $("#tdLastName").hide("slow");
                                $m("#divStreetAddress").show("slow");
                                $m("#divCity").show("slow");
                                $m("#divState").show("slow");
                                $m("#divZip5").show("slow");
                                $("#tdMethod").show("slow");
                                $("#tAmt").show("slow");
                                $("#tdExplanation").show("slow");
                                $("#tdCountryContributionChk").show("slow");
                                $("#tdCountryContributionTxt").show("slow");

                                $("#tdPartnershipName").show("slow");
                                $("#txtPartnerShipName").val(item.FilingEntityName.toString());

                                $("#lstItemized")[0].selectedIndex = 0;
                                $("#lstItemized").prop("disabled", true);

                                $("#lblPartnershipName").text("* Contributor Name");
                            }

                        });
                    });

                    sessionStorage.setItem("EditFlag", "False");
                }
                else if (sessionStorage.getItem("Other").toString() == "Yes") { // SCHEDULE 'C'
                    $("#lstMethod option[value='8']").hide();
                    $("#lblPartnershipName").text("* Contributor Name");

                    $.post("@Url.Content("~/_UC_GridCommonControl/GetEditTransactionData/")", {
                        strTransNumber: sessionStorage.getItem("TransNumberEdit").toString()
                    }, function (resultsEditData) {

                        $.each(resultsEditData, function (i, item) {

                            $("#txtDateRcvd1").hide();

                            dialog_Sched_A.dialog("open");

                            sessionStorage.setItem("TransNumber", item.TransNumber.toString());
                            sessionStorage.setItem("FilingEntityId", item.FilingEntityId.toString());

                            $("#txtCurrentDate").val(item.SchedDate.toString());
                            $("#txtCurrentDate").focus();
                            if ($("#txtCurrentDate").val().toString() != "MM/DD/YYYY") {
                                $("#txtCurrentDate").removeClass('watermark');
                            }

                            // Bind Contributor Type
                            var options = {};
                            options.url = "@Url.Content("~/ContributionsCandIndFamily/GetContributorTypeCodeSchedC/")";
                            options.type = "POST";
                            options.data = null;
                            options.dataType = "json";
                            options.contentType = "application/json";
                            options.success = function (results) {
                                $("#lstContributionName").empty();
                                for (var i = 0; i < results.length; i++) {
                                    $("#lstContributionName").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                                }

                                $("#lstContributionName option").each(function () {
                                    if ($(this).text() == item.ContributorTypeDesc.toString()) {
                                        //$(this).attr('selected', 'selected');
                                        $(this).prop("selected", true);
                                    }
                                });
                            };
                            options.error = function () {
                                ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                            };
                            $.ajax(options);

                            $("#txtPartnershipName").val(item.FilingEntityName.toString());
                            $("#txtStreetName").val(item.FilingStreetName.toString());
                            $("#txtCity").val(item.FilingCity.toString());
                            $("#txtState").val(item.FilingState.toString());
                            $("#txtZipCode").val(item.FilingZip.toString());
                            /// Country
                            $("#txtCountry").val(item.FilingCountry.toString());
                            if (item.FilingCountry.toString() == "United States") {
                                $("#chkCountry").prop('checked', false);
                                $("#txtCountry").prop("disabled", true);
                                $("#txtState").prop('maxLength', '2');
                            }
                            else { // Other Country
                                $("#chkCountry").prop('checked', true);
                                $("#txtCountry").prop("disabled", false);
                                $("#txtState").prop('maxLength', '30');
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                                $m('#txtZipCode').attr("placeholder", "");
                            }
                            if ($("#txtZipCode").val().toString() != "00000-0000") {
                                $("#txtZipCode").removeClass('watermark');
                            }
                            if (item.FilingZip.toString() != "") {
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            }
                            else {
                                $("#txtZipCode").blur();
                            }
                            $("#lstMethod option").each(function () {
                                if ($(this).text() == item.PaymentTypeDesc.toString()) {
                                    //$(this).attr('selected', 'selected');
                                    $(this).prop("selected", true);
                                }
                            });
                            if (item.PaymentTypeId.toString() == "1") {
                                $("#tdCheck").show();
                                $("#txtCheck").val(item.PayNumber.toString());
                            }
                            else if (item.PaymentTypeId.toString() == "8") {
                                $("#tdCheck").show();
                                $("#txtCheck").val(item.PayNumber.toString());
                            }
                            else {
                                $("#tdCheck").hide();
                            }
                            var originalAmount = item.OriginalAmount.toString();
                            $("#txtAmtABC").val(originalAmount);
                            if (item.OriginalAmount.toString() != "") {
                                $("#txtAmtABC").removeClass("watermarkHTMLTextBox");
                            }
                            sessionStorage.setItem("EditPartnershipOrgAmt", "");
                            $("#txtExplanation").val(item.TransExplanation.toString());

                            if (item.RItemized.toString() == "No") {
                                // Itemized 'Y/N'
                                $("#lstItemized")[0].selectedIndex = 1;
                                $("#lstItemized").prop("disabled", true);

                                $("#lstItemized").prop("disabled", true);

                                $("#tdMethod")[0].selectedIndex = 0;

                                //Show All TD
                                $("#tAmt").show("slow");
                                $("#tdExplanation").show("slow");

                                $("#tdContributionName").hide("slow"); // ADDED DEFECT: 4101 ON 06.25.2021.
                                $("#tdFirstName").hide("slow");
                                $("#tdMI").hide("slow");
                                $("#tdLastName").hide("slow");
                                $("#tdStreet").hide("slow");
                                $m("#divStreetAddress").hide("slow");
                                $m("#divCity").hide("slow");
                                $m("#divState").hide("slow");
                                $m("#divZip5").hide("slow");
                                $("#tdMethod").hide("slow");
                                $("#tdCountryContributionChk").hide("slow");
                                $("#tdCountryContributionTxt").hide("slow");

                                $("#divErrorStreetName").hide("slow");
                                $("#divErrorCity").hide("slow");
                                $("#divErrorState").hide("slow");
                                $("#divErrorZip5").hide("slow");

                                $("#tdPartnershipName").hide("slow");
                            }
                            else {
                                // Itemized 'Y/N'
                                $("#lstItemized")[0].selectedIndex = 0;
                                $("#lstItemized").prop("disabled", true);

                                // show/hide based on Transaction Type
                                $("#tdContributionName").show("slow");
                                $("#tdFirstName").hide("slow");
                                $("#tdMI").hide("slow");
                                $("#tdLastName").hide("slow");
                                $m("#divStreetAddress").show("slow");
                                $m("#divCity").show("slow");
                                $m("#divState").show("slow");
                                $m("#divZip5").show("slow");
                                $("#tdMethod").show("slow");
                                $("#tAmt").show("slow");
                                $("#tdExplanation").show("slow");
                                $("#tdCountryContributionChk").show("slow");
                                $("#tdCountryContributionTxt").show("slow");

                                $("#tdPartnershipName").show("slow");
                                $("#txtPartnerShipName").val(item.FilingEntityName.toString());
                                $("#lstItemized").prop("disabled", true);
                            }

                            // ADDED THIS DEFECT: 4061 ON 06.25.2021
                            $("#alertForLstContributionName").hide();
                        });
                    });

                    sessionStorage.setItem("EditFlag", "False");
                }
            }
        }
        // ---------------------------------------------------------------------------------------------------------------------------------------------
        // EDIT COMMON
        //==============================================================================================================================================

        // Edit a record
        $m('#gridFilingTransactions tbody').on('click', 'a.editor_edit_Sched_A', function (e) {
            e.preventDefault();
            //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            var data = tableFilingTransactions.row($(this).parents('tr')).data();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                txtFilerId: $("#txtFilerID").val(),
                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }, function (resultEditFlag) {
                if (resultEditFlag == "TRUE") {
                    $("#divShowPartnerAdddataNCR").hide();
                    $("#divShowAttributionSchedC").hide();

                    // ADDED THIS DEFECT: 4061 ON 06.25.2021
                    // BY DEFAULT.
                    $("#alertForLstContributionName").show();

                    sessionStorage.setItem("UpdateFlagSchedA", "Yes");
                    sessionStorage.setItem("UpdateFlagSchedA_RClaim", "Yes");

                    var validator = $m("#DialogBoxSchedAForm").validate();
                    validator.resetForm();  // clear out the validation errors
                    $m("#DialogBoxSchedAForm")[0].reset();   // clear out the form data

                    //==================================================
                    // CLEAR THE ERRORS ON EDIT.
                    $m("label[for=txtCurrentDate]").text('');
                    $m("#txtCurrentDate").removeClass("error");

                    $m("label[for=lstContributionName]").text('');
                    $m("#lstContributionName").removeClass("error");

                    $m("label[for=txtPartnerShipName]").text('');
                    $m("#txtPartnerShipName").removeClass("error");

                    $m("label[for=txtFirstName]").text('');
                    $m("#txtFirstName").removeClass("error");

                    $m("label[for=txtMI]").text('');
                    $m("#txtMI").removeClass("error");

                    $m("label[for=txtLastName]").text('');
                    $m("#txtLastName").removeClass("error");

                    $m("label[for=txtCountry]").text('');
                    $m("#txtCountry").removeClass("error");

                    $m("label[for=txtStreetName]").text('');
                    $m("#txtStreetName").removeClass("error");

                    $m("label[for=txtCity]").text('');
                    $m("#txtCity").removeClass("error");

                    $m("label[for=txtState]").text('');
                    $m("#txtState").removeClass("error");

                    $m("label[for=txtZipCode]").text('');
                    $m("#txtZipCode").removeClass("error");

                    $m("label[for=txtCheck]").text('');
                    $m("#txtCheck").removeClass("error");

                    $m("label[for=txtAmtABC]").text('');
                    $m("#txtAmtABC").removeClass("error");

                    $m("label[for=txtExplanation]").text('');
                    $m("#txtExplanation").removeClass("error");

                    // CLEAR THE ERRORS ON EDIT.
                    //==================================================
                    $("#txtCurrentDate").focus();

                    // SET THE WHICH SCHEDULE EDITING EITHER A, B, OR C.
                    if (data[1].toString() == "1") {
                        sessionStorage.setItem("IndPart", "Yes"); // Schedule '1' - A
                        sessionStorage.setItem("Corporate", "No"); // Schedule '2' - B
                        sessionStorage.setItem("Other", "No"); // Schedule '3' - C
                    }
                    else if (data[1].toString() == "2") {
                        sessionStorage.setItem("IndPart", "No"); // Schedule '1' - A
                        sessionStorage.setItem("Corporate", "Yes"); // Schedule '2' - B
                        sessionStorage.setItem("Other", "No"); // Schedule '3' - C
                    }
                    else if (data[1].toString() == "3") {
                        sessionStorage.setItem("IndPart", "No"); // Schedule '1' - A
                        sessionStorage.setItem("Corporate", "No"); // Schedule '2' - B
                        sessionStorage.setItem("Other", "Yes"); // Schedule '3' - C
                    }

                    // Schedule A, B, and C Headers.
                    if (sessionStorage.getItem("IndPart").toString() == "Yes") {
                        $("#lstMethod option[value='8']").show();
                        $("#lblHeaderID").text("Contributions - Candidate, Individual & Family");
                        $("#breadCrumbSchedA").show();
                        $("#breadCrumbSchedB").hide();
                        $("#breadCrumbSchedC").hide();
                    }
                    else if (sessionStorage.getItem("Corporate").toString() == "Yes") {
                        $("#lstMethod option[value='8']").hide();
                        $("#lblHeaderID").text("Contributions - Corporation");
                        $("#breadCrumbSchedB").show();
                        $("#breadCrumbSchedA").hide();
                        $("#breadCrumbSchedC").hide();
                    }
                    else if (sessionStorage.getItem("Other").toString() == "Yes") {
                        $("#lstMethod option[value='8']").hide();
                        $("#lblHeaderID").text("Contributions - All Other");
                        $("#breadCrumbSchedC").show();
                        $("#breadCrumbSchedB").hide();
                        $("#breadCrumbSchedA").hide();
                    }

                    if (data[1].toString() == "1") {
                        $m("#lstTransactionType").val("1");

                        sessionStorage.setItem("TransactionType", data[1].toString());
                    }
                    else if (data[1].toString() == "2") {
                        $m("#lstTransactionType").val("2");

                        sessionStorage.setItem("TransactionType", data[1].toString());
                    }
                    else if (data[1].toString() == "3") {
                        $m("#lstTransactionType").val("3");

                        sessionStorage.setItem("TransactionType", data[1].toString());
                    }

                    if (data[1].toString() == "1" || data[1].toString() == "2" || data[1].toString() == "3") { // Schedule A,B,C
                        $("#divLoading").hide();
                        dialog_Sched_A.dialog("open");

                        // Bind Method Data
                        appCommonEFS_BindAndPopulateDLL("@Url.Content("~/ContributionsCandIndFamily/GetPaymentMethodData/")", data[5].toString(), "#lstMethod", "Payment Method");

                        if (sessionStorage.getItem("Other").toString() == "Yes") { // Schedule 'C' - Contributor Type - SCHEDULE 'C'
                            // Bind Contributor Type
                            appCommonEFS_BindAndPopulateDLL("@Url.Content("~/ContributionsCandIndFamily/GetContributorTypeCodeSchedC/")", data[3].toString(), "#lstContributionName", "Contributor Type");

                            $("#lblPartnershipName").text("* Contributor Name");

                            // ADDED THIS DEFECT: 4061 ON 06.25.2021
                            $("#alertForLstContributionName").hide();
                        }
                        else { // Schedule 'A' Contributor Type
                            // Bind Contributor Type                            
                            appCommonEFS_BindAndPopulateDLL("@Url.Content("~/ContributionsCandIndFamily/GetContributorCodeSchedA/")", data[3].toString(), "#lstContributionName", "Contributor Code");
                            $("#lblPartnershipName").text("* Partnership Name");
                        }

                        $("#lstContributionName").prop("disabled", true);

                        $("#txtDateRcvd1").hide();

                        $("#lblContributionName").text("* Contributor Type");

                        var selectedlstContributorCode = data[3].toString();

                        sessionStorage.setItem("TransNumber", data[42].toString());
                        sessionStorage.setItem("FilingEntityId", data[2].toString());

                        $("#txtCurrentDate").val(data[10].toString());
                        $("#txtCurrentDate").removeClass("watermarkHTMLTextBox");
                        if (data[10].toString() != "" || data[10].toString() != null) {
                            var MyDate = new Date($("#txtCurrentDate").val().toString());
                            var MyDateString;
                            MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                                + ('0' + MyDate.getDate()).slice(-2) + '/'
                                + MyDate.getFullYear();
                            $("#txtCurrentDate").val("");
                            $("#txtCurrentDate").val(MyDateString);
                            $("#txtCurrentDate").removeClass("watermarkHTMLTextBox");
                        }
                        $("#txtCurrentDate").select();
                        $("#txtPartnershipName").val(data[13].toString());
                        $("#txtStreetName").val(data[18].toString());
                        $("#txtCity").val(data[19].toString());
                        $("#txtState").val(data[20].toString());
                        $("#txtZipCode").val(data[21].toString());
                        $("#txtCountry").val(data[17].toString());
                        if (data[17].toString() == "United States") {
                            $("#chkCountry").prop('checked', false);
                            $("#txtCountry").prop("disabled", true);
                            $("#txtState").prop('maxLength', '2');
                        }
                        else { // Other Country
                            $("#chkCountry").prop('checked', true);
                            $("#txtCountry").prop("disabled", false);
                            $("#txtState").prop('maxLength', '30');
                            $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            $m('#txtZipCode').attr("placeholder", "");
                        }
                        if (data[21].toString() != "") {
                            $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                        }
                        else {
                            $("#txtZipCode").addClass("watermarkHTMLTextBox");
                            if (data[17].toString() == "United States") {
                                $("#txtZipCode").blur();
                            }
                        }
                        if (data[5].toString() == "1") {
                            $("#tdCheck").show();
                            $("#txtCheck").val(data[23].toString());
                        }
                        else if (data[5].toString() == "8") {
                            $("#tdCheck").show();
                            $("#txtCheck").val(data[23].toString());
                        }
                        else {
                            $("#tdCheck").hide();
                        }
                        var originalAmount = data[24].toString();
                        sessionStorage.setItem("EditPartnershipOrgAmt", originalAmount);
                        $("#txtAmtABC").val(originalAmount);
                        if ($("#txtAmtABC").val().toString() != "" || $("#txtAmtABC").val().toString() != "999999999.99") {
                            $("#txtAmtABC").removeClass("watermarkHTMLTextBox");
                        }
                        $("#txtExplanation").val(data[36].toString());

                        if (data[5].toString() == "7") {
                            $("#lblExplanation").text("* Explanation");
                        }
                        else {
                            $("#lblExplanation").text("Explanation");
                        }

                        if (data[37].toString() == "No") {
                            $("#lblExplanation").text("Explanation");
                        }

                        if (data[3].toString() == "14") {
                            $("#lblExplanation").text("* Explanation");
                        }

                        if (sessionStorage.getItem("IndPart").toString() == "Yes") { // Schedule A - EDIT SCHEDULE 'A' TRANSACTIONS.

                            $("#spanImportData").show(); 

                            if (data[37].toString() == "No") {   // Unitemized Transaction
                                // Itemized 'Y/N'
                                $("#lstItemized")[0].selectedIndex = 1;
                                $("#lstItemized").prop("disabled", true);

                                //Show All TD
                                $("#tAmt").show("slow");
                                $("#tdExplanation").show("slow");

                                $("#tdContributionName").hide("slow");
                                $("#tdFirstName").hide("slow");
                                $("#tdMI").hide("slow");
                                $("#tdLastName").hide("slow");
                                $("#tdStreet").hide("slow");
                                $m("#divStreetAddress").hide("slow");
                                $m("#divCity").hide("slow");
                                $m("#divState").hide("slow");
                                $m("#divZip5").hide("slow");
                                $("#tdMethod").hide("slow");
                                $("#tdCountryContributionChk").hide("slow");
                                $("#tdCountryContributionTxt").hide("slow");

                                $("#divErrorStreetName").hide("slow");
                                $("#divErrorCity").hide("slow");
                                $("#divErrorState").hide("slow");
                                $("#divErrorZip5").hide("slow");

                                $("#tdPartnershipName").hide("slow");
                            }
                            else { // Itemized Transaction.

                                $("#lstItemized")[0].selectedIndex = 0;
                                $("#lstItemized").prop("disabled", true);

                                // show/hide based on Transaction Type
                                $("#tdContributionName").show("slow");
                                $("#tdFirstName").show("slow");
                                $("#tdMI").show("slow");
                                $("#tdLastName").show("slow");
                                $m("#divStreetAddress").show("slow");
                                $m("#divCity").show("slow");
                                $m("#divState").show("slow");
                                $m("#divZip5").show("slow");
                                $("#tdMethod").show("slow");
                                $("#tAmt").show("slow");
                                $("#tdExplanation").show("slow");
                                $("#tdCountryContributionChk").show("slow");
                                $("#tdCountryContributionTxt").show("slow");

                                $("#tdPartnershipName").hide("slow");

                                $("#lstItemized")[0].selectedIndex = 0;
                                $("#lstItemized").prop("disabled", true);
                            }

                            if (selectedlstContributorCode == "5") {

                                $("#tdPartnershipName").show("slow");

                                //Show All TD
                                $("#tdFirstName").hide("slow");
                                $("#tdMI").hide("slow");
                                $("#tdLastName").hide("slow");
                                $("#tdStreet").show("slow");
                                $m("#divStreetAddress").show("slow");
                                $m("#divCity").show("slow");
                                $m("#divState").show("slow");
                                $m("#divZip5").show("slow");
                                $("#tdMethod").show("slow");
                                $("#tAmt").show("slow");
                                $("#tdExplanation").show("slow");

                                $("#txtPartnerShipName").val(data[13].toString());
                            }
                            else {
                                if (data[37].toString() == "Yes") {
                                    $("#tdFirstName").show("slow");
                                    $("#tdMI").show("slow");
                                    $("#tdLastName").show("slow");
                                    $("#tdStreet").show("slow");
                                    $m("#divStreetAddress").show("slow");
                                    $m("#divCity").show("slow");
                                    $m("#divState").show("slow");
                                    $m("#divZip5").show("slow");
                                    $("#tdMethod").show("slow");
                                    $("#tAmt").show("slow");
                                    $("#tdExplanation").show("slow");

                                    $("#tdPartnershipName").hide("slow");

                                    $("#txtFirstName").val(data[14].toString());
                                    $("#txtMI").val(data[15].toString());
                                    $("#txtLastName").val(data[16].toString());
                                }
                            }
                            
                            if (@Session["COMM_TYPE_ID"] == "23") {
                                $m("label[for=lstIsClaim]").text('');
                                $m("#lstIsClaim").removeClass("error");
                                 $("#tdIsClaim").show();
                                 $("#lstIsClaim").show();
                                 $("#alertForLstContributionName").hide();
                                $m("#lstIsClaim option").each(function () {
                                     if ($(this).text() == data[46].toString()) {
                                         $(this).prop('selected', true).trigger('change');
                                         if ($(this).text() == "Yes") {
                                             $("#tdInDistrict").show();
                                             $m("#lstInDistrict option").each(function () {
                                                 if ($(this).text() == data[47].toString()) {
                                                     $(this).prop('selected', true).trigger('change');
                                                 }
                                             });

                                             $("#tdMinor").show();
                                             $m("#lstMinor option").each(function () {
                                                 if ($(this).text() == data[48].toString()) {
                                                     $(this).prop('selected', true).trigger('change');
                                                 }
                                             });

                                             $("#tdVendor").show();
                                             $m("#lstVendor option").each(function () {
                                                 if ($(this).text() == data[49].toString()) {
                                                     $(this).prop('selected', true).trigger('change');
                                                 }
                                             });

                                             $("#tdLobbyist").show();
                                             $m("#lstLobbyist option").each(function () {
                                                 if ($(this).text() == data[50].toString()) {
                                                     $(this).prop('selected', true).trigger('change');
                                                 }
                                             });
                                         }
                                         else if ($(this).text() == "No") {
                                             $("#tdInDistrict").hide();
                                             $("#tdMinor").hide();
                                             $("#tdVendor").hide();
                                             $("#tdLobbyist").hide();
                                         }
                                         else {
                                             $("#tdInDistrict").hide();
                                             $("#tdMinor").hide();
                                             $("#tdVendor").hide();
                                             $("#tdLobbyist").hide();
                                         }
                                         return false;
                                     }
                                 });

                                 if (data[51].toString() == "") {
                                     $("#tdRContributions").hide();
                                     $("#tdEmployer").hide();
                                     $("#tdOccupation").hide();
                                     $("#divContStreetAddress").hide();
                                     $("#divContCity").hide();
                                     $("#divContState").hide();
                                     $("#divContZip5").hide();
                                 }
                                 else {
                                     $("#tdRContributions").show();
                                     $m("#lstRContributions option").each(function () {
                                         if ($(this).text() == data[51].toString()) {
                                             $(this).prop('selected', true).trigger('change');

                                             if ($(this).text() == "Yes") {
                                                 $("#tdEmployer").show();
                                                 $("#tdOccupation").show();
                                                 $("#divContStreetAddress").show();
                                                 $("#divContCity").show();
                                                 $("#divContState").show();
                                                 $("#divContZip5").show();
                                                 $("#txtEmployerPCFB").val(data[52].toString());
                                                 $("#txtOccupationPCFB").val(data[53].toString());
                                                 $("#txtContStreetName").val(data[55].toString());
                                                 $("#txtContCity").val(data[56].toString());
                                                 $("#txtContState").val(data[57].toString());
                                                 $("#txtContZipCode").val(data[58].toString());
                                             }
                                             else {
                                                 $("#tdEmployer").hide();
                                                 $("#tdOccupation").hide();
                                                 $("#divContStreetAddress").hide();
                                                 $("#divContCity").hide();
                                                 $("#divContState").hide();
                                                 $("#divContZip5").hide();
                                             }
                                         }
                                     });
                                 }
                             }
                             else {
                                 $("#tdIsClaim").hide();
                                 $("#tdInDistrict").hide();
                                 $("#tdMinor").hide();
                                 $("#tdVendor").hide();
                                 $("#tdLobbyist").hide();
                                 $("#tdRContributions").hide();
                                 $("#tdEmployer").hide(); 
                                 $("#tdOccupation").hide();
                                 $("#divContStreetAddress").hide();
                                 $("#divContCity").hide();
                                 $("#divContState").hide();
                                 $("#divContZip5").hide();
                             }
                        }
                        else if (sessionStorage.getItem("Corporate").toString() == "Yes") { // Schedule B - EDITOR SCHEDULE 'B' TRANSACTION.
                            $("#spanImportData").hide(); 
                            $("#tdIsClaim").hide();
                            $("#tdInDistrict").hide();
                            $("#tdMinor").hide();
                            $("#tdVendor").hide();
                            $("#tdLobbyist").hide();
                            $("#tdRContributions").hide();
                            $("#tdEmployer").hide();
                            $("#tdOccupation").hide();
                            $("#divContStreetAddress").hide();
                            $("#divContCity").hide();
                            $("#divContState").hide();
                            $("#divContZip5").hide();

                            if (data[37].toString() == "No") { // UNITEMIZED TRANSACTION

                                $("#lstItemized")[0].selectedIndex = 1;
                                $("#lstItemized").prop("disabled", true);

                                $("#lstItemized")[0].selectedIndex = 1;
                                $("#lstItemized").prop("disabled", true);

                                //Show All TD
                                $("#tAmt").show("slow");
                                $("#tdExplanation").show("slow");

                                $("#tdContributionName").hide("slow");
                                $("#tdFirstName").hide("slow");
                                $("#tdMI").hide("slow");
                                $("#tdLastName").hide("slow");
                                $("#tdStreet").hide("slow");
                                $m("#divStreetAddress").hide("slow");
                                $m("#divCity").hide("slow");
                                $m("#divState").hide("slow");
                                $m("#divZip5").hide("slow");
                                $("#tdMethod").hide("slow");
                                $("#tdCountryContributionChk").hide("slow");
                                $("#tdCountryContributionTxt").hide("slow");

                                $("#divErrorStreetName").hide("slow");
                                $("#divErrorCity").hide("slow");
                                $("#divErrorState").hide("slow");
                                $("#divErrorZip5").hide("slow");

                                $("#tdPartnershipName").hide("slow");
                            }
                            else { // ITEMIZED TRANSACTION

                                $("#lstItemized")[0].selectedIndex = 0;
                                $("#lstItemized").prop("disabled", true);

                                // show/hide based on Transaction Type
                                $("#tdContributionName").hide("slow");
                                $("#tdFirstName").hide("slow");
                                $("#tdMI").hide("slow");
                                $("#tdLastName").hide("slow");
                                $m("#divStreetAddress").show("slow");
                                $m("#divCity").show("slow");
                                $m("#divState").show("slow");
                                $m("#divZip5").show("slow");
                                $("#tdMethod").show("slow");
                                $("#tAmt").show("slow");
                                $("#tdExplanation").show("slow");
                                $("#tdCountryContributionChk").show("slow");
                                $("#tdCountryContributionTxt").show("slow");

                                $("#tdPartnershipName").show("slow");
                                $("#txtPartnerShipName").val(data[13].toString());

                                $("#lstItemized")[0].selectedIndex = 0;
                                $("#lstItemized").prop("disabled", true);

                                $("#lblPartnershipName").text("* Contributor Name");
                            }
                        }
                        else if (sessionStorage.getItem("Other").toString() == "Yes") { // SCHEDULE C - EDITOR SCHEDULE 'C' TRANSACTION.
                            $("#spanImportData").hide(); 
                            $("#tdIsClaim").hide();
                            $("#tdInDistrict").hide();
                            $("#tdMinor").hide();
                            $("#tdVendor").hide();
                            $("#tdLobbyist").hide();
                            $("#tdRContributions").hide();
                            $("#tdEmployer").hide();
                            $("#tdOccupation").hide();
                            $("#divContStreetAddress").hide();
                            $("#divContCity").hide();
                            $("#divContState").hide();
                            $("#divContZip5").hide();

                            $("#lblContributionName").text("* Contributor Type");

                            if (data[37].toString() == "No") {
                                // Itemized 'Y/N'
                                $("#lstItemized")[0].selectedIndex = 1;
                                $("#lstItemized").prop("disabled", true);

                                $("#tdMethod")[0].selectedIndex = 0;

                                //Show All TD
                                $("#tAmt").show("slow");
                                $("#tdExplanation").show("slow");

                                //$("#tdContributionName").show("slow");
                                $("#tdContributionName").hide("slow"); // ADDED DEFECT: 4101 ON 06.25.2021.
                                $("#tdFirstName").hide("slow");
                                $("#tdMI").hide("slow");
                                $("#tdLastName").hide("slow");
                                $("#tdStreet").hide("slow");
                                $m("#divStreetAddress").hide("slow");
                                $m("#divCity").hide("slow");
                                $m("#divState").hide("slow");
                                $m("#divZip5").hide("slow");
                                $("#tdMethod").hide("slow");
                                $("#tdCountryContributionChk").hide("slow");
                                $("#tdCountryContributionTxt").hide("slow");

                                $("#divErrorStreetName").hide("slow");
                                $("#divErrorCity").hide("slow");
                                $("#divErrorState").hide("slow");
                                $("#divErrorZip5").hide("slow");

                                $("#tdPartnershipName").hide("slow");
                            }
                            else {
                                // Itemized 'Y/N'
                                $("#lstItemized")[0].selectedIndex = 0;
                                $("#lstItemized").prop("disabled", true);

                                // show/hide based on Transaction Type
                                $("#tdContributionName").show("slow");
                                $("#tdFirstName").hide("slow");
                                $("#tdMI").hide("slow");
                                $("#tdLastName").hide("slow");
                                $m("#divStreetAddress").show("slow");
                                $m("#divCity").show("slow");
                                $m("#divState").show("slow");
                                $m("#divZip5").show("slow");
                                $("#tdMethod").show("slow");
                                $("#tAmt").show("slow");
                                $("#tdExplanation").show("slow");
                                $("#tdCountryContributionChk").show("slow");
                                $("#tdCountryContributionTxt").show("slow");

                                $("#tdPartnershipName").show("slow");
                                $("#txtPartnerShipName").val(data[13].toString());
                                $("#lstItemized").prop("disabled", true);
                            }
                        }
                    } // Other Schedules
                    else if (["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "16", "17", "18", "19", "20","21"].includes(data[1].toString())) {
                        //Common code to determine redirect url and set session varialbes. Also hides $("#divLoading") on fail.
                        //Uses window.location.href
                        appCommonEFS_DetermineScheduleRedirect(data[1].toString(), data[42].toString());
                    }
                }
                else {
                    $("#divLoading").hide();
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before editing this Transaction.', 'Ok', '');
                }
            }).fail(function () {
                //Hide if GetEditFlag fails otherwise keep divloading until we open dialog or redirect.
                $("#divLoading").hide();
            });
        });

        // Delete Record FILING TRANSACTIONS.
        $m('#gridFilingTransactions tbody').on('click', 'a.editor_remove_Sched_A', function (e) {
            e.preventDefault();
            //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            var dataTrans = tableFilingTransactions.row($(this).parents('tr')).data();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                txtFilerId: $("#txtFilerID").val(),
                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }, function (resultEditFlag) {
                if (resultEditFlag == "TRUE") {
                    $.post("@Url.Content("~/_UC_GridCommonControl/GetDeleteFlag/")", {
                    }, function (resultDeleteFlag) {
                        if (resultDeleteFlag == "True") {

                            // LOAN RECEIVED DELETE CHECK.
                            $.post("@Url.Content("~/LoanReceivedSchedI/ValidateDelete_LoanReceived/")", {
                                loan_Lib_Number: dataTrans[41].toString(),
                            }, function (resultDeleteFlagSchedI) {

                                // CHECK THE VALIDATION IF ANY CONTRIBUTION REFUNDS (SCHEDULE 'M') EXISTS OR NOT.
                                // IF SCHEDULE 'M' EXISTS FOR EITHER SCHEDULE 'A', SCHEUDLE 'B', OR SCHEDULE 'C'...
                                // THEN SHOULD NOT DELETE UNTIL CHILD RECORDS DELETE.
                                $.post("@Url.Content("~/ContributionsCandIndFamily/ContributionsRefundSchedMExists/")", {
                                    strTransNumber: dataTrans[42].toString()
                                }, function (resultDelSchedABC) {

                                    // CHECK THE VALIDATION IF ANY EXPENDITURE REFUNDS (SCHEDULE 'L') EXISTS OR NOT.
                                    // IF SCHEDULE 'L' EXITS THEN SCHEDULE 'F' SHOULD NOT DELETE UNTLI CHILD DELETE ALL.
                                    $.post("@Url.Content("~/ExpenditurePaymentsSchedF/ExpenditureRefundSchedLExists/")", {
                                        strTransNumber: dataTrans[42].toString()
                                    }, function (resultDelSchedF) {

                                        $("#divShowPartnerAdddataNCR").hide();
                                        $("#divShowAttributionSchedC").hide();
                                        //Set default message
                                        var resultsDeleteMessage = "Are you sure you want to delete this transaction?";
                                        var deleteURL = "";
                                        if (dataTrans[1].toString() == "1") {
                                            if (resultDelSchedABC.toString() != "TRUE") {
                                                if (dataTrans[3].toString() == "5") {
                                                    resultsDeleteMessage = "Deleting this transaction will also delete the partnership details added for this transaction. Are you sure you want to delete this transaction?";
                                                }
                                                deleteURL = "@Url.Content("~/ContributionsCandIndFamily/DeleteFilingTransactions/")";
                                            }
                                            else {
                                                ShowDialogBox('EFS', 'Monetary Contributions Received From Ind. & Part. transaction cannot be deleted as corresponding Contribution Refunds transaction(s) exist.', 'Ok', '');
                                                return false;
                                            }
                                        }
                                        else if (dataTrans[1].toString() == "2") {
                                            if (resultDelSchedABC.toString() != "TRUE") {
                                                deleteURL = "@Url.Content("~/ContributionsCandIndFamily/DeleteFilingTransactions/")";
                                            }
                                            else {
                                                ShowDialogBox('EFS', 'Monetary Contributions Received From Corporate transaction cannot be deleted as corresponding Contribution Refunds transaction(s) exist.', 'Ok', '');
                                                return false;
                                            }
                                        }
                                        else if (dataTrans[1].toString() == "3") {
                                            if (resultDelSchedABC.toString() != "TRUE") {
                                                if (dataTrans[3].toString() == "11") {
                                                    resultsDeleteMessage = "Deleting this transaction will also delete the attribution details added for this transaction. Are you sure you want to delete?";
                                                }
                                                deleteURL = "@Url.Content("~/ContributionsCandIndFamily/DeleteFilingTransactions/")";
                                            }
                                            else {
                                                ShowDialogBox('EFS', 'Monetary Contributions Received From All Other transaction cannot be deleted as corresponding Contribution Refunds transaction(s) exist.', 'Ok', '');
                                                return false;
                                            }
                                        }
                                        else if (dataTrans[1].toString() == "6") {
                                            if (resultDelSchedF.toString() != "TRUE") {
                                                if (dataTrans[29].toString() == "Reimbursement") { // Reimbursement Details
                                                    resultsDeleteMessage = "Deleting this transaction will also delete the reimbursement details added for this transaction. Are you sure you want to delete this transaction?";
                                                }
                                                else if (dataTrans[29].toString() == "Credit Card Payment") { // Credit Card Itemization
                                                    resultsDeleteMessage = "Deleting this transaction will also delete the credit card itemization added for this transaction. Are you sure you want to delete this transaction?";
                                                }
                                                else if (dataTrans[7].toString() == "Y") { // Subcontractor
                                                    resultsDeleteMessage = "Deleting this transaction will also delete the subcontractor details added for this transaction. Are you sure you want to delete this transaction?";
                                                }
                                                else if (dataTrans[6].toString() == "Y") { // Liability
                                                    resultsDeleteMessage = "Deleting this transaction will also delete the outstanding liability of this transaction. Are you sure you want to delete this transaction?";
                                                }

                                                deleteURL = "@Url.Content("~/ExpenditurePaymentsSchedF/DeleteFilingTransactions/")";
                                            }
                                            else {
                                                ShowDialogBox('EFS', 'Expenditures/Payments transaction cannot be deleted as corresponding Expenditure Refunds transaction(s) exist.', 'Ok', '');
                                                return false;
                                            }
                                        }
                                        else if (dataTrans[1].toString() == "4") {
                                            if (resultDelSchedABC.toString() != "TRUE") {
                                                if (dataTrans[3].toString() == "5") {
                                                    resultsDeleteMessage = "Deleting this transaction will also delete the partnership details added for this transaction. Are you sure you want to delete this transaction?";
                                                }
                                                deleteURL = "@Url.Content("~/ContributionsCandIndFamily/DeleteFilingTransactions/")";
                                            }
                                            else {
                                                ShowDialogBox('EFS', 'In-Kind (Non-Monetary) Contributions Received transaction cannot be deleted as corresponding Contribution Refunds transaction(s) exist.', 'Ok', '');
                                                return false;
                                            }
                                        }
                                        else if (dataTrans[1].toString() == "5"
                                            || dataTrans[1].toString() == "12"
                                            || dataTrans[1].toString() == "13") {
                                            deleteURL = "@Url.Content("~/ContributionsCandIndFamily/DeleteFilingTransactions/")";
                                        }
                                        else if (dataTrans[1].toString() == "14") {
                                            deleteURL = "@Url.Content("~/OutStandingLiabilityLoansSchedN/DeleteOutstandingLiability/")";
                                        }
                                        else if (dataTrans[1].toString() == "16") {
                                            if (dataTrans[30].toString() == "Partnership including LLPs") {
                                                resultsDeleteMessage = "Deleting this transaction will also delete the partnership details added for this transaction. Are you sure you want to delete?";
                                            }
                                            deleteURL = "@Url.Content("~/ContributionsCandIndFamily/DeleteFilingTransactions/")";
                                        }
                                        else if (dataTrans[1].toString() == "17") {
                                            if (resultDelSchedF.toString() != "TRUE") {
                                                if (dataTrans[29].toString() == "Reimbursement") { // Reimbursement Details
                                                    resultsDeleteMessage = "Deleting this transaction will also delete the reimbursement details added for this transaction. Are you sure you want to delete this transaction?";
                                                }
                                                else if (dataTrans[29].toString() == "Credit Card Payment") { // Credit Card Itemization
                                                    resultsDeleteMessage = "Deleting this transaction will also delete the credit card itemization added for this transaction. Are you sure you want to delete this transaction?";
                                                }
                                                deleteURL = "@Url.Content("~/ContributionsCandIndFamily/DeleteFilingTransactions/")";
                                            }
                                            else {
                                                ShowDialogBox('EFS', 'Non-Campaign Housekeeping Expenses transaction cannot be deleted as corresponding Expenditure Refunds transaction(s) exist.', 'Ok', '');
                                                return false;
                                            }
                                        }
                                        else if (dataTrans[1].toString() == "9") {
                                            if (resultDeleteFlagSchedI == "FALSE") {
                                                resultsDeleteMessage = "Deleting Loan Received will delete all loan repayments, loan forgiven and outstanding loans records associated with this loan. Are you sure you want to delete?";
                                                deleteURL = "@Url.Content("~/LoanReceivedSchedI/DeleteLoanReceived/")";
                                            }
                                            else {
                                                ShowDialogBox('EFS', 'Either Liabilities/Loans Forgiven or Loan Payments exists against this Loan. Delete these transactions before deleting the Loan.', 'Ok', '');
                                                return false;
                                            }
                                        }
                                        else if (dataTrans[1].toString() == '10') {
                                            resultsDeleteMessage = "Deleting Loan Repayment will delete the outstanding loan record and associated with this loan repayment. Are you sure you want to delete?";
                                            deleteURL = "@Url.Content("~/LoanRepaymentsSchedJ/DeleteLoanRepayment/")";
                                        }
                                        else if (dataTrans[1].toString() == '11') {
                                            resultsDeleteMessage = "If you Delete Liabilities/Loans Forgiven then Outstanding Liabilities/Loans will also deleted. Do you want to be continue?";
                                            deleteURL = "@Url.Content("~/LiabilitiesLoansForgivenSchedK/DeleteLoanForgiven/")";
                                        }
                                        else { // SCHEDULE '7','8','18'
                                            deleteURL = "@Url.Content("~/ContributionsCandIndFamily/DeleteFilingTransactions/")";
                                        }

                                        $m('#modal_dialog').text(resultsDeleteMessage);
                                        $m("#modal_dialog").dialog({
                                            resizable: false,
                                            width: '400px',
                                            height: 'auto',
                                            bgiframe: false,
                                            closeOnEscape: false,
                                            open: function (event, ui) {
                                                hideDialogXButton(this);
                                                $("#divLoading").hide();
                                            },
                                            buttons: {
                                                "OK": function () {
                                                    // Close Confirm Box.
                                                    $m(this).dialog("close");//Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                                    $("#divLoading").show();

                                                    var options = {};
                                                    options.url = deleteURL;
                                                    options.type = "GET";
                                                    options.data = {
                                                        strLoanLiabNumberOrg: dataTrans[41].toString(),
                                                        strTransNumber: dataTrans[42].toString(),
                                                        strRLiability: dataTrans[6].toString()
                                                    };
                                                    options.dataType = "json";
                                                    options.contentType = "application/json";
                                                    options.success = function (results) {

                                                        window.status = "Record deleted successfully";
                                                        GetAllTransactionTypesData(true, tableFilingTransactions, false, false);
                                                    };
                                                    options.error = function () {
                                                        ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                                                    };
                                                    $.ajax(options);
                                                },
                                                "Cancel": function () {
                                                    $m(this).dialog("close");
                                                }
                                            }
                                        });//Dialog End
                                    }).always(function () {
                                        //Allways hide at this level /ExpenditureRefundSchedLExists/
                                        $("#divLoading").hide();
                                    });

                                }).fail(function () {
                                    //Hide if we fail at /ContributionsRefundSchedMExists/
                                    $("#divLoading").hide();
                                });

                            }).fail(function () {
                                //Hide if we fail at /ValidateDelete_LoanReceived/
                                $("#divLoading").hide();
                            });
                        }
                        //resultDeleteFlag != "True"
                        else {
                            ShowDialogBox('EFS', 'The last transaction cannot be deleted.  To delete the Disclosure report, a deletion request must be submitted to cfinfo@elections.ny.gov', 'Ok', '');
                            //Hide if we cant edit.
                            $("#divLoading").hide();
                        }
                    }).fail(function () {
                        //Hide if we fail at /GetDeleteFlag/
                        $("#divLoading").hide();
                    });
                }
                else {
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before editing this Transaction.', 'Ok', '');
                    $("#divLoading").hide();
                }
            }).fail(function () {
                //Hide if we fail at /GetEditFlag/.
                $("#divLoading").hide();
            });
        });

        //Contribution Name Selected index changed
        $("#lstContributionName").change(function () {

            $m("label[for=txtExplanation]").text('');
            $m("#txtExplanation").removeClass("error");

            if ($("#lstItemized option:selected").val().toString() == "Y") { // IF ITEMIZED YES

                $("#dvErrorlstContrCode").hide();
                $("#lstContributionName").removeClass("ui-state-error");

                var selectedlstContributionName = $("#lstContributionName option:selected").val().toString();

                if ($("#lstMethod option:selected").val().toString() == "7") {
                    $("#lblExplanation").text("* Explanation");
                }
                else {
                    if ($("#lstMethod option:selected").val().toString() == "1") {
                        $("#lblExplanation").text("Explanation");

                        $m("label[for=txtExplanation]").text('');
                        $m("#txtExplanation").removeClass("error");
                    }
                    else {
                        $("#lblExplanation").text("Explanation");

                        $m("label[for=txtExplanation]").text('');
                        $m("#txtExplanation").removeClass("error");
                    }
                }
                if (selectedlstContributionName != "0") {
                    if (selectedlstContributionName == "5") {
                        $("#tdPartnershipName").show("slow");
                        //Show All TD
                        $("#tdFirstName").hide("slow");
                        $("#tdMI").hide("slow");
                        $("#tdLastName").hide("slow");
                        $("#tdStreet").show("slow");
                        $m("#divStreetAddress").show("slow");
                        $m("#divCity").show("slow");
                        $m("#divState").show("slow");
                        $m("#divZip5").show("slow");
                        $("#tdMethod").show("slow");
                        $("#tAmt").show("slow");
                        $("#tdExplanation").show("slow");
                        // Clear Values
                        $("#txtPartnerShipName").val("");
                        $("#txtFirstName").val("");
                        $("#txtMI").val("");
                        $("#txtLastName").val("");

                        $m("label[for=txtFirstName]").text('');
                        $m("#txtFirstName").removeClass("error");

                        $m("label[for=txtMI]").text('');
                        $m("#txtMI").removeClass("error");

                        $m("label[for=txtLastName]").text('');
                        $m("#txtLastName").removeClass("error");
                        
                        if (sessionStorage.getItem("IndPart").toString() == "Yes") {
                            if (@Session["COMM_TYPE_ID"] == "23") {
                                $("#tdRContributions").hide();
                                $("#lstRContributions")[0].selectedIndex = 1;
                                $("#tdEmployer").hide();
                                $("#tdOccupation").hide();
                                $("#divContStreetAddress").hide();
                                $("#divContCity").hide();
                                $("#divContState").hide();
                                $("#divContZip5").hide();
                            }
                        }
                    }
                    else { // Other than Partnership, including LLps

                        if (sessionStorage.getItem("IndPart").toString() == "Yes") {
                            if (@Session["COMM_TYPE_ID"] == "23") {
                                $("#tdRContributions").show();
                                $("#lstRContributions")[0].selectedIndex = 1;
                                $("#tdEmployer").hide();
                                $("#tdOccupation").hide();
                                $("#divContStreetAddress").hide();
                                $("#divContCity").hide();
                                $("#divContState").hide();
                                $("#divContZip5").hide();
                            }
                        }
                        if (sessionStorage.getItem("Other").toString() == "Yes") { // Schedule 'C'
                            //Show All TD
                            $("#tdFirstName").hide("slow");
                            $("#tdMI").hide("slow");
                            $("#tdLastName").hide("slow");
                            $("#tdStreet").show("slow");
                            $m("#divStreetAddress").show("slow");
                            $m("#divCity").show("slow");
                            $m("#divState").show("slow");
                            $m("#divZip5").show("slow");
                            $("#tdMethod").show("slow");
                            $("#tAmt").show("slow");
                            $("#tdExplanation").show("slow");
                            $("#tdPartnershipName").show("slow");
                            // Clear Values
                            $("#txtPartnerShipName").val("");
                            $("#txtFirstName").val("");
                            $("#txtMI").val("");
                            $("#txtLastName").val("");

                            $m("label[for=txtPartnerShipName]").text('');
                            $m("#txtPartnerShipName").removeClass("error");
                        }
                        else {
                            //Show All TD
                            $("#tdFirstName").show("slow");
                            $("#tdMI").show("slow");
                            $("#tdLastName").show("slow");
                            $("#tdStreet").show("slow");
                            $m("#divStreetAddress").show("slow");
                            $m("#divCity").show("slow");
                            $m("#divState").show("slow");
                            $m("#divZip5").show("slow");
                            $("#tdMethod").show("slow");
                            $("#tAmt").show("slow");
                            $("#tdExplanation").show("slow");
                            $("#tdPartnershipName").hide("slow");
                            // Clear Values
                            $("#txtPartnerShipName").val("");
                            $("#txtFirstName").val("");
                            $("#txtMI").val("");
                            $("#txtLastName").val("");

                            $m("label[for=txtFirstName]").text('');
                            $m("#txtFirstName").removeClass("error");

                            $m("label[for=txtMI]").text('');
                            $m("#txtMI").removeClass("error");

                            $m("label[for=txtLastName]").text('');
                            $m("#txtLastName").removeClass("error");

                            $m("label[for=txtPartnerShipName]").text('');
                            $m("#txtPartnerShipName").removeClass("error");
                        }
                    }
                    if (selectedlstContributionName == "14") {
                        $("#lblExplanation").text("* Explanation");
                    }
                }
                else {
                    if (sessionStorage.getItem("Other").toString() == "Yes") { // Schedule 'C'
                        $("#tdPartnershipName").show("slow");
                        $("#tdFirstName").hide("slow");
                        $("#tdMI").hide("slow");
                        $("#tdLastName").hide("slow");
                    }
                    else {
                        $("#tdPartnershipName").hide("slow");
                        $("#tdFirstName").show("slow");
                        $("#tdMI").show("slow");
                        $("#tdLastName").show("slow");
                    }
                }
            }
            else { // IF ITEMIZED "NO".

                if (sessionStorage.getItem("Other").toString() == "Yes") { // Schedule 'C'

                    if ($("#lstContributionName option:selected").val().toString() == "11") {

                        $("#lstItemized").select();

                        $("#txtCurrentDate").blur();
                        $("#txtZipCode").blur();
                        $("#txtAmtABC").blur();

                        $("#txtCountry").val("United States");

                        $("#lstItemized")[0].selectedIndex = 0;

                        // Show Fileds
                        $("#tdContributionName").show("slow");
                        $("#tdPartnershipName").show("slow");
                        $("#tdFirstName").hide("slow");
                        $("#tdMI").hide("slow");
                        $("#tdLastName").hide("slow");
                        $("#divStreetAddress").show("slow");
                        $("#divCity").show("slow");
                        $("#divState").show("slow");
                        $("#divZip5").show("slow");
                        $("#tdMethod").show("slow");
                        $("#tdCountryContributionChk").show("slow");
                        $("#tdCountryContributionTxt").show("slow");
                        $("#txtCountry").val("United States");
                        $("#txtCountry").prop("disabled", true);
                        $("#chkCountry").prop('checked', false);
                        $("#txtState").prop('maxLength', '2');

                        $("#lstMethod")[0].selectedIndex = 0;

                    }
                    else {

                        $("#txtCurrentDate").blur();
                        $("#txtAmtABC").blur();

                        $("#txtCountry").val("United States");
                        $("#lstItemized")[0].selectedIndex = 1;

                        $("#lstMethod")[0].selectedIndex = 0;
                        // Hide fields
                        $("#tdContributionName").show("slow");
                        $("#tdPartnershipName").hide("slow");
                        $("#tdFirstName").hide("slow");
                        $("#tdMI").hide("slow");
                        $("#tdLastName").hide("slow");
                        $("#divStreetAddress").hide("slow");
                        $("#divCity").hide("slow");
                        $("#divState").hide("slow");
                        $("#divZip5").hide("slow");
                        $("#tdMethod").hide("slow");
                        $("#tdCountryContributionChk").hide("slow");
                        $("#tdCountryContributionTxt").hide("slow");
                        $("#tdCheck").hide("slow");
                    }

                    if ($("#lstContributionName option:selected").val().toString() == "14") {
                        $("#lblExplanation").text("* Explanation");
                    }
                    else {
                        $("#lblExplanation").text("Explanation");
                    }
                }
            }

        });

        //=================================================================================================================================================
        // Grid Common Code ///////////////////////////////////////////////////
        //=================================================================================================================================================
        // Grid Common Code ///////////////////////////////////////////////////
        //=================================================================================================================================================

        // CALL LOAD DATA FUNCTION
        var tableFilingTransactions = null;
        LoadData();

        // FUNCTION LOAD DATA
        function LoadData() {
            $("#divLoading").show();
            tableFilingTransactions = $m('#gridFilingTransactions').DataTable({
                "bProcessing": true,
                "responsive": true,
                "deferRender": true,
                "retrieve": true,
                "columnDefs": [
                    {
                        "targets": [0, 1, 2, 3, 4, 5, 6, 7, 38, 39, 41, 42, 43, 44],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        "targets": [9],
                        "fnCreatedCell": function (cell) {
                            cell.setAttribute('aria-label', "Row Actions");
                        }
                    }
                ],
                "initComplete": function (settings, json) {
                    //Accessibility: Applies various Accessibility features to this dataTable.
                    makeDataTableAccessible($m('#gridFilingTransactions').DataTable());
                },
                "fnRowCallback": function (nRow, aaData, iDisplayIndex) {
                    var uniqueID = generateUniqueRowIdForFnRowCallback(iDisplayIndex, nRow);
                    if (sessionStorage.getItem("IndPart").toString() == "Yes") { // SCHEDULE A
                        if (aaData[1] == "1") { // SCHEDULE A
                            if (aaData[3] == "5") { // PARTNERSHIP.
                                $m('td:eq(1)', nRow).html('<a class="editor_edit_Sched_A" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_Sched_A" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_AttributionSchedA lnkGird" href="">Partnership</a>');
                            }
                            else {
                                $m('td:eq(1)', nRow).html('<a class="editor_edit_Sched_A" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_Sched_A" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                            }
                        }
                        else if (aaData[1] == "14") {
                            $m('td:eq(1)', nRow).html('');
                        }
                        else if (aaData[1] == "11") { // LIABILITY/LOANS FORGIVEN
                            $m('td:eq(1)', nRow).html('<a class="editor_remove_Sched_A" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                        }
                        else { // OTHER SCHEDULES
                            if (aaData[1] != "15") {
                                $m('td:eq(1)', nRow).html('<a class="editor_edit_Sched_A" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_Sched_A" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                            }
                            else { // SCHEDULE 15 LEGACY DATA NOT EDIT NO ADD ONLY DELETE.
                                $m('td:eq(1)', nRow).html('<a class="editor_remove_Sched_A" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                            }
                        }
                    }
                    else if (sessionStorage.getItem("Other").toString() == "Yes") { // SCHEDULE C
                        if (aaData[1] == "3") { // SCHEDULE C
                            if (aaData[3] == "11") { // PLLC/LLC.
                                $m('td:eq(1)', nRow).html('<a class="editor_edit_Sched_A" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_Sched_A" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_AttributionSchedC lnkGird" href="">Attribution</a>');
                            }
                            else {
                                $m('td:eq(1)', nRow).html('<a class="editor_edit_Sched_A" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_Sched_A" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                            }
                        }
                        else if (aaData[1] == "14") {
                            $m('td:eq(1)', nRow).html('');
                        }
                        else if (aaData[1] == "11") { // LIABILITY/LOANS FORGIVEN
                            $m('td:eq(1)', nRow).html('<a class="editor_remove_Sched_A" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                        }
                        else { // OTHER SCHEDULES
                            if (aaData[1] != "15") {
                                $m('td:eq(1)', nRow).html('<a class="editor_edit_Sched_A" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_Sched_A" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                            }
                            else { // SCHEDULE 15 LEGACY DATA NOT EDIT NO ADD ONLY DELETE.
                                $m('td:eq(1)', nRow).html('<a class="editor_remove_Sched_A" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                            }
                        }
                    }
                    else if (aaData[1] == "14") {
                        $m('td:eq(1)', nRow).html('');
                    }
                    else if (aaData[1] == "11") { // LIABILITY/LOANS FORGIVEN
                        $m('td:eq(1)', nRow).html('<a class="editor_remove_Sched_A" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                    }
                    else { // OTHER SCHEDULES
                        if (aaData[1] != "15") {
                            $m('td:eq(1)', nRow).html('<a class="editor_edit_Sched_A" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_Sched_A" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                        }
                        else { // SCHEDULE 15 LEGACY DATA NOT EDIT NO ADD ONLY DELETE.
                            $m('td:eq(1)', nRow).html('<a class="editor_remove_Sched_A" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                        }
                    }
                    return nRow;
                },
                "fnDrawCallback": function () {
                    $("#divLoading").hide();
                },
                "fnServerData": function (url, data, callback) {
                    GetAllTransactionTypesData(false, callback, false, false);
                }
            });

            tableFilingTransactions.columns.adjust().draw(true);
            $m('#gridFilingTransactions').DataTable().ajax.reload();
            //tableFilingTransactions.search('').columns().search('').draw();
            tableFilingTransactions.order([40, 'desc']).draw();
            if (@Session["COMM_TYPE_ID"] == "23") {
                tableFilingTransactions.column(46).visible(true);
                tableFilingTransactions.column(47).visible(true);
                tableFilingTransactions.column(48).visible(true);
                tableFilingTransactions.column(49).visible(true);
                tableFilingTransactions.column(50).visible(true);
                tableFilingTransactions.column(51).visible(true);
                tableFilingTransactions.column(52).visible(true);
                tableFilingTransactions.column(53).visible(true);
                tableFilingTransactions.column(54).visible(true);
            }
            else {
                tableFilingTransactions.column(46).visible(false);
                tableFilingTransactions.column(47).visible(false);
                tableFilingTransactions.column(48).visible(false);
                tableFilingTransactions.column(49).visible(false);
                tableFilingTransactions.column(50).visible(false);
                tableFilingTransactions.column(51).visible(false);
                tableFilingTransactions.column(52).visible(false);
                tableFilingTransactions.column(53).visible(false);
                tableFilingTransactions.column(54).visible(false);
            }

            if (@Session["COMM_TYPE_ID"] == "19") {
                tableFilingTransactions.column(55).visible(true);
            }
            else {
                tableFilingTransactions.column(55).visible(false);
            }

            tableFilingTransactions.columns.adjust().draw(false);
            tableFilingTransactions.search('').columns().search('').draw();
            tableFilingTransactions.responsive.recalc();
            $("#divLoading").show();
        }

        //Common Code for Set Preferences - Start
        //---------------------------------------------------------------------------------------------------------------------------------------
        //---------------------------------------------------------------------------------------------------------------------------------------
        $('#btnSetPreferences').click(function () {
            appCommonEFS_btnSetPrefrencesCommonCode($m("#ddlViewableColumn").multipleSelect("getSelects").toString(), tableFilingTransactions, "ddlViewableColumn", GetTableFilingTransactionsAjaxOptionsData());
        });

        /**
         * Appends label text to _validate elementys based on a list of custom errors returned from the server.
         * It won't do anyting to handle "AmmountError" keys but it will return true if it sees one in the list.
          * param {reuslt.Errors} errorList
          * Replaces this type of code basically:
             for (var i = 0; i < results.Errors.length; i++) {
                 if (results.Errors[i].Key == "txtPartAmt") {
                     $("#txtPartAmtSchedD_validate").append('<label for="txtPartAmtSchedD" class="error">' + results.Errors[i].Value + '</label>');
                 }
                 if (results.Errors[i].Key == "txtPartExplanationInKind") {
                     $("#txtPartExplanationInKind_validate").append('<label for="txtPartExplanationInKind" class="error">' + results.Errors[i].Value + '</label>');
                 }
                 if (results.Errors[i].Key == "AmountError") {
                     ShowDialogBox('EFS', 'Partnership Amount cannot be more than Outstanding Amount $' + parseFloat(expPartAmount).toFixed(2).toString(), 'Ok', '');
                 }
             }
          */
        function AppendCustomErrorLabels(errorList) {
            //Define special error conditions
            var errorLabelDiscrepancies = new Map([["txtAmt", "txtAmtABC"], ["txtPartAmt", "txtPartAmtAC"]]);
            return appCommonEFS_AppendCustomErrorLabelsForAmmountError(errorList, errorLabelDiscrepancies);
        }

        //Commonly used values in this particular page.
        function GetTableFilingTransactionsAjaxOptionsData() {
            return {
                txtFilerID: $("#txtFilerID").val(),
                lstElectionCycle: $("#lstElectionCycle option:selected").val(),
                lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                lstElectionType: $("#lstElectionType option:selected").val(),
                lstElectionDateId: $("#lstElectionDate option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }
        }

        /**Common code for invoking GetAllTransactionTypesData from controller.
        * reloadAndRecalc { boolean } reloads and recalculates the table. When we reload we will display the "divLoading" image until the ajax reload call is completed. This was created for ALM Defect 707 where users were intertacting with the table while the "Processing..." text was still visible.
        * dataTableInstanceToReload { function } The referecne to the datatable we will reload in the success callback..
        * dataOverides { ajax data params } pass to overwrite data values when making ajax call.
        * doneFunction { function } A function to be called if the ajax call is completed.
        */
        function GetAllTransactionTypesData(reloadAndRecalc, dataTableInstanceToReload, dataOverides, doneFunction) {
            var callback = dataTableInstanceToReload ? dataTableInstanceToReload : tableFilingTransactions;
            //Determine what data to use.
            var optionsData = bUtilIsObject(dataOverides) ? dataOverides : GetTableFilingTransactionsAjaxOptionsData();
            appCommonEFS_GetAllTransactionTypesDataCommon(reloadAndRecalc, callback, optionsData, doneFunction);
        }

        /**Common code for invoking GetSchedAPartnersData from controller.
         * reloadAndRecalc { boolean } reloads and recalculates the table. When we reload we will display the "divLoading" image until the ajax reload call is completed. This was created fotableFilingTransactionsusers were intertacting with the table while the "Processing..." text was still visible.
         * successCallbackFunction { function } A function to be called if the request succeeds.
         * dataOverides { ajax data params } pass to overwrite data values when making ajax call.
         * doneFunction { function } A function to be called if the ajax call is completed.
         */
        function GetSchedAPartnersData(reloadAndRecalc, dataTableInstanceToReload, dataOverides, doneFunction) {
            var data;
            if (dataOverides) {
                //Use different values if they were provided.
                data = dataOverides;
            } else {
                //Commonly used values in this particular page.
                data = {
                    strTransNumber: sessionStorage.getItem("TransIdPartnership").toString(),
                    strFilerId: $("#txtFilerID").val()
                }
            }
            var functionObject = {
                "reloadAndRecalc": reloadAndRecalc,// Reloads and recalculates the table. When true it display the "divLoading" and tell the table to reload the data.
                "successCallbackFunction": dataTableInstanceToReload, //Function to be called if the request succeeds.
                "data": data, //Data values when making ajax call.
                "doneFunction": doneFunction,//Function to be called if the ajax call is completed.
                "ajaxUrl": "@Url.Content("~/ContributionsCandIndFamily/GetSchedAPartnersData/")",//Url to make ajax call.
            }
            appCommonEFS_MakeAjaxCallForDataTableGrid(dataTableInstanceToReload, functionObject, false);
        }

        $.post("@Url.Content("~/_UC_GridCommonControl/GetSortName/")", {
        }, function (results) {
            HideColumn(results.toString().split(","));
        });

        function HideColumn(results) {
            var rules = {
                "indexesToStartHidden": [0, 1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43],
                "indexesToAlwaysKeepUnhidden": [8, 9], //Will always unhide.
                "columnNamesToUnhide": results,//String to match.
                "columnNamesIndexMappings": appCommonEFS_GetGridColumnSettings("UC_GridCommonControl") //String in header, index to unhide
            }
            appCommonEFS_HideTableColumn(tableFilingTransactions, rules);
        }
        //Common Code for Set Preferences - End
        //---------------------------------------------------------------------------------------------------------------------------------------
        //---------------------------------------------------------------------------------------------------------------------------------------
        function ClearServerSideErrors() {
            //removing error class and error messages in search form
            $("div[id^='txtCurrentDate_validate']").empty();
            $("#lstContributionName_validate").empty();
            $("#txtPartnerShipName_validate").empty();
            $("#txtFirstName_validate").empty();
            $("#txtMI_validate").empty();
            $("#txtLastName_validate").empty();
            $("#txtCountry_validate").empty();
            $("#txtStreetName_validate").empty();
            $("#txtCity_validate").empty();
            $("#txtState_validate").empty();
            $("#txtZipCode_validate").empty();
            $("#txtCheck_validate").empty();
            $("#txtAmtABC_validate").empty();
            $("#txtExplanation_validate").empty();
        }

        function ClearServerSideErrorsPartnership() {
            //removing error class and error messages in search form
            $("#txtPartnerName_validate").empty();
            $("#txtPartFirstName_validate").empty();
            $("#txtPartMI_validate").empty();
            $("#txtPartLastName_validate").empty();
            $("#txtCountryPartnership_validate").empty();
            $("#txtPartStreetName_validate").empty();
            $("#txtPartCity_validate").empty();
            $("#txtPartState_validate").empty();
            $("#txtPartZip5_validate").empty();
            $("#txtPartAmtAC_validate").empty();
            $("#txtPartExplanationInKind_validate").empty();
        }

        var dialog_ImportData;

        dialog_ImportData = $m("#dialog-form_Import").dialog({
            autoOpen: false,
            resizable: false,
            height: 'auto',
            width: 600, //456,
            top: 104,
            position: {
                my: "center top",
                at: "center top+250"
            },
            //draggable: false, // TESTING PURPOSE ONLY.
            modal: true,
            resizable: false,
            closeOnEscape: false,
            open: function (event, ui) { hideDialogXButton(this); }
        });

        $(window).resize(function () {
            //// get the screen height and width
            if ($(window).width() < 500) {
                dialog_ImportData = $m("#dialog-form_Import").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 300,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 500 && $(window).width() <= 900) {
                dialog_ImportData = $m("#dialog-form_Import").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 550, //456,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 900) {
                dialog_ImportData = $m("#dialog-form_Import").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 650, //456,
                    top: 104,
                    modal: true,
                    dialogClass: 'clsDialogTopPositionVIR',
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
        }).resize();

        $m("#btnImportData").button().on("click", function () {
            $m("#DialogBoxSchedAImportDataForm").valid();
            if ($m("#DialogBoxSchedAImportDataForm").valid()) { // JQuery Validation
                $("#divLoading").show();
                $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                    txtFilerId: $("#txtFilerID").val(),
                    lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                    strElectionTypeId: $m("#lstElectionType option:selected").val(),
                    lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                    lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                    lstFilingDate: $m("#lstFilingDate option:selected").text(),
                    txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                    electionDateId: $m("#lstElectionDate").val(),
                    lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
                }, function (resultEditFlag) {
                        if (resultEditFlag == "TRUE") {
                            //window.location.reload(true)
                            dialog_ImportData.dialog("open");
                            $("#divgridErrorMessage").hide();
                            // Clear Dialogbox Form.
                            var validator = $m("#DialogBoxSchedAImportDataForm").validate();
                            validator.resetForm();  // clear out the validation errors
                            $m("#DialogBoxSchedAImportDataForm")[0].reset();   // clear out the form data

                            // CLEAR THE ERROR MESSAGES.
                            $m("label[for=txtFileUpload]").text('');
                            $m("#txtFileUpload").removeClass("error");
                            sessionStorage.setItem("GetCloseButtonValidation", "No");

                            if (@Session["COMM_TYPE_ID"].ToString() == "23") {
                                $m('#btnDownloadPCFHelpDocument').show();
                                $m('#btnDownloadPCFHelpTemplate').show();
                            }
                            else {
                                $m('#btnDownloadHelpDocument').show();
                                $m('#btnDownloadHelpTemplate').show();
                            }
                    }
                    else {
                        ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before adding this Transaction.', 'Ok', '');
                    }
                }).always(function () {
                    $("#divLoading").hide();// GetEditFlag.
                });
            }
        });

        var tableErrorMsg = "undefined";
        $m("#btnUploadImportFile").click(function () {
            // Validation Succuss then Insert Record.
            $m("#DialogBoxSchedAImportDataForm").valid();
            if ($m("#DialogBoxSchedAImportDataForm").valid()) { // JQuery Validation
                $("#divLoading").show();

                if (sessionStorage.getItem("FilingDate").toString() == "") {
                    if ($("#lstElectionType option:selected").val() == "6") {
                        if ($("#txtNewFilingDate").val() == "") {
                            sessionStorage.setItem("FilingDate", $("#lstFilingDate option:selected").text().toString());
                        }
                        else {
                            sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
                        }
                    }
                    else {
                        sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
                    }
                }

                $.post("@Url.Content("~/ContributionsCandIndFamily/setSessionForFilings/")", {
                    strElectionCycle: sessionStorage.getItem("ElectionCycle").toString(),
                    strOfficeType: sessionStorage.getItem("OfficeType").toString(),
                    strElectionType: sessionStorage.getItem("ElectionType").toString(),
                    strElectionDate: sessionStorage.getItem("ElectionDate").toString(),
                    strDisclosureType: sessionStorage.getItem("DisclosureType").toString(),
                    strDisclosurePeriod: sessionStorage.getItem("DisclosurePeriod").toString(),
                    strTransactionType: sessionStorage.getItem("TransactionType").toString(),
                    strlstResigTermType: sessionStorage.getItem("lstResigTermType").toString(),
                    strFilingDate: sessionStorage.getItem("FilingDate").toString(),
                    strCutoffDate: sessionStorage.getItem("CutOffDate").toString()
                }, function (strResult) {
                    if (strResult == "TRUE") {
                        var data = new FormData();
                        var files = $("#txtFileUpload").get(0).files;
                        // Add the uploaded image content to the form data collection
                        if (files.length > 0) {
                            data.append("UploadedImage", files[0]);
                        }
                        // Make a call to upload file into Cabinet and get Document ID, File Type, and File Size.
                        // Make Ajax request with the contentType = false, and procesDate = false
                        var ajaxRequest = $.ajax({
                            type: "POST",
                            url: '@Url.Action("UploadImportDisclosureRptsData", "ContributionsCandIndFamily")',
                            contentType: false,
                            processData: false,
                            data: data
                        });
                        ajaxRequest.done(function (xhr, textStatus) {
                            $m.post("@Url.Content("~/ContributionsCandIndFamily/CheckValidaion/")", null,
                                function (resultsExistsValidation) {
                                    if (resultsExistsValidation == "YES") {
                                        $("#divgridErrorMessage").show();
                                        var validator = $m("#DialogBoxSchedAImportDataForm").validate();
                                        validator.resetForm();  // clear out the validation errors
                                        $m("#DialogBoxSchedAImportDataForm")[0].reset();// clear out the form data
                                        sessionStorage.setItem("GetCloseButtonValidation", "Yes");
                                        if (tableErrorMsg == 'undefined') {
                                            tableErrorMsg = $m('#gridErrorMessage').DataTable({
                                                "bAutoWidth": false,
                                                "bProcessing": true,
                                                "responsive": true,
                                                "deferRender": true,
                                                "initComplete": function (settings, json) {
                                                    //Accessibility: Applies various Accessibility features to this dataTable.
                                                    makeDataTableAccessible($m('#gridErrorMessage').DataTable());
                                                },
                                                "fnDrawCallback": function () {
                                                    var oSettings = this.fnSettings();
                                                    var iTotalRecords = oSettings.fnRecordsTotal();
                                                },
                                                "fnServerData": function (url, data, callback) {
                                                    $.ajax({
                                                        "url": "@Url.Content("~/ContributionsCandIndFamily/CheckFilingsData/")",
                                                        "data": null,
                                                        "success": callback,
                                                        "dataType": "json",
                                                        "type": "POST",
                                                        "error": function () {
                                                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '', 'GoToAssetList', null);
                                                        }
                                                    }).always(function (data, textStatus, ErrorThrown) {
                                                        $("#divLoading").hide();
                                                    });
                                                }
                                            });
                                        }
                                        else {
                                            $.ajax({
                                                "url": "@Url.Content("~/ContributionsCandIndFamily/CheckFilingsData/")",
                                                "data": null,
                                                "success": tableErrorMsg,
                                                "dataType": "json",
                                                "type": "POST",
                                                "error": function () {
                                                    ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '', 'GoToAssetList', null);
                                                }
                                            }).always(function () {
                                                $("#divLoading").hide();
                                            });
                                        }

                                        tableErrorMsg.columns.adjust().draw(false);
                                        $m('#gridErrorMessage').DataTable().ajax.reload();
                                        tableErrorMsg.search('').columns().search('').draw();
                                    }
                                    else {
                                        $("#divgridErrorMessage").hide();
                                        var url = '@Url.Action("SaveSchedAImportData", "ContributionsCandIndFamily")';
                                        // DAVE PCF IMPORT ENHANCEMENT
                                        @*if (@Session["COMM_TYPE_ID"].ToString() == "23" && @Session["Import_PCF_ShowWarning"].ToString() == "Y") {
                                            var resultsCloseSchedA = "You have reported a contribution over $100 without Contributor Address, Occupation, Employer and Employer Address. Failure to provide Contributor Address, Occupation, Employer and Employer Address may be cited as a Deficiency by Compliance Review staff.";
                                            $m('#modal_dialog').text(resultsCloseSchedA);
                                            $m("#modal_dialog").dialog({
                                                resizable: false,
                                                modal: true,
                                                width: '400px',
                                                height: 'auto',
                                                bgiframe: false,
                                                closeOnEscape: false,
                                                open: function (event, ui) { hideDialogXButton(this); },
                                                buttons: {
                                                    "OK": function () {
                                                        $m(this).dialog("close");
                                                        $("#divLoading").show();
                                                        $.post(url, null, function (results) {
                                                            if (results == true) {
                                                                var doneFunction = false; 
                                                                $.post("@Url.Content("~/ContributionsCandIndFamily/GetPartnershipFlag/")", null, function (resultPartnership) {
                                                                    if (resultPartnership == "YES") {
                                                                        ShowDialogBox('EFS', 'Transaction(s) uploaded successfully. Please Review your Disclosure Report for accuracy and Submit. Partner details are mandatory if Partnership Contribution is greater than $2500.', 'Ok', '');
                                                                        window.status = "Transaction(s) uploaded successfully. Please Review your Disclosure Report for accuracy and Submit. Partner details are mandatory if Partnership Contribution is greater than $2500.";
                                                                        sessionStorage.setItem("GetCloseButtonValidation", "No");
                                                                        GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);
                                                                        $("#txtFileUpload").val("");
                                                                        $("#divLoading").hide();
                                                                    }
                                                                    else {
                                                                        ShowDialogBox('EFS', 'Transaction(s) uploaded successfully. Please Review your Disclosure Report for accuracy and Submit.', 'Ok', '');
                                                                        window.status = "Transaction(s) uploaded successfully. Please Review your Disclosure Report for accuracy and Submit.";
                                                                        sessionStorage.setItem("GetCloseButtonValidation", "No");
                                                                        GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);
                                                                        $("#txtFileUpload").val("");
                                                                        $("#divLoading").hide();
                                                                    }
                                                                });
                                                                //}
                                                            }
                                                            else {
                                                                $("#divLoading").hide();
                                                                ShowDialogBox('EFS', 'System Error Found. Please try again.', 'Ok', '');
                                                            }
                                                        }).fail(function () {
                                                            $m("#divLoading").hide();
                                                            ShowDialogBox('EFS', 'System Error Found. Please try again.', 'Ok', '');
                                                        });
                                                    },
                                                    "Cancel": function () {
                                                        // confirm close
                                                        $m(this).dialog("close");
                                                    }
                                                }
                                            });
                                        }
                                        else {*@
                                            $.post(url, null, function (results) {
                                                if (results == true) {
                                                    var doneFunction = false;
                                                    //doneFunction = function () {    
                                                    $.post("@Url.Content("~/ContributionsCandIndFamily/GetPartnershipFlag/")", null, function (resultPartnership) {
                                                        if (resultPartnership == "YES") {
                                                            ShowDialogBox('EFS', 'Transaction(s) uploaded successfully. Please Review your Disclosure Report for accuracy and Submit. Partner details are mandatory if Partnership Contribution is greater than $2500.', 'Ok', '');
                                                            window.status = "Transaction(s) uploaded successfully. Please Review your Disclosure Report for accuracy and Submit. Partner details are mandatory if Partnership Contribution is greater than $2500.";
                                                            sessionStorage.setItem("GetCloseButtonValidation", "No");
                                                            GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);
                                                            $("#txtFileUpload").val("");
                                                            $("#divLoading").hide();
                                                        }
                                                        else {
                                                            ShowDialogBox('EFS', 'Transaction(s) uploaded successfully. Please Review your Disclosure Report for accuracy and Submit.', 'Ok', '');
                                                            window.status = "Transaction(s) uploaded successfully. Please Review your Disclosure Report for accuracy and Submit.";
                                                            sessionStorage.setItem("GetCloseButtonValidation", "No");
                                                            GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);
                                                            $("#txtFileUpload").val("");
                                                            $("#divLoading").hide();
                                                        }
                                                    });
                                                    //}
                                                }
                                                else {
                                                    $("#divLoading").hide();
                                                    ShowDialogBox('EFS', 'System Error Found. Please try again.', 'Ok', '');
                                                }
                                            }).fail(function () {
                                                $m("#divLoading").hide();
                                                ShowDialogBox('EFS', 'System Error Found. Please try again.', 'Ok', '');
                                            });
                                        //}
                                    }
                                }).fail(function (response) {
                                    $("#divLoading").hide();
                                    ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                                });
                        })
                        ajaxRequest.fail(function (xhr, err) {
                            $("#divLoading").hide();
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                        });
                    }
                });
            }
        });

        $("#btnClearDialogImport").click(function () {
            // Set default value dropdowns.
            var validator = $m("#DialogBoxSchedAImportDataForm").validate();
            validator.resetForm();  // clear out the validation errors
            $m("#DialogBoxSchedAImportDataForm")[0].reset();// clear out the form data
            $("#txtFileUpload").val("");
            $("#divgridErrorMessage").hide();
            sessionStorage.setItem("GetCloseButtonValidation", "No");
        });        

        $m("#btnCloseDialogImport").button().on("click", function () {
            if ($("#txtFileUpload").val() != "" || sessionStorage.getItem("GetCloseButtonValidation").toString() == "Yes") {
                // Get confirmation Close the DialogBox or Not.
                var resultsCloseSchedA = "All unsaved data will be lost if you navigate away from this page. Are you sure you want to continue?";

                $m('#modal_dialog').text(resultsCloseSchedA);
                $m("#modal_dialog").dialog({
                    resizable: false,
                    modal: true,
                    width: '400px',
                    height: 'auto',
                    bgiframe: false,
                    closeOnEscape: false,
                    open: function (event, ui) { hideDialogXButton(this); },
                    buttons: {
                        "OK": function () {
                            // Close Confirm Box.
                            $m(this).dialog("close");//Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                            // Close the DialogBox
                            dialog_ImportData.dialog("close");
                            // For Defect 707 You don't Refresh the Data on Grid because you just canceled the edit or save function.

                            $m('#btnDownloadHelpDocument').hide();
                            $m('#btnDownloadPCFHelpDocument').hide();
                            $m('#btnDownloadHelpTemplate').hide();
                            $m('#btnDownloadPCFHelpTemplate').hide();
                        },
                        "Cancel": function () {
                            // confirm close
                            $m(this).dialog("close");
                        }
                    }
                });
            }
            else {
                // Close the DialogBox
                dialog_ImportData.dialog("close");

                $m('#btnDownloadHelpDocument').hide();
                $m('#btnDownloadPCFHelpDocument').hide();
                $m('#btnDownloadHelpTemplate').hide();
                $m('#btnDownloadPCFHelpTemplate').hide();
            }
        });


    }); // Document END>>>>>>>> END>>>>>>>>>>
</script>
