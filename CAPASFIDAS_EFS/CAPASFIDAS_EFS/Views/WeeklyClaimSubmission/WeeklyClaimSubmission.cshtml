
@{
    ViewBag.Title = "NonItemIEWeeklyContributionSchedA";
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
}

<form id="WeeklyClaimSubmissionForm">
    @Html.Partial("UserControls/_UC_Alert_Message")
    @Html.Partial("UserControls/_UC_Delete_Message")
    <div id="divMainNew" class="mainDiv">
        <div class="mainLowerDivCSSDesktop">
            <div id="divhide" class="hideShowButtonCSS">
                Filter
                <button id="btnCommonShowHide1" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonShowHide">
                    <img src="~/Content/Images/up20.png" alt="Collapse/Hide Filter" />
                </button>
            </div>
            <div id="divshow" class="hideShowButtonCSS">
                Filter
                <button id="btnCommonHideShow1" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonHideShow">
                    <img src="~/Content/Images/down20.png" alt="Expand/Show Filter" />
                </button>
            </div>
        </div>
        <div class="mainLowerDivCSS">
            <div id="divhideForMobile" class="hideShowButtonCSS">
                File a New Disclosure Report
                <div class="paddingleft6emcss floatRight">
                    Filter
                    <button id="btnCommonShowHide2" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonShowHide">
                        <img src="~/Content/Images/up20.png" alt="Collapse/Hide Filter" />
                    </button>
                </div>
            </div>
            <div id="divshowForMobile" class="hideShowButtonCSS">
                File a New Disclosure Report
                <div class="paddingleft6emcss floatRight">
                    Filter
                    <button id="btnCommonHideShow2" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonHideShow">
                        <img src="~/Content/Images/down20.png" alt="Expand/Show Filter" />
                    </button>
                </div>
            </div>
        </div>
        <div id="divTopSection">
            <div id="selectorItsRpt">
                <div class="divWidth">
                    <div class="floatRightNew clsShowButtonClass">
                        <input type="button" id="btnCommonSearch" class="btn btn-default clsCommonSearch ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Apply" title="Apply" style="font-size:12px;" />&nbsp;
                        <input type="button" id="btnCommonClear" class="btn btn-default clsCommonClear ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />&nbsp;
                        <button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelp();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" class="ButtonImageCSS" title="Help" id="imgHelp" /></button>
                    </div>
                    <div class="requiredTextFilter">* marks required fields</div>
                    <div id="divFilerID">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilerID">* Filer ID</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("txtFilerID", ViewData["txtFilerID"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblFilerID" })
                        </div>
                    </div>
                    <div id="divFilerType">
                        <div class="verticalCSSDestop lblCSS"><span id="lblFilerType">* Filer Type</span></div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.TextBox("txtFilerType", null, new { id = "txtFilerType", @class = "txtWidth txtReportPeriodDatesFrom", aria_labelledby = "lblFilerType" })
                        </div>
                    </div>
                    <div id="divCommitteeName">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblCommitteeName">* Candidate/Committee Name</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("txtCommitteeName", ViewData["txtCommitteeName"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblCommitteeName" })
                        </div>
                    </div>
                    <div id="divElectionCycle">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblElectionCycle">* Report Year</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstElectionCycle", ViewData["lstElectionCycle"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblElectionCycle" })
                        </div>
                    </div>
                    <div id="divOfficeType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblOfficeType">* Election Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstUCOfficeType", null, "- Select -", new { id = "lstUCOfficeType", @class = "spanMobileWidth", aria_labelledby = "lblOfficeType" })
                        </div>
                    </div>
                    <div id="divCounty">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblCounty">* County</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstUCCounty", null, "- Select -", new { @class = "spanMobileWidth", aria_labelledby = "lblCounty" })
                        </div>
                    </div>
                    <div id="divMunicipality">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblMunicipality">* Municipality</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstUCMuncipality", null, "- Select -", new { @class = "spanMobileWidth", aria_labelledby = "lblMunicipality" })
                        </div>
                    </div>
                    <div id="divElectionType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblElectionType">* Report Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstElectionType", ViewData["lstElectionType"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblElectionType" })
                        </div>
                    </div>
                    <div id="divElectionDate">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblElectionDate">* Election Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstElectionDate", ViewData["lstElectionDate"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblElectionDate" })
                        </div>
                    </div>
                    <div id="divDisclosureType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblDisclosureType">* Disclosure Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstDisclosureType", ViewData["lstDisclosureType"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblDisclosureType" })
                        </div>
                    </div>
                    <div id="divDisclosurePeriodWC">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblDisclosurePeriod">* Disclosure Period</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstDisclosurePeriod", null, new { @class = "", aria_labelledby = "lblDisclosurePeriod" })
                        </div>
                    </div>
                    <div id="divReportPeriodDates">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblReportPeriodDatesFrom">* From Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.TextBox("searchTerm", null, new { id = "txtReportPeriodDatesFrom", @class = "txtWidth", aria_labelledby = "lblReportPeriodDatesFrom" })
                        </div>
                    </div>
                    <div id="divFilingDateDropDown1">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilingDate">* Filing Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstFilingDate", ViewData["lstFilingDate"] as SelectList, "- Select -", new { @class = "spanMobileWidth lstFilingDate", aria_labelledby = "lblFilingDate" })
                        </div>
                    </div>
                    <div id="divReportPeriodDatesTo">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblReportPeriodDatesTo">* To Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.TextBox("searchTerm", null, new { id = "txtReportPeriodDatesTo", @class = "txtWidth", aria_labelledby = "lblReportPeriodDatesTo" })
                        </div>
                    </div>

                    @* OFFICE CYCLE FILING DATE *@
                    <div id="divFilingDateOffCycle1">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilingDateOffCycle"> *New Filing Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            <input type="text" id="txtNewFilingDate" name="txtNewFilingDate" class="txtWidth txtCurrentDateCls" maxlength="10" aria-labelledby="lblFilingDateOffCycle" />
                        </div>
                    </div>
                    @* OFFICE CYCLE FILING DATE *@

                    <div class="floatRightNew" style="padding-bottom: 2em;">
                        <input type="button" id="btnCommonSearch1" class="btn btn-default clsCommonSearch ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Apply" title="Search" style="font-size:12px;" />&nbsp;
                        <input type="button" id="btnCommonClear2" class="btn btn-default clsCommonClear ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />&nbsp;
                        <button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelp();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" class="ButtonImageCSS" title="Help" id="imgHelp2" /></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="divBreadCrumb" class="breadCrumbDivCSS" style="width: 46em;">
        <nav aria-label="Breadcrumbs" id="pBreadCrumb" class="FontSizeCss">
            <ol class="breadcrumb">
                <li>@Html.ActionLink("File a Disclosure Report", "ContributionsMonetary", "ContributionsMonetary", null, new { @class = "" })</li>
                <li class="active">Contributions - Candidate, Individual & Family</li>
            </ol>
        </nav>
        <div id="divHeader2" class="paddingtoppt5 clsHeaderWidth">
            <h1>
                <span id="lblHeader"> File a Disclosure Report</span> -
                <span id="lblHEleYear"> File a Disclosure Report</span>
                <span id="lblHDisclPer"> File a Disclosure Report</span>
            </h1>
        </div>
        <div id="divHeader" class="paddingtoppt5">
            <div class="paddingTop0em2em DisplayInlineBlock">
                <h2><span id="lblHeader2"> Contributions - Candidate, Individual & Family</span></h2>
            </div>
        </div>
    </div>
    <div id="divGrid" class="divGridCSSTransferin">
        @Html.Partial("UserControls/_UC_Loding")
        <div class="submitTransBtnCls">
            <input type="button" id="btnAddNewTransaction" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all clsAddNewTransButtonHide" name="Command" value="Add New Transaction" title="Add New Transaction" style="font-size:12px; text-decoration:none;" />
            &nbsp;&nbsp;
            <input type="button" id="btnSubmitSchedAIEWeeklyContr" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all clsSubmitButtonHide" name="Command" value="Submit Transaction" title="Submit Transaction" style="font-size:12px;" />
        </div>
        <div id="dvMonetaryAllocAmt" class="floatLeft paddingIEWeeklyContrTxt">
            <h3 id="lblAllTransTextIEWeeklyContr" style="font-weight:bolder">All Transactions</h3>
        </div>
        <div>
            <table id="gridFilingTransIEWeeklyContribution" class="table-bordered display nowrap" style="width:100%; border-spacing: 0px;">
                <thead class="header">
                    <tr>
                        <th class="never">FilingTransId</th> @* 0 *@
                        <th class="never">FilingEntityId</th> @* 1 *@
                        <th class="never">TransNumber</th> @* 2 *@
                        <th class="never">TransMapping</th> @* 3 *@
                        <th class="never">FilingsId</th> @* 4 *@
                        <th class="never">PaymentTypeId</th> @* 5 *@
                        <th>Expand</th> @* 6 *@
                        <th id="thSelectAll" stye="text-align:center;"><label for="chkRegenerateMain">Select All</label><input type="checkbox" name="chkRegenerateMain" id="chkRegenerateMain" value="1"></th> @* 7 *@
                        <th>Action</th> @* 8 *@
                        <th>Submission Date</th> @* 9 *@
                        <th class="never">Entity Name</th> @* 10 *@
                        <th>First Name</th> @* 11 *@
                        <th>Middle Name</th> @* 12 *@
                        <th>Last Name</th> @* 13 *@
                        <th>Amount $</th> @* 14 *@
                        <th>Status</th> @* 15 *@
                        <th>Amended</th> @* 16 *@
                        <th>Transaction Date</th> @* 17 *@
                        <th>Transaction Type</th> @* 18 *@
                        <th>Contributor Type</th> @* 19 *@
                        <th>Country</th> @* 20 *@
                        <th>Street Address</th> @* 21 *@
                        <th>City</th> @* 22 *@
                        <th>State</th> @* 23 *@
                        <th>Zip Code</th> @* 24 *@
                        <th>Method</th> @* 25 *@
                        <th>Check/Money Order #</th> @* 26 *@
                        <th>Explanation</th> @* 27 *@
                        <th class="never">Itemized</th> @* 28 *@
                        <th>Created Date</th> @* 29 *@
                        <th>In District</th> @* 30 *@
                        <th>Minor</th> @* 31 *@
                        <th>Vendor</th> @* 32 *@
                        <th>Lobbyist</th> @* 33 *@
                        <th>Is Contribution greater than or equal to $100 in the aggregate?</th> @* 34 *@
                        <th>Employer</th> @* 35 *@
                        <th>Occupation</th> @* 36 *@
                        <th>Employer Address</th> @* 37 *@
                        <th class="never">RecordType</th> @* 38 *@
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
    <div id="divUCIETransactionsHistory" class="divGridCSSTransferin paddingTop1em">
        <table id="gridIETransactionsHistory" class="table-bordered display nowrap" style="width:100%; border-spacing: 0px;">
            <thead class="header">
                <tr>
                    <th class="never">FilingTransId</th> @* 0 *@
                    <th class="never">FilingEntityId</th> @* 1 *@
                    <th class="never">TransNumber</th> @* 2 *@
                    <th class="never">TransMapping</th> @* 3 *@
                    <th class="never">FilingsId</th> @* 4 *@
                    <th class="never">PaymentTypeId</th> @* 5 *@
                    <th>Expand</th> @* 6 *@
                    <th>Submission Date</th> @* 7 *@
                    <th>Entity Name</th> @* 8 *@
                    <th>First Name</th> @* 9 *@
                    <th>Middle Name</th> @* 10 *@
                    <th>Last Name</th> @* 11 *@
                    <th>Amount $</th> @* 12 *@
                    <th>Status</th> @* 13 *@
                    <th>Amended</th> @* 14 *@
                    <th>Transaction Date</th> @* 15 *@
                    <th>Transaction Type</th> @* 16 *@
                    <th>Contributor Type</th> @* 17 *@
                    <th>Country</th> @* 18 *@
                    <th>Street Address</th> @* 19 *@
                    <th>City</th> @* 20 *@
                    <th>State</th> @* 21 *@
                    <th>Zip Code</th> @* 22 *@
                    <th>Method</th> @* 23 *@
                    <th>Check/Money Order #</th> @* 24 *@
                    <th>Explanation</th> @* 25 *@
                    <th class="never">Itemized</th> @* 26 *@
                    <th>Created Date</th> @* 27 *@
                    <th>In District</th> @* 28 *@
                    <th>Minor</th> @* 29 *@
                    <th>Vendor</th> @* 30 *@
                    <th>Lobbyist</th> @* 31 *@
                    <th>Is Contribution greater than or equal to $100 in the aggregate?</th> @* 32 *@
                    <th>Employer</th> @* 33 *@
                    <th>Occupation</th> @* 34 *@
                    <th>Employer Address</th> @* 35 *@
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</form>

<div id="dialog-form_Sched_A_IE" title="Add/Edit Transaction">
    <form id="DialogBoxSchedAIEForm">
        <div class="divWidthSchedABC">
            <div style="width: 100%;">
                <div class="requiredTextDialogs">Required fields are marked with an *</div>
                <div id="tdInDistrict">
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblInDistrict">* In District</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstInDistrict", ViewData["lstInDistrict"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblInDistrict", aria_describedby = "alertForLstContributionName" })
                    </div>
                </div>
                <div id="tdMinor">
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblMinor">* Minor</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstMinor", ViewData["lstMinor"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblMinor", aria_describedby = "alertForLstContributionName" })
                    </div>
                </div>
                <div id="tdVendor">
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblVendor">* Vendor</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstVendor", ViewData["lstVendor"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblVendor", aria_describedby = "alertForLstContributionName" })
                    </div>
                </div>
                <div id="tdLobbyist">
                    @*<div id="lstLobbyist_validate" class="verticalCSSDestopForError"></div>*@
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblLobbyist">* Lobbyist</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstLobbyist", ViewData["lstLobbyist"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblLobbyist", aria_describedby = "alertForLstContributionName" })
                    </div>
                </div>
                <div id="tdDateRcvd">
                    <div id="txtCurrentDateWCS_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblDateReceived_DialogBoxSchedAForm">* Date Received</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        <input type="text" id="txtCurrentDateWCS" name="txtCurrentDateWCS" class="datepicker txtWidthForDateSched_ABC txtCurrentDateCls" maxlength="10" aria-labelledby="lblDateReceived_DialogBoxSchedAForm" />
                    </div>
                </div>

                <div id="tdContributionName">
                    <div id="lstContributionName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblContributionName">* Contributor Type</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstContributionName", ViewData["lstContributionName"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblContributionName", aria_describedby = "alertForLstContributionName", required = "required" })
                    </div>                    
                </div>

                    @*<div id="tdPartnershipName">
                        <div id="txtPartnerShipName_validate" class="verticalCSSDestopForError"></div>
                        <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                            <span id="lblPartnershipName">* Partnership Name</span>
                        </div>
                        <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                            @Html.TextBox("txtPartnerShipName", null, new { id = "txtPartnerShipName", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "40", aria_labelledby = "lblPartnershipName", required = "required" })
                        </div>
                    </div>*@

                    <div id="tdFirstName">
                        <div id="txtFirstName_validate" class="verticalCSSDestopForError"></div>
                        <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                            <span id="lblFirstName_DialogBoxSchedAForm">* First Name</span>
                        </div>
                        <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                            @Html.TextBox("txtFirstName", null, new { id = "txtFirstName", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "30", aria_labelledby = "lblFirstName_DialogBoxSchedAForm", required = "required" })
                        </div>
                    </div>

                    <div id="tdMI">
                        <div id="txtMI_validate" class="verticalCSSDestopForError"></div>
                        <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                            <span id="lblMiddleName_DialogBoxSchedAForm">Middle Name</span>
                        </div>
                        <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                            @Html.TextBox("txtMI", null, new { id = "txtMI", @class = "txtWidthForDialogSched_A", @maxlength = "30", aria_labelledby = "lblMiddleName_DialogBoxSchedAForm" })
                        </div>
                    </div>

                    <div id="tdLastName">
                        <div id="txtLastName_validate" class="verticalCSSDestopForError"></div>
                        <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                            <span id="lblLastName_DialogBoxSchedAForm">* Last Name</span>
                        </div>
                        <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                            @Html.TextBox("txtLastName", null, new { id = "txtLastName", @class = "txtWidthForDialogSched_A required", @maxlength = "30", aria_labelledby = "lblLastName_DialogBoxSchedAForm", required = "required" })
                        </div>
                    </div>

                    <div id="tdCountryContributionChk">
                        <div class="verticalCSSDestopForLableSched_ABC lblCSSAdd">
                            <span id="lblOtherCountry">Other Country</span>
                        </div>
                        <div class="verticalCSSDestopForCheckBoxSched_ABC DDLCSSAdd">
                            @Html.CheckBox("chkCountry", false, new { @class = "txtWidthForDialogSched_ABC_CountryChkbox", aria_labelledby = "lblOtherCountry" })
                        </div>
                    </div>
                    <div id="tdCountryContributionTxt" class="divClearBoth">
                        <div id="txtCountry_validate" class="verticalCSSDestopForError"></div>
                        <div class="verticalCSSDestopForLableSched_ABC lblCSSAdd">
                            <span id="lblCountry">* Country</span>
                        </div>
                        <div class="verticalCSSDestopForTextboxSched_ABC DDLCSSAdd">
                            @Html.TextBox("txtCountry", null, new { id = "txtCountry", @class = "txtWidthForDialogSched_A required", @maxlength = "30", aria_labelledby = "lblCountry", required = "required" })
                        </div>
                    </div>

                    <div id="divStreetAddress">
                        <div id="txtStreetName_validate" class="verticalCSSDestopForError"></div>
                        <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                            <span id="lblStreetName">* Street Address</span>
                        </div>
                        <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                            @Html.TextBox("txtStreetName", null, new { id = "txtStreetName", @class = "txtWidthForDialogSched_A", @maxlength = "60", aria_labelledby = "lblStreetName" })
                        </div>
                    </div>

                    <div id="divCity">
                        <div id="txtCity_validate" class="verticalCSSDestopForError"></div>
                        <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                            <span id="lblCity_DialogBoxSchedAForm">* City</span>
                        </div>
                        <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                            @Html.TextBox("txtCity", null, new { id = "txtCity", @class = "txtWidthForDialogSched_A", @maxlength = "30", aria_labelledby = "lblCity_DialogBoxSchedAForm" })
                        </div>
                    </div>

                    <div id="divState">
                        <div id="txtState_validate" class="verticalCSSDestopForError"></div>
                        <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                            <span id="lblState_DialogBoxSchedAForm">* State</span>
                        </div>
                        <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                            @Html.TextBox("txtState", null, new { id = "txtState", @class = "txtWidthForDialogSched_A", @maxlength = "2", aria_labelledby = "lblState_DialogBoxSchedAForm" })
                        </div>
                    </div>

                    <div id="divZip5">
                        <div id="txtZipCode_validate" class="verticalCSSDestopForError"></div>
                        <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                            <span id="lblZip5_DialogBoxSchedAForm">* Zip Code</span>
                        </div>
                        <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                            @Html.TextBox("txtZipCode", null, new { id = "txtZipCode", @class = "txtWidthForDialogSched_A", @maxlength = "10", aria_labelledby = "lblZip5_DialogBoxSchedAForm" })
                        </div>
                    </div>

                    <div id="tdMethod">
                        <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                            <span id="lblMethod">* Method</span>
                        </div>
                        <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                            @Html.DropDownList("lstMethod", ViewData["lstMethod"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblMethod", aria_describedby = "descriptionForLstMethod" })
                        </div>
                        <span id="descriptionForLstMethod" class="visibleToScreenReaderOnly">
                            The values selected in the "Method" question automatically change the structure of this dialog form by adding or removing fields.
                        </span>
                    </div>
                    <div id="tdCheck">
                        <div id="txtCheck_validate" class="verticalCSSDestopForError"></div>
                        <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                            <span id="lblCheck">* Check #</span>
                        </div>
                        <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                            @Html.TextBox("txtCheck", null, new { id = "txtCheck", @class = "txtWidthForDialogSched_A required", @maxlength = "30", aria_labelledby = "lblCheck", required = "required" })
                        </div>
                    </div>

                    <div id="tAmt" class="divClearBoth">
                        <div id="txtAmtABC_validate" class="verticalCSSDestopForError"></div>
                        <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                            <span id="lblAmount">* Amount $</span>
                        </div>
                        <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                            @Html.TextBox("txtAmtABC", null, new { id = "txtAmtABC", @class = "txtWidthForDialogSched_A required", @maxlength = "12", aria_labelledby = "lblAmount", required = "required" })
                        </div>
                    </div>
                    <div id="tdRContributions">
                        <div id="lstRContributions_validate" class="verticalCSSDestopForError"></div>
                        <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                            <span id="lblRContributions">* Is Contribution greater than or equal to $100 in the aggregate?</span>
                        </div>
                        <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                            @Html.DropDownList("lstRContributions", ViewData["lstRContributions"] as SelectList, "- Select -", new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblRContributions", aria_describedby = "alertForLstContributionName", required = "required" })
                        </div>
                    </div>
                    <div id="divHidden">
                        <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        </div>
                        <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        </div>
                    </div>
                    <div id="tdEmployer">
                        <div id="txtEmployerPCFB_validate" class="verticalCSSDestopForError"></div>
                        <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                            <span id="lblEmployer">Employer</span>
                        </div>
                        <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                            @Html.TextBox("txtEmployerPCFB", null, new { id = "txtEmployerPCFB", @class = "txtWidthForDialogSched_A", @maxlength = "200", aria_labelledby = "lblEmployer" })
                        </div>
                    </div>
                    <div id="tdOccupation">
                        <div id="txtOccupationPCFB_validate" class="verticalCSSDestopForError"></div>
                        <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                            <span id="lblOccupation">Occupation</span>
                        </div>
                        <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                            @Html.TextBox("txtOccupationPCFB", null, new { id = "txtOccupationPCFB", @class = "txtWidthForDialogSched_A", @maxlength = "50", aria_labelledby = "lblOccupation" })
                        </div>
                    </div>
                    <div id="divContStreetAddress">
                        <div id="txtContStreetName_validate" class="verticalCSSDestopForError"></div>
                        <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                            <span id="lblContStreetName">Employer Street Address</span>
                        </div>
                        <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                            @Html.TextBox("txtContStreetName", null, new { id = "txtContStreetName", @class = "txtWidthForDialogSched_A", @maxlength = "60", aria_labelledby = "lblContStreetName" })
                        </div>
                    </div>

                    <div id="divContCity">
                        <div id="txtContCity_validate" class="verticalCSSDestopForError"></div>
                        <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                            <span id="lblContCity_DialogBoxSchedAForm">Employer City</span>
                        </div>
                        <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                            @Html.TextBox("txtContCity", null, new { id = "txtContCity", @class = "txtWidthForDialogSched_A", @maxlength = "30", aria_labelledby = "lblContCity_DialogBoxSchedAForm" })
                        </div>
                    </div>

                    <div id="divContState">
                        <div id="txtContState_validate" class="verticalCSSDestopForError"></div>
                        <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                            <span id="lblContState_DialogBoxSchedAForm">Employer State</span>
                        </div>
                        <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                            @Html.TextBox("txtContState", null, new { id = "txtContState", @class = "txtWidthForDialogSched_A", @maxlength = "2", aria_labelledby = "lblContState_DialogBoxSchedAForm" })
                        </div>
                    </div>

                    <div id="divContZip5">
                        <div id="txtContZipCode_validate" class="verticalCSSDestopForError"></div>
                        <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                            <span id="lblContZip5_DialogBoxSchedAForm">Employer Zip Code</span>
                        </div>
                        <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                            @Html.TextBox("txtContZipCode", null, new { id = "txtContZipCode", @class = "txtWidthForDialogSched_A", @maxlength = "10", aria_labelledby = "lblContZip5_DialogBoxSchedAForm" })
                        </div>
                    </div>
                    <div id="tdExplanation">
                        <div id="txtExplanation_validate" class="verticalCSSDestopForError"></div>
                        <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                            <span id="lblExplanation">Explanation</span>
                        </div>
                        <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                            @Html.TextBox("txtExplanation", null, new { id = "txtExplanation", @class = "txtWidthForDialogSched_A", @maxlength = "250", aria_labelledby = "lblExplanation" })
                        </div>
                    </div>


                    <div id="AUSchedA24HNoticeId" class="AddLeftCSSSchedABC">
                        <input type="button" id="btnSaveSchedAIEWeeklyContr" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Save" title="Save" style="font-size:12px;" />
                        <input type="button" id="btnUpdateSchedAIEWeeklyContr" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Save" title="Save" style="font-size:12px;" />
                        <input type="button" id="btnClearDialog" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all cancel" name="Command" value="Clear" title="Clear" style="font-size:12px;" />
                        <input type="button" id="btnCloseDialog" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Close" title="Close" style="font-size:12px;" />
                    </div>
                </div>
            </div>
    </form>
</div>

<script>
    $m = jQuery.noConflict();

    $('#menuNav').css('opacity', 0);
    $('#WeeklyClaimSubmissionForm').css('opacity', 0);
    $('#DialogBoxSchedAIEForm').css('opacity', 0);
    $('#divWelcomeBanner').css('opacity', 0);
    $(window).on('load', function () {
        $('#menuNav').css('opacity', 1);
        $('#WeeklyClaimSubmissionForm').css('opacity', 1);
        $('#DialogBoxSchedAIEForm').css('opacity', 1);
        $('#divWelcomeBanner').css('opacity', 1);
    });

    $m(document).ready(function () {

        // ROLE IF AUTHORIZED USER = 11 THEN DISABLE THE ADD BUTTON.
        // BELOW CODE CHANGED BECUASE AUTHORIZED USER NOT ABLE TO ADD TRANSACITONS:
        // RECEIVED HELPDESK TICKET: DEFECT: 6045: HAS BEEN FIXED. SB:
        if (@Session["RoleID_FILER"] == "11") {
            $(".clsAddNewTransButtonHide").show();
            $(".clsSubmitButtonHide").hide();            
            //$(".submitTransBtnCls").hide();
        }
        else {
            $(".clsAddNewTransButtonHide").show();
            $(".clsSubmitButtonHide").show();            
            //$(".submitTransBtnCls").show();
        }

        // Hide the Cut Off Date and Filing Date based on Disclosure Type.
        $("#divDisclosurePeriodWC").hide();
        $("#divReportPeriodDates").hide();
        $("#divReportPeriodDatesTo").hide();


        // DEFAULT VALUES
        $("#lblHDisclPer").text("");

        // Common for Non-Itemized Transactions.
        sessionStorage.removeItem("TransactionTypeId");

        // Edit selection gird.
        sessionStorage.setItem("EditYesNo", "No");

        // COMMON CODE - FOR VALIDATION AND FILL THE LEFT SIDE DATA.
        validatePage("DialogBoxSchedAIEForm");
        NonItemizedLeftFilterValues1();

        function NonItemizedLeftFilterValues1() {

            $("#lblAllTransText24HNotice").text("All Transactions: " + sessionStorage.getItem("ElectionCycleText").toString());

            $("#lblAllTransTextIEWeeklyContr").text("All Transactions: " + sessionStorage.getItem("ElectionCycleText").toString());

            // Hide all Fileter
            $("#txtFilerID").prop("disabled", true);
            $("#txtFilerType").prop("disabled", true);
            $("#txtCommitteeName").prop("disabled", true);
            $("#lstElectionCycle").prop("disabled", true);
            $("#lstElectionType").prop("disabled", true);
            $("#lstUCOfficeType").prop("disabled", true);
            $("#lstElectionDate").prop("disabled", true);
            $("#lstDisclosureType").prop("disabled", true);
            $("#lstDisclosurePeriod").prop("disabled", true);
            $("#txtReportPeriodDatesFrom").prop("disabled", true);
            $("#txtReportPeriodDatesTo").prop("disabled", true);

            if (sessionStorage.getItem("DisclosureType").toString() == "2" || sessionStorage.getItem("DisclosureType").toString() == "3") {
                $("#txtNewFilingDate").prop("disabled", true);
                $("#lstResigTermType").prop("disabled", true);
                $("#lstFilingDate").prop("disabled", true);
            }

            if (sessionStorage.getItem("DisclosureType").toString() == "7" || sessionStorage.getItem("DisclosureType").toString() == "10" || sessionStorage.getItem("DisclosureType").toString() == "9" || sessionStorage.getItem("DisclosureType").toString() == "12" || sessionStorage.getItem("DisclosureType").toString() == "14") {
                $("#txtNewFilingDate").prop("disabled", true);
                $("#lstFilingDate").prop("disabled", true);
            }


            // HIDE DISCLSOURE PERIOD FOR NOTICE OF NON-PARTICIPATION, 24 HOUR NOTICE.
            if (sessionStorage.getItem("DisclosureType").toString() == "5" || sessionStorage.getItem("DisclosureType").toString() == "4" || sessionStorage.getItem("DisclosureType").toString() == "7" || sessionStorage.getItem("DisclosureType").toString() == "8" || sessionStorage.getItem("DisclosureType").toString() == "9" || sessionStorage.getItem("DisclosureType").toString() == "10" || sessionStorage.getItem("DisclosureType").toString() == "11" || sessionStorage.getItem("DisclosureType").toString() == "13" || sessionStorage.getItem("DisclosureType").toString() == "12") {
                $("#divDisclosurePeriod").hide();
            }
            else {
                $("#divDisclosurePeriod").show();
            }

            $("#divShowPartnerAdddataNCR").hide();

            $("#tdButtonUpdate").hide();

            $(".clsCommonSearch").hide();

            $("#txtReportPeriodDatesFrom").prop("disabled", true);
            $("#txtReportPeriodDatesTo").prop("disabled", true);
            $("#txtNewFilingDate").prop("disabled", true);

            $("#thParterShipNameInKind").hide("slow");
            $("#tdPartnershipNameInKind").hide("slow");

            // IE - WEEKLY NON-ITEMIZED TRANSACTIONS ITS ALWAYS NEW FILING DATE OR EXISTING FILING DATE.
            if (sessionStorage.getItem("DisclosureType").toString() == "7" || sessionStorage.getItem("DisclosureType").toString() == "10" || sessionStorage.getItem("DisclosureType").toString() == "9" || sessionStorage.getItem("DisclosureType").toString() == "12" || sessionStorage.getItem("DisclosureType").toString() == "14") {
                // Hide Filing Date for Off Cycle
                $("#divFilingDateDropDown").show();
                if (sessionStorage.getItem("lstFilingDate").toString() == "- New Filing Date -") {
                    //// SHOW FILING DATE
                    //$("#divReportPeriodDatesTo").show();        

                    // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
                    $("#divFilingDateOffCycle").show();
                    // HIDE TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
                    $("#divReportPeriodDatesTo").hide();
                }
                else {
                    // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
                    $("#divFilingDateOffCycle").hide();
                    // HIDE TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
                    $("#divReportPeriodDatesTo").hide();

                    //// HIDE FILING DATE
                    //$("#divReportPeriodDatesTo").hide();
                }
            }

            if (sessionStorage.getItem("DisclosureType").toString() == "2" || sessionStorage.getItem("DisclosureType").toString() == "7" || sessionStorage.getItem("DisclosureType").toString() == "9" || sessionStorage.getItem("DisclosureType").toString() == "10" || sessionStorage.getItem("DisclosureType").toString() == "12" || sessionStorage.getItem("DisclosureType").toString() == "3" || sessionStorage.getItem("DisclosureType").toString() == "14") {
                if (sessionStorage.getItem("ElectionType").toString() == "6") {
                    // HIDE ELECTION DATE
                    $("#divElectionDate").hide();
                    // HIDE CUTT OF DATE
                    $("#divReportPeriodDates").hide();
                    // Hide Filing Date for Off Cycle
                    $("#divFilingDateDropDown").show();
                    if (sessionStorage.getItem("lstFilingDate").toString() == "- New Filing Date -") {
                        //// SHOW FILING DATE
                        //$("#divReportPeriodDatesTo").show();        

                        // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
                        $("#divFilingDateOffCycle").show();
                        // HIDE TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
                        $("#divReportPeriodDatesTo").hide();
                    }
                    else {
                        // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
                        $("#divFilingDateOffCycle").hide();
                        // HIDE TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
                        $("#divReportPeriodDatesTo").hide();
                        // FILING DATE DROPDOWN.
                        $("#divFilingDateDropDown").show();

                        //// HIDE FILING DATE
                        //$("#divReportPeriodDatesTo").hide();
                    }
                }
                else {

                    if (sessionStorage.getItem("ElectionType").toString() == "4") { // PERIODIC
                        // HIDE ELECTION DATE
                        $("#divElectionDate").hide();
                        // HIDE NEW FILING DATE.
                        $("#divFilingDateOffCycle").hide();
                        // Hide Filing Date for Off Cycle
                        $("#divFilingDateDropDown").hide();
                    }
                    else {
                        // SHOW ELECTION DATE
                        $("#divElectionDate").show();

                        if (sessionStorage.getItem("ElectionType").toString() != "6") {
                            $("#divFilingDateOffCycle").hide();
                        }
                    }

                    // SHOW CUTT OF DATE        
                    $("#divReportPeriodDates").show();

                    // Hide Filing Date for Off Cycle
                    $("#divFilingDateDropDown").hide();
                    // NEW FILING DATE
                    //$("#divFilingDateOffCycle").hide();

                    // IF IE WEEKLY THEN WE HAVE TO SHOW LIKE OFF-CYCLE FILING DATE.
                    if (sessionStorage.getItem("DisclosureType").toString() == "7" || sessionStorage.getItem("DisclosureType").toString() == "9" || sessionStorage.getItem("DisclosureType").toString() == "10" || sessionStorage.getItem("DisclosureType").toString() == "12" || sessionStorage.getItem("DisclosureType").toString() == "14") {
                        if (sessionStorage.getItem("lstFilingDate").toString() == "- New Filing Date -") {
                            //// SHOW FILING DATE
                            //$("#divReportPeriodDatesTo").show();        

                            // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
                            $("#divFilingDateOffCycle").show();
                            // HIDE TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
                            $("#divReportPeriodDatesTo").hide();
                        }
                        else {
                            // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
                            $("#divFilingDateOffCycle").hide();
                            // HIDE TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
                            $("#divReportPeriodDatesTo").hide();

                            $("#divFilingDateDropDown").show();

                            //// HIDE FILING DATE
                            //$("#divReportPeriodDatesTo").hide();
                        }
                    }
                }
            }

            if (sessionStorage.getItem("ElectionType").toString() == "8") {
                // HIDE ELECTION DATE.
                $("#divElectionDate").hide();
            }
            else {
                if (sessionStorage.getItem("ElectionType").toString() != "6") {
                    if (sessionStorage.getItem("ElectionType").toString() == "4") { // PERIODIC NO ELECTION DATE TO SHOW.
                        // SHOW ELECTION DATE.
                        $("#divElectionDate").hide();
                    }
                    else {
                        // SHOW ELECTION DATE.
                        $("#divElectionDate").show();
                    }
                }
            }

            $('#txtFilerID').val(sessionStorage.getItem("FilerId").toString());
            $('#txtFilerType').val(sessionStorage.getItem("FilerTypeId").toString());
            $('#txtCommitteeName').val(sessionStorage.getItem("CommitteeName").toString());
            $('#lstElectionCycle').val(sessionStorage.getItem("ElectionCycle").toString());
            $('#lstUCOfficeType').val(sessionStorage.getItem("OfficeType").toString());
            $('#lstUCCounty').val(sessionStorage.getItem("County").toString());
            $('#lstUCMuncipality').val(sessionStorage.getItem("Municipality").toString());
            $('#lstElectionType').val(sessionStorage.getItem("ElectionType").toString());
            $('#lstElectionDate').val(sessionStorage.getItem("ElectionDate").toString());

            // HIDE DISCLOSURE PERIOD WHEN IF PRIMARY 2021 AND ABOVE.
            var eleType = $("#lstElectionType").val().toString();
            var eleYear = parseInt($("#lstElectionCycle option:selected").text().toString());
            var valYear = parseInt("2021");
            if (eleType == "2") { // IF PRIMARY.
                if (eleYear >= valYear) { // IF 2021 AND ABOVE NO - 10-DAY POST PRIMARY.
                    if (sessionStorage.getItem("DisclosurePeriod") != null) {
                        if (sessionStorage.getItem("DisclosurePeriod").toString() == 'undefined') {
                            // HIDE THE DISCLOSURE PERIOD.
                            $("#lstDisclosurePeriod").empty();
                            $("#divDisclosurePeriod").hide();

                            // Hide Filing Date for Off Cycle
                            $("#divFilingDateDropDown").show();
                            if (sessionStorage.getItem("lstFilingDate").toString() == "- New Filing Date -") {
                                //// SHOW FILING DATE
                                //$("#divReportPeriodDatesTo").show();        

                                // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
                                $("#divFilingDateOffCycle").show();
                                // HIDE TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
                                $("#divReportPeriodDatesTo").hide();
                            }
                            else {
                                // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
                                $("#divFilingDateOffCycle").hide();
                                // HIDE TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
                                $("#divReportPeriodDatesTo").hide();

                                //// HIDE FILING DATE
                                //$("#divReportPeriodDatesTo").hide();
                            }


                            $('#lstFilingDate').val(sessionStorage.getItem("lstFilingDate").toString());
                            if (sessionStorage.getItem("lstFilingDate").toString() == "- New Filing Date -") {
                                $('#txtNewFilingDate').val(sessionStorage.getItem("FilingDate").toString());
                            }
                            $("#lstFilingDate").prop("disabled", true);
                        }
                        else {
                            // Hide Filing Date for Off Cycle
                            $("#divFilingDateDropDown").hide();
                            // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
                            $("#divFilingDateOffCycle").hide();
                            // HIDE TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
                            $("#divReportPeriodDatesTo").hide();
                        }
                    }
                    else {
                        // Hide Filing Date for Off Cycle
                        $("#divFilingDateDropDown").hide();
                        // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
                        $("#divFilingDateOffCycle").hide();
                        // HIDE TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
                        $("#divReportPeriodDatesTo").hide();
                    }
                }
                else {
                    // Hide Filing Date for Off Cycle
                    $("#divFilingDateDropDown").hide();
                    // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
                    $("#divFilingDateOffCycle").hide();
                    // HIDE TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
                    $("#divReportPeriodDatesTo").hide();
                }
            }
            else {
                // Hide Filing Date for Off Cycle
                $("#divFilingDateDropDown").hide();
                // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
                $("#divFilingDateOffCycle").hide();
                // HIDE TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
                $("#divReportPeriodDatesTo").hide();
            }

            $('#lstDisclosureType').val(sessionStorage.getItem("DisclosureType").toString());
            if (sessionStorage.getItem("DisclosureType").toString() != "4" &&
                sessionStorage.getItem("DisclosureType").toString() != "7" &&
                sessionStorage.getItem("DisclosureType").toString() != "8" &&
                sessionStorage.getItem("DisclosureType").toString() != "9" &&
                sessionStorage.getItem("DisclosureType").toString() != "11" &&
                sessionStorage.getItem("DisclosureType").toString() != "13" &&
                sessionStorage.getItem("DisclosureType").toString() != "12" &&
                sessionStorage.getItem("DisclosureType").toString() != "14" &&
                sessionStorage.getItem("DisclosureType").toString() != "10") {
                $('#lstDisclosurePeriod').val(sessionStorage.getItem("DisclosurePeriod").toString());
            }
            if (sessionStorage.getItem("DisclosureType").toString() != "3" &&
                sessionStorage.getItem("DisclosureType").toString() != "2" &&
                sessionStorage.getItem("DisclosureType").toString() != "5" &&
                sessionStorage.getItem("DisclosureType").toString() != "14" &&
                sessionStorage.getItem("DisclosureType").toString() != "7") {
                if (sessionStorage.getItem("DisclosureType").toString() == "4" || sessionStorage.getItem("DisclosureType").toString() == "8" || sessionStorage.getItem("DisclosureType").toString() == "11" || sessionStorage.getItem("DisclosureType").toString() == "13") {
                    $('#txtReportPeriodDatesTo').val(sessionStorage.getItem("FilingDate").toString());
                    $('#txtReportPeriodDatesFrom').val(sessionStorage.getItem("CutOffDate").toString());
                }
                else if (sessionStorage.getItem("DisclosureType").toString() == "6") {
                    $('#txtReportPeriodDatesTo').val(sessionStorage.getItem("CutOffDate").toString());
                    $('#txtReportPeriodDatesFrom').val(sessionStorage.getItem("FilingDate").toString());

                    $("#divDisclosurePeriod").hide();
                    $("#divReportPeriodDates").hide();
                    $("#divReportPeriodDatesTo").hide();

                    // HIDE DISCLOSURE PERIOD WHEN IF PRIMARY 2021 AND ABOVE.
                    eleType = $("#lstElectionType").val().toString();
                    eleYear = parseInt($("#lstElectionCycle option:selected").text().toString());
                    valYear = parseInt("2021");
                    if (eleType == "2") { // IF PRIMARY.
                        if (eleYear >= valYear) { // IF 2021 AND ABOVE NO - 10-DAY POST PRIMARY.
                            if (sessionStorage.getItem("DisclosurePeriod") != null) {
                                if (sessionStorage.getItem("DisclosurePeriod").toString() == 'undefined') {
                                    // HIDE THE DISCLOSURE PERIOD.
                                    $("#lstDisclosurePeriod").empty();
                                    $("#divDisclosurePeriod").hide();

                                    // Hide Filing Date for Off Cycle
                                    $("#divFilingDateDropDown").show();
                                    if (sessionStorage.getItem("lstFilingDate").toString() == "- New Filing Date -") {
                                        //// SHOW FILING DATE
                                        //$("#divReportPeriodDatesTo").show();        

                                        // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
                                        $("#divFilingDateOffCycle").show();
                                        // HIDE TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
                                        $("#divReportPeriodDatesTo").hide();
                                    }
                                    else {
                                        // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
                                        $("#divFilingDateOffCycle").hide();
                                        // HIDE TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
                                        $("#divReportPeriodDatesTo").hide();

                                        //// HIDE FILING DATE
                                        //$("#divReportPeriodDatesTo").hide();
                                    }

                                    $('#lstFilingDate').val(sessionStorage.getItem("lstFilingDate").toString());
                                    if (sessionStorage.getItem("lstFilingDate").toString() == "- New Filing Date -") {
                                        $('#txtNewFilingDate').val(sessionStorage.getItem("FilingDate").toString());
                                    }
                                    $("#lstFilingDate").prop("disabled", true);
                                }
                                else {
                                    $("#divDisclosurePeriod").show();

                                    // Hide Filing Date for Off Cycle
                                    $("#divFilingDateDropDown").hide();
                                    // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
                                    $("#divFilingDateOffCycle").hide();
                                    // HIDE TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
                                    $("#divReportPeriodDatesTo").hide();
                                }
                            }
                            else {
                                $("#divDisclosurePeriod").show();

                                // Hide Filing Date for Off Cycle
                                $("#divFilingDateDropDown").hide();
                                // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
                                $("#divFilingDateOffCycle").hide();
                                // HIDE TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
                                $("#divReportPeriodDatesTo").hide();
                            }
                        }
                        else {
                            $("#divDisclosurePeriod").show();

                            // Hide Filing Date for Off Cycle
                            $("#divFilingDateDropDown").hide();
                            // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
                            $("#divFilingDateOffCycle").hide();
                            // HIDE TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
                            $("#divReportPeriodDatesTo").hide();
                        }
                    }
                    else {
                        $("#divDisclosurePeriod").show();

                        // Hide Filing Date for Off Cycle
                        $("#divFilingDateDropDown").hide();
                        // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
                        $("#divFilingDateOffCycle").hide();
                        // HIDE TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
                        $("#divReportPeriodDatesTo").hide();
                    }
                }
                else {
                    //$('#txtReportPeriodDatesFrom').val(sessionStorage.getItem("CutOffDate").toString());            
                }
            }


            // OFF-CYCLE FOR NO-ACTIVITY REPORT
            if (sessionStorage.getItem("DisclosureType").toString() == "2" || sessionStorage.getItem("DisclosureType").toString() == "3") {
                if (sessionStorage.getItem("ElectionType").toString() == "6") {
                    $('#lstResigTermType').val(sessionStorage.getItem("lstResigTermType").toString());

                    $('#lstFilingDate').val(sessionStorage.getItem("lstFilingDate").toString());
                    $('#txtNewFilingDate').val(sessionStorage.getItem("FilingDate").toString());
                }
                else {
                    $('#lstResigTermType').val(sessionStorage.getItem("lstResigTermType").toString());
                    $('#txtReportPeriodDatesTo').val(sessionStorage.getItem("FilingDate").toString());
                    $('#txtReportPeriodDatesFrom').val(sessionStorage.getItem("CutOffDate").toString());
                }
            }
            //else if (sessionStorage.getItem("DisclosureType").toString() == "3") {
            //    $('#txtReportPeriodDatesTo').val(sessionStorage.getItem("FilingDate").toString());
            //    $('#txtReportPeriodDatesFrom').val(sessionStorage.getItem("CutOffDate").toString());
            //}


            // IE - WEEKLY NON-ITEMIZED TRANSACTIONS ITS ALWAYS NEW FILING DATE OR EXISTING FILING DATE.
            if (sessionStorage.getItem("DisclosureType").toString() == "7" || sessionStorage.getItem("DisclosureType").toString() == "10" || sessionStorage.getItem("DisclosureType").toString() == "9" || sessionStorage.getItem("DisclosureType").toString() == "12" || sessionStorage.getItem("DisclosureType").toString() == "14") {
                
                $m("#lstFilingDate option").each(function () {
                    if ($(this).val() == sessionStorage.getItem("lstFilingDate").toString()) {
                        $(this).prop('selected', true).trigger('change');
                    }
                });

                //$('#lstFilingDate').val(sessionStorage.getItem("lstFilingDate").toString());

                //if (sessionStorage.getItem("lstFilingDate").toString() == "- New Filing Date -") {
                //    $('#txtNewFilingDate').val(sessionStorage.getItem("FilingDate").toString());
                //    $("#lstFilingDate").append("<option>" + sessionStorage.getItem("FilingDate").toString() + "</option>");
                //}

                if (sessionStorage.getItem("ElectionType").toString() == "6") {
                    $('#lstResigTermType').val(sessionStorage.getItem("lstResigTermType").toString());
                }
                else {
                    $('#lstResigTermType').val(sessionStorage.getItem("lstResigTermType").toString());
                }
            }

            // SET THE HEADER TITLE.
            if (sessionStorage.getItem("DisclosureType").toString() != "12") {
                $("#lblHeader").text(sessionStorage.getItem("DisclosureTypeText").toString());
                $("#lblHeader1").text(sessionStorage.getItem("DisclosureTypeText").toString());
            }
            else {
                $("#lblHeader").text("Independent Expenditure Weekly PIDA Expenditure");
            }
            $("#lblHEleYear").text(sessionStorage.getItem("ElectionCycleText").toString());

            if (sessionStorage.getItem("DisclosureType").toString() != "4" &&
                sessionStorage.getItem("DisclosureType").toString() != "7" &&
                sessionStorage.getItem("DisclosureType").toString() != "8" &&
                sessionStorage.getItem("DisclosureType").toString() != "9" &&
                sessionStorage.getItem("DisclosureType").toString() != "11" &&
                sessionStorage.getItem("DisclosureType").toString() != "13" &&
                sessionStorage.getItem("DisclosureType").toString() != "12" &&
                sessionStorage.getItem("DisclosureType").toString() != "14" &&
                sessionStorage.getItem("DisclosureType").toString() != "10") {
                if (sessionStorage.getItem("DisclosureType").toString() == "6") { // ONLY COMPAIGN MATERIALS.
                    if (sessionStorage.getItem("DisclosurePeriodText").toString() != "- Select -") {
                        if (sessionStorage.getItem("DisclosurePeriodText").toString() != "") {

                            var txtHyphan = " -";
                            var txtDisclosurePeriod = sessionStorage.getItem("DisclosurePeriodText").toString();
                            txtDisclosurePeriod = txtHyphan + " " + txtDisclosurePeriod;
                            //$("#lblHDisclPer").text(sessionStorage.getItem("DisclosurePeriodText").toString());
                            $("#lblHDisclPer").text(txtDisclosurePeriod);

                        }
                        else {
                            $("#lblHDisclPer").text(" - Primary");
                        }
                    }
                    else {
                        $("#lblHDisclPer").text("");
                    }
                }
                else {
                    if (sessionStorage.getItem("DisclosurePeriodText").toString() != "- Select -") {
                        $("#lblHDisclPer").text(sessionStorage.getItem("DisclosurePeriodText").toString());
                    }
                    else {
                        $("#lblHDisclPer").text("");
                    }
                }
            }

            if (sessionStorage.getItem("DisclosureType").toString() != "3" &&
                sessionStorage.getItem("DisclosureType").toString() != "2" &&
                sessionStorage.getItem("DisclosureType").toString() != "5") {
                if (sessionStorage.getItem("ScheduleId") != null) {
                    $('#lstTransactionTypeNonItem').val(sessionStorage.getItem("ScheduleId").toString());
                    $('#lstTransactionTypeNonItem').focus();
                }
                else {
                    $('#lstTransactionTypeNonItem').val(sessionStorage.getItem("lstTransactionTypeNonItem").toString());
                    $('#lstTransactionTypeNonItem').focus();
                }
            }

            $('#lstUCOfficeType').prop("disabled", true);
            $('#lstUCCounty').prop("disabled", true);
            $('#lstUCMuncipality').prop("disabled", true);

            if (sessionStorage.getItem("OfficeType").toString() == "1") {
                $("#divCounty").hide();
                $("#divMunicipality").hide();
            }
            else {
                $("#divCounty").hide();
                $("#divMunicipality").hide();
            }

            // Non-Itemized Filter Values. Hide/Show
            var selectedDisclosureType = $("#lstDisclosureType option:selected").val().toString();
            if (selectedDisclosureType == "3125") { // REMOVED THIS CONDITION FOR IN-LIEU OF STATEMENT.
                $("#divReportPeriodDates").show();
                $("#divReportPeriodDatesTo").show();
            }
            else if (selectedDisclosureType == "4" || selectedDisclosureType == "8" || selectedDisclosureType == "11" || selectedDisclosureType == "13" || selectedDisclosureType == "6") {
                $("#divReportPeriodDates").show();
                $("#divReportPeriodDatesTo").show();
            }
            else if (selectedDisclosureType == "2" || selectedDisclosureType == "3") { // Show/Hide Based on Non-Itemized Transaction Disclosure Type.
                if (sessionStorage.getItem("ElectionType").toString() == "6") {
                    $("#divReportPeriodDates").hide();
                    $("#divReportPeriodDatesTo").hide();
                }
                else {
                    $("#divReportPeriodDates").show();
                    $("#divReportPeriodDatesTo").show();
                }

            }
            else {
                $("#divReportPeriodDates").hide();
                $("#divReportPeriodDatesTo").hide();
            }

            if (sessionStorage.getItem("DisclosureType").toString() == "6") {
                $("#divReportPeriodDates").hide();
                $("#divReportPeriodDatesTo").hide();

                // HIDE DISCLOSURE PERIOD WHEN IF PRIMARY 2021 AND ABOVE.
                eleType = $("#lstElectionType").val().toString();
                eleYear = parseInt($("#lstElectionCycle option:selected").text().toString());
                valYear = parseInt("2021");
                if (eleType == "2") { // IF PRIMARY.
                    if (eleYear >= valYear) { // IF 2021 AND ABOVE NO - 10-DAY POST PRIMARY.
                        if (sessionStorage.getItem("DisclosurePeriod") != null) {
                            if (sessionStorage.getItem("DisclosurePeriod").toString() == 'undefined') {
                                // HIDE THE DISCLOSURE PERIOD.
                                $("#lstDisclosurePeriod").empty();
                                $("#divDisclosurePeriod").hide();
                            }
                            else {
                                $("#divDisclosurePeriod").show();
                            }
                        }
                        else {
                            $("#divDisclosurePeriod").show();
                        }
                    }
                    else {
                        $("#divDisclosurePeriod").show();
                    }
                }
                else {
                    $("#divDisclosurePeriod").show();
                }
            }


            $(".clsCommonSearch").hide();

            //$("#main").addClass("SetHeightCandInd");
            //$("#main").removeClass("SetHeight");

            //Show Hide Lookups
            $("#divshow").hide();
            $("#divshowForMobile").hide();

            $m(".clsbtnCommonHideShow").bind('click', function (e) {
                if (sessionStorage.getItem('setDataTable') != "null") {
                    //$m('#ContributionsMonetaryGrid').DataTable().ajax.reload();
                    //$m('#PartnersGridMonetary').DataTable().ajax.reload();
                }

                $("#selectorItsRpt").toggle("slow");
                $("#divhide").show("slow");
                $("#divshow").hide("slow");

                $("#divhideForMobile").show("slow");
                $("#divshowForMobile").hide("slow");

                $("#divGrid").addClass("Per80hideShowButtonCSS");
                $("#divGrid").removeClass("Per100hideShowButtonCSS");

                $("#divShowInLieuOfStatement").addClass("Per80hideShowButtonCSS");
                $("#divShowInLieuOfStatement").removeClass("Per100hideShowButtonCSS");

                $("#divShowNoActivityReport").addClass("Per80hideShowButtonCSS");
                $("#divShowNoActivityReport").removeClass("Per100hideShowButtonCSS");

                $("#divShowNonParticipation").addClass("Per80hideShowButtonCSS");
                $("#divShowNonParticipation").removeClass("Per100hideShowButtonCSS");

                $("#divUC24HNoticeHistory").addClass("Per80hideShowButtonCSS");
                $("#divUC24HNoticeHistory").removeClass("Per100hideShowButtonCSS");

                $("#divUCIETransactionsHistory").addClass("Per80hideShowButtonCSS");
                $("#divUCIETransactionsHistory").removeClass("Per100hideShowButtonCSS");

            });

            $("#btnShowHide").click(function () {
                if ($("#divShowHide").is(":hidden")) {
                    $("#divMainNew").removeClass("mainDivNew");
                    $("#divMainNew").addClass("mainDiv");

                } else {
                    $("#divMainNew").removeClass("mainDiv");
                    $("#divMainNew").addClass("mainDivNew");
                }
            });

            $m(".clsbtnCommonShowHide").bind('click', function (e) {
                if (sessionStorage.getItem('setDataTable') != "null") {
                    //$m('#ContributionsMonetaryGrid').DataTable().ajax.reload();
                    //$m('#PartnersGridMonetary').DataTable().ajax.reload();
                }
                $("#selectorItsRpt").toggle("slow");
                $("#divhide").hide("slow");
                $("#divshow").show("slow");

                $("#divhideForMobile").hide("slow");
                $("#divshowForMobile").show("slow");

                $("#divGrid").addClass("Per100hideShowButtonCSS");
                $("#divGrid").removeClass("Per80hideShowButtonCSS");

                $("#gridInLieuOfStatement").addClass("Per100hideShowButtonCSS");
                $("#gridInLieuOfStatement").removeClass("Per80hideShowButtonCSS");

                $("#gridNoActivityReport").addClass("Per100hideShowButtonCSS");
                $("#gridNoActivityReport").removeClass("Per80hideShowButtonCSS");

                $("#gridNonParticipation").addClass("Per100hideShowButtonCSS");
                $("#gridNonParticipation").removeClass("Per80hideShowButtonCSS");

                $("#grid24HNoticeHistory").addClass("Per100hideShowButtonCSS");
                $("#grid24HNoticeHistory").removeClass("Per80hideShowButtonCSS");

                $("#gridIETransactionsHistory").addClass("Per100hideShowButtonCSS");
                $("#gridIETransactionsHistory").removeClass("Per80hideShowButtonCSS");

                $("#thdGrid").addClass("Per100hideShowButtonCSS");
                $("#thdGrid").removeClass("Per80hideShowButtonCSS");

                $("#divShowInLieuOfStatement").addClass("Per100hideShowButtonCSS");
                $("#divShowInLieuOfStatement").removeClass("Per80hideShowButtonCSS");

                $("#divShowNoActivityReport").addClass("Per100hideShowButtonCSS");
                $("#divShowNoActivityReport").removeClass("Per80hideShowButtonCSS");

                $("#divShowNonParticipation").addClass("Per100hideShowButtonCSS");
                $("#divShowNonParticipation").removeClass("Per80hideShowButtonCSS");

                $("#divIETransGrid").addClass("Per100hideShowButtonCSS");
                $("#divIETransGrid").removeClass("Per80hideShowButtonCSS");

                $("#divUC24HNoticeHistory").addClass("Per100hideShowButtonCSS");
                $("#divUC24HNoticeHistory").removeClass("Per80hideShowButtonCSS");

                $("#divUCIETransactionsHistory").addClass("Per100hideShowButtonCSS");
                $("#divUCIETransactionsHistory").removeClass("Per80hideShowButtonCSS");

            });

        }

        /////////END of NonItemizedLeftFilterValues1////////////



        // SUBMIT BUTTON TRANSACTIONS SELECTED OR NOT SESSION.
        sessionStorage.removeItem("SubmitTransId");

        // SUBMIT BUTTON BY DEFAULT IT WILL BE DISABLED
        //$("#btnSubmitSchedAIEWeeklyContr").prop("disabled", true);

        // Treasurer Name Disable By Default. Non-Editable Field.
        $("#txtTreasurerName").prop("disabled", true);


        // Hide the History Grid by Default.
        $("#divUCIETransactionsHistory").hide();

        sessionStorage.setItem("FilerId", $("#txtFilerID option:selected").val());
        sessionStorage.setItem("CommitteeName", $("#txtCommitteeName option:selected").val());
        sessionStorage.setItem("ElectionCycle", $("#lstElectionCycle option:selected").val());
        sessionStorage.setItem("ElectionType", $("#lstElectionType option:selected").val());
        sessionStorage.setItem("ElectionDate", $("#lstElectionDate option:selected").val());
        sessionStorage.setItem("DisclosureType", $("#lstDisclosureType option:selected").val());
        sessionStorage.setItem("DisclosurePeriod", $("#lstDisclosurePeriod option:selected").val());
        sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesFrom").val());
        sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());

        if ($("#lstElectionType option:selected").val() == "6") {
            sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
        }
        else {
            sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
        }
        sessionStorage.setItem("TransactionType", $("#lstTransactionType option:selected").val());
        sessionStorage.setItem("lstResigTermType", $("#lstResigTermType option:selected").val());
        sessionStorage.setItem("lstFilingDate", $("#lstFilingDate option:selected").val());
        if ($("#lstFilingDate option:selected").text().toString() == "- New Filing Date -") {
            sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
            $("#divFilingDateOffCycle1").show();
        }
        else {
            $("#divFilingDateOffCycle1").hide();
        }

        // ======================================================================================================================================
        /// Dialog Box Code /////////////////////////////////////////////////////////////////////
        var dialog_Sched_A_IE;

        dialog_Sched_A_IE = $m("#dialog-form_Sched_A_IE").dialog({
            autoOpen: false,
            resizable: false,
            height: 'auto',
            width: 456,
            position: {
                my: "center top",
                at: "center top+250"
            },
            //draggable: false, // TESTING PURPOSE ONLY.
            modal: true,
            resizable: false,
            closeOnEscape: false,
            open: function (event, ui) { hideDialogXButton(this); }
        });

        $(window).resize(function () {
            //// get the screen height and width
            if ($(window).width() < 500) {
                dialog_Sched_A_IE = $m("#dialog-form_Sched_A_IE").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 300,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 500 && $(window).width() <= 900) {
                dialog_Sched_A_IE = $m("#dialog-form_Sched_A_IE").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 456,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 900) {
                dialog_Sched_A_IE = $m("#dialog-form_Sched_A_IE").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 456,
                    modal: true,
                    dialogClass: 'DialogCustomStyle',
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
        }).resize();
        // ======================================================================================================================================
        /// Dialog Box Code /////////////////////////////////////////////////////////////////////

        // ======================================================================================================================================
        // DATE VALIDATION FOR DATE RECEIVED FOR NON-ITEMIZED IE-WEEKLY CONTRIBUTION.        
        if ($("#lstElectionDate option:selected").text().toString() != "") {
            var date = $("#lstElectionDate option:selected").text().toString();
        }
        else {
            if (sessionStorage.getItem("lstFilingDate").toString() == "- New Filing Date -") {
                var date = $("#txtNewFilingDate").val().toString();
            }
            else {
                var date = $("#lstFilingDate option:selected").text().toString();
            }
        }

        var dateRange = $("#lstFilingDate option:selected").text();
        var dates = dateRange.split("-");
        var minDate = dates[0];
        var maxDate = dates[1];

        var dateDate = new Date(date);
        var dateYear = dateDate.getFullYear();

        var fromDate = '01' + '/' + '01' + '/' + dateYear;
        var toDate = '12' + '/' + '31' + '/' + dateYear;

        sessionStorage.setItem("FromDateVal", fromDate.toString());
        sessionStorage.setItem("ToDateVal", toDate.toString());
        // DATE VALIDATION FOR DATE RECEIVED FOR NON-ITEMIZED IE-WEEKLY CONTRIBUTION.
        // ======================================================================================================================================

        // ======================================================================================================================================
        // DATE FORMATE....///////////////////////////////////////////////

        // GET THE FILING DATE.
        if ($m("#lstFilingDate option:selected").text().toString() == "- New Filing Date -") {
            sessionStorage.setItem("FilingDateIEWeekly", $("#txtNewFilingDate").val().toString());
        }
        else {
            sessionStorage.setItem("FilingDateIEWeekly", $m("#lstFilingDate option:selected").text().toString());
        }


        // DATE PICKER CONTROL
        $m("#txtCurrentDateWCS").datepicker({
            showOn: "button",
            buttonImage: "../../Content/Images/Calendar.png",
            buttonImageOnly: false,
            buttonText: "Select From Date",
            changeMonth: true,
            changeYear: true,
            numberOfMonths: 1,
            minDate: minDate,
            maxDate: maxDate,
            dateFormat: 'mm/dd/yy',
            onChange: function () {
                $m("#txtCurrentDateWCS").valid();
            },
        }).datepicker();

        $m('.datepicker').attr("placeholder", "MM/DD/YYYY").datepicker();
        $("#txtCurrentDateWCS").addClass("watermarkHTMLTextBox");
        $("#txtCurrentDateWCS").focusin(function () {
            $("#txtCurrentDateWCS").removeClass("watermarkHTMLTextBox");
        });

        // Watermark TextBox. ////////////////////////////////////////////////////

        // DATE FORMATE....///////////////////////////////////////////////
        $("#txtCurrentDateWCS").focusout(function () {
            if ($("#txtCurrentDateWCS").val().toString() != "") {
                if ($("#txtCurrentDateWCS").val().toString() != "MM/DD/YYYY") {
                    var results = GetValidDateIEWeekly();

                    if (results == "") {
                        var MyDate = new Date($("#txtCurrentDateWCS").val().toString());
                        var MyDateString;
                        MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                            + ('0' + MyDate.getDate()).slice(-2) + '/'
                            + MyDate.getFullYear();
                        $("#txtCurrentDateWCS").val("");
                        $("#txtCurrentDateWCS").val(MyDateString);
                    }
                }
            }
            else {
                $("#txtCurrentDateWCS").addClass("watermarkHTMLTextBox");
            }

        });
        // DATE FORMATE....///////////////////////////////////////////////
        // ======================================================================================================================================

        /// AUTO COMPLETE SEARCH CODE //////////////////////////////////////////////////////////////////////////////////////
        //----------------------------------------------------------------------------------------------------------------------------------------
        // First Name Auto Complete.
        $m("#txtFirstName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/NonItemIEWeeklyContributionSchedA/AutoCompleteFirstName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();

                var selectedValue = ui.item.label;
                $.ajax({
                    url: "@Url.Content("~/NonItemIEWeeklyContributionSchedA/GetAutoCompleteNameData/")",
                    dataType: "json",
                    data: {
                        strValue: selectedValue.toString()
                    },
                    success: function (results) {
                        $.each(results, function (i, item) {
                            $("#txtFirstName").val(item.FilingEntityFirstName.toString());
                            $("#txtMI").val(item.FilingEntityMiddleName.toString());
                            $("#txtLastName").val(item.FilingEntityLastName.toString());
                            $("#txtStreetName").val(item.FilingEntityStreetName.toString());
                            $("#txtCity").val(item.FilingEntityCity.toString());
                            $("#txtState").val(item.FilingEntityState.toString());
                            $("#txtZipCode").val(item.FilingEntityZip.toString());
                            $("#txtCountry").val(item.FilingEntityCountry.toString());
                            if ($("#txtCountry").val().toString() == "United States") {
                                $("#chkCountry").prop('checked', false);
                                $("#txtCountry").prop("disabled", true);
                                $("#txtState").prop('maxLength', '2');
                                if (item.FilingEntityZip.toString() != "") {
                                    $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                                }
                                else {
                                    $("#txtZipCode").addClass("watermarkHTMLTextBox");
                                    $("#txtZipCode").blur();
                                }
                            } else {
                                $("#chkCountry").prop('checked', true);
                                $("#txtCountry").prop("disabled", false);
                                $("#txtState").prop('maxLength', '30');

                                $m('#txtZipCode').attr("placeholder", "");
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            }

                            $m("#txtFirstName").valid();
                            // Address validation
                            $m("#txtCountry").valid();
                            $m("#txtStreetName").valid();
                            $m("#txtCity").valid();
                            $m("#txtState").valid();
                            $m("#txtZipCode").valid();
                        });
                    }
                });
                $("#txtContributorOccupation").focus();
            }
        });

        // Last Name - Auto Complete
        $m("#txtLastName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/NonItemIEWeeklyContributionSchedA/AutoCompleteLastName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();

                var selectedValue = ui.item.label;
                $.ajax({
                    url: "@Url.Content("~/NonItemIEWeeklyContributionSchedA/GetAutoCompleteNameData/")",
                    dataType: "json",
                    data: {
                        strValue: selectedValue.toString()
                    },
                    success: function (results) {
                        $.each(results, function (i, item) {
                            $("#txtFirstName").val(item.FilingEntityFirstName.toString());
                            $("#txtMI").val(item.FilingEntityMiddleName.toString());
                            $("#txtLastName").val(item.FilingEntityLastName.toString());
                            $("#txtStreetName").val(item.FilingEntityStreetName.toString());
                            $("#txtCity").val(item.FilingEntityCity.toString());
                            $("#txtState").val(item.FilingEntityState.toString());
                            $("#txtZipCode").val(item.FilingEntityZip.toString());
                            $("#txtCountry").val(item.FilingEntityCountry.toString());
                            if ($("#txtCountry").val().toString() == "United States") {
                                $("#chkCountry").prop('checked', false);
                                $("#txtCountry").prop("disabled", true);
                                $("#txtState").prop('maxLength', '2');
                                if (item.FilingEntityZip.toString() != "") {
                                    $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                                }
                                else {
                                    $("#txtZipCode").addClass("watermarkHTMLTextBox");
                                    $("#txtZipCode").blur();
                                }
                            } else {
                                $("#chkCountry").prop('checked', true);
                                $("#txtCountry").prop("disabled", false);
                                $("#txtState").prop('maxLength', '30');

                                $m('#txtZipCode').attr("placeholder", "");
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            }
                            $m("#txtLastName").valid();
                            // Address validation
                            $m("#txtCountry").valid();
                            $m("#txtStreetName").valid();
                            $m("#txtCity").valid();
                            $m("#txtState").valid();
                            $m("#txtZipCode").valid();
                        });
                    }
                });
                $("#txtContributorOccupation").focus();
            }
        });

        // Partnership Name Auto Complete.
        $m("#txtPartnerShipName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/NonItemIEWeeklyContributionSchedA/AutoCompleteEntityName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();

                var selectedValue = ui.item.label;
                $.ajax({
                    url: "@Url.Content("~/NonItemIEWeeklyContributionSchedA/GetAutoCompleteNameData/")",
                    dataType: "json",
                    data: {
                        strValue: selectedValue.toString()
                    },
                    success: function (results) {
                        $.each(results, function (i, item) {
                            $("#txtPartnerShipName").val(item.FilingEntityName.toString());
                            $("#txtStreetName").val(item.FilingEntityStreetName.toString());
                            $("#txtCity").val(item.FilingEntityCity.toString());
                            $("#txtState").val(item.FilingEntityState.toString());
                            $("#txtZipCode").val(item.FilingEntityZip.toString());
                            $("#txtCountry").val(item.FilingEntityCountry.toString());
                            if ($("#txtCountry").val().toString() == "United States") {
                                $("#chkCountry").prop('checked', false);
                                $("#txtCountry").prop("disabled", true);
                                $("#txtState").prop('maxLength', '2');
                                if (item.FilingEntityZip.toString() != "") {
                                    $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                                }
                                else {
                                    $("#txtZipCode").addClass("watermarkHTMLTextBox");
                                    $("#txtZipCode").blur();
                                }
                            } else {
                                $("#chkCountry").prop('checked', true);
                                $("#txtCountry").prop("disabled", false);
                                $("#txtState").prop('maxLength', '30');

                                $m('#txtZipCode').attr("placeholder", "");
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            }
                            $m("#txtPartnerShipName").valid();
                            // Address validation
                            $m("#txtCountry").valid();
                            $m("#txtStreetName").valid();
                            $m("#txtCity").valid();
                            $m("#txtState").valid();
                            $m("#txtZipCode").valid();
                        });
                    }
                });
                $("#txtContributorOccupation").focus();
            }
        });
        /// AUTO COMPLETE SEARCH CODE //////////////////////////////////////////////////////////////////////////////////////
        //----------------------------------------------------------------------------------------------------------------------------------------

        // ======================================================================================================================================
        // BUTTON ADD NEW TRANSACTIONS - 24 HOUR NOTICE OF NON-ITEMIZED.
        $m("#btnAddNewTransaction").button().on("click", function () {

            dialog_Sched_A_IE.dialog("open");
            $("#btnUpdateSchedAIEWeeklyContr").hide();
            $("#btnSaveSchedAIEWeeklyContr").show();
            sessionStorage.setItem("UpdateFlagSchedA24HNotice", "No");
            $("#divUCIETransactionsHistory").hide();

            var validator = $m("#DialogBoxSchedAIEForm").validate();
            validator.resetForm();  // clear out the validation errors
            $m("#DialogBoxSchedAIEForm")[0].reset();   // clear out the form data
            $("#lblExplanation").text("Explanation");
            $("#txtCurrentDateWCS").blur();
            $("#txtZipCode").blur();
            $("#txtAmtABC").blur();

            $("#txtTreasurerOccupation").focus();

            $("#txtCountry").val("United States");
            $("#txtCountry").prop("disabled", true);
            $("#chkCountry").prop('checked', false);
            $("#txtState").prop('maxLength', '2');

            $("#lstContributionName").prop("disabled", false);

            $("#tdCheck").hide();
            $("#lstRContributions")[0].selectedIndex = 2;
            $("#tdEmployer").hide();
            $("#tdOccupation").hide();
            $("#divContStreetAddress").hide();
            $("#divContCity").hide();
            $("#divContState").hide();
            $("#divContZip5").hide();
            $("#tdRContributions").show();

            ////HIDE/SHOW THE FIELDS.
            //$("#tdPartnershipName").hide();
            //HIDE/SHOW THE FIELDS.
            $("#tdFirstName").show();
            $("#tdMI").show();
            $("#tdLastName").show();
            //HIDE/SHOW THE FIELDS.

            $("#lstContributionName")[0].selectedIndex = 0;
            $("#lstMethod")[0].selectedIndex = 0;

            // Clear the JQuery Error Message
            $m("label[for=txtCheck]").text('');
            $m("#txtCheck").removeClass("error");

            $m("label[for=txtCurrentDateWCS]").text('');
            $m("#txtCurrentDateWCS").removeClass("error");

            $("#lstInDistrict")[0].selectedIndex = 0;
            $("#lstMinor")[0].selectedIndex = 1;
            $("#lstVendor")[0].selectedIndex = 1;
            $("#lstLobbyist")[0].selectedIndex = 1;
        });
        // BUTTON ADD NEW TRANSACTIONS - 24 HOUR NOTICE OF NON-ITEMIZED.
        // ======================================================================================================================================

        // ======================================================================================================================================
        // BUTTON CLOSE DIALOG.
        $m("#btnCloseDialog").button().on("click", function () {

            if (sessionStorage.getItem("UpdateFlagSchedA24HNotice").toString() != "No") {
                if ($("#DialogBoxSchedAIEForm").serialize() != form_original_data) {
                    var resultsCloseSchedA = "All unsaved data will be lost if you navigate away from this page. Are you sure you want to continue?";

                    $m('#modal_dialog').text(resultsCloseSchedA);
                    $m("#modal_dialog").dialog({
                        resizable: false,
                        modal: true,
                        width: '400px',
                        height: 'auto',
                        bgiframe: false,
                        closeOnEscape: false,
                        open: function (event, ui) { hideDialogXButton(this); },
                        buttons: {
                            "OK": function () {
                                // Close Confirm Box.
                                $m(this).dialog("close");
                                // Close the DialogBox
                                dialog_Sched_A_IE.dialog("close");

                                // DISABLE THE SUBMIT TRANSACTION BUTTON.
                                sessionStorage.setItem("EditYesNo", "No");

                                // Refresh the Data on Grid...
                                $m.ajax({
                                    "url": "@Url.Content("~/_UC_GridCommonNIIEWeeklyContribution/GetIEWeeklyContributionTransactions/")",
                                    "data": {
                                        txtFilerID: $("#txtFilerID").val(),
                                        lstElectionCycle: $("#lstElectionCycle option:selected").val(),
                                        lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                                        lstElectionType: $("#lstElectionType option:selected").val(),
                                        lstElectionDateId: $("#lstElectionDate option:selected").val(),
                                        lstFilingDate: $("#lstFilingDate option:selected").val(),
                                        txtNewFilingDate: $("#txtNewFilingDate").val(),
                                        lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
                                    },
                                    "success": tableFilingTransactions,
                                    "dataType": "json",
                                    "type": "POST",
                                    "error": function () {
                                        ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                                    }
                                });
                                $m('#gridFilingTransIEWeeklyContribution').DataTable().ajax.reload();
                                tableFilingTransactions.responsive.recalc();

                                // SUBMIT BUTTON DISABLED.
                                //$("#btnSubmitSchedAIEWeeklyContr").prop("disabled", true);

                            }, // confirm close
                            "Cancel": function () {
                                $m(this).dialog("close");
                            }
                        }
                    });
                }
                else {
                    // Close the DialogBox
                    dialog_Sched_A_IE.dialog("close");

                    // DISABLE THE SUBMIT TRANSACTION BUTTON.
                    sessionStorage.setItem("EditYesNo", "No");

                    // Refresh the Data on Grid...
                    $m.ajax({
                        //"url": "../_UC_GridCommonControl/GetAllTransactionTypesData",
                        "url": "@Url.Content("~/_UC_GridCommonNIIEWeeklyContribution/GetIEWeeklyContributionTransactions/")",
                        "data": {
                            txtFilerID: $("#txtFilerID").val(),
                            lstElectionCycle: $("#lstElectionCycle option:selected").val(),
                            lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                            lstElectionType: $("#lstElectionType option:selected").val(),
                            lstElectionDateId: $("#lstElectionDate option:selected").val(),
                            lstFilingDate: $("#lstFilingDate option:selected").val(),
                            txtNewFilingDate: $("#txtNewFilingDate").val(),
                            lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
                        },
                        "success": tableFilingTransactions,
                        "dataType": "json",
                        "type": "POST",
                        "error": function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                        }
                    });
                    $m('#gridFilingTransIEWeeklyContribution').DataTable().ajax.reload();
                    tableFilingTransactions.responsive.recalc();

                    // SUBMIT BUTTON DISABLED.
                    //$("#btnSubmitSchedAIEWeeklyContr").prop("disabled", true);
                }
            }
            else {
                if ($("#DialogBoxSchedAIEForm").serialize() != form_original_data) {
                    var resultsCloseSchedA = "All unsaved data will be lost if you navigate away from this page. Are you sure you want to continue?";

                    $m('#modal_dialog').text(resultsCloseSchedA);
                    $m("#modal_dialog").dialog({
                        resizable: false,
                        modal: true,
                        width: '400px',
                        height: 'auto',
                        bgiframe: false,
                        closeOnEscape: false,
                        open: function (event, ui) { hideDialogXButton(this); },
                        buttons: {
                            "OK": function () {
                                // Close Confirm Box.
                                $m(this).dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                // Close the DialogBox
                                dialog_Sched_A_IE.dialog("close");

                                // DISABLE THE SUBMIT TRANSACTION BUTTON.
                                sessionStorage.setItem("EditYesNo", "No");

                                // Refresh the Data on Grid...
                                $m.ajax({
                                    "url": "@Url.Content("~/_UC_GridCommonNIIEWeeklyContribution/GetIEWeeklyContributionTransactions/")",
                                    "data": {
                                        txtFilerID: $("#txtFilerID").val(),
                                        lstElectionCycle: $("#lstElectionCycle option:selected").val(),
                                        lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                                        lstElectionType: $("#lstElectionType option:selected").val(),
                                        lstElectionDateId: $("#lstElectionDate option:selected").val(),
                                        lstFilingDate: $("#lstFilingDate option:selected").val(),
                                        txtNewFilingDate: $("#txtNewFilingDate").val(),
                                        lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
                                    },
                                    "success": tableFilingTransactions,
                                    "dataType": "json",
                                    "type": "POST",
                                    "error": function () {
                                        ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                                    }
                                });
                                $m('#gridFilingTransIEWeeklyContribution').DataTable().ajax.reload();
                                tableFilingTransactions.responsive.recalc();

                                // SUBMIT BUTTON DISABLED.
                                //$("#btnSubmitSchedAIEWeeklyContr").prop("disabled", true);
                            }, // confirm close
                            "Cancel": function () {
                                $m(this).dialog("close");
                            }
                        }
                    });
                }
                else {
                    // Close the DialogBox
                    dialog_Sched_A_IE.dialog("close");

                    // DISABLE THE SUBMIT TRANSACTION BUTTON.
                    sessionStorage.setItem("EditYesNo", "No");

                    // Refresh the Data on Grid...
                    $m.ajax({
                        "url": "@Url.Content("~/_UC_GridCommonNIIEWeeklyContribution/GetIEWeeklyContributionTransactions/")",
                        "data": {
                            txtFilerID: $("#txtFilerID").val(),
                            lstElectionCycle: $("#lstElectionCycle option:selected").val(),
                            lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                            lstElectionType: $("#lstElectionType option:selected").val(),
                            lstElectionDateId: $("#lstElectionDate option:selected").val(),
                            lstFilingDate: $("#lstFilingDate option:selected").val(),
                            txtNewFilingDate: $("#txtNewFilingDate").val(),
                            lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
                        },
                        "success": tableFilingTransactions,
                        "dataType": "json",
                        "type": "POST",
                        "error": function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                        }
                    });
                    $m('#gridFilingTransIEWeeklyContribution').DataTable().ajax.reload();
                    tableFilingTransactions.responsive.recalc();

                    // SUBMIT BUTTON DISABLED.
                    //$("#btnSubmitSchedAIEWeeklyContr").prop("disabled", true);
                }
            }
        });
        // BUTTON CLOSE DIALOG.
        // ======================================================================================================================================

        // ======================================================================================================================================
        // Method Change
        $("#lstMethod").change(function () {

            $("#txtCheck").val("");

            if ($("#lstMethod option:selected").val().toString() == "1") { // CHECK
                $("#tdCheck").show();
                $("#lblCheck").text("* Check #");
                if ($("#lstContributionName option:selected").val().toString() == "14") {
                    $("#lblExplanation").text("* Explanation");
                }
                else {
                    $("#lblExplanation").text("Explanation");

                    $m("label[for=txtExplanationSchedFIE24Contr]").text('');
                    $m("#txtExplanationSchedFIE24Contr").removeClass("error");
                }
            }
            else if ($("#lstMethod option:selected").val().toString() == "8") { // CHECK
                $("#tdCheck").show();
                $("#lblCheck").text("* Money Order #");
                if ($("#lstContributionName option:selected").val().toString() == "14") {
                    $("#lblExplanation").text("* Explanation");
                }
                else {
                    $("#lblExplanation").text("Explanation");

                    $m("label[for=txtExplanation]").text('');
                    $m("#txtExplanation").removeClass("error");
                }
            }
            else if ($("#lstMethod option:selected").val().toString() == "7") { // OTHER
                // EXPLANATION MANADATORY
                $("#lblExplanation").text("* Explanation");
                $("#tdCheck").hide();
            }
            else {
                $("#lblExplanation").text("Explanation");
                $("#tdCheck").hide();

                $m("label[for=txtExplanationSchedFIE24Contr]").text('');
                $m("#txtExplanationSchedFIE24Contr").removeClass("error");
            }

            if ($("#lstContributionName option:selected").val().toString() == "14") {
                $("#lblExplanation").text("* Explanation");
            }

            $m("label[for=txtCheck]").text('');
            $m("#txtCheck").removeClass("error");
        });
        // Method Change
        // ======================================================================================================================================

        // ======================================================================================================================================
        // CONTRIBUTOR TYPE CODE CHANGE
        $("#lstContributionName").change(function () {

            $("#dvErrorlstContrCode").hide();
            $("#lstContributionName").removeClass("ui-state-error");

            $("#txtContributorOccupation").val("");
            $("#txtContributorEmployer").val("");

            var selectedlstContributionName = $("#lstContributionName option:selected").val().toString();

            //if (selectedlstContributionName == "2") {
            //    ShowDialogBox('EFS', "Schedule A (Family Members): The election limit for family members is an aggregate limit from all of the candidate's family (defined as the candidate's child, parent, grandparent, brother, sister, and spouses of any such persons). (EL 14 - 114(1)(a).)", 'Ok', '');
            //}

            if ($("#lstMethod option:selected").val().toString() == "7") {
                $("#lblExplanation").text("* Explanation");
            }
            else {
                if ($("#lstMethod option:selected").val().toString() == "1") {
                    $("#lblExplanation").text("Explanation");
                }
                else {
                    $("#lblExplanation").text("Explanation");
                }
            }
            if (selectedlstContributionName != "0") {
                if (selectedlstContributionName == "5") {

                    //SHOW/HIDE FIELDS
                    //$("#tdPartnershipName").show("slow");
                    //SHOW/HIDE FIELDS
                    $("#tdFirstName").hide("slow");
                    $("#tdMI").hide("slow");
                    $("#tdLastName").hide("slow");
                    //SHOW/HIDE FIELDS

                    // Clear Values
                    //$("#txtPartnerShipName").val("");
                    $("#txtFirstName").val("");
                    $("#txtMI").val("");
                    $("#txtLastName").val("");

                    $m("label[for=txtFirstName]").text('');
                    $m("#txtFirstName").removeClass("error");

                    $m("label[for=txtMI]").text('');
                    $m("#txtMI").removeClass("error");

                    $m("label[for=txtLastName]").text('');
                    $m("#txtLastName").removeClass("error");

                    // ADDED DEFECT: 4112 ON 06.25.2021.
                    $("#tdContributorOccupation").hide();
                    $("#tdContributorEmployer").hide();

                    $("#txtContributorOccupation").val("");
                    $("#txtContributorEmployer").val("");

                    $("#tdRContributions").hide();
                    $("#lstRContributions")[0].selectedIndex = 2;
                    $("#tdEmployer").hide();
                    $("#tdOccupation").hide();
                    $("#divContStreetAddress").hide();
                    $("#divContCity").hide();
                    $("#divContState").hide();
                    $("#divContZip5").hide();
                }
                else { // Other than Partnership, including LLps
                    // ADDED DEFECT: 4112 ON 06.25.2021.
                    $("#tdContributorOccupation").show();
                    $("#tdContributorEmployer").show();

                    //SHOW/HIDE FIELDS
                    //$("#tdPartnershipName").hide("slow");
                    //SHOW/HIDE FIELDS
                    $("#tdFirstName").show("slow");
                    $("#tdMI").show("slow");
                    $("#tdLastName").show("slow");
                    //SHOW/HIDE FIELDS

                    // Clear Values
                    //$("#txtPartnerShipName").val("");
                    $("#txtFirstName").val("");
                    $("#txtMI").val("");
                    $("#txtLastName").val("");

                    $m("label[for=txtFirstName]").text('');
                    $m("#txtFirstName").removeClass("error");

                    $m("label[for=txtMI]").text('');
                    $m("#txtMI").removeClass("error");

                    $m("label[for=txtLastName]").text('');
                    $m("#txtLastName").removeClass("error");

                    //$m("label[for=txtPartnerShipName]").text('');
                    //$m("#txtPartnerShipName").removeClass("error");
                    $("#tdRContributions").show();
                    $("#lstRContributions")[0].selectedIndex = 2;
                    $("#tdEmployer").hide();
                    $("#tdOccupation").hide();
                    $("#divContStreetAddress").hide();
                    $("#divContCity").hide();
                    $("#divContState").hide();
                    $("#divContZip5").hide();
                }

                if (selectedlstContributionName == "14") {
                    $("#lblExplanation").text("* Explanation");
                }
            }
            else {
                //SHOW/HIDE FIELDS
                //$("#tdPartnershipName").hide("slow");
                //SHOW/HIDE FIELDS
                $("#tdFirstName").show("slow");
                $("#tdMI").show("slow");
                $("#tdLastName").show("slow");
                //SHOW/HIDE FIELDS

                // Clear Values
                //$("#txtPartnerShipName").val("");
                $("#txtFirstName").val("");
                $("#txtMI").val("");
                $("#txtLastName").val("");

                $m("label[for=txtFirstName]").text('');
                $m("#txtFirstName").removeClass("error");

                $m("label[for=txtMI]").text('');
                $m("#txtMI").removeClass("error");

                $m("label[for=txtLastName]").text('');
                $m("#txtLastName").removeClass("error");

                //$m("label[for=txtPartnerShipName]").text('');
                //$m("#txtPartnerShipName").removeClass("error");

                $("#tdRContributions").show();
                $("#lstRContributions")[0].selectedIndex = 2;
                $("#tdEmployer").hide();
                $("#tdOccupation").hide();
                $("#divContStreetAddress").hide();
                $("#divContCity").hide();
                $("#divContState").hide();
                $("#divContZip5").hide();
            }
        });
        // CONTRIBUTOR TYPE CODE CHANGE
        // ======================================================================================================================================

        // ======================================================================================================================================
        // BUTTON CLEAR DIALOGBOX.
        $("#btnClearDialog").click(function () {

            sessionStorage.setItem("CountryVal", $("#txtCountry").val().toString());
            var lstContributionNameVal = $m("#lstContributionName option:selected").text();

            var validator = $m("#DialogBoxSchedAIEForm").validate();
            validator.resetForm();  // clear out the validation errors
            $m("#DialogBoxSchedAIEForm")[0].reset();   // clear out the form data

            if (sessionStorage.getItem("UpdateFlagSchedA24HNotice").toString() != "Yes") { // Add New transactions

                //HIDE/SHOW THE FIELDS.
                //$("#tdPartnershipName").hide();
                //HIDE/SHOW THE FIELDS.
                $("#tdFirstName").show();
                $("#tdMI").show();
                $("#tdLastName").show();

                $("#tdCheck").hide();
                $("#lstMethod")[0].selectedIndex = 0;
                $("#lstRContributions")[0].selectedIndex = 2;
                $("#tdEmployer").hide();
                $("#tdOccupation").hide();
                $("#divContStreetAddress").hide();
                $("#divContCity").hide();
                $("#divContState").hide();
                $("#divContZip5").hide();
                $("#lstMethod")[0].selectedIndex = 0;
                $("#tdRContributions").show();
                $("#lstInDistrict")[0].selectedIndex = 0;
                $("#lstMinor")[0].selectedIndex = 1;
                $("#lstVendor")[0].selectedIndex = 1;
                $("#lstLobbyist")[0].selectedIndex = 1;

                //$("#lstItemized").prop("disabled", true);

                $("#lblExplanation").text("Explanation");

                $("#txtCountry").val("United States");
                $("#txtCountry").prop("disabled", true);
                $("#chkCountry").prop('checked', false);
                $("#txtState").prop('maxLength', '2');

                $("#txtCurrentDateWCS").blur();
                $("#txtZipCode").blur();
                $("#txtAmtABC").blur();
            }
            else { // Edit Transactions

                // ITEMIZED TRANSACTION EDIT
                $("#txtCurrentDateWCS").blur();
                $("#txtAmtABC").blur();

                //$("#lstItemized").prop("disabled", true);

                $("#lstMethod")[0].selectedIndex = 0;
                $("#tdCheck").hide();

                $("#lblExplanation").text("Explanation");

                $("#txtCountry").val("United States");
                $("#txtCountry").prop("disabled", true);
                $("#chkCountry").prop('checked', false);
                $("#txtState").prop('maxLength', '2');
                $("#txtZipCode").blur();

                $("#lstRContributions")[0].selectedIndex = 2;
                $("#tdEmployer").hide();
                $("#tdOccupation").hide();
                $("#divContStreetAddress").hide();
                $("#divContCity").hide();
                $("#divContState").hide();
                $("#divContZip5").hide();

                $("#lstInDistrict")[0].selectedIndex = 0;
                $("#lstMinor")[0].selectedIndex = 1;
                $("#lstVendor")[0].selectedIndex = 1;
                $("#lstLobbyist")[0].selectedIndex = 1;

                $m("#lstContributionName option").each(function () {
                    if ($(this).text() == lstContributionNameVal.toString()) {
                        $(this).prop('selected', true).trigger('change');
                    }
                });
            }
        });
        // BUTTON CLEAR DIALOGBOX.
        // ======================================================================================================================================

        // ======================================================================================================================================
        // BUTTON SAVE 24-HOUR NOTICE SCHEDULE A TRANSACTION DATA.
        $m("#btnSaveSchedAIEWeeklyContr").click(function () {
            //$("#divLoading").show();
            // Validation Succuss then Insert Record.
            $m("#DialogBoxSchedAIEForm").valid();
            if ($m("#DialogBoxSchedAIEForm").valid()) { // JQuery Validation
                ///$m("#btnSaveSchedAIEWeeklyContr").prop('disabled', true);

                var valid = true;
                //if ($("#lstContributionName option:selected").val() != "5") {
                if ($m("#lstRContributions option:selected").text() == "Yes") {
                    if ($m("#txtEmployerPCFB").val() == "" ||
                        $m("#txtOccupationPCFB").val() == "" ||
                        $m("#txtContStreetName").val() == "" ||
                        $m("#txtContCity").val() == "" ||
                        $m("#txtContState").val() == "" ||
                        $m("#txtContZipCode").val() == "") {
                        valid = false;
                    }
                }
                //}
                if (valid == false) {
                    // Get confirmation the DialogBox or Not.
                    var resultsCloseSchedA = "You have reported a contribution over $100 without Contributor Address, Occupation, Employer and Employer Address. Failure to provide Contributor Address, Occupation, Employer and Employer Address may be cited as a Deficiency by Compliance Review staff.";
                    $m('#modal_dialog').text(resultsCloseSchedA);
                    $m("#modal_dialog").dialog({
                        resizable: false,
                        modal: true,
                        width: '400px',
                        height: 'auto',
                        bgiframe: false,
                        closeOnEscape: false,
                        open: function (event, ui) { hideDialogXButton(this); },
                        buttons: {
                            "OK": function () {
                                $m(this).dialog("close");
                                $("#btnSaveSchedAIEWeeklyContr").prop("disabled", true);
                                $("#divLoading").show();
                                // INSERT
                                $.post("@Url.Content("~/WeeklyClaimSubmission/SaveFilingTransContrMonetaryData/")", {
                                    txtFilerId: $("#txtFilerID").val(),
                                    lstElectionCycle: $("#lstElectionCycle option:selected").text(),
                                    lstElectionCycleId: $("#lstElectionCycle option:selected").val(),
                                    lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                                    lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                                    lstElectionType: $("#lstElectionType option:selected").val(),
                                    lstElectionDate: $("#lstElectionDate option:selected").text(),
                                    lstElectionDateId: $("#lstElectionDate option:selected").val(),
                                    lstTransactionType: "1",
                                    txtDateRcvd: $m("#txtCurrentDateWCS").val().toString(),
                                    lstContributionName: $("#lstContributionName option:selected").val(),
                                    txtPartnerShipName: "",
                                    txtFirstName: $m("#txtFirstName").val(),
                                    txtMI: $m("#txtMI").val(),
                                    txtLastName: $m("#txtLastName").val(),
                                    txtStreetName: $m("#txtStreetName").val(),
                                    txtCity: $m("#txtCity").val(),
                                    txtState: $m("#txtState").val(),
                                    txtZipCode: $m("#txtZipCode").val(),
                                    lstMethod: $m("#lstMethod option:selected").val(),
                                    txtCheck: $m("#txtCheck").val(),
                                    txtAmt: $m("#txtAmtABC").val(),
                                    txtExplanation: $m("#txtExplanation").val(),
                                    lstItemized: "",
                                    txtCountry: $m("#txtCountry").val(),
                                    txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
                                    chkCountry: $('#chkCountry').is(':checked').toString(),
                                    validateSchedCCTC: "",
                                    lstFilingDate: sessionStorage.getItem("FilingDateIEWeekly").toString(),
                                    txtReportPeriodDatesTo: sessionStorage.getItem("FilingDateIEWeekly").toString(),
                                    lstResigTermType: "",
                                    lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
                                    lstIsClaim: "Yes",
                                    lstInDistrict: $m("#lstInDistrict option:selected").text(),
                                    lstMinor: $m("#lstMinor option:selected").text(),
                                    lstVendor: $m("#lstVendor option:selected").text(),
                                    lstLobbyist: $m("#lstLobbyist option:selected").text(),
                                    txtEmployerPCFB: $m("#txtEmployerPCFB").val(),
                                    txtOccupationPCFB: $m("#txtOccupationPCFB").val(),
                                    txtContStreetName: $m("#txtContStreetName").val(),
                                    txtContCity: $m("#txtContCity").val(),
                                    txtContState: $m("#txtContState").val(),
                                    txtContZipCode: $m("#txtContZipCode").val(),
                                    lstRContributions: $m("#lstRContributions option:selected").text()
                                }, function (results) {
                                    if (results.Errors == null) {
                                        if (results == "Custom Error") {
                                            $("#divLoading").hide();
                                            ShowDialogBox('EFS', 'System Error Found. Please try again.', 'Ok', '');
                                            window.location.reload();
                                        }
                                        else {
                                            if (results == "0") {
                                                $("#divLoading").hide();
                                                ShowDialogBox('EFS', 'System Error Found. Please try again.', 'Ok', '');
                                                window.location.reload();
                                            }
                                            else {
                                                results = "Custom Error";
                                                $("#lstItemized").focus();

                                                ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');
                                                // Data Added Sucussfully.
                                                window.status = "Transaction saved successfully";
                                                //New feature. Always refresh the grid when save is successful.
                                               LoadData();

                                                var validator = $m("#DialogBoxSchedAIEForm").validate();
                                                validator.resetForm();  // clear out the validation errors
                                                $m("#DialogBoxSchedAIEForm")[0].reset();// clear out the form data

                                                ResetDialogBoxSchedAFormDefaultFields();

                                                $("#lstRContributions")[0].selectedIndex = 2;
                                                $("#tdEmployer").hide();
                                                $("#tdOccupation").hide();
                                                $("#divContStreetAddress").hide();
                                                $("#divContCity").hide();
                                                $("#divContState").hide();
                                                $("#divContZip5").hide();

                                                $("#lstContributionName")[0].selectedIndex = 0;
                                                $("#lstMethod")[0].selectedIndex = 0;
                                                $("#lblExplanation").text("Explanation");

                                                $m("label[for=txtFirstName]").text('');
                                                $m("#txtFirstName").removeClass("error");

                                                $m("label[for=txtLastName]").text('');
                                                $m("#txtLastName").removeClass("error");

                                                $("#lstInDistrict")[0].selectedIndex = 0;
                                                $("#lstMinor")[0].selectedIndex = 1;
                                                $("#lstVendor")[0].selectedIndex = 1;
                                                $("#lstLobbyist")[0].selectedIndex = 1;

                                                var internalCommonHide = function () {
                                                    $m("#divStreetAddress").show("slow");
                                                    $m("#divCity").show("slow");
                                                    $m("#divState").show("slow");
                                                    $m("#divState").show("slow");
                                                    $m("#divZip5").show("slow");
                                                    $m("#tdMethod").show("slow");
                                                    $m("#tAmt").show("slow");
                                                    $m("#tdExplanation").show("slow");
                                                    $m("#tdCountryContributionChk").show("slow");
                                                    $m("#tdCountryContributionTxt").show("slow");
                                                    $m("#tdCheck").hide("slow");
                                                }

                                                internalCommonHide();
                                                // show/hide based on Transaction Type
                                                $m("#tdContributionName").show("slow");
                                                $m("#tdFirstName").show("slow");
                                                $m("#tdMI").show("slow");
                                                $m("#tdLastName").show("slow");
                                                //$m("#tdPartnershipName").hide("slow");
                                                $("#btnSaveSchedAIEWeeklyContr").prop("disabled", false);
                                            }
                                        }
                                    }
                                    else if (results.Errors.length >= 0) {
                                        $("#divLoading").hide();
                                        ClearServerSideErrors(); // Server Side Validation Clear
                                        AppendCustomErrorLabels(results.Errors);
                                    }
                                });
                            },
                            "Cancel": function () {
                                // confirm close
                                $m(this).dialog("close");
                            }
                        }
                    });
                } else {
                    // INSERT
                    $("#btnSaveSchedAIEWeeklyContr").prop("disabled", true);
                    $.post("@Url.Content("~/WeeklyClaimSubmission/SaveFilingTransContrMonetaryData/")", {
                        txtFilerId: $("#txtFilerID").val(),
                        lstElectionCycle: $("#lstElectionCycle option:selected").text(),
                        lstElectionCycleId: $("#lstElectionCycle option:selected").val(),
                        lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                        lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                        lstElectionType: $("#lstElectionType option:selected").val(),
                        lstElectionDate: $("#lstElectionDate option:selected").text(),
                        lstElectionDateId: $("#lstElectionDate option:selected").val(),
                        lstTransactionType: "1",
                        txtDateRcvd: $m("#txtCurrentDateWCS").val().toString(),
                        lstContributionName: $("#lstContributionName option:selected").val(),
                        txtPartnerShipName: "",
                        txtFirstName: $m("#txtFirstName").val(),
                        txtMI: $m("#txtMI").val(),
                        txtLastName: $m("#txtLastName").val(),
                        txtStreetName: $m("#txtStreetName").val(),
                        txtCity: $m("#txtCity").val(),
                        txtState: $m("#txtState").val(),
                        txtZipCode: $m("#txtZipCode").val(),
                        lstMethod: $m("#lstMethod option:selected").val(),
                        txtCheck: $m("#txtCheck").val(),
                        txtAmt: $m("#txtAmtABC").val(),
                        txtExplanation: $m("#txtExplanation").val(),
                        lstItemized: "",
                        txtCountry: $m("#txtCountry").val(),
                        txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
                        chkCountry: $('#chkCountry').is(':checked').toString(),
                        validateSchedCCTC: "",
                        lstFilingDate: sessionStorage.getItem("FilingDateIEWeekly").toString(),
                        txtReportPeriodDatesTo: sessionStorage.getItem("FilingDateIEWeekly").toString(),
                        lstResigTermType: "",
                        lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
                        lstIsClaim: "Yes",
                        lstInDistrict: $m("#lstInDistrict option:selected").text(),
                        lstMinor: $m("#lstMinor option:selected").text(),
                        lstVendor: $m("#lstVendor option:selected").text(),
                        lstLobbyist: $m("#lstLobbyist option:selected").text(),
                        txtEmployerPCFB: $m("#txtEmployerPCFB").val(),
                        txtOccupationPCFB: $m("#txtOccupationPCFB").val(),
                        txtContStreetName: $m("#txtContStreetName").val(),
                        txtContCity: $m("#txtContCity").val(),
                        txtContState: $m("#txtContState").val(),
                        txtContZipCode: $m("#txtContZipCode").val(),
                        lstRContributions: $m("#lstRContributions option:selected").text()
                    }, function (results) {
                        if (results.Errors == null) {
                            if (results == "Custom Error") {
                                $("#divLoading").hide();
                                ShowDialogBox('EFS', 'System Error Found. Please try again.', 'Ok', '');
                                window.location.reload();
                            }
                            else {
                                if (results == "0") {
                                    $("#divLoading").hide();
                                    ShowDialogBox('EFS', 'System Error Found. Please try again.', 'Ok', '');
                                    window.location.reload();
                                }
                                else {
                                    results = "Custom Error";
                                    $("#lstItemized").focus();

                                    ShowDialogBox('EFS', 'Transaction saved successfully', 'Ok', '');
                                    // Data Added Sucussfully.
                                    window.status = "Transaction saved successfully";
                                    //New feature. Always refresh the grid when save is successful.
                                    LoadData();

                                    var validator = $m("#DialogBoxSchedAIEForm").validate();
                                    validator.resetForm();  // clear out the validation errors
                                    $m("#DialogBoxSchedAIEForm")[0].reset();// clear out the form data

                                    ResetDialogBoxSchedAFormDefaultFields();

                                    $("#lstRContributions")[0].selectedIndex = 2;
                                    $("#tdEmployer").hide();
                                    $("#tdOccupation").hide();
                                    $("#divContStreetAddress").hide();
                                    $("#divContCity").hide();
                                    $("#divContState").hide();
                                    $("#divContZip5").hide();

                                    $("#lstContributionName")[0].selectedIndex = 0;
                                    $("#lstMethod")[0].selectedIndex = 0;
                                    $("#lblExplanation").text("Explanation");

                                    $m("label[for=txtFirstName]").text('');
                                    $m("#txtFirstName").removeClass("error");

                                    $m("label[for=txtLastName]").text('');
                                    $m("#txtLastName").removeClass("error");

                                    $("#lstInDistrict")[0].selectedIndex = 0;
                                    $("#lstMinor")[0].selectedIndex = 1;
                                    $("#lstVendor")[0].selectedIndex = 1;
                                    $("#lstLobbyist")[0].selectedIndex = 1;

                                    var internalCommonHide = function () {
                                        $m("#divStreetAddress").show("slow");
                                        $m("#divCity").show("slow");
                                        $m("#divState").show("slow");
                                        $m("#divState").show("slow");
                                        $m("#divZip5").show("slow");
                                        $m("#tdMethod").show("slow");
                                        $m("#tAmt").show("slow");
                                        $m("#tdExplanation").show("slow");
                                        $m("#tdCountryContributionChk").show("slow");
                                        $m("#tdCountryContributionTxt").show("slow");
                                        $m("#tdCheck").hide("slow");
                                    }

                                    internalCommonHide();
                                    // show/hide based on Transaction Type
                                    $m("#tdContributionName").show("slow");
                                    $m("#tdFirstName").show("slow");
                                    $m("#tdMI").show("slow");
                                    $m("#tdLastName").show("slow");
                                    //$m("#tdPartnershipName").hide("slow");
                                    $("#btnSaveSchedAIEWeeklyContr").prop("disabled", false);
                                }
                            }
                        }
                        else if (results.Errors.length >= 0) {
                            $("#divLoading").hide();
                            ClearServerSideErrors(); // Server Side Validation Clear
                            AppendCustomErrorLabels(results.Errors);
                        }
                    });
                }
            }
        });
        // BUTTON SAVE 24-HOUR NOTICE SCHEDULE A TRANSACTION DATA.
        // ======================================================================================================================================

        // ======================================================================================================================================
        // BUTTON UPDATE 24-HOUR NOTICE SCHEDULE A TRANSACTION DATA.
        $m("#btnUpdateSchedAIEWeeklyContr").click(function () {
            // Validation Succuss then Insert Record.
            $m("#DialogBoxSchedAIEForm").valid();
            if ($m("#DialogBoxSchedAIEForm").valid()) { // JQuery Validation
                $m("#divLoading").show();
                // UPDATE TRANSACTION IF NOT SUBMITTED
                // CREATE NEW TRANSACTION IF SUBMITTED TRANSACTION UPDATED.
                $.post("@Url.Content("~/WeeklyClaimSubmission/UpdateFlngTransMonetaryContrData/")", {
                    strTransNumber: sessionStorage.getItem("FilingTransId").toString(),
                    strFilingEntId: sessionStorage.getItem("FilingEntityId").toString(),
                    lstContributorName: $m("#lstContributionName option:selected").val(),
                    strSubmissionDate: sessionStorage.getItem("SubmittsionDate").toString(),
                    txtDateRcvd: $m("#txtCurrentDateWCS").val(),
                    txtCheck: $m("#txtCheck").val(),
                    lstMethod: $m("#lstMethod option:selected").val(),
                    txtAmt: $m("#txtAmtABC").val(),
                    txtExplanation: $m("#txtExplanation").val(),
                    txtPartnerShipName: "",
                    txtFirstName: $m("#txtFirstName").val(),
                    txtMI: $m("#txtMI").val(),
                    txtLastName: $m("#txtLastName").val(),
                    txtStreetName: $m("#txtStreetName").val(),
                    txtCity: $m("#txtCity").val(),
                    txtState: $m("#txtState").val(),
                    txtZipCode: $m("#txtZipCode").val(),
                    txtCountry: $m("#txtCountry").val(),
                    chkCountry: $('#chkCountry').is(':checked').toString(),
                    txtFilerId: $m("#txtFilerID").val(),
                    lstIsClaim: "Yes",
                    lstInDistrict: $m("#lstInDistrict option:selected").text(),
                    lstMinor: $m("#lstMinor option:selected").text(),
                    lstVendor: $m("#lstVendor option:selected").text(),
                    lstLobbyist: $m("#lstLobbyist option:selected").text(),
                    txtEmployerPCFB: $m("#txtEmployerPCFB").val(),
                    txtOccupationPCFB: $m("#txtOccupationPCFB").val(),
                    txtContStreetName: $m("#txtContStreetName").val(),
                    txtContCity: $m("#txtContCity").val(),
                    txtContState: $m("#txtContState").val(),
                    txtContZipCode: $m("#txtContZipCode").val(),
                    lstRContributions: $m("#lstRContributions option:selected").text()
                }, function (results) {
                    if (results.Errors == null) {
                        // Close the DialogBox
                        dialog_Sched_A_IE.dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                        window.status = "Transaction saved successfully";
                        //var treasInfoChanged = false;
                        //$m("#divLoading").hide();
                        ShowDialogBox("EFS", 'Transaction saved successfully', 'Ok', '');

                        // FOR SELECT ROW SELECTED OR NOT.
                        sessionStorage.setItem("EditYesNo", "No");
                        $("#chkRegenerateMain").prop('checked', false);
                        //Refresh the grid data
                        LoadData();
                    }
                    else if (results.Errors.length >= 0) {
                        // Clear Server Side Validation
                        ClearServerSideErrors();

                        for (var i = 0; i < results.Errors.length; i++) {
                            if (results.Errors[i].Key == "txtCurrentDateWCS") {
                                $("#txtCurrentDateWCS_validate").append('<label for="txtCurrentDateWCS" class="error">' + results.Errors[i].Value + '</label>');
                            }
                            if (results.Errors[i].Key == "txtTreasurerOccupation") {
                                $("#txtTreasurerOccupation_validate").append('<label for="txtTreasurerOccupation" class="error">' + results.Errors[i].Value + '</label>');
                            }
                            if (results.Errors[i].Key == "txtTreasurerEmployer") {
                                $("#txtTreasurerEmployer_validate").append('<label for="txtTreasurerEmployer" class="error">' + results.Errors[i].Value + '</label>');
                            }
                            if (results.Errors[i].Key == "txtStreetNameTreasurer") {
                                $("#txtStreetNameTreasurer_validate").append('<label for="txtStreetNameTreasurer" class="error">' + results.Errors[i].Value + '</label>');
                            }
                            if (results.Errors[i].Key == "txtCityTreasurer") {
                                $("#txtCityTreasurer_validate").append('<label for="txtCityTreasurer" class="error">' + results.Errors[i].Value + '</label>');
                            }
                            if (results.Errors[i].Key == "txtStateTreasurer") {
                                $("#txtStateTreasurer_validate").append('<label for="txtStateTreasurer" class="error">' + results.Errors[i].Value + '</label>');
                            }
                            if (results.Errors[i].Key == "txtZipCodeTreasurer") {
                                $("#txtZipCodeTreasurer_validate").append('<label for="txtZipCodeTreasurer" class="error">' + results.Errors[i].Value + '</label>');
                            }
                            //if (results.Errors[i].Key == "txtPartnerShipName") {
                            //    $("#txtPartnerShipName_validate").append('<label for="txtPartnerShipName" class="error">' + results.Errors[i].Value + '</label>');
                            //}
                            if (results.Errors[i].Key == "txtFirstName") {
                                $("#txtFirstName_validate").append('<label for="txtFirstName" class="error">' + results.Errors[i].Value + '</label>');
                            }
                            if (results.Errors[i].Key == "txtMI") {
                                $("#txtMI_validate").append('<label for="txtMI" class="error">' + results.Errors[i].Value + '</label>');
                            }
                            if (results.Errors[i].Key == "txtLastName") {
                                $("#txtLastName_validate").append('<label for="txtLastName" class="error">' + results.Errors[i].Value + '</label>');
                            }
                            if (results.Errors[i].Key == "txtContributorOccupation") {
                                $("#txtContributorOccupation_validate").append('<label for="txtContributorOccupation" class="error">' + results.Errors[i].Value + '</label>');
                            }
                            if (results.Errors[i].Key == "txtContributorEmployer") {
                                $("#txtContributorEmployer_validate").append('<label for="txtContributorEmployer" class="error">' + results.Errors[i].Value + '</label>');
                            }
                            if (results.Errors[i].Key == "txtCountry") {
                                $("#txtCountry_validate").append('<label for="txtCountry" class="error">' + results.Errors[i].Value + '</label>');
                            }
                            if (results.Errors[i].Key == "txtStreetName") {
                                $("#txtStreetName_validate").append('<label for="txtStreetName" class="error">' + results.Errors[i].Value + '</label>');
                            }
                            if (results.Errors[i].Key == "txtCity") {
                                $("#txtCity_validate").append('<label for="txtCity" class="error">' + results.Errors[i].Value + '</label>');
                            }
                            if (results.Errors[i].Key == "txtState") {
                                $("#txtState_validate").append('<label for="txtState" class="error">' + results.Errors[i].Value + '</label>');
                            }
                            if (results.Errors[i].Key == "txtZipCode") {
                                $("#txtZipCode_validate").append('<label for="txtZipCode" class="error">' + results.Errors[i].Value + '</label>');
                            }
                            if (results.Errors[i].Key == "txtCheck") {
                                $("#txtCheck_validate").append('<label for="txtCheck" class="error">' + results.Errors[i].Value + '</label>');
                            }
                            if (results.Errors[i].Key == "lstMethod") {
                                $("#lstMethod_validate").append('<label for="lstMethod" class="error">' + results.Errors[i].Value + '</label>');
                            }
                            if (results.Errors[i].Key == "txtAmt") {
                                $("#txtAmtABC_validate").append('<label for="txtAmt" class="error">' + results.Errors[i].Value + '</label>');
                            }
                        }
                    }
                }).always(function () {
                    $m("#divLoading").hide();
                });
            }
        });
        // BUTTON UPDATE 24-HOUR NOTICE SCHEDULE A TRANSACTION DATA.
        // ======================================================================================================================================

        /**
         * Resets the fields default fields for DialogBoxSchedAForm
         */
        function ResetDialogBoxSchedAFormDefaultFields() {
            $("#txtCountry").val("United States");
            $("#txtCountry").prop("disabled", true);
            $("#chkCountry").prop('checked', false);
            $("#txtState").prop('maxLength', '2');
            $("#txtCurrentDateWCS").blur();
            $("#txtZipCode").blur();
            $("#txtAmtABC").blur();
        }

        $("#lstRContributions").change(function () {
            if ($("#lstRContributions option:selected").val().toString() == "0") {
                $("#tdEmployer").show();
                $("#tdOccupation").show();
                $("#divContStreetAddress").show();
                $("#divContCity").show();
                $("#divContState").show();
                $("#divContZip5").show();
                //$m("#txtEmployerPCFB").val("");
                //$m("#txtOccupationPCFB").val("");
                //$m("#txtContStreetName").val("");
                //$m("#txtContCity").val("");
                //$m("#txtContState").val("");
                //$m("#txtContZipCode").val("");
            }
            else {
                $("#tdEmployer").hide();
                $("#tdOccupation").hide();
                $("#divContStreetAddress").hide();
                $("#divContCity").hide();
                $("#divContState").hide();
                $("#divContZip5").hide();
                $m("#txtEmployerPCFB").val("");
                $m("#txtOccupationPCFB").val("");
                $m("#txtContStreetName").val("");
                $m("#txtContCity").val("");
                $m("#txtContState").val("");
                $m("#txtContZipCode").val("");
            }
        });

        var form_original_data;


        // ======================================================================================================================================
        // BUTTON SUBMIT CLICK - SUBMIT THE SELECTED 24-HOUR NOTICE TRANSACTION.
        $m("#btnSubmitSchedAIEWeeklyContr").click(function () {

            var $table = tableFilingTransactions.table().node();
            var $chkbox_checked = $('tbody input[type="checkbox"]:checked', $table);
            var chkbox_select_all = $('thead input[name="chkRegenerateMain"]', $table).get(0);

            // If none of the checkboxes are checked
            if ($chkbox_checked.length === 0) {
                chkbox_select_all.checked = false;
                ShowDialogBox("EFS", 'A check box must be selected to submit the transaction', 'Ok', '');
            }
            else {

                var resultsDelete = false;

                resultsDelete = "Are you sure you want to submit the transaction(s)?";
                // DELETE.
                $m('#modal_dialog').text(resultsDelete);
                $m("#modal_dialog").dialog({
                    resizable: false,
                    width: '400px',
                    height: 'auto',
                    bgiframe: false,
                    modal: true,
                    closeOnEscape: false,
                    open: function (event, ui) { hideDialogXButton(this); },
                    buttons: {
                        "OK": function () {
                            // Close Confirm box
                            $m(this).dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.

                            $("#divLoading").show();

                            // Hide History Grid.
                            $("#divUCIETransactionsHistory").hide();

                            $.ajax({
                                url: "@Url.Content("~/WeeklyClaimSubmission/SubmitNonItemIEWeeklyContrSchedAData/")",
                                type: 'POST',
                                dataType: 'json',
                                data: JSON.stringify({
                                    strTransNumber: objCorresElecCandPetId
                                }),
                                contentType: 'application/json; charset=UTF-8',
                                error: function (xhr) {
                                    ShowDialogBox('Candidate Management', 'Error Inserting Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '', 'GoToAssetList', null);
                                },
                                success: function (results) {
                                    if (results == true) {

                                        //$.each(results, function (i, item) {
                                        //    if (item.ReturnValue) {

                                        window.status = "Transaction submitted successfully";
                                        ShowDialogBox('EFS', 'Transaction(s) submitted successfully. Eligible matching claim submission will be paid to eligible participating candidates on the next payment date.\n Transactions(s) will need to be reported on the next required disclosure report.', 'Ok', '');

                                        //if (item.ChildExists == "True") {
                                        //    ShowDialogBox('EFS', 'Amended transaction submitted successfully; this transaction must also be amended in the committee’s post-election campaign finance filing report and the report submitted as an amended report, if previously submitted.\nEligible matching claim submissions will be paid to eligible participating candidates on next applicable scheduled payment date.', 'Ok', '');
                                        //}
                                        //else if (item.ChildExists == "False") {
                                        //    ShowDialogBox('EFS', 'Transaction submitted successfully; Transaction will need to be reported on the next required itemized disclosure report.\nEligible matching claim submissions will be paid to eligible participating candidates on next applicable scheduled payment date.', 'Ok', '');
                                        //}

                                        //Refresh the main grid data
                                        LoadData();

                                        // SUBMIT BUTTON DISABLED.
                                        //$("#btnSubmitSchedAIEWeeklyContr").prop("disabled", true);
                                        $("#chkRegenerateMain").prop('checked', false);
                                        $("#divLoading").hide();
                                        //    }
                                        //});
                                    }
                                    else if (results.Errors.length >= 0) {
                                        // Clear Server Side Validation
                                        ClearServerSideErrors();

                                        for (var i = 0; i < results.Errors.length; i++) {
                                            if (results.Errors[i].Key == "txtCurrentDateWCS") {
                                                $("#txtCurrentDateWCS_validate").append('<label for="txtCurrentDateWCS" class="error">' + results.Errors[i].Value + '</label>');
                                            }
                                        }
                                    }
                                },
                                async: true,
                            });
                        },
                        "Cancel": function () {
                            sessionStorage.setItem("EditYesNo", "No");
                            $m(this).dialog("close");
                        }
                    }
                });


            }
        });
        // BUTTON SUBMIT CLICK - SUBMIT THE SELECTED 24-HOUR NOTICE TRANSACTION.
        // ======================================================================================================================================

        // ======================================================================================================================================
        // 24-HOUR NOTICE SCHEDULE 'A' TRANSACTION SELECTION.
        $m('#gridFilingTransIEWeeklyContribution tbody').on('click', 'tr', function (e) {
            //e.preventDefault();

            var scheduleId = tableFilingTransactions.cell(this, 1).data();  // Filing Schedule Id
            var flngTransId = tableFilingTransactions.cell(this, 2).data();  // Filing Transactions Id
            var flngEntityId = tableFilingTransactions.cell(this, 1).data();  // Filing Entity Id
            var submissionDate = tableFilingTransactions.cell(this, 8).data();  // Submission Date

            var selectedRowId = tableFilingTransactions.row(this).index();

            if (selectedRowId != undefined) {

                sessionStorage.setItem("SelectedRowId", selectedRowId);

                if (sessionStorage.getItem("EditYesNo").toString() == "No") {
                    //if (submissionDate != null) {
                    //    if (submissionDate.toString() == "") {
                    //        $("#btnSubmitSchedAIEWeeklyContr").prop("disabled", false);
                    //    }
                    //    else {
                    //        $("#btnSubmitSchedAIEWeeklyContr").prop("disabled", true);
                    //    }
                    //}
                    //else {
                    //    $("#btnSubmitSchedAIEWeeklyContr").prop("disabled", false);
                    //}

                    sessionStorage.setItem("SubmitTransId", flngTransId.toString());
                    if (submissionDate != null)
                        sessionStorage.setItem("SubmissionDate", submissionDate.toString());
                    else
                        sessionStorage.setItem("SubmissionDate", "");
                    sessionStorage.setItem("SubmitEntityId", flngEntityId.toString());

                    if ($(this).hasClass('selected')) {
                        //$(this).removeClass('selected');
                    }
                    else {
                        tableFilingTransactions.$('tr.selected').removeClass('selected');
                        $(this).addClass('selected');
                        // Bind Data
                    }

                    //$("#divUCIETransactionsHistory").hide();
                }
            }
        });
        // 24-HOUR NOTICE SCHEDULE 'A' TRANSACTION SELECTION.
        // ======================================================================================================================================

        // ======================================================================================================================================
        // EDIT 24-HOUR NOTICE TRANSACTIONS.
        $m('#gridFilingTransIEWeeklyContribution tbody').on('click', 'a.editor_edit_Sched_A_IEWeeklyContr', function (e) {
            e.preventDefault();
            sessionStorage.setItem("EditYesNo", "Yes");
            $("#divUCIETransactionsHistory").hide();
            $("#btnUpdateSchedAIEWeeklyContr").show();
            $("#btnSaveSchedAIEWeeklyContr").hide();
            sessionStorage.setItem("UpdateFlagSchedA24HNotice", "Yes");

            // DON'T SELECT THE ROW WHEN EDIT THE TRANSACTIONS.
            //$("#btnSubmitSchedAIEWeeklyContr").prop("disabled", true);
            tableFilingTransactions.$('tr.selected').removeClass('selected');
            var data = tableFilingTransactions.row($(this).parents('tr')).data();
            dialog_Sched_A_IE.dialog("open");
            var validator = $m("#DialogBoxSchedAIEForm").validate();
            validator.resetForm();  // clear out the validation errors
            //$m("#DialogBoxSchedAIEForm")[0].reset();   // clear out the form data
            $("#lstInDistrict").focus();
            var selectedlstContributorCode = "";
            $m("#lstContributionName option").each(function () {
                if ($(this).text() == data[19].toString()) {
                    $(this).prop('selected', true).trigger('change');
                    selectedlstContributorCode = data[19].toString();
                }
            });
            $("#lstContributionName").prop("disabled", true);

            $m("#lstMethod option").each(function () {
                if ($(this).text() == data[25].toString()) {
                    $(this).prop('selected', true).trigger('change');
                }
            });

            sessionStorage.setItem("FilingTransId", data[2].toString());
            sessionStorage.setItem("FilingEntityId", data[1].toString());
            if (data[10] != null)
                sessionStorage.setItem("SubmittsionDate", data[9].toString());
            else
                sessionStorage.setItem("SubmittsionDate", "");

            $("#txtCurrentDateWCS").val(data[17].toString());
            $("#txtCurrentDateWCS").removeClass("watermarkHTMLTextBox");
            $("#txtStreetName").val(data[21].toString());
            $("#txtCity").val(data[22].toString());
            $("#txtState").val(data[23].toString());
            $("#txtZipCode").val(data[24].toString());
            $("#txtCountry").val(data[20].toString());
            if (data[20].toString() == "United States") {
                $("#chkCountry").prop('checked', false);
                $("#txtCountry").prop("disabled", true);
                $("#txtState").prop('maxLength', '2');
            }
            else { // Other Country
                $("#chkCountry").prop('checked', true);
                $("#txtCountry").prop("disabled", false);
                $("#txtState").prop('maxLength', '30');
                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                $m('#txtZipCode').attr("placeholder", "");
            }
            if (data[24].toString() != "") {
                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
            }
            else {
                $("#txtZipCode").addClass("watermarkHTMLTextBox");
                if (data[20].toString() == "United States") {
                    $("#txtZipCode").blur();
                }
            }
            if (data[25].toString() == "Check") {
                $("#tdCheck").show();
                $("#txtCheck").val(data[26].toString());
            }
            else if (data[25].toString() == "Money Order") {
                $("#tdCheck").show();
                $("#txtCheck").val(data[26].toString());
            }
            else {
                $("#tdCheck").hide();
            }

            var originalAmount = data[14].toString();
            $("#txtAmtABC").val(originalAmount);
            if ($("#txtAmtABC").val().toString() != "" || $("#txtAmtABC").val().toString() != "999999999.99") {
                $("#txtAmtABC").removeClass("watermarkHTMLTextBox");
            }

            if (data[25].toString() == "Other") {
                $("#lblExplanation").text("* Explanation");
            }
            else {
                $("#lblExplanation").text("Explanation");
            }

            $("#txtExplanation").val(data[27].toString());

            if ($("#lstContributionName option:selected").val().toString() == "5") {
                $("#tdEmployer").hide();
                $("#tdOccupation").hide();
                $("#divContStreetAddress").hide();
                $("#divContCity").hide();
                $("#divContState").hide();
                $("#divContZip5").hide();
            }
            else {
                $("#tdEmployer").show();
                $("#tdOccupation").show();
                $("#divContStreetAddress").show();
                $("#divContCity").show();
                $("#divContState").show();
                $("#divContZip5").show();
                $("#txtEmployerPCFB").val(data[35].toString());
                $("#txtOccupationPCFB").val(data[36].toString());
                $("#txtContStreetName").val(data[38].toString());
                $("#txtContCity").val(data[39].toString());
                $("#txtContState").val(data[40].toString());
                $("#txtContZipCode").val(data[41].toString());
            }

            $m("#lstInDistrict option").each(function () {
                if ($(this).text() == data[30].toString()) {
                    $(this).prop('selected', true).trigger('change');
                }
            });

            $m("#lstMinor option").each(function () {
                if ($(this).text() == data[31].toString()) {
                    $(this).prop('selected', true).trigger('change');
                }
            });

            $m("#lstVendor option").each(function () {
                if ($(this).text() == data[32].toString()) {
                    $(this).prop('selected', true).trigger('change');
                }
            });

            $m("#lstLobbyist option").each(function () {
                if ($(this).text() == data[33].toString()) {
                    $(this).prop('selected', true).trigger('change');
                }
            });

            $m("#lstRContributions option").each(function () {
                if ($(this).text() == data[34].toString()) {
                    $(this).prop('selected', true).trigger('change');
                }
            });

            if (selectedlstContributorCode == "Partnership, including LLPs") {

                // SHOW/HIDE FILEDS
                //$("#tdPartnershipName").show();

                // SHOW/HIDE FILEDS
                $("#tdFirstName").hide();
                $("#tdMI").hide();
                $("#tdLastName").hide();

                //$("#txtPartnerShipName").val(data[10].toString());
            }
            else {
                // SHOW/HIDE FILEDS
                //$("#tdPartnershipName").hide();

                // SHOW/HIDE FILEDS
                $("#tdFirstName").show();
                $("#tdMI").show();
                $("#tdLastName").show();

                $("#txtFirstName").val(data[11].toString());
                $("#txtMI").val(data[12].toString());
                $("#txtLastName").val(data[13].toString());
            }
        });
        // EDIT 24-HOUR NOTICE TRANSACTIONS.
        // ======================================================================================================================================

        // ======================================================================================================================================
        // DELETE 24-HOUR NOTICE TRANSACTIONS.
        $m('#gridFilingTransIEWeeklyContribution tbody').on('click', 'a.editor_remove_Sched_A_IEWeeklyContr', function (e) {
            e.preventDefault();
            var dataTrans = tableFilingTransactions.row($(this).parents('tr')).data();

            var resultsDelete = false;

            sessionStorage.setItem("EditYesNo", "Yes");

            $("#divUCIETransactionsHistory").hide();


            //if (dataTrans[2] != null) {
            //    if (dataTrans[2].toString() != "") {
            //        resultsDelete = "This action will delete all the previously submitted iterations (if available) as well. Are you sure you want to delete this transaction?";
            //    }
            //    else {
            //        resultsDelete = "Are you sure you want to delete this transaction?";
            //    }
            //}
            //else {
            //    resultsDelete = "Are you sure you want to delete this transaction?";
            //}
            resultsDelete = "Are you sure you want to delete this transaction?";
            // DELETE.
            $m('#modal_dialog').text(resultsDelete);
            $m("#modal_dialog").dialog({
                resizable: false,
                width: '400px',
                height: 'auto',
                bgiframe: false,
                modal: true,
                closeOnEscape: false,
                open: function (event, ui) { hideDialogXButton(this); },
                buttons: {
                    "OK": function () {
                        // Close Confirm box
                        $m(this).dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                        sessionStorage.setItem("EditYesNo", "No");

                        // DELETE TRANSACTION.
                        $.post("@Url.Content("~/WeeklyClaimSubmission/DeleteWeeklyClaimSubSchedA/")", {
                            strTransNumber: dataTrans[2].toString()
                        }, function (results) {

                            if (dataTrans[10] != null) {
                                if (dataTrans[10].toString() != "") {
                                    ShowDialogBox('EFS', 'Transaction deleted successfully; Deletion of the corresponding Itemized filing transaction (if available) will need to be done separately', 'Ok', '');
                                }
                                else {
                                    ShowDialogBox('EFS', 'Transaction deleted successfully', 'Ok', '');
                                }
                            }
                            else {
                                ShowDialogBox('EFS', 'Transaction deleted successfully', 'Ok', '');
                            }

                            window.status = "Transaction deleted successfully";

                            // Disable Submit Button.
                            //$("#btnSubmitSchedAIEWeeklyContr").prop("disabled", true);
                            //Refresh the main grid
                            LoadData();
                        });
                    },
                    "Cancel": function () {
                        sessionStorage.setItem("EditYesNo", "No");
                        $m(this).dialog("close");
                    }
                }
            });
        });
        // DELETE 24-HOUR NOTICE TRANSACTIONS.
        // ======================================================================================================================================

        var tableIETransHistory = '';

        // ======================================================================================================================================
        // HISTORY LINK BRING THE AMENDED TRANSACTIONS FOR SELECTED TRANSACTION.
        $m('#gridFilingTransIEWeeklyContribution tbody').on('click', 'a.editor_IEWeeklyContr_History', function (e) {
            e.preventDefault();

            // Show the Grid and bind the Grid.
            $("#divUCIETransactionsHistory").show();

            //sessionStorage.setItem("HistoryGridYN", "Yes");

            //sessionStorage.setItem("EditYesNo", "Yes");

            // DON'T HIGHLIGHT THE ROW WHEN CLICK ON HISTORY LINK.

            var dataTrans = tableFilingTransactions.row($(this).parents('tr')).data();

            sessionStorage.setItem("FilingTransIdHistory", dataTrans[2].toString());

            //$("#btnSubmitSchedAIEWeeklyContr").prop("disabled", true);
            //tableFilingTransactions.$('tr.selected').removeClass('selected');

            tableIETransHistory = $m('#gridIETransactionsHistory').DataTable({
                "bProcessing": true,
                "responsive": true,
                "deferRender": true,
                "retrieve": true,
                "columnDefs": [
                    {
                        "targets": [0, 1, 2, 3, 4, 5, 8, 26],
                        "visible": false,
                        "searchable": false
                    },
                ],
                "initComplete": function (settings, json) {
                    //Accessibility: Applies various Accessibility features to this dataTable.
                    makeDataTableAccessible($m('#gridIETransactionsHistory').DataTable());
                },
                "fnServerData": function (url, data, callback) {
                    $.ajax({
                        "url": "@Url.Content("~/WeeklyClaimSubmission/GetWeeklyClaimSubTransHistory/")",
                        "data": {
                            strTransNumber: sessionStorage.getItem("FilingTransIdHistory").toString()
                        },
                        "success": callback,
                        "dataType": "json",
                        "type": "POST",
                        "error": function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                        }
                    });
                }//,
                //"order": [[0, "desc"]]
            });
            $m('#gridIETransactionsHistory').DataTable().ajax.reload();
            tableIETransHistory.search('').columns().search('').draw();
            //tableIETransHistory.order([46, 'desc']).draw();
            tableIETransHistory.responsive.recalc();

            // TAKE THE PAGE TO DOWN GRID.
            $('html, body').animate({ scrollTop: $("#divUCIETransactionsHistory").offset().top }, 500);

        });
        // HISTORY LINK BRING THE AMENDED TRANSACTIONS FOR SELECTED TRANSACTION.
        // ======================================================================================================================================

        // ======================================================================================================================================
        // EDIT COMMON
        // Edit from Other Schedule functionality
        if (sessionStorage.getItem("EditFlag") != null) {
            if (sessionStorage.getItem("EditFlag").toString() == "True") {
                $("#divLoading").show();

                $("#lstTransactionTypeNonItem option").each(function () {
                    if ($(this).val() == sessionStorage.getItem("ScheduleId").toString()) {
                        $(this).prop("selected", true);
                    }
                });
                sessionStorage.setItem("lstTransactionTypeNonItem", $("#lstTransactionTypeNonItem option:selected").val());

                sessionStorage.setItem("EditYesNo", "Yes");

                $("#divUCIETransactionsHistory").hide();

                dialog_Sched_A_IE.dialog("open");

                $("#btnUpdateSchedAIEWeeklyContr").show();
                $("#btnSaveSchedAIEWeeklyContr").hide();

                sessionStorage.setItem("UpdateFlagSchedA24HNotice", "Yes");

                var validator = $m("#DialogBoxSchedAIEForm").validate();
                validator.resetForm();  // clear out the validation errors
                $m("#DialogBoxSchedAIEForm")[0].reset();   // clear out the form data

                $("#txtTreasurerOccupation").focus();

                // DON'T SELECT THE ROW WHEN EDIT THE TRANSACTIONS.
                $.post("@Url.Content("~/WeeklyClaimSubmission/GetEditTransactionData_WCS/")", {
                    strTransNumber: sessionStorage.getItem("FilingTransIdEdit").toString()
                }, function (resultsEditData) {
                    $.each(resultsEditData, function (i, item) {
                        // Bind Method Data
                        var options = {};
                        options.url = "@Url.Content("~/NonItemIEWeeklyContributionSchedA/GetPaymentMethodData/")";
                        options.type = "POST";
                        options.data = null;
                        options.dataType = "json";
                        options.contentType = "application/json";
                        options.success = function (resultsMethod) {
                            $("#lstMethod").empty();
                            for (var i = 0; i < resultsMethod.length; i++) {
                                $("#lstMethod").append("<option value='" + resultsMethod[i].Value + "'>" + resultsMethod[i].Text + "</option>");
                            }
                            // Set Method
                            if (item.PaymentTypeId.toString() != null || item.PaymentTypeId.toString() != "") {
                                $m("#lstMethod option")
                                    .filter(function () { return $m(this).val() == item.PaymentTypeId.toString(); })
                                    .attr("selected", "selected");
                            }

                            $m("#lstInDistrict option").each(function () {
                                if ($(this).text() == item.InDistrict) {
                                    $(this).prop('selected', true).trigger('change');
                                }
                            });

                            $m("#lstMinor option").each(function () {
                                if ($(this).text() == item.RMinor) {
                                    $(this).prop('selected', true).trigger('change');
                                }
                            });

                            $m("#lstVendor option").each(function () {
                                if ($(this).text() == item.RVendor) {
                                    $(this).prop('selected', true).trigger('change');
                                }
                            });

                            $m("#lstLobbyist option").each(function () {
                                if ($(this).text() == item.RLobbyist) {
                                    $(this).prop('selected', true).trigger('change');
                                }
                            });

                            $m("#lstRContributions option").each(function () {
                                if ($(this).text() == item.RContributions) {
                                    $(this).prop('selected', true).trigger('change');
                                }
                            });

                            $("#txtEmployerPCFB").val(item.TreasurerEmployer.toString());
                            $("#txtOccupationPCFB").val(item.TreasurerOccuptaion.toString());
                            $("#txtContStreetName").val(item.TreasurerStreetAddress.toString());
                            $("#txtContCity").val(item.TreasurerCity.toString());
                            $("#txtContState").val(item.TreasurerState.toString());
                            $("#txtContZipCode").val(item.TreasurerZip.toString());
                            $("#txtExplanation").val(item.TransExplanation.toString());
                            // ======================================================================================
                            // TREASURE INFORMATION.
                            sessionStorage.setItem("TreasOccupation", $("#txtTreasurerOccupation").val().toString());
                            sessionStorage.setItem("TreasEmployer", $("#txtTreasurerEmployer").val().toString());
                            sessionStorage.setItem("TreasStreetName", $("#txtStreetNameTreasurer").val().toString());
                            sessionStorage.setItem("TreasCity", $("#txtCityTreasurer").val().toString());
                            sessionStorage.setItem("TreasState", $("#txtStateTreasurer").val().toString());
                            sessionStorage.setItem("TreasZipCode", $("#txtZipCodeTreasurer").val().toString());
                            // TREASURE INFORMATION.
                            // ======================================================================================
                        };
                        options.error = function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                        };
                        $.ajax(options);

                        // Bind Contributor Type Code
                        var options = {};
                        options.url = "@Url.Content("~/WeeklyClaimSubmission/GetContributorCodeSchedA/")";
                        options.type = "POST";
                        options.data = null;
                        options.dataType = "json";
                        options.contentType = "application/json";
                        options.success = function (results) {
                            $("#lstContributionName").empty();
                            for (var i = 0; i < results.length; i++) {
                                $("#lstContributionName").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                            }
                            //Set Contribution Type Code
                            if (item.ContributorTypeId.toString() != null || item.ContributorTypeId.toString() != "") {
                                $m("#lstContributionName option")
                                    .filter(function () { return $m(this).val() == item.ContributorTypeId.toString(); })
                                    .attr('selected', 'selected');
                            }

                            // ======================================================================================
                            // TREASURE INFORMATION.
                            sessionStorage.setItem("TreasOccupation", $("#txtTreasurerOccupation").val().toString());
                            sessionStorage.setItem("TreasEmployer", $("#txtTreasurerEmployer").val().toString());
                            sessionStorage.setItem("TreasStreetName", $("#txtStreetNameTreasurer").val().toString());
                            sessionStorage.setItem("TreasCity", $("#txtCityTreasurer").val().toString());
                            sessionStorage.setItem("TreasState", $("#txtStateTreasurer").val().toString());
                            sessionStorage.setItem("TreasZipCode", $("#txtZipCodeTreasurer").val().toString());
                            // TREASURE INFORMATION.
                            // ======================================================================================
                        };
                        options.error = function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                        };
                        $.ajax(options);

                        $("#lstContributionName").prop("disabled", true);
                        var selectedlstContributorCode = item.ContributorTypeId.toString();

                        sessionStorage.setItem("FilingTransId", item.TransNumber.toString());
                        sessionStorage.setItem("FilingEntityId", item.FilingEntityId.toString());
                        sessionStorage.setItem("SubmittsionDate", item.SubmissionDate.toString());

                        $("#txtCurrentDateWCS").val(item.SchedDate.toString());
                        $("#txtCurrentDateWCS").removeClass("watermarkHTMLTextBox");
                        if (item.SchedDate.toString() != "" || item.SchedDate.toString() != null) {
                            var MyDate = new Date($("#txtCurrentDateWCS").val().toString());
                            var MyDateString;
                            MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                                + ('0' + MyDate.getDate()).slice(-2) + '/'
                                + MyDate.getFullYear();
                            $("#txtCurrentDateWCS").val("");
                            $("#txtCurrentDateWCS").val(MyDateString);
                            $("#txtCurrentDateWCS").removeClass("watermarkHTMLTextBox");
                        }
                        //$("#txtPartnershipName").val(item.FilingEntityName.toString());
                        $("#txtStreetName").val(item.FilingStreetName.toString());
                        $("#txtCity").val(item.FilingCity.toString());
                        $("#txtState").val(item.FilingState.toString());
                        $("#txtZipCode").val(item.FilingZip.toString());
                        $("#txtCountry").val(item.FilingCountry.toString());
                        if (item.FilingCountry.toString() == "United States") {
                            $("#chkCountry").prop('checked', false);
                            $("#txtCountry").prop("disabled", true);
                            $("#txtState").prop('maxLength', '2');
                        }
                        else { // Other Country
                            $("#chkCountry").prop('checked', true);
                            $("#txtCountry").prop("disabled", false);
                            $("#txtState").prop('maxLength', '30');
                            $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            $m('#txtZipCode').attr("placeholder", "");
                        }
                        if (item.FilingZip.toString() != "") {
                            $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                        }
                        else {
                            $("#txtZipCode").addClass("watermarkHTMLTextBox");
                            if (item.FilingCountry.toString() == "United States") {
                                $("#txtZipCode").blur();
                            }
                        }
                        if (item.PaymentTypeId.toString() == "1") {
                            $("#tdCheck").show();
                            $("#txtCheck").val(item.PayNumber.toString());
                        }
                        else if (item.PaymentTypeId.toString() == "8") {
                            $("#tdCheck").show();
                            $("#txtCheck").val(item.PayNumber.toString());
                        }
                        else {
                            $("#tdCheck").hide();
                        }
                        //$("#txtEmployerPCFB").val(item.TreasurerFirstName.toString() + " " + item.TreasurerLastName.toString() + " " + item.TreasurerMiddleName.toString());
                        $("#txtOccupationPCFB").val(item.TreasurerOccuptaion.toString());
                        $("#txtEmployerPCFB").val(item.TreasurerEmployer.toString());
                        $("#txtStreetNameTreasurer").val(item.TreasurerStreetAddress.toString());
                        $("#txtContCity").val(item.TreasurerCity.toString());
                        $("#txtContState").val(item.TreasurerState.toString());
                        $("#txtContZipCode").val(item.TreasurerZip.toString());

                        var originalAmount = item.OriginalAmount.toString();
                        //originalAmount = originalAmount.substr(1, originalAmount.length);
                        $("#txtAmtABC").val(originalAmount);
                        if ($("#txtAmtABC").val().toString() != "" || $("#txtAmtABC").val().toString() != "999999999.99") {
                            $("#txtAmtABC").removeClass("watermarkHTMLTextBox");
                        }

                        // SHOW/HIDE FILEDS
                        $("#tdFirstName").show();
                        $("#tdMI").show();
                        $("#tdLastName").show();
                        $("#txtFirstName").val(item.FilingFirstName.toString());
                        $("#txtMI").val(item.FilingMiddleName.toString());
                        $("#txtLastName").val(item.FilingLastName.toString());
                        $("#divLoading").hide();
                    });
                    // SET EDIT FLAG FALSE.
                    sessionStorage.setItem("EditFlag", "False");
                });
            }
        }
        // EDIT COMMON
        // ======================================================================================================================================

        // ======================================================================================================================================
        //Bind Clear Click - CLEAR BUTTON COMMON CODE.
        $(".clsCommonClear").bind('click', function () {

            $("#divGridMonetary").show();
            sessionStorage.setDataTable = "true";
            $("#divShowHideHelp").removeClass("clsShowHideHelpSec");
            $("#divShowHideHelp").addClass("clsShowHideHelpSecInMobileTablet");

            sessionStorage.setItem("FilerId", $("#txtFilerID option:selected").val());
            sessionStorage.setItem("CommitteeName", $("#txtCommitteeName option:selected").val());
            sessionStorage.setItem("ElectionCycle", $("#lstElectionCycle option:selected").val());
            sessionStorage.setItem("ElectionType", $("#lstElectionType option:selected").val());
            sessionStorage.setItem("ElectionDate", $("#lstElectionDate option:selected").val());
            sessionStorage.setItem("DisclosureType", $("#lstDisclosureType option:selected").val());
            sessionStorage.setItem("DisclosurePeriod", $("#lstDisclosurePeriod option:selected").val());
            sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesFrom").val());
            if ($("#lstElectionType option:selected").val() == "6") {
                sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
            }
            else {
                sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
            }
            sessionStorage.setItem("TransactionType", $("#lstTransactionType option:selected").val());
            sessionStorage.setItem("lstResigTermType", $("#lstResigTermType option:selected").val());
            sessionStorage.setItem("lstFilingDate", $("#lstFilingDate option:selected").val());
            if ($("#lstFilingDate option:selected").text().toString() == "- New Filing Date -") {
                sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
            }
            sessionStorage.setItem("County", $("#lstUCCounty option:selected").val());
            sessionStorage.setItem("Municipality", $("#lstUCMuncipality option:selected").val());

            sessionStorage.setItem("TransactionTypeId", "true");

            //var urlContrHome = "../ContributionsMonetary/ContributionsMonetary";
            var urlContrHome = "@Url.Content("~/ContributionsMonetary/ContributionsMonetary/")";

            window.location.href = urlContrHome;
        });
        //Bind Clear Click - CLEAR BUTTON COMMON CODE.
        // ======================================================================================================================================

        // ======================================================================================================================================
        // Grid Common Code ///////////////////////////////////////////////////
        // ======================================================================================================================================
        // CALL LOAD DATA FUNCTION
        var tableFilingTransactions = 'undefined';
        LoadData();
        // FUNCTION LOAD DATA
        function LoadData() {
            $("#divLoading").show();
            if (tableFilingTransactions == 'undefined') {
                tableFilingTransactions = $m('#gridFilingTransIEWeeklyContribution').DataTable({
                    "bAutoWidth": true,
                    "bProcessing": true,
                    "responsive": true,
                    "deferRender": true,
                    "columnDefs": [
                        {
                            "targets": [0, 1, 2, 3, 4, 5, 10, 28],
                            "visible": false,
                            "searchable": false
                        },
                        {
                            //"targets": [9],
                            //"fnCreatedCell": function (cell) {
                            //    cell.setAttribute('aria-label', "Row Actions");
                            //}
                            "targets": [6,7,8],
                            "orderable": false,
                            "sort": false
                        },
                    ],
                    "initComplete": function (settings, json) {
                        //Accessibility: Applies various Accessibility features to this dataTable.
                        makeDataTableAccessible($m('#gridFilingTransIEWeeklyContribution').DataTable());
                    },
                    "fnRowCallback": function (nRow, aaData, iDisplayIndex) {
                        if (aaData[42] == "RLS") {
                            var uniqueID = generateUniqueRowIdForFnRowCallback(iDisplayIndex, nRow);
                            $m('td:eq(1)', nRow).html('<div style="text-align:center;"><label for="chkRegenerate_' + uniqueID + '">Select Row</label>'
                                + '<input type="checkbox" class="chkRegenerate_class" id="chkRegenerate_' + uniqueID + '" name="chkRegenerate" value="1"></div>');
                        }

                        if (aaData[15] == "In-Active") { // AFTER SUBMIT AND AMEND THERE IS NO EDIT AND DELETE.
                            // NO EDIT AND DELTE BUTTONS.
                            return nRow;
                        }
                        else if (aaData[15] == "Active" && aaData[9] != "") {
                            // Get that is there any child record created that means
                            // created but not submitted. if submitted meanse it will be Status - 'In-Active'
                            $.post("@Url.Content("~/WeeklyClaimSubmission/GetChildTransExists/")", {
                                strTransNumber: aaData[2].toString()
                            }, function (result) {
                                if (result) {
                                    // NO EDIT AND DELETE BUTTONS.
                                    if (aaData[9] != "" && aaData[16] == "Yes") {
                                        $m('td:eq(2)', nRow).html('<a class="editor_IEWeeklyContr_History lnkGird"  href="#divUCLoanRecLoanRepay"> History </a>');
                                    }
                                    return nRow;
                                }
                                else {
                                    if (aaData[15] == "Active" && aaData[16] != "No") {
                                        if (aaData[9] != "") {
                                            $m('td:eq(2)', nRow).html('<a class="editor_edit_Sched_A_IEWeeklyContr" style="color:blue;" href="" id="lnkColumnData"><img src="../../Content/Images/Edit.png" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_IEWeeklyContr_History lnkGird"  href="#divUCLoanRecLoanRepay"> History </a>');
                                            return nRow;
                                        }
                                        else {
                                            $m('td:eq(2)', nRow).html('<a class="editor_edit_Sched_A_IEWeeklyContr" style="color:blue;" href="" id="lnkColumnData"><img src="../../Content/Images/Edit.png" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_Sched_A_IEWeeklyContr" style="color:blue;" href=""  id="lnkColumnData"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_IEWeeklyContr_History lnkGird"  href="#divUCLoanRecLoanRepay"> History </a>');
                                            return nRow;
                                        }
                                    }
                                    else {
                                        if (aaData[9] != "") {
                                            $m('td:eq(2)', nRow).html('<a class="editor_edit_Sched_A_IEWeeklyContr" style="color:blue;" href="" id="lnkColumnData"><img src="../../Content/Images/Edit.png" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                                            return nRow;
                                        }
                                        else {
                                            $m('td:eq(2)', nRow).html('<a class="editor_edit_Sched_A_IEWeeklyContr" style="color:blue;" href="" id="lnkColumnData"><img src="../../Content/Images/Edit.png" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_Sched_A_IEWeeklyContr" style="color:blue;" href=""  id="lnkColumnData"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                                            return nRow;
                                        }
                                    }
                                }
                            });
                        }
                        else {
                            if (aaData[9] != "") {
                                $m('td:eq(2)', nRow).html('<a class="editor_edit_Sched_A_IEWeeklyContr" style="color:blue;" href="" id="lnkColumnData"><img src="../../Content/Images/Edit.png" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                                return nRow;
                            }
                            else {
                                $m('td:eq(2)', nRow).html('<a class="editor_edit_Sched_A_IEWeeklyContr" style="color:blue;" href="" id="lnkColumnData"><img src="../../Content/Images/Edit.png" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove_Sched_A_IEWeeklyContr" style="color:blue;" href=""  id="lnkColumnData"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                                return nRow;
                            }
                        }
                    },
                    "fnDrawCallback": function (oSettings) {
                        var oSettings = this.fnSettings();
                        var iTotalRecords = oSettings.fnRecordsTotal();
                        if (iTotalRecords < 1) {
                            //$("#btnSubmitSchedAIEWeeklyContr").prop("disabled", true);
                        }

                        $("#divLoading").hide();
                    },
                    "fnServerData": function (url, data, callback) {
                        $.ajax({
                            "url": "@Url.Content("~/WeeklyClaimSubmission/GetFilingWeeklyClaimSubmissionData/")",
                            "data": {
                                txtFilerID: $("#txtFilerID").val(),
                                lstElectionCycle: $("#lstElectionCycle option:selected").val(),
                                lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                                lstElectionType: $("#lstElectionType option:selected").val(),
                                lstElectionDateId: $("#lstElectionDate option:selected").val(),
                                lstFilingDate: $("#lstFilingDate option:selected").text(),
                                txtNewFilingDate: sessionStorage.getItem("FilingDateIEWeekly").toString(),
                                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val()
                            },
                            "success": callback,
                            "dataType": "json",
                            "type": "POST",
                            "error": function () {
                                ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                            }
                        }).always(function (data, textStatus, ErrorThrown) {
                            $("#divLoading").hide();
                        });
                    }
                });
            }
            else {
                $.ajax({
                    "url": "@Url.Content("~/WeeklyClaimSubmission/GetFilingWeeklyClaimSubmissionData/")",
                    "data": {
                        txtFilerID: $("#txtFilerID").val(),
                        lstElectionCycle: $("#lstElectionCycle option:selected").val(),
                        lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                        lstElectionType: $("#lstElectionType option:selected").val(),
                        lstElectionDateId: $("#lstElectionDate option:selected").val(),
                        lstFilingDate: $("#lstFilingDate option:selected").text(),
                        txtNewFilingDate: sessionStorage.getItem("FilingDateIEWeekly").toString(),
                        lstUCMuncipality: $m("#lstUCMuncipality option:selected").val()
                    },
                    "success": tableFilingTransactions,
                    "dataType": "json",
                    "type": "POST",
                    "error": function () {
                        ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                    }
                }).always(function (data, textStatus, ErrorThrown) {
                    $("#divLoading").hide();
                });
            }

            tableFilingTransactions.columns.adjust().draw(true);
            $m('#gridFilingTransIEWeeklyContribution').DataTable().ajax.reload();
            //tableFilingTransactions.order([0, $("#lstSortColumnNameOrder option:selected").val()]).draw();
            tableFilingTransactions.search('').columns().search('').draw();
            //tableFilingTransactions.order([51, 'desc']).draw();
            tableFilingTransactions.responsive.recalc();
            $("#divLoading").show();            

        } // LOAD DATA END END END >>>>>>

        // LOAD ALL THE REOCEDS WHEN SELECT SELECT ALL IN GRID.
        //Select All check event
        var objCorresElecCandPetId = [];
        var objWinnerCertLtrVal = [];

        $m("#chkRegenerateMain").click(function () {
            if ($m(this).is(":checked")) {
                objCorresElecCandPetId = [];
                objWinnerCertLtrVal = [];

                //If the Header Row CheckBox is checked, check all Row CheckBoxes.
                $m("#gridFilingTransIEWeeklyContribution td input[name='chkRegenerate']").prop('checked', true);

                // PUSH ALL THE TABLE VALUES INTO LIST OBJECT.
                // IF SELECT HEADER SELECT ALL OTHER WISE IT WILL LOAD INDIVIDUAL SELECT IN GIRD.
                // NICK
                var data = tableFilingTransactions.rows().data();

                for (var i = 0; data.length > i; i++) {
                    if (data[i][42] == "RLS") {
                        var rowId = data[i][1];
                        var transId = data[i][2];
                        objCorresElecCandPetId.push({ "transId": transId });
                        objWinnerCertLtrVal.push({ rowId });
                    }
                }
            } else {
                //If the Header Row CheckBox is NOT checked, uncheck all Row CheckBoxes.
                $m("#gridFilingTransIEWeeklyContribution td input[name='chkRegenerate']").prop('checked', false);

                // REMOVE LIST OBJECT;
                objCorresElecCandPetId = [];
                objWinnerCertLtrVal = [];
            }
        });

        //Single select in Grid
        $m('#gridFilingTransIEWeeklyContribution tbody').on('click', '.chkRegenerate_class', function (e) {
            var $row = $(this).closest('tr');
            // Get row data
            var data = tableFilingTransactions.row($row).data();

            // Get row ID
            var rowId = data[1];
            var transId = data[2];

            if (rowId == 0) {
                rowId = -1;
            }

            // Determine whether row ID is in the list of selected row IDs
            var index = $m.inArray(rowId.toString(), objCorresElecCandPetId);

            // If checkbox is checked and row ID is not in list of selected row IDs
            if (this.checked && index === -1) {
                objCorresElecCandPetId.push({ "transId": transId });
                objWinnerCertLtrVal.push({ rowId });
            }
            else if (!this.checked && index === -1) {
                objCorresElecCandPetId.pop({ "transId": transId });
                objWinnerCertLtrVal.pop({ rowId });
            }
            // Otherwise, if checkbox is not checked and row ID is in list of selected row IDs
            else if (!this.checked && index !== -1) {
                objCorresElecCandPetId.splice(index, 1);
            }

            // Prevent click event from propagating to parent
            e.stopPropagation();

            //if (chkCheckedCount == chkCheckboxCount) {
            if ($("#gridFilingTransIEWeeklyContribution td input[type=checkBox]:checked").length == $("#gridFilingTransIEWeeklyContribution td input[type=checkBox]").length) {
                //If all the Row CheckBoxes are checked, check the Header Row CheckBox.
                $("#chkRegenerateMain").prop('checked', true);  //.attr("checked", "checked");
            } else {
                //Even if one of the Row CheckBoxes is NOT checked, uncheck the Header Row CheckBox.
                $("#chkRegenerateMain").prop('checked', false);   //.removeAttr("checked");
            }
        });


        //Common Code for Set Preferences - Start
        //---------------------------------------------------------------------------------------------------------------------------------------
        //---------------------------------------------------------------------------------------------------------------------------------------
        @*$('#btnSetPreferences').click(function () {
            $("#divLoading").show();
            $.ajax({
                url: "@Url.Content("~/_UC_GridCommonNIIEWeeklyContribution/UpdateColumnValue/")",
                data: {
                    uniqueValue: $m("#ddlViewableColumn").multipleSelect("getSelects").toString()
                },
                success: function (results) {
                    window.status = "Transaction saved successfully";                    
                    //Bind Grid
                    $.ajax({
                        "url": "@Url.Content("~/_UC_GridCommonNIIEWeeklyContribution/GetIEWeeklyContributionTransactions/")",
                        "data": {
                            txtFilerID: $("#txtFilerID").val(),
                            lstElectionCycle: $("#lstElectionCycle option:selected").val(),
                            lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                            lstElectionType: $("#lstElectionType option:selected").val(),
                            lstElectionDateId: $("#lstElectionDate option:selected").val(),
                            lstFilingDate: $("#lstFilingDate option:selected").val(),
                            txtNewFilingDate: $("#txtNewFilingDate").val(),
                            lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
                        },
                        "success": tableFilingTransactions,
                        "dataType": "json",
                        "type": "POST",
                        "error": function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                        }
                    });
                    HideColumn();
                    var temp = new Array();
                    temp = $m("#ddlViewableColumn").multipleSelect("getSelects", "text").toString().split(",");
                    $(tableFilingTransactions.column(6).header()).removeClass('never');
                    $(tableFilingTransactions.column(7).header()).removeClass('never');
                    for (a in temp) {
                        if (temp[a] == 'Submission Date') {
                            $(tableFilingTransactions.column(8).header()).removeClass('never');
                        }
                        else if (temp[a] == 'Entity Name') {
                            $(tableFilingTransactions.column(9).header()).removeClass('never');
                        }
                        else if (temp[a] == 'First Name') {
                            $(tableFilingTransactions.column(10).header()).removeClass('never');
                        }
                        else if (temp[a] == 'Middle Name') {
                            $(tableFilingTransactions.column(11).header()).removeClass('never');
                        }
                        else if (temp[a] == 'Last Name') {
                            $(tableFilingTransactions.column(12).header()).removeClass('never');
                        }
                        else if (temp[a] == 'Amount') {
                            $(tableFilingTransactions.column(13).header()).removeClass('never');
                        }
                        else if (temp[a] == 'Status') {
                            $(tableFilingTransactions.column(14).header()).removeClass('never');
                        }
                        else if (temp[a] == 'Amend') {
                            $(tableFilingTransactions.column(15).header()).removeClass('never');
                        }
                        else if (temp[a] == 'Transaction Date') {
                            $(tableFilingTransactions.column(16).header()).removeClass('never');
                        }
                        else if (temp[a] == 'Transaction Type') {
                            $(tableFilingTransactions.column(17).header()).removeClass('never');
                        }
                        else if (temp[a] == 'Contributor Type') {
                            $(tableFilingTransactions.column(18).header()).removeClass('never');
                        }
                        else if (temp[a] == 'Country') {
                            $(tableFilingTransactions.column(19).header()).removeClass('never');
                        }
                        else if (temp[a] == 'Street Address') {
                            $(tableFilingTransactions.column(20).header()).removeClass('never');
                        }
                        else if (temp[a] == 'City') {
                            $(tableFilingTransactions.column(21).header()).removeClass('never');
                        }
                        else if (temp[a] == 'State') {
                            $(tableFilingTransactions.column(22).header()).removeClass('never');
                        }
                        else if (temp[a] == 'Zip Code') {
                            $(tableFilingTransactions.column(23).header()).removeClass('never');
                        }
                        else if (temp[a] == 'Method') {
                            $(tableFilingTransactions.column(24).header()).removeClass('never');
                        }
                        else if (temp[a] == 'Check') {
                            $(tableFilingTransactions.column(25).header()).removeClass('never');
                        }
                        else if (temp[a] == 'Explanation') {
                            $(tableFilingTransactions.column(26).header()).removeClass('never');
                        }
                        else if (temp[a] == 'Itemized') {
                            $(tableFilingTransactions.column(27).header()).removeClass('never');
                        }
                        else if (temp[a] == 'Created Date') {
                            $(tableFilingTransactions.column(28).header()).removeClass('never');
                        }
                        else if (temp[a] == 'In District') {
                            $(tableFilingTransactions.column(29).header()).removeClass('never');
                        }
                        else if (temp[a] == 'Minor') {
                            $(tableFilingTransactions.column(30).header()).removeClass('never');
                        }
                        else if (temp[a] == 'Vendor') {
                            $(tableFilingTransactions.column(31).header()).removeClass('never');
                        }
                        else if (temp[a] == 'Lobbyist') {
                            $(tableFilingTransactions.column(32).header()).removeClass('never');
                        }
                        else if (temp[a] == 'Is Contribution greater than or equal to $100 in the aggregate?') {
                            $(tableFilingTransactions.column(33).header()).removeClass('never');
                        }
                        else if (temp[a] == 'Employer') {
                            $(tableFilingTransactions.column(34).header()).removeClass('never');
                        }
                        else if (temp[a] == 'Occupation') {
                            $(tableFilingTransactions.column(35).header()).removeClass('never');
                        }
                        else if (temp[a] == 'Employer Address') {
                            $(tableFilingTransactions.column(36).header()).removeClass('never');
                        }
                    }
                    tableFilingTransactions.columns.adjust().draw(false);
                    tableFilingTransactions.responsive.rebuild();
                    tableFilingTransactions.columns.adjust().responsive.recalc();
                    $("#divLoading").hide();
                },
                cache: false
            });
        });
        HideColumn();
        var temp = new Array();
        $.post("@Url.Content("~/_UC_GridCommonControl/GetSortName/")", {
        }, function (results) {
            temp = results;
            temp = temp.toString().split(",");
            $(tableFilingTransactions.column(6).header()).removeClass('never');
            $(tableFilingTransactions.column(7).header()).removeClass('never');
            for (a in temp) {
                if (temp[a] == 'Submission Date') {
                    $(tableFilingTransactions.column(8).header()).removeClass('never');
                }
                else if (temp[a] == 'Entity Name') {
                    $(tableFilingTransactions.column(9).header()).removeClass('never');
                }
                else if (temp[a] == 'First Name') {
                    $(tableFilingTransactions.column(10).header()).removeClass('never');
                }
                else if (temp[a] == 'Middle Name') {
                    $(tableFilingTransactions.column(11).header()).removeClass('never');
                }
                else if (temp[a] == 'Last Name') {
                    $(tableFilingTransactions.column(12).header()).removeClass('never');
                }
                else if (temp[a] == 'Amount') {
                    $(tableFilingTransactions.column(13).header()).removeClass('never');
                }
                else if (temp[a] == 'Status') {
                    $(tableFilingTransactions.column(14).header()).removeClass('never');
                }
                else if (temp[a] == 'Amend') {
                    $(tableFilingTransactions.column(15).header()).removeClass('never');
                }
                else if (temp[a] == 'Transaction Date') {
                    $(tableFilingTransactions.column(16).header()).removeClass('never');
                }
                else if (temp[a] == 'Transaction Type') {
                    $(tableFilingTransactions.column(17).header()).removeClass('never');
                }
                else if (temp[a] == 'Contributor Type') {
                    $(tableFilingTransactions.column(18).header()).removeClass('never');
                }
                else if (temp[a] == 'Country') {
                    $(tableFilingTransactions.column(19).header()).removeClass('never');
                }
                else if (temp[a] == 'Street Address') {
                    $(tableFilingTransactions.column(20).header()).removeClass('never');
                }
                else if (temp[a] == 'City') {
                    $(tableFilingTransactions.column(21).header()).removeClass('never');
                }
                else if (temp[a] == 'State') {
                    $(tableFilingTransactions.column(22).header()).removeClass('never');
                }
                else if (temp[a] == 'Zip Code') {
                    $(tableFilingTransactions.column(23).header()).removeClass('never');
                }
                else if (temp[a] == 'Method') {
                    $(tableFilingTransactions.column(24).header()).removeClass('never');
                }
                else if (temp[a] == 'Check') {
                    $(tableFilingTransactions.column(25).header()).removeClass('never');
                }
                else if (temp[a] == 'Explanation') {
                    $(tableFilingTransactions.column(26).header()).removeClass('never');
                }
                else if (temp[a] == 'Itemized') {
                    $(tableFilingTransactions.column(27).header()).removeClass('never');
                }
                else if (temp[a] == 'Created Date') {
                    $(tableFilingTransactions.column(28).header()).removeClass('never');
                }
                else if (temp[a] == 'In District') {
                    $(tableFilingTransactions.column(29).header()).removeClass('never');
                }
                else if (temp[a] == 'Minor') {
                    $(tableFilingTransactions.column(30).header()).removeClass('never');
                }
                else if (temp[a] == 'Vendor') {
                    $(tableFilingTransactions.column(31).header()).removeClass('never');
                }
                else if (temp[a] == 'Lobbyist') {
                    $(tableFilingTransactions.column(32).header()).removeClass('never');
                }
                else if (temp[a] == 'Is Contribution greater than or equal to $100 in the aggregate?') {
                    $(tableFilingTransactions.column(33).header()).removeClass('never');
                }
                else if (temp[a] == 'Employer') {
                    $(tableFilingTransactions.column(34).header()).removeClass('never');
                }
                else if (temp[a] == 'Occupation') {
                    $(tableFilingTransactions.column(35).header()).removeClass('never');
                }
                else if (temp[a] == 'Employer Address') {
                    $(tableFilingTransactions.column(36).header()).removeClass('never');
                }
            }
            tableFilingTransactions.columns.adjust().draw(false);
            tableFilingTransactions.responsive.rebuild();
            tableFilingTransactions.columns.adjust().responsive.recalc();
        });
        function HideColumn() {
            $m(tableFilingTransactions.columns([0, 1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]).header()).addClass('never');
        }*@

        // ======================================================================================================================================
        // Grid Common Code ///////////////////////////////////////////////////
        // ======================================================================================================================================


        function ClearDialogBoxValSchedANonItem() {

            // Clear Form Validation. Schedule 'D'
            var validator = $m("#DialogBoxSchedAIEForm").validate();
            validator.resetForm();  // clear out the validation errors
            $m("#DialogBoxSchedAIEForm")[0].reset();   // clear out the form data

            // Set the default values for form.
            $("#txtCountry").val("United States");
            $("#txtCountry").prop("disabled", true);
            $("#chkCountry").prop('checked', false);
            $("#txtState").prop('maxLength', '2');
            $m("#txtCountry").valid();

            // Set the default values for form.
            $("#lblExplanation").text("Explanation");

            // Set the default values for form.
            //$("#lstItemized").prop("disabled", true);
            $("#lstContributionName").prop("disabled", false);

            // DISABLE SUBMIT BUTTON.
            //$("#btnSubmitSchedAIEWeeklyContr").prop("disabled", true);

            // Set the default values for form.
            //$("#lstItemized")[0].selectedIndex = 0;
            $("#lstContributionName")[0].selectedIndex = 0;
            $("#lstMethod")[0].selectedIndex = 0;
            $("#lstSupported")[0].selectedIndex = 0;

            // Set the default values for form.
            $("#txtCurrentDateWCS").blur();
            $("#txtZipCode").blur();
            $("#txtZipCodeTreasurer").blur();
            $("#txtAmtABC").blur();

            // HIDE/SHOW FILEDS
            //$("#tdPartnershipName").hide();
            // HIDE/SHOW FILEDS
            $("#tdFirstName").show();
            $("#tdMI").show();
            $("#tdLastName").show();
            // HIDE/SHOW FILEDS
            $("#tdCheck").hide();
            // HIDE/SHOW FILEDS

            // On focus
            //$("#lstItemized").select();
        }

        function ClearServerSideErrors() {
            //removing error class and error messages in search form
            $("div[id^='txtCurrentDateWCS_validate']").empty();
            $("#lstContributionName_validate").empty();
            //$("#txtPartnerShipName_validate").empty();
            $("#txtFirstName_validate").empty();
            $("#txtMI_validate").empty();
            $("#txtLastName_validate").empty();
            $("#txtCountry_validate").empty();
            $("#txtStreetName_validate").empty();
            $("#txtCity_validate").empty();
            $("#txtState_validate").empty();
            $("#txtZipCode_validate").empty();
            $("#txtCheck_validate").empty();
            $("#txtAmtABC_validate").empty();
            $("#txtExplanation_validate").empty();
        }

        function AppendCustomErrorLabels(errorList) {
            //Define special error conditions
            var errorLabelDiscrepancies = new Map([["txtAmt", "txtAmtABC"], ["txtPartAmt", "txtPartAmtAC"]]);
            return appCommonEFS_AppendCustomErrorLabelsForAmmountError(errorList, errorLabelDiscrepancies);
        }


    }); // DOCUMENT END END END>>>>>> >>>>>>>>>>>>>>>>>>

</script>

