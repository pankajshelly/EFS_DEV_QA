@{
    ViewBag.Title = ": Disclosure Report Summary";
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
}

<script src="~/Scripts/PageTab3.js"></script>
<script src="~/Scripts/PageTabs.js"></script>
<script src="~/Scripts/PageTab2.js"></script>

@*@using (Html.BeginForm("DisclosureReportSummary", "DisclosureReportSummary", FormMethod.Get, new { id = "submitForm" }))
    {*@
<form id="DisclosureReportSummary">
    @Html.Partial("UserControls/_UC_Alert_Message")
    @Html.Partial("UserControls/_UC_Delete_Message")
    @Html.Partial("UserControls/_SpinnerPV")
    @Html.Partial("UserControls/_UC_Loding")
    @*Left Side Search Filter starts*@
    <div id="divMainNew" class="mainDiv">
        <div class="mainLowerDivCSSDesktop">
            <div id="divhide" class="hideShowButtonCSS">
                Filter
                <button id="btnCommonShowHide1" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonShowHide">
                    <img src="~/Content/Images/up20.png" alt="Up/Hide Filter Arrow" />
                </button>
            </div>
            <div id="divshow" class="hideShowButtonCSS">
                Filter
                <button id="btnCommonHideShow1" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonHideShow">
                    <img src="~/Content/Images/down20.png" alt="Down/Show Filter Arrow" />
                </button>
            </div>
        </div>
        <div class="mainLowerDivCSS">
            <div id="divhideForMobile" class="hideShowButtonCSS">
                Disclosure Report Filter
                <button id="btnCommonShowHide2" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonShowHide">
                    <img src="~/Content/Images/up20.png" alt="Up/Hide Filter Arrow" />
                </button>
            </div>
            <div id="divshowForMobile" class="hideShowButtonCSS">
                Disclosure Report Filter
                <button id="btnCommonHideShow2" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonHideShow">
                    <img src="~/Content/Images/down20.png" alt="Down/Show Filter Arrow" />
                </button>
            </div>
        </div>
        <div id="divTopSection">
            <div id="selectorDiscRpt">
                <div class="divWidth">
                    <fieldset>
                        <legend class="visibleToScreenReaderOnly">Filter Controls Top</legend>
                        <div class="floatRightNew clsShowButtonClass">
                            <input type="button" id="btnCommonSearch1" class="btn btn-default clsCommonSearch ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Apply" title="Apply" style="font-size:12px;" />&nbsp;
                            <input type="button" id="btnCommonClear1" class="btn btn-default clsCommonClear ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />&nbsp;
                            <button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelpFilter();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" class="ButtonImageCSS" title="Help" id="imgHelp1" /></button>
                        </div>
                    </fieldset>
                    <div class="requiredTextFilter">* marks required fields</div>
                    <div id="divFilerID">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilerID">* Filer Id</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("txtFilerID", Enumerable.Empty<SelectListItem>(), "-Select-", new { @class = "spanMobileWidth txtFilerID", @id = "txtFilerID", aria_labelledby = "lblFilerID", required = "required" })
                        </div>
                    </div>
                    <div id="divFilerType">
                        <div class="verticalCSSDestop lblCSS"><span id="lblFilerType">* Filer Type</span></div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.TextBox("txtFilerType", null, new { id = "txtFilerType", @class = "txtWidth txtFilerType", aria_labelledby = "lblFilerType", required = "required" })
                        </div>
                    </div>
                    <div id="divCommitteeName">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblCommitteeName">* Candidate/Committee Name</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @*@Html.DropDownList("txtCommitteeName", ViewData["txtCommitteeName"] as SelectList, new { @class = "spanMobileWidth txtCommitteeName" , aria_labelledby = "lblCommitteeName"})*@
                            @Html.TextBox("txtCommitteeName", null, new { id = "txtCommitteeName", @class = "txtWidth txtCommitteeName", aria_labelledby = "lblCommitteeName", required = "required" })
                        </div>
                    </div>
                    <div id="divElectionCycle">
                        <div id="lstElectionCycle_validate" class="verticalCSSDestop"></div>
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblElectionCycle">* Report Year</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstElectionCycle", ViewData["lstElectionCycle"] as SelectList, "- Select -", new { @class = "spanMobileWidth lstElectionCycle", aria_labelledby = "lblElectionCycle", required = "required" })
                        </div>
                    </div>
                    <div id="divOfficeType">
                        <div id="lstUCOfficeType_validate" class="verticalCSSDestop"></div>
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblOfficeType">* Election Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstUCOfficeType", ViewData["lstUCOfficeType"] as SelectList, "- Select -", new { id = "lstUCOfficeType", @class = "spanMobileWidth lstUCOfficeType", aria_labelledby = "lblOfficeType", required = "required" })
                        </div>
                    </div>
                    <div id="divCounty">
                        <div id="lstUCCounty_validate" class="verticalCSSDestop"></div>
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblCounty">* County</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstUCCounty", ViewData["lstUCCounty"] as SelectList, "- Select -", new { @class = "spanMobileWidth lstUCCounty", aria_labelledby = "lblCounty", required = "required" })
                        </div>
                    </div>
                    <div id="divMunicipality">
                        <div id="lstUCMuncipality_validate" class="verticalCSSDestop"></div>                        
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblMunicipality">* Muncipality</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstUCMuncipality", ViewData["lstUCMuncipality"] as SelectList, "- Select -", new { @class = "spanMobileWidth lstUCMuncipality", aria_labelledby = "lblMunicipality", required = "required" })
                        </div>
                    </div>
                    <div id="divElectionType">
                        <div id="lstElectionType_validate" class="verticalCSSDestop"></div>
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblElectionType">* Report Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstElectionType", ViewData["lstElectionType"] as SelectList, "- Select -", new { @class = "spanMobileWidth lstElectionType", aria_labelledby = "lblElectionType", required = "required" })
                        </div>
                    </div>
                    <div id="divElectionDate">
                        <div id="lstElectionDate_validate" class="verticalCSSDestop"></div>                        
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblElectionDate">* Election Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstElectionDate", ViewData["lstElectionDate"] as SelectList, "- Select -", new { @class = "spanMobileWidth lstElectionDate", aria_labelledby = "lblElectionDate", required = "required" })
                        </div>
                    </div>
                    <div id="divDisclosureType">
                        <div id="lstDisclosureType_validate" class="verticalCSSDestop"></div>
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblDisclosureType">* Disclosure Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstDisclosureType", ViewData["lstDisclosureType"] as SelectList, new { @class = "spanMobileWidth lstDisclosureType", aria_labelledby = "lblDisclosureType", required = "required" })
                        </div>
                    </div>
                    <div id="divDisclosurePeriod">
                        <div id="lstDisclosurePeriod_validate" class="verticalCSSDestop"></div>
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblDisclosurePeriod">* Disclosure Period</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstDisclosurePeriod", ViewData["lstDisclosurePeriod"] as SelectList, "- Select -", new { @class = "spanMobileWidth lstDisclosurePeriod", aria_labelledby = "lblDisclosurePeriod", required = "required" })
                        </div>
                    </div>
                    @* MOVED RESIGNATION/TERMINATION TYPE HERE TO LAST.... *@
                    <div id="divReportPeriodDates">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblReportPeriodDatesFrom">* Cut off Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.TextBox("searchTerm", null, new { id = "txtReportPeriodDatesFrom", @class = "txtWidth txtReportPeriodDatesFrom", aria_labelledby = "lblReportPeriodDatesFrom", required = "required" })
                        </div>
                    </div>
                    <div id="divFilingDateDropDown">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilingDate">* Filing Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstFilingDate", ViewData["lstFilingDate"] as SelectList, "- Select -", new { @class = "spanMobileWidth lstFilingDate", aria_labelledby = "lblFilingDate", required = "required" })
                        </div>
                    </div>
                    <div id="divReportPeriodDatesTo">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblReportPeriodDatesTo">* Filing Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.TextBox("txtReportPeriodDatesTo", null, new { id = "txtReportPeriodDatesTo", @class = "txtWidth txtReportPeriodDatesTo required", @maxlength = "10", aria_labelledby = "lblReportPeriodDatesTo", required = "required" })
                        </div>
                    </div>

                    @* OFFICE CYCLE FILING DATE *@
                    <div id="divFilingDateOffCycle">
                        <div id="txtNewFilingDate_validate" class="verticalCSSDestop"></div>
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilingDateOffCycle">* New Filing Date"</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            <input type="text" id="txtNewFilingDate" name="txtNewFilingDate" class="datepicker txtWidthForNewFilingDate txtCurrentDateCls watermarkHTMLTextBox" maxlength="10" aria-labelledby="lblFilingDateOffCycle" required="required" />
                        </div>
                    </div>
                    @* OFFICE CYCLE FILING DATE *@

                    <div id="divFilingReason">
                        <div id="lstResigTermType_validate" class="verticalCSSDestop"></div>
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblReasonforFiling">Resignation/Termination</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstResigTermType", ViewData["lstResigTermType"] as SelectList, "- Not Applicable -", new { @class = "spanMobileWidth lstResigTermType", aria_labelledby = "lblReasonforFiling" })
                        </div>
                    </div>
                    <div class="floatRightNew" style="padding-bottom: 2em;">
                        <fieldset>
                            <legend class="visibleToScreenReaderOnly">Filter Controls Bottom</legend>
                            <input type="button" id="btnCommonSearch2" class="btn btn-default clsCommonSearch ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Apply" title="Apply" style="font-size:12px;" />&nbsp;
                            <input type="button" id="btnCommonClear2" class="btn btn-default clsCommonClear ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />&nbsp;
                            <button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelpFilter();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" class="ButtonImageCSS" title="Help" id="imgHelp2" /></button>
                        </fieldset>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @*Left Side Search Filter ends*@
    @*Right side Main section starts*@
    <div id="divMainRightTop" class="divMainRightWidth85">
        <div id="divBreadCrumb" class="breadCrumbDivCSS">
            <nav aria-label="Breadcrumbs">
                <ol class="breadcrumb">
                    @*<li>@Html.ActionLink("Home", "Home", "Home", null, new { @class = "" })</li>*@
                    <li>@Html.ActionLink("File a Disclosure Report", "ContributionsMonetary", "ContributionsMonetary", null, new { @class = "lnkLogout" })</li>
                    @*<li>@Html.ActionLink("Summary", "DisclosureReportSummary", "DisclosureReportSummary", null, new { @class = "" })</li>*@
                    <li class="active">View/Submit Disclosure</li>
                </ol>
            </nav>
            <div id="divHeader" class="paddingtoppt5">
                <h1 id="lblHeader">Disclosure Report Summary</h1>
            </div>
        </div>
    </div>
    <!-- main grid starts-->
    <div id="divMainRightBottom" class="divMainRightWidth85 pb-2">
        <div id="divTabOptions" class="floatLeft">
            <div class="verticalCSSDestop">
                <span id="lblTransactionTypeNonItem" class="verticalCSSDestop">Select Summary View</span>
                <div class="verticalCSSDestop" style="min-width:30%;">
                    @Html.DropDownList("lstSummaryOptions", ViewData["lstSummaryOptions"] as SelectList, new { @class = "float-start", aria_labelledby = "lblTransactionTypeNonItem" })
                    <div class="clspaddingleft1em float-start">
                        <input type="button" id="btnSummeryGrid" class="btn btn-default clsSummeryGrid ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Apply" title="Apply" style="font-size:12px;" />
                    </div>
                </div>
            </div>
        </div>
        <div id="divHeaderForSubmitButton" class="paddingtoppt5 paddingLeft2em floatRight paddingRight2em paddingRight4pt4em">
            <p style="float:right;padding-bottom:0.2em;padding-right:2em;">
                <span id="lblSubmitDate">Last submission date:</span>
                <input type="button" id="btnCommonSearchReport" class="btn btn-default clsCommonSearchSDR" name="Command" value="Submit Disclosure Report" title="Submit Disclosure Report" style="font-size:12px;" />&nbsp;
            </p>
            <p style="float:right;padding-bottom:0.2em;padding-right:2em;" class="clearBothPaddingTop1em">
                <span style="float: right; padding-bottom: 0.3em;">
                    <button id="btnCSVDownloadData" class="btn btn-default clsCommonSearchSDR" name="Command" value="btnCSVAsEntered" title="Download CSV Data">
                        <img src="@Url.Content("~/Content/Images/images.png")" class="ButtonImageCSS" alt="CSV Icon" />
                        Download CSV
                    </button>
                </span>&nbsp;&nbsp;
                <a id="btnFullPeriodReport" href="@Url.Action("GetFullPeriodReportPDF", "DisclosureReportSummary" , null)"
                   target="_blank" class="btn btn-default clsCommonSearchSDR" title="Generate Full Period Report PDF (Opens in New Tab)">Full Period Report&nbsp;<img src="~/Content/Images/PDF.gif" class="ButtonImageCSS" alt="PDF File" /></a>
            </p>
        </div>
        <div id="divAllScheduled" style="clear:both; padding: 1em 2em;">
            <!--As Entered Option-->
            <div id="divOption1AsEnteredContainer">
                <div id="divOption1AsEnteredAccordion" class="ui-accordion ui-widget ui-helper-reset">
                    <h2>
                        <span id="lblOpeningBalance" class="lblWhiteColor">Opening Balance:</span>
                        <span>
                            @Html.TextBox("searchTerm", null, new { id = "txtAEOpeningBal", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "lblOpeningBalance" })
                        </span>
                    </h2>
                    <div>
                        <div style="text-align: right; padding-right: 2.5em; padding-top: 0.4em;padding-bottom:0.5em;background-color:white">
                            <span id="divexlPDF">
                                <button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelp();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" title="Help" class="ButtonImageCSS" id="imgHelp3" /></button>
                            </span>
                        </div>
                        <div id="divGrid1" style="background-color:white">
                            <table id="gridFilingTransactionsAsEntered" class="table-bordered table-striped table-hover dataTable" style="width:100%; border-spacing: 0px;">
                                <thead id="thdGridFilingTransactionsAsEntered" class="header">
                                    <tr>
                                        <th class="never">FilingTransId</th> @* 0 *@
                                        <th class="never">FilingSchedId</th> @* 1 *@
                                        <th class="never">FilingEntityId</th> @* 2 *@
                                        <th class="never">ContributorTypeId</th> @* 3 *@
                                        <th class="never">ContributionTypeId</th> @* 4 *@
                                        <th class="never">PaymentTypeId</th> @* 5 *@
                                        <th class="never">R_Liability</th> @* 6 *@
                                        <th class="never">R_Subcontractor</th> @* 7 *@
                                        <th>Expand</th> @* 8 *@
                                        <th>Action</th> @* 9 *@
                                        <th>Transaction Date</th> @* 10 *@
                                        <th>Increased</th> @* 11 *@
                                        <th>Decreased</th> @* 12 *@
                                        <th class="never">Balance</th> @* 13 *@
                                        <th style="text-overflow:ellipsis;overflow:hidden">Transaction Type</th> @* 14 *@
                                        <th style="text-overflow:ellipsis;overflow:hidden">Contributor Code</th> @* 15 *@
                                        <th style="text-overflow:ellipsis;overflow:hidden">Entity Name</th> @* 16 *@
                                        <th style="text-overflow:ellipsis;overflow:hidden">First Name</th> @* 17 *@
                                        <th style="text-overflow:ellipsis;overflow:hidden">Middle Name</th> @* 18 *@
                                        <th style="text-overflow:ellipsis;overflow:hidden">Last Name</th> @* 19 *@
                                        <th style="text-overflow:ellipsis;overflow:hidden">Country</th> @* 20 *@
                                        <th>Street Address</th> @* 21 *@
                                        <th>City</th> @* 22 *@
                                        <th>State</th> @* 23 *@
                                        <th>Zip Code</th> @* 24 *@
                                        <th>Method</th> @* 25 *@
                                        <th>Check/Money Order #</th> @* 26 *@
                                        <th>Amount $</th> @* 27 *@
                                        <th>Outstanding Amount $</th> @* 28 *@
                                        <th>Receipt Type</th> @* 29 *@
                                        <th>Transfer Type</th> @* 30 *@
                                        <th>Contribution Type</th> @* 31 *@
                                        <th>Purpose Code</th> @* 32 *@
                                        <th>Reciept Code</th> @* 33 *@
                                        <th>Original Date</th> @* 34 *@
                                        <th>Lender Code</th> @* 35 *@
                                        <th>Election Year</th> @* 36 *@
                                        <th>Office</th> @* 37 *@
                                        <th>District</th> @* 38 *@
                                        <th>Explanation</th> @* 39 *@
                                        <th>Itemized</th> @* 40 *@
                                        <th class="never">County</th> @* 41 *@
                                        <th class="never">Municipality</th> @* 42 *@
                                        <th>Created Date</th> @* 43 *@
                                        <th class="never">LoanLiabilityNumber</th> @* 44 *@
                                        <th class="never">TransNumber</th> @* 45 *@
                                        <th class="never">TransMapping</th> @* 46 *@
                                        <th class="never"></th> @* 47 *@
                                        <th>Is Transaction Being Submitted for Claim?</th> @* 48 *@
                                        <th>In District</th> @* 49 *@
                                        <th>Minor</th> @* 50 *@
                                        <th>Vendor</th> @* 51 *@
                                        <th>Lobbyist</th> @* 52 *@
                                        <th>Is Contribution greater than or equal to $100 in the aggregate?</th> @* 53 *@
                                        <th>Employer</th> @* 54 *@
                                        <th>Occupation</th> @* 55 *@
                                        <th>Employer Address</th> @* 56 *@
                                        <th class="never"></th> @* 57 *@
                                        <th class="never"></th> @* 58 *@
                                        <th class="never"></th> @* 59 *@
                                        <th class="never"></th> @* 60 *@
                                        <th>Is this in Support or Opposition to a Candidate?</th> @* 61 *@
                                        <th>Is Support or Oppose</th> @* 62 *@
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <!--Styled to look like accordiong but not initialized as such-->
                <div class="ui-accordion ui-widget">
                    <h2 class="ui-accordion-header ui-corner-top ui-state-default ui-accordion-icons">
                        <span id="lblBalanceOfPeriod" style="padding-left: 1.25em; line-height: 2">Balance At End Of Period:</span>
                        <span>
                            @Html.TextBox("searchTerm", null, new { id = "txtAEClosingBal", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "lblBalanceOfPeriod" })
                        </span>
                    </h2>
                </div>
            </div>
            <!--By Transaction Type-->
            <div id="divOption2ByTransTypeContainer">
                <!--Styled to look like accordiong but not initialized as such-->
                <div class="ui-accordion ui-widget">
                    <h2 class="ui-accordion-header ui-corner-top ui-state-default ui-accordion-icons">
                        <span id="divOption2ByTransTypeAccordion_step1" style="padding-left: 1.25em; line-height: 2">1. Opening Balance:</span>
                        <span>
                            @Html.TextBox("searchTerm", null, new { id = "txtTTOpeningBal", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "divOption2ByTransTypeAccordion_step1" })
                        </span>
                    </h2>
                </div>
                <div id="divOption2ByTransTypeAccordion_TotalContributions">
                    <h2>
                        <span id="divOption2ByTransTypeAccordion_step2">2. Total Contributions:</span>
                        <span>
                            @Html.TextBox("searchTerm", null, new { id = "txtTTTotal_Add_1_4Contri", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "divOption2ByTransTypeAccordion_step2" })
                        </span>
                    </h2>
                    <div>
                        <div style="float: right; padding-right: 2.5em; padding-top: 0.4em;padding-bottom:0.5em;">
                            <span id="divexlPDF2">
                                <button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelp();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" title="Help" class="ButtonImageCSS" id="imgHelp4" /></button>
                            </span>
                        </div>
                        <div id="divGrid2" style="background-color:white">
                            <table id="SchedAGridOpt2" class="table-bordered display nowrap" style="width:100%; border-spacing: 0px;">
                                <thead id="thdGridSchedAGridOpt2" class="header">
                                    <tr>
                                        <th class="never">FilingTransId</th> @* 0 *@
                                        <th class="never">FilingSchedId</th> @* 1 *@
                                        <th class="never">FilingEntityId</th> @* 2 *@
                                        <th class="never">ContributorTypeId</th> @* 3 *@
                                        <th class="never">ContributionTypeId</th> @* 4 *@
                                        <th class="never">PaymentTypeId</th> @* 5 *@
                                        <th class="never">R_Liability</th> @* 6 *@
                                        <th class="never">R_Subcontractor</th> @* 7 *@
                                        <th>Expand</th> @* 8 *@
                                        <th>Action</th> @* 9 *@
                                        <th>Transaction Date</th> @* 10 *@
                                        <th>Transaction Type</th> @* 11 *@
                                        <th>Contributor Code</th> @* 12 *@
                                        <th>Entity Name</th> @* 13 *@
                                        <th>First Name</th> @* 14 *@
                                        <th>Middle Name</th> @* 15 *@
                                        <th>Last Name</th> @* 16 *@
                                        <th>Country</th> @* 17 *@
                                        <th>Street Address</th> @* 18 *@
                                        <th>City</th> @* 19 *@
                                        <th>State</th> @* 20 *@
                                        <th>Zip Code</th> @* 21 *@
                                        <th>Method</th> @* 22 *@
                                        <th>Check/Money Order #</th> @* 23 *@
                                        <th>Amount $</th> @* 24 *@
                                        <th>Outstanding Amount $</th> @* 25 *@
                                        <th>Receipt Type</th> @* 26 *@
                                        <th>Transfer Type</th> @* 27 *@
                                        <th>Contribution Type</th> @* 28 *@
                                        <th>Purpose Code</th> @* 29 *@
                                        <th>Reciept Code</th> @* 30 *@
                                        <th>Original Date</th> @* 31 *@
                                        <th>Lender Code</th> @* 32 *@
                                        <th>Election Year</th> @* 33 *@
                                        <th>Office</th> @* 34 *@
                                        <th>District</th> @* 35 *@
                                        <th>Explanation</th> @* 36 *@
                                        <th>Itemized</th> @* 37 *@
                                        <th class="never">County</th> @* 38 *@
                                        <th class="never">Municipality</th> @* 39 *@
                                        <th>Created Date</th> @* 40 *@
                                        <th class="never">LoanLiabilityNumber</th> @* 41 *@
                                        <th class="never">TransNumber</th> @* 42 *@
                                        <th class="never">TransMapping</th> @* 43 *@
                                        <th class="never"></th>
                                        <th>Is Transaction Being Submitted for Claim?</th> @* 45 *@
                                        <th>In District</th> @* 45 *@
                                        <th>Minor</th> @* 46 *@
                                        <th>Vendor</th> @* 47 *@
                                        <th>Lobbyist</th> @* 48 *@
                                        <th>Is Contribution greater than or equal to $100 in the aggregate?</th> @* 49 *@
                                        <th>Employer</th>
                                        <th>Occupation</th> @* 51 *@
                                        <th>Employer Address</th> @* 52 *@
                                        <th class="never"></th> @* 54 *@
                                        <th class="never"></th> @* 55 *@
                                        <th class="never"></th> @* 56 *@
                                        <th class="never"></th> @* 57 *@
                                        <th>Is this in Support or Opposition to a Candidate?</th> @* 53 *@
                                        <th>Is Support or Oppose</th> @* 54 *@
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div id="divOption2ByTransTypeAccordion_TotalMiscReceipts">
                    <h2>
                        <span id="divOption2ByTransTypeAccordion_step3">3. Total Miscellaneous Receipts:</span>
                        <span>
                            @Html.TextBox("searchTerm", null, new { id = "txtTTTotal_Add_1_4MiscReceipts", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "divOption2ByTransTypeAccordion_step3" })
                        </span>
                    </h2>
                    <div>
                        <div style="float: right; padding-right: 2.5em; padding-top: 0.4em;padding-bottom:0.5em;">
                            <span id="divexlPDF3">
                                <button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelp();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" title="Help" class="ButtonImageCSS" id="imgHelp5" /></button>
                            </span>
                        </div>
                        <div id="divGrid3" style="background-color:white">
                            <table id="SchedMiscellGridOpt2" class="table-bordered display nowrap" style="width:100%; border-spacing: 0px;">
                                <thead id="thdGridSchedMiscellGridOpt2" class="header">
                                    <tr>
                                        <th class="never">FilingTransId</th> @* 0 *@
                                        <th class="never">FilingSchedId</th> @* 1 *@
                                        <th class="never">FilingEntityId</th> @* 2 *@
                                        <th class="never">ContributorTypeId</th> @* 3 *@
                                        <th class="never">ContributionTypeId</th> @* 4 *@
                                        <th class="never">PaymentTypeId</th> @* 5 *@
                                        <th class="never">R_Liability</th> @* 6 *@
                                        <th class="never">R_Subcontractor</th> @* 7 *@
                                        <th>Expand</th> @* 8 *@
                                        <th>Action</th> @* 9 *@
                                        <th>Transaction Date</th> @* 10 *@
                                        <th>Transaction Type</th> @* 11 *@
                                        <th>Contributor Code</th> @* 12 *@
                                        <th>Entity Name</th> @* 13 *@
                                        <th>First Name</th> @* 14 *@
                                        <th>Middle Name</th> @* 15 *@
                                        <th>Last Name</th> @* 16 *@
                                        <th>Country</th> @* 17 *@
                                        <th>Street Address</th> @* 18 *@
                                        <th>City</th> @* 19 *@
                                        <th>State</th> @* 20 *@
                                        <th>Zip Code</th> @* 21 *@
                                        <th>Method</th> @* 22 *@
                                        <th>Check/Money Order #</th> @* 23 *@
                                        <th>Amount $</th> @* 24 *@
                                        <th>Outstanding Amount $</th> @* 25 *@
                                        <th>Receipt Type</th> @* 26 *@
                                        <th>Transfer Type</th> @* 27 *@
                                        <th>Contribution Type</th> @* 28 *@
                                        <th>Purpose Code</th> @* 29 *@
                                        <th>Reciept Code</th> @* 30 *@
                                        <th>Original Date</th> @* 31 *@
                                        <th>Lender Code</th> @* 32 *@
                                        <th>Election Year</th> @* 33 *@
                                        <th>Office</th> @* 34 *@
                                        <th>District</th> @* 35 *@
                                        <th>Explanation</th> @* 36 *@
                                        <th>Itemized</th> @* 37 *@
                                        <th class="never">County</th> @* 38 *@
                                        <th class="never">Municipality</th> @* 39 *@
                                        <th>Created Date</th> @* 40 *@
                                        <th class="never">LoanLiabilityNumber</th> @* 41 *@
                                        <th class="never">TransNumber</th> @* 42 *@
                                        <th class="never">TransMapping</th> @* 43 *@
                                        <th class="never"></th>
                                        <th class="never">Claim</th> @* 45 *@
                                        <th class="never">In District</th> @* 45 *@
                                        <th class="never">Minor</th> @* 46 *@
                                        <th class="never">Vendor</th> @* 47 *@
                                        <th class="never">Lobbyist</th> @* 48 *@
                                        <th class="never">Is Contributions</th> @* 49 *@
                                        <th class="never">Employer</th>
                                        <th class="never">Occupation</th> @* 51 *@
                                        <th class="never">Employer Address</th> @* 52 *@
                                        <th class="never"></th> @* 54 *@
                                        <th class="never"></th> @* 55 *@
                                        <th class="never"></th> @* 56 *@
                                        <th class="never"></th> @* 57 *@
                                        <th>Is this in Support or Opposition to a Candidate?</th> @* 61 *@
                                        <th>Is Support or Oppose</th> @* 62 *@
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <!--Styled to look like accordiong but not initialized as such-->
                <div class="ui-accordion ui-widget">
                    <h2 class="ui-accordion-header ui-corner-top ui-state-default ui-accordion-icons">
                        <span id="divOption2ByTransTypeAccordion_step4" style="padding-left: 1.25em; line-height: 2">4. Total Receipts This Period (Line 2 + Line 3):</span>
                        <span>
                            @Html.TextBox("searchTerm", null, new { id = "txtTTTotal_Add_1_4Receipts_Add_2_3", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "divOption2ByTransTypeAccordion_step4" })
                        </span>
                    </h2>
                </div>
                <!--Styled to look like accordiong but not initialized as such-->
                <div class="ui-accordion ui-widget">
                    <h2 class="ui-accordion-header ui-corner-top ui-state-default ui-accordion-icons">
                        <span id="divOption2ByTransTypeAccordion_step5" style="padding-left: 1.25em; line-height: 2">5. Total (Line 1 + Line 4):</span>
                        <span>
                            @Html.TextBox("searchTerm", null, new { id = "txtTTTotal_Add_1_4", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "divOption2ByTransTypeAccordion_step5" })
                        </span>
                    </h2>
                </div>
                <div id="divOption2ByTransTypeAccordion_TotalExepenses">
                    <h2>
                        <span id="divOption2ByTransTypeAccordion_step6">6. Total Expenses:</span>
                        <span>
                            @Html.TextBox("searchTerm", null, new { id = "txtTTTotalExpenses", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "divOption2ByTransTypeAccordion_step6" })
                        </span>
                    </h2>
                    <div>
                        <div style="float: right; padding-right: 2.5em; padding-top: 0.4em;padding-bottom:0.5em;">
                            <span id="divexlPDF4">
                                <button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelp();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" title="Help" class="ButtonImageCSS" id="imgHelp6" /></button>
                            </span>
                        </div>
                        <div id="divGrid4" style="background-color:white">
                            <table id="SchedExpensesGridOpt2" class="table-bordered display nowrap" style="width:100%; border-spacing: 0px;">
                                <thead id="thdGridSchedExpensesGridOpt2" class="header">
                                    <tr>
                                        <th class="never">FilingTransId</th> @* 0 *@
                                        <th class="never">FilingSchedId</th> @* 1 *@
                                        <th class="never">FilingEntityId</th> @* 2 *@
                                        <th class="never">ContributorTypeId</th> @* 3 *@
                                        <th class="never">ContributionTypeId</th> @* 4 *@
                                        <th class="never">PaymentTypeId</th> @* 5 *@
                                        <th class="never">R_Liability</th> @* 6 *@
                                        <th class="never">R_Subcontractor</th> @* 7 *@
                                        <th>Expand</th> @* 8 *@
                                        <th>Action</th> @* 9 *@
                                        <th>Transaction Date</th> @* 10 *@
                                        <th>Transaction Type</th> @* 11 *@
                                        <th>Contributor Code</th> @* 12 *@
                                        <th>Entity Name</th> @* 13 *@
                                        <th>First Name</th> @* 14 *@
                                        <th>Middle Name</th> @* 15 *@
                                        <th>Last Name</th> @* 16 *@
                                        <th>Country</th> @* 17 *@
                                        <th>Street Address</th> @* 18 *@
                                        <th>City</th> @* 19 *@
                                        <th>State</th> @* 20 *@
                                        <th>Zip Code</th> @* 21 *@
                                        <th>Method</th> @* 22 *@
                                        <th>Check/Money Order #</th> @* 23 *@
                                        <th>Amount $</th> @* 24 *@
                                        <th>Outstanding Amount $</th> @* 25 *@
                                        <th>Receipt Type</th> @* 26 *@
                                        <th>Transfer Type</th> @* 27 *@
                                        <th>Contribution Type</th> @* 28 *@
                                        <th>Purpose Code</th> @* 29 *@
                                        <th>Reciept Code</th> @* 30 *@
                                        <th>Original Date</th> @* 31 *@
                                        <th>Lender Code</th> @* 32 *@
                                        <th>Election Year</th> @* 33 *@
                                        <th>Office</th> @* 34 *@
                                        <th>District</th> @* 35 *@
                                        <th>Explanation</th> @* 36 *@
                                        <th>Itemized</th> @* 37 *@
                                        <th class="never">County</th> @* 38 *@
                                        <th class="never">Municipality</th> @* 39 *@
                                        <th>Created Date</th> @* 40 *@
                                        <th class="never">LoanLiabilityNumber</th> @* 41 *@
                                        <th class="never">TransNumber</th> @* 42 *@
                                        <th class="never">TransMapping</th> @* 43 *@
                                        <th class="never"></th>
                                        <th class="never">Claim</th> @* 45 *@
                                        <th class="never">In District</th> @* 45 *@
                                        <th class="never">Minor</th> @* 46 *@
                                        <th class="never">Vendor</th> @* 47 *@
                                        <th class="never">Lobbyist</th> @* 48 *@
                                        <th class="never">Is Contributions</th> @* 49 *@
                                        <th class="never">Employer</th>
                                        <th class="never">Occupation</th> @* 51 *@
                                        <th class="never">Employer Address</th> @* 52 *@
                                        <th class="never"></th> @* 54 *@
                                        <th class="never"></th> @* 55 *@
                                        <th class="never"></th> @* 56 *@
                                        <th class="never"></th> @* 57 *@
                                        <th>Is this in Support or Opposition to a Candidate?</th> @* 61 *@
                                        <th>Is Support or Oppose</th> @* 62 *@
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <!--Styled to look like accordiong but not initialized as such-->
                <div class="ui-accordion ui-widget">
                    <h2 class="ui-accordion-header ui-corner-top ui-state-default ui-accordion-icons">
                        <span id="divOption2ByTransTypeAccordion_step7" style="padding-left: 1.25em; line-height: 2">7. Balance At End Of Period: (Subtract Line 6 from Line 5)</span>
                        <span>
                            @Html.TextBox("searchTerm", null, new { id = "txtTTBalanceAtPeriod_Sub_6_5", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "divOption2ByTransTypeAccordion_step7" })
                        </span>
                    </h2>
                </div>
                <div id="divOption2ByTransTypeAccordion_InfoSchedules">
                    <h2>
                        <span id="divOption2ByTransTypeAccordion_step8">8. Informational Schedules - Do not affect balance:</span>
                    </h2>
                    <div>
                        <div style="float: right; padding-right: 2.5em; padding-top: 0.4em;padding-bottom:0.5em;">
                            <span id="divexlPDF5">
                                <button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelp();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" title="Help" class="ButtonImageCSS" id="imgHelp7" /></button>
                            </span>
                        </div>
                        <div id="divGrid5" style="background-color:white">
                            <table id="SchedNotEffBalGridOpt2" class="table-bordered display nowrap" style="width:100%; border-spacing: 0px;">
                                <thead id="thdGridSchedNotEffBalGridOpt2" class="header">
                                    <tr>
                                        <th class="never">FilingTransId</th> @* 0 *@
                                        <th class="never">FilingSchedId</th> @* 1 *@
                                        <th class="never">FilingEntityId</th> @* 2 *@
                                        <th class="never">ContributorTypeId</th> @* 3 *@
                                        <th class="never">ContributionTypeId</th> @* 4 *@
                                        <th class="never">PaymentTypeId</th> @* 5 *@
                                        <th class="never">R_Liability</th> @* 6 *@
                                        <th class="never">R_Subcontractor</th> @* 7 *@
                                        <th>Expand</th> @* 8 *@
                                        <th>Action</th> @* 9 *@
                                        <th>Transaction Date</th> @* 10 *@
                                        <th>Transaction Type</th> @* 11 *@
                                        <th>Contributor Code</th> @* 12 *@
                                        <th>Entity Name</th> @* 13 *@
                                        <th>First Name</th> @* 14 *@
                                        <th>Middle Name</th> @* 15 *@
                                        <th>Last Name</th> @* 16 *@
                                        <th>Country</th> @* 17 *@
                                        <th>Street Address</th> @* 18 *@
                                        <th>City</th> @* 19 *@
                                        <th>State</th> @* 20 *@
                                        <th>Zip Code</th> @* 21 *@
                                        <th>Method</th> @* 22 *@
                                        <th>Check/Money Order #</th> @* 23 *@
                                        <th>Amount $</th> @* 24 *@
                                        <th>Outstanding Amount $</th> @* 25 *@
                                        <th>Receipt Type</th> @* 26 *@
                                        <th>Transfer Type</th> @* 27 *@
                                        <th>Contribution Type</th> @* 28 *@
                                        <th>Purpose Code</th> @* 29 *@
                                        <th>Reciept Code</th> @* 30 *@
                                        <th>Original Date</th> @* 31 *@
                                        <th>Lender Code</th> @* 32 *@
                                        <th>Election Year</th> @* 33 *@
                                        <th>Office</th> @* 34 *@
                                        <th>District</th> @* 35 *@
                                        <th>Explanation</th> @* 36 *@
                                        <th>Itemized</th> @* 37 *@
                                        <th class="never">County</th> @* 38 *@
                                        <th class="never">Municipality</th> @* 39 *@
                                        <th>Created Date</th> @* 40 *@
                                        <th class="never">LoanLiabilityNumber</th> @* 41 *@
                                        <th class="never">TransNumber</th> @* 42 *@
                                        <th class="never">TransMapping</th> @* 43 *@
                                        <th class="never"></th>
                                        <th class="never">Claim</th> @* 45 *@
                                        <th class="never">In District</th> @* 45 *@
                                        <th class="never">Minor</th> @* 46 *@
                                        <th class="never">Vendor</th> @* 47 *@
                                        <th class="never">Lobbyist</th> @* 48 *@
                                        <th class="never">Is Contributions</th> @* 49 *@
                                        <th class="never">Employer</th>
                                        <th class="never">Occupation</th> @* 51 *@
                                        <th class="never">Employer Address</th> @* 52 *@
                                        <th class="never"></th> @* 54 *@
                                        <th class="never"></th> @* 55 *@
                                        <th class="never"></th> @* 56 *@
                                        <th class="never"></th> @* 57 *@
                                        <th>Is this in Support or Opposition to a Candidate?</th> @* 61 *@
                                        <th>Is Support or Oppose</th> @* 62 *@
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <!--By Schedule Option-->
            <div id="divOption3BySchedContainer" class="ui-accordion ui-widget ui-helper-reset">
                <!--Styled to look like accordiong but not initialized as such-->
                <h2 class="ui-accordion-header ui-corner-top ui-state-default ui-accordion-icons">
                    <span id="divOption3BySchedAccordion_step1" style="padding-left: 1.25em; line-height: 2">1. Opening Balance:</span>
                    <span>
                        @Html.TextBox("searchTerm", null, new { id = "txtSCOpeningBalance", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "divOption3BySchedAccordion_step1" })
                    </span>
                </h2>
                <div id="divOption3BySched_TotalContributions">
                    <h2>
                        <span id="divOption3BySchedAccordion_step2">2. Total Contributions:</span>
                        <span>
                            @Html.TextBox("searchTerm", null, new { id = "txtSCTotalContri", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "divOption3BySchedAccordion_step2" })
                        </span>
                    </h2>
                    <div>
                        <button id="linkASche" type="button" class="btn" title="Open Individuals/Partnership - (Sched A) Dialog">2a) Individuals/Partnership - (Sched A): </button>
                        @Html.TextBox("searchTerm", null, new { id = "txtSCSched_A", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "linkASche" })
                        <div id="tabsSchedA">
                            @*temp @Html.Partial("_UC_DR_SchedA/_UC_DR_SchedA")*@
                        </div>
                        <div class="divClearBoth">
                            <button id="linkBSche" type="button" class="btn" title="Open Corporate - (Sched B) Dialog">2b) Corporate - (Sched B): </button>
                            @Html.TextBox("searchTerm", null, new { id = "txtSCSched_B", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "linkBSche" })
                        </div>
                        <div class="divClearBoth">
                            <button id="linkCSche" type="button" class="btn" title="Open Other - (Sched C) Dialog">2c) Other - (Sched C):</button>
                            @Html.TextBox("searchTerm", null, new { id = "txtSCSched_C", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "linkCSche" })
                        </div>
                        <div class="divClearBoth">
                            <button id="linkDSche" type="button" class="btn" title="Open In Kind - (Sched D) Dialog">2d) In Kind - (Sched D):</button>
                            @Html.TextBox("searchTerm", null, new { id = "txtSCSched_D", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "linkDSche" })
                        </div>
                    </div>
                </div>
                <div id="divOption3BySched_TotalMiscReceipts">
                    <h2>
                        <span id="divOption3BySchedAccordion_step3">3. Total Miscellaneous Receipts:</span>
                        <span>
                            @Html.TextBox("searchTerm", null, new { id = "txtSCTotalMiscReceipts", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "divOption3BySchedAccordion_step3" })
                        </span>
                    </h2>
                    <div>
                        <button id="linkESche" type="button" class="btn" title="Open  Dialog">3a) Other Receipts - (Sched E):</button>
                        @Html.TextBox("searchTerm", null, new { id = "txtSCSched_E", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "linkESche" })
                        <div class="divClearBoth">
                            <button id="linkGSche" type="button" class="btn" title="Open Transfer In - (Sched G) Dialog">3b) Transfer In - (Sched G):</button>
                            @Html.TextBox("searchTerm", null, new { id = "txtSCSched_G", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "linkGSche" })
                        </div>
                        <div class="divClearBoth">
                            <button id="linkISche" type="button" class="btn" title="Open Loans Received - (Sched I) Dialog">3c) Loans Received - (Sched I):</button>
                            @Html.TextBox("searchTerm", null, new { id = "txtSCSched_I", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "linkISche" })
                        </div>
                        <div class="divClearBoth">
                            <button id="linkLSche" type="button" class="btn" title="Open Expenditure Refunds - (Sched L) Dialog">3d) Expenditure Refunds - (Sched L):</button>
                            @Html.TextBox("searchTerm", null, new { id = "txtSCSched_L", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "linkLSche" })
                        </div>
                        <div class="divClearBoth">
                            <button id="linkPSche" type="button" class="btn" title="Open Housekeeping Receipts - (Sched P) Dialog">3e) Housekeeping Receipts - (Sched P):</button>
                            @Html.TextBox("searchTerm", null, new { id = "txtSCSched_P", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "linkPSche" })
                        </div>
                        <div class="divClearBoth">
                            <button id="linkSSche" type="button" class="btn" title="Open Public Fund Receipts - (Sched S) Dialog">3f) Public Fund Receipts - (Sched S):</button>
                            @Html.TextBox("searchTerm", null, new { id = "txtSCSched_S", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "linkSSche" })
                        </div>
                    </div>
                </div>
                <!--Styled to look like accordiong but not initialized as such-->
                <h2 class="ui-accordion-header ui-corner-top ui-state-default ui-accordion-icons">
                    <span id="divOption3BySchedAccordion_step4" style="padding-left: 1.25em; line-height: 2">4. Total Receipts This Period (Line 2 + Line 3):</span>
                    <span>
                        @Html.TextBox("searchTerm", null, new { id = "txtSCTotalReceipts_Add_2_3", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "divOption3BySchedAccordion_step4" })
                    </span>
                </h2>
                <!--Styled to look like accordiong but not initialized as such-->
                <h2 class="ui-accordion-header ui-corner-top ui-state-default ui-accordion-icons">
                    <span id="divOption3BySchedAccordion_step5" style="padding-left: 1.25em; line-height: 2">5. Total (Line 1 + Line 4):</span>
                    <span>
                        @Html.TextBox("searchTerm", null, new { id = "txtSCTotal_Add_1_4", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "divOption3BySchedAccordion_step5" })
                    </span>
                </h2>
                <div id="divOption3BySched_TotalExpenses">
                    <h2>
                        <span id="divOption3BySchedAccordion_step6">6. Total Expenses:</span>
                        <span>
                            @Html.TextBox("searchTerm", null, new { id = "txtSCTotalExpenses", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "divOption3BySchedAccordion_step6" })
                        </span>
                    </h2>
                    <div>
                        <button id="linkFSche" type="button" class="btn" title="Open Expenditure Payments - (Sched F) Dialog">6a) Expenditure Payments - (Sched F):</button>
                        @Html.TextBox("searchTerm", null, new { id = "txtSCSched_F", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "linkFSche" })
                        <div class="divClearBoth">
                            <button id="linkDScheExpenses" type="button" class="btn" title="Open In Kind - (Sched D) Dialog">6b) In Kind - (Sched D):</button>
                            @Html.TextBox("searchTerm", null, new { id = "txtSCSched_D_Double", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "linkDScheExpenses" })
                        </div>
                        <div class="divClearBoth">
                            <button id="linkHSche" type="button" class="btn" title="Open Transfer Out - (Sched H) Dialog">6c) Transfer Out - (Sched H):</button>
                            @Html.TextBox("searchTerm", null, new { id = "txtSCSched_H", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "linkHSche" })
                        </div>
                        <div class="divClearBoth">
                            <button id="linkJSche" type="button" class="btn" title="Open Loans Paid - (Sched J) Dialog">6d) Loans Paid - (Sched J):</button>
                            @Html.TextBox("searchTerm", null, new { id = "txtSCSched_J", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "linkJSche" })
                        </div>
                        <div class="divClearBoth">
                            <button id="linkMSche" type="button" class="btn" title="Open Contributions Refunds - (Sched M) Dialog">6e) Contributions Refunds - (Sched M):</button>
                            @Html.TextBox("searchTerm", null, new { id = "txtSCSched_M", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "linkMSche" })
                        </div>
                        <div class="divClearBoth">
                            <button id="linkQSche" type="button" class="btn" title="Open Housekeeping Expenses - (Sched Q) Dialog">6f) Housekeeping Expenses - (Sched Q):</button>
                            @Html.TextBox("searchTerm", null, new { id = "txtSCSched_Q", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "linkQSche" })
                        </div>
                        <div class="divClearBoth">
                            <button id="linkTSche" type="button" class="btn" title="Open Qualified Expenditures - (Sched T) Dialog">6g) Qualified Expenditures - (Sched T):</button>
                            @Html.TextBox("searchTerm", null, new { id = "txtSCSched_T", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "linkTSche" })
                        </div>
                        <div class="divClearBoth">
                            <button id="linkUSche" type="button" class="btn" title="Public Fund Repayment - (Sched U) Dialog">6h) Public Fund Repayment - (Sched U):</button>
                            @Html.TextBox("searchTerm", null, new { id = "txtSCSched_U", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "linkUSche" })
                        </div>
                    </div>
                </div>
                <!--Styled to look like accordiong but not initialized as such-->
                <h2 class="ui-accordion-header ui-corner-top ui-state-default ui-accordion-icons">
                    <span id="divOption3BySchedAccordion_step7" style="padding-left: 1.25em; line-height: 2">7. Balance At End Of Period: (Subtract Line 6 from Line 5)</span>
                    <span class="" style="padding-right:0.5em;">
                        @Html.TextBox("searchTerm", null, new { id = "txtSCBalanceAtPeriod_Sub_6_5", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "divOption3BySchedAccordion_step7" })
                    </span>
                </h2>
                <div id="divOption3BySched_InformationalSchedules">
                    <h2>
                        <span id="divOption3BySchedAccordion_step8">8. Informational Schedules - Do not affect balance:</span>
                    </h2>
                    <div>
                        <button id="linkKSche" type="button" class="btn" title="Open Liabilities/Loans Forgiven - (Sched K) Dialog">8a) Liabilities/Loans Forgiven - (Sched K):</button>
                        @Html.TextBox("searchTerm", null, new { id = "txtSCSched_K", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "linkKSche" })
                        <div class="divClearBoth">
                            <button id="linkNSche" type="button" class="btn" title="Open Outstanding Liabilities - (Sched N) Dialog">8b) Outstanding Liabilities - (Sched N):</button>
                            @Html.TextBox("searchTerm", null, new { id = "txtSCSched_N", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "linkNSche" })
                        </div>
                        <div class="divClearBoth">
                            <button id="linkOSche" type="button" class="btn" title="Open LLCs/Partnership/Subcontractors - (Sched O) Dialog">8c) LLCs/Partnership/Subcontractors - (Sched O):</button>
                            @Html.TextBox("searchTerm", null, new { id = "txtSCSched_O", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "linkOSche" })
                        </div>
                        <div class="divClearBoth">
                            <button id="linkRSche" type="button" class="btn" title="Open Amount Allocated - (Sched R) Dialog">8d) Amount Allocated - (Sched R):</button>
                            @Html.TextBox("searchTerm", null, new { id = "txtSCSched_R", @class = "textAlignRight colorBlck txtWidthForTextBox", aria_labelledby = "linkRSche" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--main grid ends-->
    @*Right side Main section ends*@
</form>

@* Dialog Box by Schedule starts*@
<div id="dialog-form_BySchedule" title="Transactions">
    <form id="DialogBoxBySchedule">
        <div id="AddUpdateBtnIdSchedA" class="AddLeftCSSSchedABCSummary">
            <input type="button" id="btnCloseDialog" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Close" title="Close" style="font-size:12px;" />
        </div>
        <div class="divWidthSchedABC">
            <div style="width: 100%;">
                <div id="divGrid6">
                    <table id="SchedAGridOptBySchedule" class="table-bordered display nowrap" style="width:100%; border-spacing: 0px;">
                        <thead id="thdGridSchedAGridOptBySchedule" class="header">
                            <tr>
                                <th class="never">FilingTransId</th> @* 0 *@
                                <th class="never">FilingSchedId</th> @* 1 *@
                                <th class="never">FilingEntityId</th> @* 2 *@
                                <th class="never">ContributorTypeId</th> @* 3 *@
                                <th class="never">ContributionTypeId</th> @* 4 *@
                                <th class="never">PaymentTypeId</th> @* 5 *@
                                <th class="never">R_Liability</th> @* 6 *@
                                <th class="never">R_Subcontractor</th> @* 7 *@
                                <th>Expand</th> @* 8 *@
                                <th>Action</th> @* 9 *@
                                <th>Transaction Date</th> @* 10 *@
                                <th>Transaction Type</th> @* 11 *@
                                <th>Contributor Code</th> @* 12 *@
                                <th>Entity Name</th> @* 13 *@
                                <th>First Name</th> @* 14 *@
                                <th>Middle Name</th> @* 15 *@
                                <th>Last Name</th> @* 16 *@
                                <th>Country</th> @* 17 *@
                                <th>Street Address</th> @* 18 *@
                                <th>City</th> @* 19 *@
                                <th>State</th> @* 20 *@
                                <th>Zip Code</th> @* 21 *@
                                <th>Method</th> @* 22 *@
                                <th>Check/Money Order #</th> @* 23 *@
                                <th>Amount $</th> @* 24 *@
                                <th>Outstanding Amount $</th> @* 25 *@
                                <th>Receipt Type</th> @* 26 *@
                                <th>Transfer Type</th> @* 27 *@
                                <th>Contribution Type</th> @* 28 *@
                                <th>Purpose Code</th> @* 29 *@
                                <th>Reciept Code</th> @* 30 *@
                                <th>Original Date</th> @* 31 *@
                                <th>Lender Code</th> @* 32 *@
                                <th>Election Year</th> @* 33 *@
                                <th>Office</th> @* 34 *@
                                <th>District</th> @* 35 *@
                                <th>Explanation</th> @* 36 *@
                                <th>Itemized</th> @* 37 *@
                                <th class="never">County</th> @* 38 *@
                                <th class="never">Municipality</th> @* 39 *@
                                <th>Created Date</th> @* 40 *@
                                <th class="never">LoanLiabilityNumber</th> @* 41 *@
                                <th class="never">TransNumber</th> @* 42 *@
                                <th class="never">TransMapping</th> @* 43 *@
                                <th class="never"></th>
                                <th>Is Transaction Being Submitted for Claim?</th> @* 44 *@
                                <th>In District</th> @* 45 *@
                                <th>Minor</th> @* 46 *@
                                <th>Vendor</th> @* 47 *@
                                <th>Lobbyist</th> @* 48 *@
                                <th>Is Contribution greater than or equal to $100 in the aggregate?</th> @* 49 *@
                                <th>Employer</th>
                                <th>Occupation</th> @* 50 *@
                                <th>Employer Address</th> @* 51 *@
                                <th class="never"></th> @* 54 *@
                                <th class="never"></th> @* 55 *@
                                <th class="never"></th> @* 56 *@
                                <th class="never"></th> @* 57 *@
                                <th>Is this in Support or Opposition to a Candidate?</th> @* 61 *@
                                <th>Is Support or Oppose</th> @* 62 *@
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </form>
</div>
@* Dialog Box by Schedule ends*@
<script>
    $m = jQuery.noConflict();
    $m(window).resize(function () {
        //Alwasy resize the datalog form by schedule to match the window size.
        $m("#dialog-form_BySchedule").dialog("option", "width", $m(window).width() * 0.9);
    });

    $('#menuNav').css('opacity', 0);
    $('#DisclosureReportSummary').css('opacity', 0);
    $('#dialog-form_BySchedule').css('opacity', 0);
    $('#divWelcomeBanner').css('opacity', 0);
    $(window).on('load', function () {
        $('#menuNav').css('opacity', 1);
        $('#DisclosureReportSummary').css('opacity', 1);
        $('#dialog-form_BySchedule').css('opacity', 1);
        $('#divWelcomeBanner').css('opacity', 1);
    });

    function CallHelp() {
        window.open("", "Help", "width=550, height=600,scrollbars=1");
    }

    $m(document).ready(function () {

        //event.preventDefault();
        var tableFilingTransactions = '';
        var tableTab2ContributionGrid = '';
        var tableTab2MiscellGrid = '';
        var tableTab2ExpensesGrid = '';
        var tableTab2NoEffectBalGrid = '';
        var tableTab3SchedA = '';
        var tableTab3SchedB = '';
        var tableTab3SchedC = '';
        var tableTab3SchedD = '';
        var tableTab3SchedE = '';
        var tableTab3SchedF = '';
        var tableTab3SchedG = '';
        var tableTab3SchedH = '';
        var tableTab3SchedI = '';
        var tableTab3SchedJ = '';
        var tableTab3SchedK = '';
        var tableTab3SchedL = '';
        var tableTab3SchedM = '';
        var tableTab3SchedN = '';
        var tableTab3SchedO = '';
        var tableTab3SchedP = '';
        var tableTab3SchedQ = '';
        var tableTab3SchedR = '';
        var tableTab3SchedS = '';
        var tableTab3SchedT = '';
        var tableTab3SchedU = '';
        
        if (@Session["RoleID_FILER"] == "11") {
            //btnCommonSearchReport
            $("#btnCommonSearchReport").hide();
        }
        else {
            $("#btnCommonSearchReport").show();
        }

        $("#divTabOptions").hide();
        $("#divAllScheduled").hide();

        //$("#divReportPeriodDates").hide();
        $("#divFilingDateDropDown").hide();
        $("#divReportPeriodDates").show();
        $("#divFilingReason").show();

        // HIDE NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
        $("#divFilingDateOffCycle").hide();
        // SHOW TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
        $("#divReportPeriodDatesTo").show();

        $("#txtFilerType").attr('title', '@ViewBag.txtFilerType');
        $("#txtFilerType").val("@ViewBag.txtFilerType");
        $("#txtFilerType").prop("disabled", true);

        sessionStorage.setItem("FilerTypeId", $("#txtFilerType").val());

        var commonAccordionSettings = {
            heightStyle: "content",//All accordions height is based on content.
            collapsible: true,//All accordions can be closed. Usully one is open.
            activate: function (event, ui) {
                //Adjust any visible datatables width when accordions open or close.
                $m.fn.dataTable.tables({ visible: true, api: true }).columns.adjust().responsive.recalc();
            }
        }
        /*Accordion for "As Entered" Option*/
        $m("#divOption1AsEnteredAccordion").accordion(commonAccordionSettings);
        /*Accordions for "By Transaction Type" Option*/
        $m("#divOption2ByTransTypeAccordion_TotalContributions").accordion(commonAccordionSettings);
        $m("#divOption2ByTransTypeAccordion_TotalMiscReceipts").accordion(commonAccordionSettings);
        $m("#divOption2ByTransTypeAccordion_TotalExepenses").accordion(commonAccordionSettings);
        $m("#divOption2ByTransTypeAccordion_InfoSchedules").accordion(commonAccordionSettings);
        /*Accordions fo "By Schedule" Option*/
        $m("#divOption3BySched_TotalContributions").accordion(commonAccordionSettings);
        $m("#divOption3BySched_TotalMiscReceipts").accordion(commonAccordionSettings);
        $m("#divOption3BySched_TotalExpenses").accordion(commonAccordionSettings);
        $m("#divOption3BySched_InformationalSchedules").accordion(commonAccordionSettings);

        $("#lblSubmitDate2").hide();
        $("#lblSubmitDate").hide();

        //Tab 1 Start
        $("#txtAEClosingBal").prop("disabled", true);
        //Tab 1 End

        LoadFilerId();
        function LoadFilerId() {
            var optionHtml = "";
            var selected = "";
            var options = {};
            options.url = "@Url.Content("~/DisclosureReportSummary/GetFilerIdData/")";
            options.type = "POST";
            options.data = null;
            options.dataType = "json";
            options.contentType = "application/json";
            options.success = function (results) {
                $("#txtFilerID").empty();
                for (var i = 0; i < results.length; i++) {
                    if (@Session["FilerID"].ToString() == results[i].Text) {
                        selected = " selected";
                    }
                    else {
                        selected = '';
                    }
                    optionHtml += '<option value="' + results[i].Value + '"' + selected + '>' + results[i].Text + '</option>';
                }
                $("#txtFilerID").html(optionHtml);
            };
            options.error = function () {
            };
            $.ajax(options);
        }

        // Validation Filter
        FilterValidation("DisclosureReportSummary");

        var dialog;
        dialog = $m("#dialog-form_BySchedule").dialog({
            autoOpen: false,
            resizable: false,
            height: 'auto',
            width: $m(window).width() * 0.9,//Determine to 90% window size
            minWidth: 500,
            position: {
                my: "center top",
                at: "center"
            },
            modal: true,
            closeOnEscape: false,
            open: function (event, ui) { hideDialogXButton(this); }
        });

        $("#divHeaderForSubmitButton").hide();

        $("#main").addClass("SetHeightAssignReview");
        $("#main").removeClass("SetHeight");
        sessionStorage.setDataTable = "true";

        $("#txtFilerID")[0].selectedIndex = 0;
        //$("#txtCommitteeName")[0].selectedIndex = 0;

        //$("#txtCommitteeName").prop("disabled", true);

        //$("#divUC_InLieuOfStatements").hide();
        //$("#divUC_24HourNotice").hide();
        //$("#divUC_IndependentExpenditure").hide();
        //$("#divUC_NoActivityReport").hide();
        //$("#divUC_NoticeofNonParticipation").hide();

        //$("#divDisclosurePeriod").show();
        //$("#divReportPeriodDates").show();
        //$("#divReportPeriodDatesTo").show();

        //$('#divTransactionType').hide();

        //$("#divCounty").hide();
        //$("#divMunicipality").hide();

        $("#divUC_InLieuOfStatements").hide();
        $("#divUC_24HourNotice").hide();
        $("#divUC_IndependentExpenditure").hide();
        $("#divUC_NoActivityReport").hide();
        $("#divUC_NoticeofNonParticipation").hide();

        $("#divDisclosurePeriod").show();
        $("#divReportPeriodDates").show();
        $("#divReportPeriodDatesTo").show();
        $("#divFilingReason").show();

        //$('#divTransactionType').hide();

        $("#divCounty").hide();
        $("#divMunicipality").hide();

        $("#spnEleYear").hide();
        $("#spnDiclPerd").hide();

        $("#txtReportPeriodDatesFrom").prop("disabled", true);
        $("#txtReportPeriodDatesTo").prop("disabled", true);

        //// Hide Transaction Type for Non-Itemized Transactions.
        //$("#divTransactionTypeNonItemized").hide();
        //$("#divTransactionType").hide();
        //$("#divTransactionTypeNonItemWeeklyExp").hide();

        // Hide Filing Date for Off Cycle
        //$("#divFilingDateDropDown").hide();

        //$("#IdSelector").removeClass("selectorDiscRpt");
        //$("#IdSelector").addClass("selectorDiscRptDef");

        $m("#lblSubmitDate").hide();
        $m("#btnCommonSearchReport").prop('value', 'Submit Disclosure Report');

        // DEFAULT DROPDOWNS.
        $("#lstElectionCycle")[0].selectedIndex = 0;

        $("#lstUCOfficeType").empty();
        $("#lstUCOfficeType").append("<option>" + "- Select -" + "</option>");
        $("#lstUCOfficeType")[0].selectedIndex = 0;

        $("#lstElectionType").empty();
        $("#lstElectionType").append("<option>" + "- Select -" + "</option>");
        $("#lstElectionType")[0].selectedIndex = 0;

        $("#lstElectionDate").empty();
        $("#lstElectionDate").append("<option>" + "- Select -" + "</option>");
        $("#lstElectionDate")[0].selectedIndex = 0;

        $("#lstDisclosureType").empty();
        $("#lstDisclosureType").append("<option>" + "- Select -" + "</option>");
        $("#lstDisclosureType")[0].selectedIndex = 0;

        $("#lstDisclosurePeriod").empty();
        $("#lstDisclosurePeriod").append("<option>" + "- Select -" + "</option>");
        $("#lstDisclosurePeriod")[0].selectedIndex = 0;

        $("#txtReportPeriodDatesFrom")[0].selectedIndex = 0;
        $("#txtReportPeriodDatesTo")[0].selectedIndex = 0;
        $("#lstResigTermType")[0].selectedIndex = 0;
        // DEFAULT DROPDOWNS.

        if (sessionStorage.getItem("MoveDataToSubmitPage") != null) {
            //Set Election Year - Start
            $m("#lstElectionCycle option").each(function () {
                if ($(this).text() == sessionStorage.getItem("submitReportYear").toString()) {
                    $(this).prop('selected', true).trigger('change');
                }
            });
            //Bind Election Year - End
            ////////////////////////////////////////////////////////////////////////////////////////////////////
            //Bind Filer Type - Start
            // MAINTAIN SELECTION CONTROLS
            SetToSelect("#lstUCOfficeType");
            SetToSelect("#lstElectionType");
            SetToSelect("#lstElectionDate");
            //SetToSelect("#lstUCCounty");
            $("#divCounty").hide();
            //SetToSelect("#lstUCMuncipality");
            $("#divMunicipality").hide();
            $("#lstElectionDate").attr("disabled", false);
            SetToSelect("#lstDisclosurePeriod");

            // METHOD POPULATES OFFICETYPES LIST BASED ON REPORTYEAR
            PopulateOfficeTypes("#lstUCOfficeType", $("#lstElectionCycle").val().toString());
            //Bind Filer Type -  End
            ////////////////////////////////////////////////////////////////////////////////////////////////////
            //Bind Election Type - Start
            // METHOD POPULATES ELECTION TYPES BASED ON REPORTYEAR AND OFFICETYPE
        }


        if ('@Session["FILER_NAME"]' != null) {
            if ('@Session["FILER_NAME"]' == "SUBTREASURER") {
                $("#divHeaderForSubmitButton").hide();
            }
            //else {
            //    //$("#divHeaderForSubmitButton").show();
            //}
        }
        else {
            $("#divHeaderForSubmitButton").show();
        }

        $m("#idOpt2").click(function () {
            $m("#main").removeClass("SetHeightDisclosurRptOpt3");
            $m("#main").addClass("SetHeightDisclosureReport");

            $m("#IdSelector").removeClass("selectorDiscRptOpt3");
            $m("#IdSelector").addClass("selectorDiscRpt");
        });

        $m("#idOpt3").click(function () {
            $m("#main").removeClass("SetHeightDisclosurRptOpt3");
            $m("#main").addClass("SetHeightDisclosureReport");

            $m("#IdSelector").removeClass("selectorDiscRptOpt3");
            $m("#IdSelector").addClass("selectorDiscRpt");
        });

        $m("#idOpt1").click(function () {
            $m("#main").removeClass("SetHeightDisclosurRptOpt3");
            $m("#main").addClass("SetHeightDisclosureReport");

            $m("#IdSelector").removeClass("selectorDiscRptOpt3");
            $m("#IdSelector").addClass("selectorDiscRpt");
        });


        $("#txtCommitteeName").prop("disabled", true);
        $("#main").addClass("SetHeightDisclosureReport");
        $("#main").removeClass("SetHeight");

        sessionStorage.setDataTable = null;

        //Show Hide Lookups
        $("#divshow").hide();
        $("#divshowForMobile").hide();
        HideAllUC();

        $("#tabsSummary").show();

        $m(".clsbtnCommonHideShow").bind('click', function (e) {
            if (sessionStorage.getItem('setDataTable') != "null") {
                $m('#gridFilingTransactionsAsEntered').DataTable().ajax.reload();
            }
            $("#selectorDiscRpt").toggle("slow");//This element is not visible
            $("#divhide").show("slow");
            $("#divshow").hide("slow");

            $("#divhideForMobile").show("slow");
            $("#divshowForMobile").hide("slow");

            //Shrink the grid before growing the filter.
            $m("#divMainRightBottom").addClass("divMainRightWidth85").removeClass("divMainRightWidth100");
            $("#divTopSection").show("slow");
        });

        $m(".clsbtnCommonShowHide").bind('click', function (e) {
            if (sessionStorage.getItem('setDataTable') != "null") {
                $m('#gridFilingTransactionsAsEntered').DataTable().ajax.reload();
            }
            $("#selectorDiscRpt").toggle("slow");
            $("#divhide").hide("slow");
            $("#divshow").show("slow");

            $("#divhideForMobile").hide("slow");
            $("#divshowForMobile").show("slow");

            $("#divTopSection").hide("slow", function () {
                //Grow the grid after hiding/shrinking the filter
                $m("#divMainRightBottom").addClass("divMainRightWidth100").removeClass("divMainRightWidth85");
            });
        });

        function HideAllUC() {
            $("#tabsSummary").hide();
            $("#tabsSchedA").hide();
            $("#tabsSchedB").hide();
            $("#tabsSchedC").hide();
            $("#tabsSchedD").hide();
            $("#tabsSchedE").hide();
            $("#tabsSchedF").hide();
            $("#tabsSchedG").hide();
            $("#tabsSchedH").hide();
            $("#tabsSchedI").hide();
            $("#tabsSchedJ").hide();
            $("#tabsSchedK").hide();
            $("#tabsSchedL").hide();
            $("#tabsSchedM").hide();
            $("#tabsSchedN").hide();
            $("#tabsSchedO").hide();
            $("#tabsSchedP").hide();
            $("#tabsSchedQ").hide();
            $("#tabsSchedR").hide();
        }

        FilterValidation("DisclosureReportSummary");

        $(".clsCommonApply").bind('click', function () {
            //$("#lblSubmitDate").hide();
            $("#lblSubmitDate").show();
            $("#lblSubmitDate").text("PENDING FILING");
            $("#btnCommonSearchReport").prop('value', 'Submit Disclosure Report');
            $('#btnCommonSearchReport').prop('title', 'Submit Disclosure Report');
        });

        function DisableFilters() {
            $('#txtFilerID').attr("disabled", true);
            $('#lstElectionCycle').attr("disabled", true);
            $('#txtFilerType').attr("disabled", true);
            $('#txtCommitteeName').attr("disabled", true);
            $("#lstUCOfficeType").attr("disabled", true);
            $("#lstUCCounty").attr("disabled", true);
            $("#lstUCMuncipality").attr("disabled", true);
            $("#lstElectionType").attr("disabled", true);
            $('#lstElectionDate').attr('disabled', true);
            $('#lstDisclosureType').attr('disabled', true);
            $('#lstDisclosurePeriod').attr('disabled', true);
            $('#txtReportPeriodDatesFrom').attr('disabled', true);
            $('#lstFilingDate').attr('disabled', true);
            $('#txtReportPeriodDatesTo').attr('disabled', true);
            $('#txtNewFilingDate').attr('disabled', true);
            $('#lstResigTermType').attr('disabled', true);
        }

        function EnableFilters() {
            $('#txtFilerID').attr("disabled", false);
            $('#txtFilerType').attr("disabled", true);
            $('#txtCommitteeName').attr("disabled", true);
            $('#lstElectionCycle').attr("disabled", false);
            $("#lstUCOfficeType").attr("disabled", false);
            $("#lstUCCounty").attr("disabled", false);
            $("#lstUCMuncipality").attr("disabled", false);
            $("#lstElectionType").attr("disabled", false);
            $('#lstElectionDate').attr('disabled', false);
            $('#lstDisclosureType').attr('disabled', false);
            $('#lstDisclosurePeriod').attr('disabled', false);
            $('#txtReportPeriodDatesFrom').attr('disabled', false);
            $('#lstFilingDate').attr('disabled', false);
            $('#txtReportPeriodDatesTo').attr('disabled', false);
            $('#txtNewFilingDate').attr('disabled', false);
            $('#lstResigTermType').attr('disabled', false);
        }

        $m(".clsCommonSearch").bind('click', function () {



            sessionStorage.setItem("FilerId", $("#txtFilerID option:selected").val());
            sessionStorage.setItem("CommitteeName", $("#txtCommitteeName").val());
            sessionStorage.setItem("ElectionCycle", $("#lstElectionCycle option:selected").val());
            sessionStorage.setItem("ElectionType", $("#lstElectionType option:selected").val());
            sessionStorage.setItem("ElectionDate", $("#lstElectionDate option:selected").val());
            sessionStorage.setItem("DisclosureType", $("#lstDisclosureType option:selected").val());
            sessionStorage.setItem("DisclosurePeriod", $("#lstDisclosurePeriod option:selected").val());
            sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesFrom").val());
            sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
            sessionStorage.setItem("lstFilingDate", $('#lstFilingDate').val());
            sessionStorage.setItem("lstResigTermType", $('#lstResigTermType').val());
            //sessionStorage.setItem("TransactionType", $("#lstTransactionType option:selected").val());
            sessionStorage.setItem("TransactionTypeId", "true");

            // Validation Filter.
            $m('#DisclosureReportSummary').valid();
            if ($m('#DisclosureReportSummary').valid()) { // UNCOMMENT AFTER SERVER SIDE VALIDATION ONE.

                $m("#divLoading").show();
                sessionStorage.setDataTable = "true";
                $("#divShowHideHelp").removeClass("clsShowHideHelpSec");
                $("#divShowHideHelp").addClass("clsShowHideHelpSecInMobileTablet");
                // CALL METHOD TO VERIFY SERVER SIDE VALIDATIONS.
                $.post("@Url.Content("~/ContributionsMonetary/GetValidateFilter/")", {
                    strFilerId: $("#txtFilerID option:selected").val(),
                    txtCommitteeName: $("#txtCommitteeName").val(),
                    strElectionYearId: $("#lstElectionCycle option:selected").val(),
                    strElectionYear: $("#lstElectionCycle option:selected").text(),
                    strOfficeTypeId: $("#lstUCOfficeType option:selected").val(),
                    lstUCCounty: $("#lstUCCounty option:selected").val(),
                    lstUCMuncipality: $("#lstUCMuncipality option:selected").val(),
                    strElectionTypeId: $("#lstElectionType option:selected").val(),
                    strElectionDateId: $("#lstElectionDate option:selected").val(),
                    lstDisclosureType: $("#lstDisclosureType option:selected").val(),
                    lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                    txtReportPeriodDatesFrom: $("#txtReportPeriodDatesFrom").val(),
                    txtReportPeriodDatesTo: $("#txtReportPeriodDatesTo").val(),
                    lstResigTermType: $("#lstResigTermType option:selected").val(),
                    lstFilingDate: $("#lstFilingDate option:selected").val(),
                    txtNewFilingDate: $("#txtNewFilingDate").val(),
                }, function (results) {

                    if (results.Errors == null) {
                        $("#lstSummaryOptions")[0].selectedIndex = 0;
                        $("#divTabOptions").show();
                        $("#divAllScheduled").show();
                        $("#divOption1AsEnteredContainer").show();
                        $("#divOption2ByTransTypeContainer").hide();
                        $("#divOption3BySchedContainer").hide();

                        //Get Is Amend Status
                        $.post("@Url.Content("~/DisclosureReportSummary/GetAmendStatus/")", {
                            txtFilerID: $("#txtFilerID").val(),
                            lstElectionCycle: $("#lstElectionCycle option:selected").val(),
                            lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                            lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                            lstElectionType: $("#lstElectionType option:selected").val(),
                            lstElectionDateId: $("#lstElectionDate option:selected").val(),
                            lstFilingDate: $m("#lstFilingDate option:selected").text(),
                            txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                        }, function (resultData) {
                            $.each(resultData, function (i, item) {
                                if (item.IsAmend.toString() == 'YES') {
                                    $("#lblSubmitDate").show();
                                    $("#lblSubmitDate").text("SUBMITTED FILING - Last submission date: " + item.Submit_Date.toString());
                                    $("#btnCommonSearchReport").prop('value', 'Amend Disclosure Report');
                                    $('#btnCommonSearchReport').prop('title', 'Amend Disclosure Report');
                                }
                                else {
                                    //$("#lblSubmitDate").hide();
                                    $("#lblSubmitDate").show();
                                    $("#lblSubmitDate").text("PENDING FILING");
                                    $("#btnCommonSearchReport").prop('value', 'Submit Disclosure Report');
                                    $('#btnCommonSearchReport').prop('title', 'Submit Disclosure Report');
                                }
                            });
                            if (resultData.length == 0) {
                                //$("#lblSubmitDate").hide();
                                $("#lblSubmitDate").show();
                                $("#lblSubmitDate").text("PENDING FILING");
                                $("#btnCommonSearchReport").prop('value', 'Submit Disclosure Report');
                                $('#btnCommonSearchReport').prop('title', 'Submit Disclosure Report');
                            }
                        });

                        //Get Opening Balance
                        $.post("@Url.Content("~/DisclosureReportSummary/GetSummery_OpeningBalance/")", {
                            filerID: $("#txtFilerID").val(),
                            election_Year_ID: $("#lstElectionCycle option:selected").val(),
                            office_Type_ID: $("#lstUCOfficeType option:selected").val(),
                            filing_Type_ID: $("#lstDisclosurePeriod option:selected").val(),
                            election_Date: $("#lstElectionDate option:selected").val(),
                            filing_date: $("#txtReportPeriodDatesTo").val(),
                            off_cycle_filing_Date: $("#lstFilingDate option:selected").text()
                        }, function (result) {
                            $("#txtAEOpeningBal").val(parseJsonResultIntoFloatAmmount(result.toString()));
                            $("#txtAEOpeningBal").prop("disabled", true);
                        });

                        //Get Closing Balance
                        $.post("@Url.Content("~/DisclosureReportSummary/GetSummery_ClosingBalance/")", {
                            filerID: $("#txtFilerID").val(),
                            election_Year_ID: $("#lstElectionCycle option:selected").val(),
                            office_Type_ID: $("#lstUCOfficeType option:selected").val(),
                            filing_Type_ID: $("#lstDisclosurePeriod option:selected").val(),
                            filing_date: $("#txtReportPeriodDatesTo").val(),
                            off_cycle_filing_Date: $("#lstFilingDate option:selected").text()
                        }, function (result) {
                            $("#txtAEClosingBal").val(parseJsonResultIntoFloatAmmount(result.toString()));
                            $("#txtAEClosingBal").prop("disabled", true);
                        });

                        //Tab 1 Grid Bind
                        GridBindAsEntered("gridFilingTransactionsAsEntered", "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21");
                        $("#divHeaderForSubmitButton").show();
                        DisableFilters();
                    }
                    else if (results.Errors.length >= 0) {

                        ClearServerSideErrors(); // Server Side Validation Clear
                        for (var i = 0; i < results.Errors.length; i++) {
                            if (results.Errors[i].Key == "txtFilerID") {
                                $('<label for="txtFilerID" class="error">' + results.Errors[i].Value + '</label>').insertBefore('.txtFilerID');
                            }
                            if (results.Errors[i].Key == "txtCommitteeName") {
                                $('<label for="txtCommitteeName" class="error">' + results.Errors[i].Value + '</label>').insertBefore('.txtCommitteeName');
                            }
                            if (results.Errors[i].Key == "lstElectionCycle") {
                                $('<label for="lstElectionCycle" class="error">' + results.Errors[i].Value + '</label>').insertBefore('.lstElectionCycle');
                            }
                            if (results.Errors[i].Key == "lstUCOfficeType") {
                                $('<label for="lstUCOfficeType" class="error">' + results.Errors[i].Value + '</label>').insertBefore('.lstUCOfficeType');
                            }
                            if (results.Errors[i].Key == "lstUCCounty") {
                                $('<label for="lstUCCounty" class="error">' + results.Errors[i].Value + '</label>').insertBefore('.lstUCCounty');
                            }
                            if (results.Errors[i].Key == "lstUCMuncipality") {
                                $('<label for="lstUCMuncipality" class="error">' + results.Errors[i].Value + '</label>').insertBefore('.lstUCMuncipality');
                            }
                            if (results.Errors[i].Key == "lstElectionType") {
                                $('<label for="lstElectionType" class="error">' + results.Errors[i].Value + '</label>').insertBefore('.lstElectionType');
                            }
                            if (results.Errors[i].Key == "lstElectionDate") {
                                $('<label for="lstElectionDate" class="error">' + results.Errors[i].Value + '</label>').insertBefore('.lstElectionDate');
                            }
                            if (results.Errors[i].Key == "lstDisclosureType") {
                                $('<label for="lstDisclosureType" class="error">' + results.Errors[i].Value + '</label>').insertBefore('.lstDisclosureType');
                            }
                            if (results.Errors[i].Key == "lstDisclosurePeriod") {
                                $('<label for="lstDisclosurePeriod" class="error">' + results.Errors[i].Value + '</label>').insertBefore('.lstDisclosurePeriod');
                            }
                            if (results.Errors[i].Key == "txtReportPeriodDatesFrom") {
                                $('<label for="txtReportPeriodDatesFrom" class="error">' + results.Errors[i].Value + '</label>').insertBefore('.txtReportPeriodDatesFrom');
                            }
                            if (results.Errors[i].Key == "txtReportPeriodDatesTo") {
                                $('<label for="txtReportPeriodDatesTo" class="error">' + results.Errors[i].Value + '</label>').insertBefore('.txtReportPeriodDatesTo');
                            }
                        }
                    }
                }).always(function () {
                    $m("#divLoading").hide();
                });
            }

        });

        // Election Type Change
        $("#lstElectionType").change(function () {
            // MAINTAIN SELECTION CONTROLS
            SetToSelect("#lstDisclosureType");
            //$("#lstDisclosureType")[0].selectedIndex = 1;
            SetToSelect("#lstDisclosurePeriod");
            $("#divDisclosurePeriod").hide();
            if ($("#lstElectionType").val().toString() == "- Select -" || $("#lstElectionType").val().toString() == "") {
                SetToSelect("#lstElectionDate");
                $("#lstElectionDate").attr("disabled", false);
                return;
            }
            // Clear Values.
            // RESIGNATION/TERMINATION NOT MANDAITORY OTHER THAN OFF-CYCLE
            $("#lblReasonforFiling").text("Resignation/Termination");

            $("#divDisclosurePeriod").show();
            //$("#divFilingDateDropDown").hide();
            $("#divElectionDate").show();
            //$("#divReportPeriodDates").show();
            $("#txtReportPeriodDatesTo").prop("disabled", true);
            $("#txtReportPeriodDatesFrom").prop("disabled", true);

            // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
            $("#divFilingDateOffCycle").hide();
            // HIDE TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
            $("#divReportPeriodDates").show();
            $("#divReportPeriodDatesTo").show();
            $("#divFilingReason").show();

            $("#txtReportPeriodDatesTo").addClass("txtWidth");
            $("#txtReportPeriodDatesTo").removeClass("txtWidthOffCycleFilingDate");

            $("#lstResigTermType")[0].selectedIndex = 0;
            $("#lstFilingDate")[0].selectedIndex = 0;

            $("#txtReportPeriodDatesFrom").val("");
            $("#txtReportPeriodDatesTo").val("");

            $m("label[for=lstDisclosureType]").text('');
            $m("#lstDisclosureType").removeClass("error");

            $m("label[for=lstDisclosurePeriod]").text('');
            $m("#lstDisclosurePeriod").removeClass("error");

            $m("label[for=lstResigTermType]").text('');
            $m("#lstResigTermType").removeClass("error");

            $m("label[for=lstFilingDate]").text('');
            $m("#lstFilingDate").removeClass("error");

            $m("label[for=txtReportPeriodDatesTo]").text('');
            $m("#txtReportPeriodDatesTo").removeClass("error");


            // GET OFF-CYCLE ELECTION TYPE
            var selectedElectionType = $("#lstElectionType option:selected").val().toString();

            if (selectedElectionType == "6") { // OFF-CYCLE ELECTION TYPE.
                // RESIGNATION/TERMINATION MANDATORY WHEN OFF-CYCLE.

                $("#lblReasonforFiling").text("* Resignation/Termination");
                // HIDE ELECTION DATE
                $("#divElectionDate").hide();

                // HIDE FILING DATE.
                $("#divReportPeriodDates").hide();
                $("#divReportPeriodDatesTo").hide();

                // CLEAR ERROR MESSAGE.
                $m("label[for=lstDisclosureType]").text('');
                $m("#lstDisclosureType").removeClass("error");

                $m("label[for=lstDisclosurePeriod]").text('');
                $m("#lstDisclosurePeriod").removeClass("error");

                $("#lstDisclosureType").empty();
                $("#lstDisclosureType").append("<option>" + "- Select -" + "</option>");


                //Bind DISCLOSURE TYPE
                PopulateDisclosureTypes("#lstDisclosureType", $("#lstElectionCycle").val().toString(), $("#lstElectionType").val().toString());

                setTimeout(
                    function () {
                        // BIND DISCLOSURE PERIOD.
                        var options = {};
                        options.url = "@Url.Content("~/DisclosureReportSummary/GetDisclosurePeriod/")";
                        options.type = "POST";
                        options.data = JSON.stringify(
                            {
                                lstElectionType: $("#lstElectionType").val().toString()
                            });
                        options.dataType = "json";
                        options.contentType = "application/json";
                        options.success = function (results) {
                            $("#lstDisclosurePeriod").empty();
                            for (var i = 0; i < results.length; i++) {
                                $("#lstDisclosurePeriod").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                            }
                            if (sessionStorage.getItem("submitDisclosurePeriod") != null) {
                                $m("#lstDisclosurePeriod option").each(function () {
                                    if ($(this).text() == sessionStorage.getItem("submitDisclosurePeriod").toString()) {
                                        $(this).prop('selected', true).trigger('change');
                                    }
                                });
                            }
                            var selectedElecYear = $("#lstElectionCycle option:selected").val();
                        };
                        options.error = function () {
                        };
                        $.ajax(options);
                    }, 2000);

                // IF NOT EXISTS THEN IT WILL LOAD DEFAULT.
                $.post("@Url.Content("~/ContributionsMonetary/GetResgTermTypeData/")", {
                }, function (results) {
                    $("#lstResigTermType").empty();
                    $("#lstResigTermType").append("<option>" + "- Not Applicable -" + "</option>");
                    for (var i = 0; i < results.length; i++) {
                        $("#lstResigTermType").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                    }
                });

                // DISCLOSURE PERIOD END END END.
            } // END END
            else if (selectedElectionType == "4") { // PERIODIC ELECTION TYPE. Remove PCFB monthly filings

                // HIDE OFF-CYCLE FILING DATE.
                $("#divFilingDateDropDown").hide();

                // RESIGNATION/TERMINATION NOT MANDAITORY OTHER THAN OFF-CYCLE
                $("#lblReasonforFiling").text("Resignation/Termination");

                $("#txtReportPeriodDatesTo").prop("disabled", true);

                $("#txtReportPeriodDatesTo").removeClass("datepicker");

                $("#txtReportPeriodDatesTo").addClass("txtWidth");
                $("#txtReportPeriodDatesTo").removeClass("txtWidthOffCycleFilingDate");

                var selectedElecYear = $("#lstElectionCycle option:selected").val();
                var selectCountyVal = $("#lstUCCounty option:selected").val();
                var selectMunicipalityVal = $("#lstUCMuncipality option:selected").val();
                if (selectCountyVal == "- Select -" || selectCountyVal == "All") {
                    selectCountyVal = "";
                    selectMunicipalityVal = "";
                }

                if (selectMunicipalityVal == "- Select -" || selectMunicipalityVal == "All") {
                    selectMunicipalityVal = "";
                }

                // BIND ELECTION DATE FOR PERIOD ELECTION DATE ID HAVE TO INSERT WHEN ELECTION RECORD INSERT INTO ELECTION TABLE.
                // FOR OFF CYCLE AND PERIODIC
                $.post("@Url.Content("~/ContributionsMonetary/GetElectionDate/")", {
                    lstElectionCycle: $("#lstElectionCycle").val().toString(),
                    lstElectionType: $("#lstElectionType").val().toString(),
                    lstOfficeType: $("#lstUCOfficeType").val().toString(),
                    countyID: selectCountyVal,
                    municipalityID: selectMunicipalityVal
                }, function (electionDate) {
                    $("#lstElectionDate").empty();
                    for (var i = 0; i < electionDate.length; i++) {
                        //// Date Format
                        var eleDate = electionDate[i].Text.toString();
                        var MyDate = new Date(eleDate);
                        var MyDateString;
                        MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                            + ('0' + MyDate.getDate()).slice(-2) + '/'
                            + MyDate.getFullYear();
                        var dateFormat = MyDateString.toString();
                        // Date Format
                        $("#lstElectionDate").append("<option value='" + electionDate[i].Value + "'>" + dateFormat.toString() + "</option>");

                        //// HIDE ELECTION DATE
                        $("#divElectionDate").hide();
                    }
                    if (sessionStorage.getItem("submitElectionDate") != null) {
                        $m("#lstElectionDate option").each(function () {
                            if ($(this).text() == sessionStorage.getItem("submitElectionDate").toString()) {
                                $(this).prop('selected', true).trigger('change');
                            }
                        });
                    }
                    PopulateDisclosureTypes("#lstDisclosureType", $("#lstElectionCycle").val().toString(), $("#lstElectionType").val().toString());
                });
            }
            else {

                // RESIGNATION/TERMINATION NOT MANDAITORY OTHER THAN OFF-CYCLE
                $("#lblReasonforFiling").text("Resignation/Termination");

                $("#divFilingDateDropDown").hide();
                $("#divElectionDate").show();
                $("#divReportPeriodDates").show();
                $("#txtReportPeriodDatesTo").prop("disabled", true);

                $("#txtReportPeriodDatesTo").addClass("txtWidth");
                $("#txtReportPeriodDatesTo").removeClass("txtWidthOffCycleFilingDate");

                setTimeout(
                    function () {
                        var selectedElecYear = $("#lstElectionCycle option:selected").val();
                        var selectCountyVal = $("#lstUCCounty option:selected").val();
                        var selectMunicipalityVal = $("#lstUCMuncipality option:selected").val();

                        if (selectCountyVal == "- Select -" || selectCountyVal == "All") {
                            selectCountyVal = "";
                            selectMunicipalityVal = "";
                        }

                        if (selectMunicipalityVal == "- Select -" || selectMunicipalityVal == "All") {
                            selectMunicipalityVal = "";
                        }

                        // BIND ELECTION DATE
                        var options = {};
                        //options.url = "@Url.Content("~/ContributionsMonetary/GetElectionDate/")";
                        options.url = "@Url.Content("~/DisclosureReportSummary/GetElectionDateData/")";
                        options.type = "POST";
                        options.data = JSON.stringify(
                            {
                                //lstElectionCycle: $("#lstElectionCycle").val().toString(),
                                //lstElectionType: $("#lstElectionType").val().toString(),
                                //lstOfficeType: $("#lstUCOfficeType").val().toString()
                                strElectionYearID: $("#lstElectionCycle").val().toString(),
                                strElectionTypeID: $("#lstElectionType").val().toString(),
                                strOfficeTypeID: $("#lstUCOfficeType").val().toString(),
                                countyID: selectCountyVal,
                                municipalityID: selectMunicipalityVal
                            });
                        options.dataType = "json";
                        options.contentType = "application/json";
                        options.success = function (electionDate) {
                            $("#lstElectionDate").empty();
                            $("#lstElectionDate").append("<option>" + "- Select -" + "</option>");
                            for (var i = 0; i < electionDate.length; i++) {
                                //// Date Format
                                var eleDate = electionDate[i].Text.toString();
                                var MyDate = new Date(eleDate);
                                var MyDateString;
                                MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                                    + ('0' + MyDate.getDate()).slice(-2) + '/'
                                    + MyDate.getFullYear();
                                var dateFormat = MyDateString.toString();
                                // Date Format
                                $("#lstElectionDate").append("<option value='" + electionDate[i].Value + "'>" + dateFormat.toString() + "</option>");
                            }
                            if (sessionStorage.getItem("TransactionTypeId") != null) {
                                $('#lstElectionDate').val(sessionStorage.getItem("ElectionDate").toString());
                            }

                            if (electionDate.length.toString() == "1") {
                                $("#lstElectionDate")[0].selectedIndex = 1;
                            }
                            //$("#lstDisclosureType")[0].selectedIndex = 1;
                            if (sessionStorage.getItem("submitElectionDate") != null) {
                                $m("#lstElectionDate option").each(function () {
                                    if ($(this).text() == sessionStorage.getItem("submitElectionDate").toString()) {
                                        $(this).prop('selected', true).trigger('change');
                                        //$("#lstDisclosureType")[0].selectedIndex = 1;
                                    }
                                });
                                //PopulateDisclosureTypes("#lstDisclosureType", $("#lstElectionCycle").val().toString(), $("#lstElectionType").val().toString());

                            }
                        };
                        options.error = function () {

                        };
                        $.ajax(options);

                        PopulateDisclosureTypes("#lstDisclosureType", $("#lstElectionCycle").val().toString(), $("#lstElectionType").val().toString());
                    }, 2000);
            }
        });

        //Contribution Name Selected index changed
        $("#lstDisclosurePeriod").change(function () {

            if ($("#lstDisclosurePeriod option:selected").text() != "- Select -") {

                if ($("#lstDisclosurePeriod option:selected").text() == "Off Cycle") {
                    $("#txtReportPeriodDatesTo").prop("disabled", false);
                }
                else {
                    $("#txtReportPeriodDatesTo").prop("disabled", true);
                }
                $("#txtReportPeriodDatesFrom").prop("disabled", true);


                // GET FILING DATE & CUT OFF DATE.
                var options = {};
                options.url = "@Url.Content("~/ContributionsMonetary/GetFilingCutOffDate/")";
                options.type = "POST";
                options.data = JSON.stringify(
                    {
                        lstElectionCycle: $("#lstElectionCycle option:selected").val().toString(),
                        lstElectionType: $("#lstElectionType").val().toString(),
                        lstUCOfficeType: $("#lstUCOfficeType option:selected").val().toString(),
                        lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val().toString(),
                        lstElectionDateId: $("#lstElectionDate option:selected").val(),
                    });
                options.dataType = "json";
                options.contentType = "application/json";
                options.success = function (results) {

                    for (var i = 0; i < results.length; i++) {

                        if (results[i].CutOffDate != null)
                            $("#txtReportPeriodDatesFrom").val(results[i].CutOffDate);
                        if (results[i].FilingDueDate != null)
                            $("#txtReportPeriodDatesTo").val(results[i].FilingDueDate);
                    }


                    if (sessionStorage.getItem("MoveDataToSubmitPage") != null) {
                        if (sessionStorage.getItem("submitOffCycleTermRegID") != null) {
                            if (sessionStorage.getItem("submitOffCycleTermRegID").toString() == "1") {
                                $("#lstResigTermType")[0].selectedIndex = 1;
                            }
                            else if (sessionStorage.getItem("submitOffCycleTermRegID").toString() == "2") {
                                $("#lstResigTermType")[0].selectedIndex = 2;
                            }
                        }
                        BindGridData();
                    }
                };
                options.error = function () {
                };
                $.ajax(options);

                if ($("#lstDisclosureType option:selected").text() != "- Select -") {

                    if ($("#lstElectionCycle option:selected").text() == "- Select -") {
                        $("#spnEleYear").hide();
                    }
                    else {
                        $("#spnEleYear").show();
                        $("#lblHEleYear").text($("#lstElectionCycle option:selected").text());
                    }

                    if ($("#lstDisclosurePeriod option:selected").text() == "- Select -") {
                        $("#spnDiclPerd").hide();
                    }
                    else {
                        $("#spnDiclPerd").show();
                        $("#lblHDisclPer").text($("#lstDisclosurePeriod option:selected").text());
                    }
                }
            }
            else {
                // IF NOT EXISTS THEN IT WILL LOAD DEFAULT.
                $.post("@Url.Content("~/ContributionsMonetary/GetResgTermTypeData/")", {
                }, function (results) {
                    $("#lstResigTermType").empty();
                    $("#lstResigTermType").append("<option>" + "- Not Applicable -" + "</option>");
                    for (var i = 0; i < results.length; i++) {
                        $("#lstResigTermType").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                    }
                });

                // SET FILING DATE CUT OFF DATE BLANK
                $("#txtReportPeriodDatesFrom").val("");
                $("#txtReportPeriodDatesTo").val("");
            }
        });
        //Disclosur Type
        $("#lstDisclosureType").change(function () {

            $("#lstFilingDate")[0].selectedIndex = 0;
            $("#lstResigTermType")[0].selectedIndex = 0;
            //$("#lstDisclosurePeriod")[0].selectedIndex = 0;
            $("#txtReportPeriodDatesFrom").val("");
            $("#txtReportPeriodDatesTo").val("");

            $("#divDisclosurePeriod").show();
            $("#divReportPeriodDates").show();
            $("#divReportPeriodDatesTo").show();
            $("#divFilingReason").show();

            $("#lblReportPeriodDatesFrom").text("* Cut off Date");
            $("#lblReportPeriodDatesTo").text("* Filing Date");

            $("#divShowHideHelp").hide();
            var selectedlstDisclosureType = $("#lstDisclosureType option:selected").val().toString();

            if (selectedlstDisclosureType == "0") {
                $("#divHeader").hide();
            }
            else {
                $("#divHeader").show();
            }

            setTimeout(
                function () {
                    // BIND DISCLOSURE PERIOD.
                    //Added Code for No-Activity record not to Show - Pankaj
                    var options = {};
                    options.url = "@Url.Content("~/DisclosureReportSummary/GetDisclosurePeriodForNoActivity/")";
                    options.type = "POST";
                    options.data = JSON.stringify(
                        {
                            lstElectID: $("#lstElectionDate option:selected").val().toString(),
                            lstElectionType: $("#lstElectionType").val().toString()
                        });
                    options.dataType = "json";
                    options.contentType = "application/json";
                    options.success = function (results) {
                        $("#lstDisclosurePeriod").empty();
                        $("#lstDisclosurePeriod").append("<option>" + "- Select -" + "</option>");
                        for (var i = 0; i < results.length; i++) {
                            $("#lstDisclosurePeriod").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                        }
                        if (sessionStorage.getItem("submitDisclosurePeriod") != null) {
                            $m("#lstDisclosurePeriod option").each(function () {
                                if ($(this).text() == sessionStorage.getItem("submitDisclosurePeriod").toString()) {
                                    $(this).prop('selected', true).trigger('change');
                                }
                            });
                        }
                    };
                    options.error = function () {
                    };
                    $.ajax(options);
                }, 2000);

            if (selectedlstDisclosureType == "1") { // Itemized

                $("#lblHeader,#lblHeader1,#lblHeader2").text("Itemized");
                //$("#divUC_D_ContributionInKind").show();

                // GET OFF-CYCLE ELECTION TYPE
                var selectedElectionType = $("#lstElectionType option:selected").val().toString();

                if (selectedElectionType != "6") { // NOT OFF-CYCLE ELECTION TYPE.

                    $("#divUC_InLieuOfStatements").hide();
                    $("#divUC_24HourNotice").hide();
                    $("#divUC_IndependentExpenditure").hide();
                    $("#divUC_NoActivityReport").hide();
                    $("#divUC_NoticeofNonParticipation").hide();

                    if ($("#lstElectionCycle option:selected").text() == "- Select -") {
                        $("#spnEleYear").hide();
                    }
                    else {
                        $("#spnEleYear").show();
                        $("#lblHEleYear").text($("#lstElectionCycle option:selected").text());
                    }
                    if ($("#lstDisclosurePeriod option:selected").text() == "- Select -") {
                        $("#spnDiclPerd").hide();
                    }
                    else {
                        $("#spnDiclPerd").show();
                        $("#lblHDisclPer").text($("#lstDisclosurePeriod option:selected").text());
                    }

                    $("#divDisclosurePeriod").show();
                    $("#divReportPeriodDates").show();
                    $("#divReportPeriodDatesTo").show();
                    $("#divFilingReason").show();

                }
                else { // OFF-CYCLE ELECTION TYPE.

                    // HIDE FILING DATE.
                    $("#divReportPeriodDates").hide();
                    $("#divReportPeriodDatesTo").hide();

                    $("#divUC_InLieuOfStatements").hide();
                    $("#divUC_24HourNotice").hide();
                    $("#divUC_IndependentExpenditure").hide();
                    $("#divUC_NoActivityReport").hide();
                    $("#divUC_NoticeofNonParticipation").hide();

                    if ($("#lstElectionCycle option:selected").text() == "- Select -") {
                        $("#spnEleYear").hide();
                    }
                    else {
                        $("#spnEleYear").show();
                        $("#lblHEleYear").text($("#lstElectionCycle option:selected").text());
                    }
                    if ($("#lstDisclosurePeriod option:selected").text() == "- Select -") {
                        $("#spnDiclPerd").hide();
                    }
                    else {
                        $("#spnDiclPerd").show();
                        $("#lblHDisclPer").text($("#lstDisclosurePeriod option:selected").text());
                    }

                    // SHOW OFF-CYCLE FILING DATE.
                    $("#divFilingDateDropDown").show();
                    // BIND FILING DATE FOR OFF CYCLE.
                    var options = {};
                    options.url = "@Url.Content("~/DisclosureReportSummary/GetFilingDateOffCycle/")";
                    options.type = "POST";
                    options.data = JSON.stringify(
                        {
                            strElectionYearId: $("#lstElectionCycle option:selected").val().toString(),
                            strOfficeTypeId: $("#lstUCOfficeType option:selected").val().toString(),
                            strFilerId: $("#txtFilerID option:selected").val(),
                            lstDisclosureType: $("#lstDisclosureType option:selected").val(),

                        });
                    options.dataType = "json";
                    options.contentType = "application/json";
                    options.success = function (results) {
                        $("#lstFilingDate").empty();
                        $("#lstFilingDate").append("<option>" + "- Select -" + "</option>");

                        for (var i = 0; i < results.length; i++) {
                            $("#lstFilingDate").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                        }
                        if (sessionStorage.getItem("submitOffCycleFilingDate") != null) {
                            $m("#lstFilingDate option").each(function () {
                                if ($(this).text() == sessionStorage.getItem("submitOffCycleFilingDate").toString()) {
                                    $(this).prop('selected', true).trigger('change');
                                }
                            });
                        }
                        if (results.length.toString() == "1") {
                            $("#lstFilingDate")[0].selectedIndex = 1;
                        }
                    };
                    options.error = function () {
                    };
                    $.ajax(options);
                    // BIND FILING DATE FOR OFF CYCLE.

                    $("#divDisclosurePeriod").show();
                }
            }
        });

        $m("#btnCommonSearchReport").click(function () {
            $.post("@Url.Content("~/DisclosureReportSummary/ValidateFilings/")", {
                txtFilerId: $("#txtFilerID").val(),
                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
            }, function (resultEditFlag) {
                if (resultEditFlag == "TRUE") {
                    $m('#modal_dialog').text("Penalty: Any false information in a Campaign Financial Disclosure Report may be a Class A Misdemeanor, punishable by a fine and / or up to one year imprisonment, pursuant to Section 210.45 of the Penal Law. For further information, contact NYSBOE or your county board of elections. The filing will be submitted. Do you want to continue?");
                    $m("#modal_dialog").dialog({
                        resizable: false,
                        width: '400px',
                        height: 'auto',
                        bgiframe: false,
                        modal: true,
                        closeOnEscape: false,
                        open: function (event, ui) { hideDialogXButton(this); },
                        buttons: {
                            "OK": function () {
                                // Close Confirm Box.
                                $m(this).dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                // Add data
                                $m.ajax({
                                    "url": "@Url.Content("~/DisclosureReportSummary/SubmitFilings_Summery/")",
                                    "data": {
                                        txtFilerId: $("#txtFilerID").val(),
                                        lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                                        lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                                        lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                                        filing_date: $("#txtReportPeriodDatesTo").val(),
                                        lstFilingDate: $m("#lstFilingDate option:selected").text(),
                                        txtReportPeriodDatesTo: sessionStorage.getItem("FilingDate").toString(),
                                        txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
                                        lstElectionType: $("#lstElectionType option:selected").val(),
                                        electionDateId: $m("#lstElectionDate").val(),
                                        strElectionTypeId: $m("#lstElectionType option:selected").val(),
                                    },
                                    "success": tableFilingTransactions,
                                    "dataType": "json",
                                    "type": "POST",
                                    "error": function () {
                                        ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                                    }
                                }).always(function () {
                                    $m("#divLoading").hide();
                                });
                                var options = {};
                                options.url = "@Url.Content("~/DisclosureReportSummary/SubmitFilings_Summery/")";
                                options.type = "GET";
                                options.data = {
                                    txtFilerId: $("#txtFilerID").val(),
                                    lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                                    lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                                    lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                                    filing_date: $("#txtReportPeriodDatesTo").val(),
                                    lstFilingDate: $m("#lstFilingDate option:selected").text(),
                                    txtReportPeriodDatesTo: sessionStorage.getItem("FilingDate").toString(),
                                    txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
                                    lstElectionType: $("#lstElectionType option:selected").val(),
                                    electionDateId: $m("#lstElectionDate").val(),
                                    strElectionTypeId: $m("#lstElectionType option:selected").val(),
                                };
                                options.dataType = "json";
                                options.contentType = "application/json";
                                options.success = function (results) {
                                    if ($("#btnCommonSearchReport").val() == "Amend Disclosure Report") {
                                        window.status = "Amended disclosure report submitted successfully";
                                        ShowDialogBox('EFS', 'Amended disclosure report submitted successfully', 'Ok', '');
                                    } else {
                                        //Also applies to #btnCommonSearchReport").val() == 'Submit Disclosure Report'
                                        window.status = "Disclosure report submitted successfully";
                                        ShowDialogBox('EFS', 'Disclosure report submitted successfully', 'Ok', '');
                                    }

                                    //Get Is Amend Status
                                    $.post("@Url.Content("~/DisclosureReportSummary/GetAmendStatus/")", {
                                        txtFilerID: $("#txtFilerID").val(),
                                        lstElectionCycle: $("#lstElectionCycle option:selected").val(),
                                        lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                                        lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                                        lstElectionType: $("#lstElectionType option:selected").val(),
                                        lstElectionDateId: $("#lstElectionDate option:selected").val(),
                                        lstFilingDate: $m("#lstFilingDate option:selected").text(),
                                        txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                                    }, function (resultData) {
                                        $.each(resultData, function (i, item) {
                                            if (item.IsAmend.toString() == 'YES') {
                                                $("#lblSubmitDate").show();
                                                $("#lblSubmitDate").text("SUBMITTED FILING - Last submission date: " + item.Submit_Date.toString());
                                                $("#btnCommonSearchReport").prop('value', 'Amend Disclosure Report');
                                                $('#btnCommonSearchReport').prop('title', 'Amend Disclosure Report');
                                                $("#btnCommonSearchReport").prop("disabled", true);
                                            }
                                            else {
                                                $("#lblSubmitDate").show();
                                                $("#lblSubmitDate").text("PENDING FILING");
                                                $("#btnCommonSearchReport").prop('value', 'Submit Disclosure Report');
                                                $('#btnCommonSearchReport').prop('title', 'Submit Disclosure Report');
                                                $("#btnCommonSearchReport").prop("disabled", false);
                                            }
                                        });
                                    });
                                };
                                options.error = function () {
                                    ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                                };
                                $.ajax(options);
                            },
                            "Cancel": function () {
                                $m(this).dialog("close");
                            }
                        }
                    });
                }
                else {
                    //ShowDialogBox('EFS', 'Filing(s) belong to prior Disclosure period(s) have not submitted yet. Submit those Filing(s) before submitting this Filing.', 'Ok', '');
                    ShowDialogBox('EFS', 'Unable to submit this filing. The filer has unsubmitted draft(s) of filing(s) covering earlier date range(s). Review all filings under View All Disclosure Reports (search without providing any filter criteria). Submit filings in chronological order to ensure proper mapping of transactions.', 'Ok', '');
                }
            });
        });
        //Reusable way to call GetFilingTransactionsDataSummaryAsEntered.
        function GridBindAsEntered(gridName, filingSchedID) {
            sessionStorage.setFilingSchedIDAsEntered = filingSchedID;

            var selectCountyVal = $("#lstUCCounty option:selected").val();
            var selectMunicipalityVal = $("#lstUCMuncipality option:selected").val();

            if (selectCountyVal == "- Select -" || selectCountyVal == "All") {
                selectCountyVal = "";
                selectMunicipalityVal = "";
            }

            if (selectMunicipalityVal == "- Select -" || selectMunicipalityVal == "All") {
                selectMunicipalityVal = "";
            }
            $m("#divLoading").show();
            tableFilingTransactions = $m('#' + gridName).DataTable({
                "bProcessing": true,
                "stateSave": true,
                "deferRender": true,
                "responsive": true,
                "retrieve": true,
                "columnDefs": [
                    {
                        "targets": [0, 1, 2, 3, 4, 5, 6, 7],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        "targets": [9],
                        "fnCreatedCell": function (cell) {
                            cell.setAttribute('aria-label', "Row Actions");
                        }
                    },
                ],
                "initComplete": function (settings, json) {
                    //Accessibility: Applies various Accessibility features to this dataTable.
                    makeDataTableAccessible($m('#' + gridName).DataTable());
                },
                "fnRowCallback": function (nRow, aaData, iDisplayIndex) {
                    var uniqueID = generateUniqueRowIdForFnRowCallback(iDisplayIndex, nRow);
                    if (gridName == "gridFilingTransactionsAsEntered") {
                        if (aaData[1] != "14") {
                            // 11 = LIABILITY/LOAN FORGIVEN NO EDIT. 15 = Partnership/subcontracor
                            if (aaData[1] == "11" || aaData[1] == "15") {
                                $m('td:eq(1)', nRow).html('');
                            }
                            else {
                                $m('td:eq(1)', nRow).html('<a class="' + gridName + 'editor_edit" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="@Url.Content("~/Content/Images/Edit.png")" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                            }
                        }
                    }
                    else if (aaData[1] == "11") { // LIABILITY/LOAN FORGIVEN NO EDIT.
                        $m('td:eq(1)', nRow).html('');
                    }
                    else if (aaData[1] == "15") { // LIABILITY/LOAN FORGIVEN NO EDIT.
                        $m('td:eq(1)', nRow).html('');
                    }
                    else {
                        $m('td:eq(1)', nRow).html('<a class="editor_edit" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="@Url.Content("~/Content/Images/Edit.png")" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                    }
                    if (aaData[47] == "CAPASFIDAS") {
                        $m("#btnCommonSearchReport").prop("disabled", true);
                    }
                    else {
                        $m("#btnCommonSearchReport").prop("disabled", false);
                    }

                    return nRow;
                },
                "fnDrawCallback": function () {
                    $m("#divLoading").hide();
                    var oSettings = this.fnSettings();
                    var iTotalRecords = oSettings.fnRecordsTotal();
                    if (iTotalRecords < 1) {
                        $m("#btnCommonSearchReport").prop("disabled", true);
                    }
                },
                "fnServerData": function (url, data, callback) {
                    $.ajax({
                        "url": "@Url.Content("~/DisclosureReportSummary/GetFilingTransactionsDataSummaryAsEntered/")",
                        "data": {
                            txtFilerID: $("#txtFilerID").val(),
                            lstElectionCycle: $("#lstElectionCycle option:selected").val(),
                            lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                            lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                            lstElectionType: $("#lstElectionType option:selected").val(),
                            lstElectionDateId: $("#lstElectionDate option:selected").val(),
                            lstFilingDate: $m("#lstFilingDate option:selected").text(),
                            txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                            lstFilingSchedID: sessionStorage.getItem("setFilingSchedIDAsEntered").toString(),
                            countyID: selectCountyVal,
                            municipalityID: selectMunicipalityVal
                        },
                        "success": callback,
                        "dataType": "json",
                        "type": "POST",
                        "error": function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                        }
                    }).always(function () {
                        $m("#divLoading").hide();
                    }).done(function (data) {
                        //Resize columns once the promise is resolved otherwise you may resize to a previous set of data.
                        tableFilingTransactions.columns.adjust().draw(false).responsive.recalc();
                    });;
                },
                "order": [[1, "asc"]]
            });

            $m('#' + gridName).DataTable().ajax.reload();
            tableFilingTransactions.order([1, 'asc']).draw();
            if (@Session["COMM_TYPE_ID"] == "23") {
                tableFilingTransactions.column(48).visible(true);
                tableFilingTransactions.column(49).visible(true);
                tableFilingTransactions.column(50).visible(true);
                tableFilingTransactions.column(51).visible(true);
                tableFilingTransactions.column(52).visible(true);
                tableFilingTransactions.column(53).visible(true);
                tableFilingTransactions.column(54).visible(true);
                tableFilingTransactions.column(55).visible(true);
                tableFilingTransactions.column(56).visible(true);
            }
            else {
                tableFilingTransactions.column(48).visible(false);
                tableFilingTransactions.column(49).visible(false);
                tableFilingTransactions.column(50).visible(false);
                tableFilingTransactions.column(51).visible(false);
                tableFilingTransactions.column(52).visible(false);
                tableFilingTransactions.column(53).visible(false);
                tableFilingTransactions.column(54).visible(false);
                tableFilingTransactions.column(55).visible(false);
                tableFilingTransactions.column(56).visible(false);
            }

            if (@Session["COMM_TYPE_ID"] == "19") {
                tableFilingTransactions.column(61).visible(true);
                tableFilingTransactions.column(62).visible(true);
            }
            else {
                tableFilingTransactions.column(61).visible(false);
                tableFilingTransactions.column(62).visible(false);
            }

            tableFilingTransactions.columns.adjust().draw(false);
            tableFilingTransactions.columns.adjust().responsive.recalc();
            tableFilingTransactions.search('').columns().search('').draw();

            $m('table.dataTable th, table.dataTable td').css("white-space", "normal");
            $m("#divLoading").show();
        }

        function GridBindAllTab(gridName, tableFilingTransRef, filingSchedID) {
            sessionStorage.setFilingSchedID = filingSchedID;
            var selectCountyVal = $("#lstUCCounty option:selected").val();
            var selectMunicipalityVal = $("#lstUCMuncipality option:selected").val();

            if (selectCountyVal == "- Select -" || selectCountyVal == "All") {
                selectCountyVal = "";
                selectMunicipalityVal = "";
            }

            if (selectMunicipalityVal == "- Select -" || selectMunicipalityVal == "All") {
                selectMunicipalityVal = "";
            }
            var tableFilingTransRef = $m('#' + gridName).DataTable({
                "bProcessing": true,
                "stateSave": true,
                "deferRender": true,
                "responsive": true,
                "retrieve": true,
                "columnDefs": [
                    {
                        "targets": [0, 1, 2, 3, 4, 5, 6, 7],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        "targets": [9],
                        "fnCreatedCell": function (cell) {
                            cell.setAttribute('aria-label', "Row Actions");
                        }
                    },
                ],
                "initComplete": function (settings, json) {
                    //Accessibility: Applies various Accessibility features to this dataTable.
                    makeDataTableAccessible($m('#' + gridName).DataTable());
                },
                "fnRowCallback": function (nRow, aaData, iDisplayIndex) {
                    var uniqueID = generateUniqueRowIdForFnRowCallback(iDisplayIndex, nRow);
                    if (gridName == "SchedAGridOpt2"
                        || gridName == "SchedMiscellGridOpt2"
                        || gridName == "SchedExpensesGridOpt2"
                        || gridName == "SchedNotEffBalGridOpt2"
                        || gridName == "SchedAGridOptBySchedule") {
                        if (aaData[1] != "14" && aaData[1] != "15") {
                            $m('td:eq(1)', nRow).html('<a class="' + gridName + 'editor_edit" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="@Url.Content("~/Content/Images/Edit.png")" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                        }
                    } else {
                        if (aaData[1] != "14" && aaData[1] != "15") {
                            $m('td:eq(1)', nRow).html('<a class="' + gridName + 'editor_edit" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="@Url.Content("~/Content/Images/Edit.png")" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                        }
                    }
                    if (aaData[44] == "CAPASFIDAS") {
                        $m("#btnCommonSearchReport").prop("disabled", true);
                    }
                    else {
                        $m("#btnCommonSearchReport").prop("disabled", false);
                    }
                    return nRow;
                },
                "fnDrawCallback": function () {
                    $m("#divLoading").hide();
                },
                "fnServerData": function (url, data, callback) {
                    $m.ajax({
                        "url": "@Url.Content("~/DisclosureReportSummary/GetFilingTransactionsDataSummary/")",
                        "data": {
                            txtFilerID: $("#txtFilerID").val(),
                            lstElectionCycle: $("#lstElectionCycle option:selected").val(),
                            lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                            lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                            lstElectionType: $("#lstElectionType option:selected").val(),
                            lstElectionDateId: $("#lstElectionDate option:selected").val(),
                            lstFilingDate: $m("#lstFilingDate option:selected").text(),
                            txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                            lstFilingSchedID: sessionStorage.getItem("setFilingSchedID").toString(),
                            countyID: selectCountyVal,
                            municipalityID: selectMunicipalityVal
                        },
                        "success": callback,
                        "dataType": "json",
                        "type": "POST",
                        "error": function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                        }
                    }).done(function (data) {
                        //Resize columns once the promise is resolved otherwise you may resolve to a previous set of data.
                        tableFilingTransRef.columns.adjust().draw(false).responsive.recalc();
                    });
                },
                "order": [[1, "asc"]]
            }).clear().draw().ajax.reload();//Since we reuse the same table alot we first clear the old data,re-draw, then call the Ajax source to get new data.
            tableFilingTransRef.search('').columns().search('').draw();
            tableFilingTransRef.order([1, 'asc']).draw();
            if (gridName == "SchedAGridOpt2") {
                tableTab2ContributionGrid = tableFilingTransRef;
                if (@Session["COMM_TYPE_ID"] == "23") {
                    tableTab2ContributionGrid.column(45).visible(true);
                    tableTab2ContributionGrid.column(46).visible(true);
                    tableTab2ContributionGrid.column(47).visible(true);
                    tableTab2ContributionGrid.column(48).visible(true);
                    tableTab2ContributionGrid.column(49).visible(true);
                    tableTab2ContributionGrid.column(50).visible(true);
                    tableTab2ContributionGrid.column(51).visible(true);
                    tableTab2ContributionGrid.column(52).visible(true);
                    tableTab2ContributionGrid.column(53).visible(true);
                }
                else {
                    tableTab2ContributionGrid.column(45).visible(false);
                    tableTab2ContributionGrid.column(46).visible(false);
                    tableTab2ContributionGrid.column(47).visible(false);
                    tableTab2ContributionGrid.column(48).visible(false);
                    tableTab2ContributionGrid.column(49).visible(false);
                    tableTab2ContributionGrid.column(50).visible(false);
                    tableTab2ContributionGrid.column(51).visible(false);
                    tableTab2ContributionGrid.column(52).visible(false);
                    tableTab2ContributionGrid.column(53).visible(false);
                }

                if (@Session["COMM_TYPE_ID"] == "19") {
                    tableTab2ContributionGrid.column(58).visible(true);
                    tableTab2ContributionGrid.column(59).visible(true);
                }
                else {
                    tableTab2ContributionGrid.column(58).visible(false);
                    tableTab2ContributionGrid.column(59).visible(false);
                }

                tableTab2ContributionGrid.columns.adjust().draw(false);
            }
            else if (gridName == "SchedMiscellGridOpt2") {
                tableTab2MiscellGrid = tableFilingTransRef;
                if (@Session["COMM_TYPE_ID"] == "23") {
                    tableTab2MiscellGrid.column(45).visible(true);
                    tableTab2MiscellGrid.column(46).visible(true);
                    tableTab2MiscellGrid.column(47).visible(true);
                    tableTab2MiscellGrid.column(48).visible(true);
                    tableTab2MiscellGrid.column(49).visible(true);
                    tableTab2MiscellGrid.column(50).visible(true);
                    tableTab2MiscellGrid.column(51).visible(true);
                    tableTab2MiscellGrid.column(52).visible(true);
                    tableTab2MiscellGrid.column(53).visible(true);
                }
                else {
                    tableTab2MiscellGrid.column(45).visible(false);
                    tableTab2MiscellGrid.column(46).visible(false);
                    tableTab2MiscellGrid.column(47).visible(false);
                    tableTab2MiscellGrid.column(48).visible(false);
                    tableTab2MiscellGrid.column(49).visible(false);
                    tableTab2MiscellGrid.column(50).visible(false);
                    tableTab2MiscellGrid.column(51).visible(false);
                    tableTab2MiscellGrid.column(52).visible(false);
                    tableTab2MiscellGrid.column(53).visible(false);
                }

                if (@Session["COMM_TYPE_ID"] == "19") {
                    tableTab2MiscellGrid.column(58).visible(true);
                    tableTab2MiscellGrid.column(59).visible(true);
                }
                else {
                    tableTab2MiscellGrid.column(58).visible(false);
                    tableTab2MiscellGrid.column(59).visible(false);
                }
                tableTab2MiscellGrid.columns.adjust().draw(false);
            }
            else if (gridName == "SchedExpensesGridOpt2") {
                tableTab2ExpensesGrid = tableFilingTransRef;
                tableTab2ExpensesGrid.column(45).visible(false);
                tableTab2ExpensesGrid.column(46).visible(false);
                tableTab2ExpensesGrid.column(47).visible(false);
                tableTab2ExpensesGrid.column(48).visible(false);
                tableTab2ExpensesGrid.column(49).visible(false);
                tableTab2ExpensesGrid.column(50).visible(false);
                tableTab2ExpensesGrid.column(51).visible(false);
                tableTab2ExpensesGrid.column(52).visible(false);
                tableTab2ExpensesGrid.column(53).visible(false);
                tableTab2ExpensesGrid.columns.adjust().draw(false);
            }
            else if (gridName == "SchedNotEffBalGridOpt2") {
                tableTab2NoEffectBalGrid = tableFilingTransRef;
                tableTab2NoEffectBalGrid.column(45).visible(false);
                tableTab2NoEffectBalGrid.column(46).visible(false);
                tableTab2NoEffectBalGrid.column(47).visible(false);
                tableTab2NoEffectBalGrid.column(48).visible(false);
                tableTab2NoEffectBalGrid.column(49).visible(false);
                tableTab2NoEffectBalGrid.column(50).visible(false);
                tableTab2NoEffectBalGrid.column(51).visible(false);
                tableTab2NoEffectBalGrid.column(52).visible(false);
                tableTab2NoEffectBalGrid.column(53).visible(false);
                tableTab2NoEffectBalGrid.columns.adjust().draw(false);
            }
            else if (gridName == "SchedAGridOptBySchedule") {
                var sessionStorageSetFilingSchedID = sessionStorage.getItem("setFilingSchedID").toString();
                switch (sessionStorageSetFilingSchedID) {
                    case "1":
                        tableTab3SchedA = tableFilingTransRef;
                        if (@Session["COMM_TYPE_ID"] == "23") {
                            tableTab3SchedA.column(45).visible(true);
                            tableTab3SchedA.column(46).visible(true);
                            tableTab3SchedA.column(47).visible(true);
                            tableTab3SchedA.column(48).visible(true);
                            tableTab3SchedA.column(49).visible(true);
                            tableTab3SchedA.column(50).visible(true);
                            tableTab3SchedA.column(51).visible(true);
                            tableTab3SchedA.column(52).visible(true);
                            tableTab3SchedA.column(53).visible(true);
                        }
                        else {
                            tableTab3SchedA.column(45).visible(false);
                            tableTab3SchedA.column(46).visible(false);
                            tableTab3SchedA.column(47).visible(false);
                            tableTab3SchedA.column(48).visible(false);
                            tableTab3SchedA.column(49).visible(false);
                            tableTab3SchedA.column(50).visible(false);
                            tableTab3SchedA.column(51).visible(false);
                            tableTab3SchedA.column(52).visible(false);
                            tableTab3SchedA.column(53).visible(false);
                        }

                        if (@Session["COMM_TYPE_ID"] == "19") {
                            tableTab3SchedA.column(58).visible(true);
                            tableTab3SchedA.column(59).visible(true);
                        }
                        else {
                            tableTab3SchedA.column(58).visible(false);
                            tableTab3SchedA.column(59).visible(false);
                        }

                        tableTab3SchedA.columns.adjust().draw(false);
                        break;
                    case "2":
                        tableTab3SchedB = tableFilingTransRef;
                        break;
                    case "3":
                        tableTab3SchedC = tableFilingTransRef;
                        break;
                    case "4":
                        tableTab3SchedD = tableFilingTransRef;
                        break;
                    case "5":
                        tableTab3SchedE = tableFilingTransRef;
                        break;
                    case "6":
                        tableTab3SchedF = tableFilingTransRef
                        break;
                    case "7":
                        tableTab3SchedG = tableFilingTransRef;
                        break;
                    case "8":
                        tableTab3SchedH = tableFilingTransRef;
                        break;
                    case "9":
                        tableTab3SchedI = tableFilingTransRef;
                        if (@Session["COMM_TYPE_ID"] == "23") {
                            tableTab3SchedI.column(45).visible(true);
                            tableTab3SchedI.column(46).visible(true);
                            tableTab3SchedI.column(47).visible(true);
                            tableTab3SchedI.column(48).visible(true);
                            tableTab3SchedI.column(49).visible(true);
                            tableTab3SchedI.column(50).visible(true);
                            tableTab3SchedI.column(51).visible(true);
                            tableTab3SchedI.column(52).visible(true);
                            tableTab3SchedI.column(53).visible(true);
                        }
                        else {
                            tableTab3SchedI.column(45).visible(false);
                            tableTab3SchedI.column(46).visible(false);
                            tableTab3SchedI.column(47).visible(false);
                            tableTab3SchedI.column(48).visible(false);
                            tableTab3SchedI.column(49).visible(false);
                            tableTab3SchedI.column(50).visible(false);
                            tableTab3SchedI.column(51).visible(false);
                            tableTab3SchedI.column(52).visible(false);
                            tableTab3SchedI.column(53).visible(false);
                        }
                        if (@Session["COMM_TYPE_ID"] == "19") {
                            tableTab3SchedI.column(58).visible(true);
                            tableTab3SchedI.column(59).visible(true);
                        }
                        else {
                            tableTab3SchedI.column(58).visible(false);
                            tableTab3SchedI.column(59).visible(false);
                        }
                        tableTab3SchedI.columns.adjust().draw(false);
                        break;
                    case "10":
                        tableTab3SchedJ = tableFilingTransRef;
                        break;
                    case "11":
                        tableTab3SchedK = tableFilingTransRef;
                        break;
                    case "12":
                        tableTab3SchedL = tableFilingTransRef;
                        break;
                    case "13":
                        tableTab3SchedM = tableFilingTransRef;
                        break;
                    case "14":
                        tableTab3SchedN = tableFilingTransRef;
                        break;
                    case "15":
                        tableTab3SchedO = tableFilingTransRef;
                        break;
                    case "16":
                        tableTab3SchedP = tableFilingTransRef;
                        break;
                    case "17":
                        tableTab3SchedQ = tableFilingTransRef;
                        break;
                    case "18":
                        tableTab3SchedR = tableFilingTransRef;
                        break;
                    case "19":
                        tableTab3SchedS = tableFilingTransRef;
                        break;
                    case "20":
                        tableTab3SchedT = tableFilingTransRef;
                        break;
                    case "21":
                        tableTab3SchedU = tableFilingTransRef;
                        break;
                    default:
                        break;
                };
            }

            if (@Session["COMM_TYPE_ID"] == "23") {
                tableFilingTransRef.column(45).visible(true);
                tableFilingTransRef.column(46).visible(true);
                tableFilingTransRef.column(47).visible(true);
                tableFilingTransRef.column(48).visible(true);
                tableFilingTransRef.column(49).visible(true);
                tableFilingTransRef.column(50).visible(true);
                tableFilingTransRef.column(51).visible(true);
                tableFilingTransRef.column(52).visible(true);
                tableFilingTransRef.column(53).visible(true);
            }
            else {
                tableFilingTransRef.column(45).visible(false);
                tableFilingTransRef.column(46).visible(false);
                tableFilingTransRef.column(47).visible(false);
                tableFilingTransRef.column(48).visible(false);
                tableFilingTransRef.column(49).visible(false);
                tableFilingTransRef.column(50).visible(false);
                tableFilingTransRef.column(51).visible(false);
                tableFilingTransRef.column(52).visible(false);
                tableFilingTransRef.column(53).visible(false);
            }
            if (@Session["COMM_TYPE_ID"] == "19") {
                tableFilingTransRef.column(58).visible(true);
                tableFilingTransRef.column(59).visible(true);
            }
            else {
                tableFilingTransRef.column(58).visible(false);
                tableFilingTransRef.column(59).visible(false);
            }
            tableFilingTransRef.columns.adjust().draw(false);
            
            $m('table.dataTable th, table.dataTable td').css("white-space", "normal");
        };

        $m("#btnCloseDialog").button().on("click", function () {
            dialog.dialog("close");
        });

        $m("#linkASche").button().on("click", function () {
            dialog.dialog("open");
            GridBindAllTab("SchedAGridOptBySchedule", tableTab3SchedA, "1");
        });

        $m("#linkBSche").button().on("click", function () {
            dialog.dialog("open");
            GridBindAllTab("SchedAGridOptBySchedule", tableTab3SchedB, "2");
        });

        $m("#linkCSche").button().on("click", function () {
            dialog.dialog("open");
            GridBindAllTab("SchedAGridOptBySchedule", tableTab3SchedC, "3");
        });

        $m("#linkDSche").button().on("click", function () {
            dialog.dialog("open");
            GridBindAllTab("SchedAGridOptBySchedule", tableTab3SchedD, "4");
        });

        $m("#linkESche").button().on("click", function () {
            dialog.dialog("open");
            GridBindAllTab("SchedAGridOptBySchedule", tableTab3SchedE, "5");
        });

        $m("#linkGSche").button().on("click", function () {
            dialog.dialog("open");
            GridBindAllTab("SchedAGridOptBySchedule", tableTab3SchedG, "7");
        });

        $m("#linkISche").button().on("click", function () {
            dialog.dialog("open");
            GridBindAllTab("SchedAGridOptBySchedule", tableTab3SchedI, "9");
        });

        $m("#linkLSche").button().on("click", function () {
            dialog.dialog("open");
            GridBindAllTab("SchedAGridOptBySchedule", tableTab3SchedL, "12");
        });

        $m("#linkPSche").button().on("click", function () {
            dialog.dialog("open");
            GridBindAllTab("SchedAGridOptBySchedule", tableTab3SchedP, "16");
        });

        $m("#linkFSche").button().on("click", function () {
            dialog.dialog("open");
            GridBindAllTab("SchedAGridOptBySchedule", tableTab3SchedF, "6");
        });

        $m("#linkDScheExpenses").button().on("click", function () {
            dialog.dialog("open");
            GridBindAllTab("SchedAGridOptBySchedule", tableTab3SchedD, "4");
        });

        $m("#linkHSche").button().on("click", function () {
            dialog.dialog("open");
            GridBindAllTab("SchedAGridOptBySchedule", tableTab3SchedH, "8");
        });

        $m("#linkJSche").button().on("click", function () {
            dialog.dialog("open");
            GridBindAllTab("SchedAGridOptBySchedule", tableTab3SchedJ, "10");
        });

        $m("#linkMSche").button().on("click", function () {
            dialog.dialog("open");
            GridBindAllTab("SchedAGridOptBySchedule", tableTab3SchedM, "13");
        });

        $m("#linkQSche").button().on("click", function () {
            dialog.dialog("open");
            GridBindAllTab("SchedAGridOptBySchedule", tableTab3SchedQ, "17");
        });

        $m("#linkKSche").button().on("click", function () {
            dialog.dialog("open");
            GridBindAllTab("SchedAGridOptBySchedule", tableTab3SchedK, "11");
        });

        $m("#linkNSche").button().on("click", function () {
            dialog.dialog("open");
            GridBindAllTab("SchedAGridOptBySchedule", tableTab3SchedN, "14");
        });

        $m("#linkOSche").button().on("click", function () {
            dialog.dialog("open");
            GridBindAllTab("SchedAGridOptBySchedule", tableTab3SchedO, "15");
        });

        $m("#linkRSche").button().on("click", function () {
            dialog.dialog("open");
            GridBindAllTab("SchedAGridOptBySchedule", tableTab3SchedR, "18");
        });

        $m("#linkSSche").button().on("click", function () {
            dialog.dialog("open");
            GridBindAllTab("SchedAGridOptBySchedule", tableTab3SchedS, "19");
        });

        $m("#linkTSche").button().on("click", function () {
            dialog.dialog("open");
            GridBindAllTab("SchedAGridOptBySchedule", tableTab3SchedT, "20");
        });

        $m("#linkUSche").button().on("click", function () {
            dialog.dialog("open");
            GridBindAllTab("SchedAGridOptBySchedule", tableTab3SchedU, "21");
        });

        $m(".clsSummeryGrid").bind('click', function () {
            var selectedoptionVal = $m("#lstSummaryOptions option:selected").val();
            $m("#divAllScheduled").show();
            $m("#divLoading").show();
            var showOptions = {
                complete: function () {
                    $m("#divLoading").hide();
                }
            }
            if (selectedoptionVal == "1") {
                $m("#divOption1AsEnteredContainer").show(showOptions);
                $m("#divOption2ByTransTypeContainer").hide();
                $m("#divOption3BySchedContainer").hide();


                //Get Opening Balance
                $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_OpeningBalance/")", {
                    filerID: $("#txtFilerID").val(),
                    election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                    office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                    filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                    election_Date: $m("#lstElectionDate option:selected").val(),
                    filing_date: $m("#txtReportPeriodDatesTo").val(),
                    off_cycle_filing_Date: $m("#lstFilingDate option:selected").text()
                }, function (result) {
                    $m("#txtAEOpeningBal").val(parseJsonResultIntoFloatAmmount(result.toString()));
                    $m("#txtAEOpeningBal").prop("disabled", true);
                });

                //Get Closing Balance
                $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_ClosingBalance/")", {
                    filerID: $m("#txtFilerID").val(),
                    election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                    office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                    filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                    filing_date: $m("#txtReportPeriodDatesTo").val(),
                    off_cycle_filing_Date: $m("#lstFilingDate option:selected").text()
                }, function (result) {
                    $m("#txtAEClosingBal").val(parseJsonResultIntoFloatAmmount(result.toString()));
                    $m("#txtAEClosingBal").prop("disabled", true);
                });

                //Tab 1 Grid Bind
                GridBindAsEntered("gridFilingTransactionsAsEntered", "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21");
                $m("#divHeaderForSubmitButton").show();
            }
            else if (selectedoptionVal == "2") {

                $m("#divOption1AsEnteredContainer").hide();
                $m("#divOption2ByTransTypeContainer").show(showOptions);
                $m("#divOption3BySchedContainer").hide();

                //Tab 2 Grid Bind
                GridBindAllTab("SchedAGridOpt2", tableTab2ContributionGrid, "1,2,3,4");
                GridBindAllTab("SchedMiscellGridOpt2", tableTab2MiscellGrid, "5,7,9,12,16,19");
                GridBindAllTab("SchedExpensesGridOpt2", tableTab2ExpensesGrid, "6,4,8,10,13,17,20,21");
                GridBindAllTab("SchedNotEffBalGridOpt2", tableTab2NoEffectBalGrid, "11,14,15,18");

                tableTab2ContributionGrid.search('').columns().search('').draw();
                tableTab2MiscellGrid.search('').columns().search('').draw();
                tableTab2ExpensesGrid.search('').columns().search('').draw();
                tableTab2NoEffectBalGrid.search('').columns().search('').draw();


                //Get Opening Balance
                $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_OpeningBalance/")", {
                    filerID: $m("#txtFilerID").val(),
                    election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                    office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                    filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                    election_Date: $m("#lstElectionDate option:selected").val(),
                    filing_date: $m("#txtReportPeriodDatesTo").val(),
                    off_cycle_filing_Date: $m("#lstFilingDate option:selected").text()
                }, function (resultOpeningbalance) {
                    $m("#txtTTOpeningBal").val(parseJsonResultIntoFloatAmmount(resultOpeningbalance.toString()));
                    $m("#txtTTOpeningBal").prop("disabled", true);
                    //Get Total Miscellanceous Receipts
                    $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_AllSchedBalances/")", {
                        filerID: $m("#txtFilerID").val(),
                        election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                        office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                        filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                        filing_date: $m("#txtReportPeriodDatesTo").val(),
                        filingSchedID: "5,7,9,12,16,19"
                    }, function (resultMisReceipts) {
                        $m("#txtTTTotal_Add_1_4MiscReceipts").val(parseJsonResultIntoFloatAmmount(resultMisReceipts.toString()));
                        $m("#txtTTTotal_Add_1_4MiscReceipts").prop("disabled", true);

                        //Get Total Contribution
                        $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_AllSchedBalances/")", {
                            filerID: $m("#txtFilerID").val(),
                            election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                            office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                            filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                            filing_date: $m("#txtReportPeriodDatesTo").val(),
                            filingSchedID: "1,2,3,4"
                        }, function (resultTotalContri) {
                            $m("#txtTTTotal_Add_1_4Contri").val(parseJsonResultIntoFloatAmmount(resultTotalContri.toString()));
                            $m("#txtTTTotal_Add_1_4Contri").prop("disabled", true);
                            var line4val = parseFloat(resultTotalContri) + parseFloat(resultMisReceipts);
                            if (line4val == Math.floor(line4val)) {
                                line4val = line4val + ".00";
                            }
                            else {
                                line4val = line4val.toFixed(2);
                            }
                            $m("#txtTTTotal_Add_1_4Receipts_Add_2_3").val(parseJsonResultIntoFloatAmmount(line4val));
                            $m("#txtTTTotal_Add_1_4Receipts_Add_2_3").prop("disabled", true);

                            var line5val = parseFloat(resultOpeningbalance) + parseFloat(line4val);

                            //sessionStorage.setTotalLine1and4 = parseFloat(sessionStorage.getItem("setOpeningBal").toString()) + (parseFloat(sessionStorage.getItem("setTotalContributionVal").toString()) + parseFloat(result));
                            if (line5val == Math.floor(line5val)) {
                                line5val = line5val + ".00";
                            }
                            else {
                                line5val = line5val.toFixed(2);
                            }
                            $m("#txtTTTotal_Add_1_4").val(parseJsonResultIntoFloatAmmount(line5val));
                            $m("#txtTTTotal_Add_1_4").prop("disabled", true);

                            //Get Total Expenses
                            $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_AllSchedBalances/")", {
                                filerID: $m("#txtFilerID").val(),
                                election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                                office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                                filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                                filing_date: $m("#txtReportPeriodDatesTo").val(),
                                filingSchedID: "6,4,8,10,13,17,20,21"
                            }, function (resultExpensesTotal) {
                                $m("#txtTTTotalExpenses").val(parseJsonResultIntoFloatAmmount(resultExpensesTotal.toString()));
                                $m("#txtTTTotalExpenses").prop("disabled", true);
                                var line7val = parseFloat(line5val) - parseFloat(resultExpensesTotal);

                                if (line7val == Math.floor(line7val)) {
                                    line7val = line7val + ".00";
                                }
                                else {
                                    line7val = line7val.toFixed(2);
                                }
                                $m("#txtTTBalanceAtPeriod_Sub_6_5").val(parseJsonResultIntoFloatAmmount(line7val));
                                $m("#txtTTBalanceAtPeriod_Sub_6_5").prop("disabled", true);
                            });
                        });
                    });
                });

                $m("#divHeaderForSubmitButton").show();

            }
            else if (selectedoptionVal == "3") {
                $m("#divOption1AsEnteredContainer").hide();
                $m("#divOption2ByTransTypeContainer").hide();
                $m("#divOption3BySchedContainer").show(showOptions);
                $m("#divHeaderForSubmitButton").show();

                //Get Sched A Balance
                $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_AllSchedBalances/")", {
                    filerID: $m("#txtFilerID").val(),
                    election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                    office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                    filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                    filing_date: $m("#txtReportPeriodDatesTo").val(),
                    filingSchedID: 1
                }, function (result) {
                    $m("#txtSCSched_A").val(parseJsonResultIntoFloatAmmount(result.toString()));
                    $m("#txtSCSched_A").prop("disabled", true);
                });

                //Get Sched B Balance
                $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_AllSchedBalances/")", {
                    filerID: $m("#txtFilerID").val(),
                    election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                    office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                    filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                    filing_date: $m("#txtReportPeriodDatesTo").val(),
                    filingSchedID: 2
                }, function (result) {
                    $m("#txtSCSched_B").val(parseJsonResultIntoFloatAmmount(result.toString()));
                    $m("#txtSCSched_B").prop("disabled", true);
                });

                //Get Sched C Balance
                $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_AllSchedBalances/")", {
                    filerID: $m("#txtFilerID").val(),
                    election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                    office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                    filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                    filing_date: $m("#txtReportPeriodDatesTo").val(),
                    filingSchedID: 3
                }, function (result) {
                    $m("#txtSCSched_C").val(parseJsonResultIntoFloatAmmount(result.toString()));
                    $m("#txtSCSched_C").prop("disabled", true);
                });

                //Get Sched D Balance
                $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_AllSchedBalances/")", {
                    filerID: $m("#txtFilerID").val(),
                    election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                    office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                    filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                    filing_date: $m("#txtReportPeriodDatesTo").val(),
                    filingSchedID: 4
                }, function (result) {
                    $m("#txtSCSched_D").val(parseJsonResultIntoFloatAmmount(result.toString()));
                    $m("#txtSCSched_D").prop("disabled", true);
                    $m("#txtSCSched_D_Double").val(parseJsonResultIntoFloatAmmount(result.toString()));
                    $m("#txtSCSched_D_Double").prop("disabled", true);
                });


                //Get Opening Balance
                $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_OpeningBalance/")", {
                    filerID: $m("#txtFilerID").val(),
                    election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                    office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                    filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                    election_Date: $m("#lstElectionDate option:selected").val(),
                    filing_date: $m("#txtReportPeriodDatesTo").val(),
                    off_cycle_filing_Date: $m("#lstFilingDate option:selected").text()
                }, function (resultBSOpeningBalance) {
                    $m("#txtSCOpeningBalance").val(parseJsonResultIntoFloatAmmount(resultBSOpeningBalance.toString()));
                    $m("#txtSCOpeningBalance").prop("disabled", true);

                    //Get Total Miscellanceous Receipts
                    $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_AllSchedBalances/")", {
                        filerID: $m("#txtFilerID").val(),
                        election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                        office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                        filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                        filing_date: $m("#txtReportPeriodDatesTo").val(),
                        filingSchedID: "5,7,9,12,16,19"
                    }, function (resultBSMisReceipts) {
                        $m("#txtSCTotalMiscReceipts").val(parseJsonResultIntoFloatAmmount(resultBSMisReceipts.toString()));
                        $m("#txtSCTotalMiscReceipts").prop("disabled", true);

                        //Get Total Contribution
                        $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_AllSchedBalances/")", {
                            filerID: $m("#txtFilerID").val(),
                            election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                            office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                            filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                            filing_date: $m("#txtReportPeriodDatesTo").val(),
                            filingSchedID: "1,2,3,4"
                        }, function (resultBSTotalContributions) {
                            $m("#txtSCTotalContri").val(parseJsonResultIntoFloatAmmount(resultBSTotalContributions.toString()));
                            $m("#txtSCTotalContri").prop("disabled", true);

                            var line4 = parseFloat(resultBSTotalContributions) + parseFloat(resultBSMisReceipts);

                            if (line4 == Math.floor(line4)) {
                                line4 = line4 + ".00";
                            }
                            else {
                                line4 = line4.toFixed(2);
                            }
                            $m("#txtSCTotalReceipts_Add_2_3").val(parseJsonResultIntoFloatAmmount(line4));
                            $m("#txtSCTotalReceipts_Add_2_3").prop("disabled", true);

                            var line5 = parseFloat(resultBSOpeningBalance) + parseFloat(line4);

                            if (line5 == Math.floor(line5)) {
                                line5 = line5 + ".00";
                            }
                            else {
                                line5 = line5.toFixed(2);
                            }
                            $m("#txtSCTotal_Add_1_4").val(parseJsonResultIntoFloatAmmount(line5));
                            $m("#txtSCTotal_Add_1_4").prop("disabled", true);

                            //Get Total Expenses
                            $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_AllSchedBalances/")", {
                                filerID: $m("#txtFilerID").val(),
                                election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                                office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                                filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                                filing_date: $m("#txtReportPeriodDatesTo").val(),
                                filingSchedID: "6,4,8,10,13,17,20,21"
                            }, function (resultExpenses) {
                                $m("#txtSCTotalExpenses").val(parseJsonResultIntoFloatAmmount(resultExpenses.toString()));
                                $m("#txtSCTotalExpenses").prop("disabled", true);
                                var line7 = parseFloat(line5) - parseFloat(resultExpenses);

                                if (line7 == Math.floor(line7)) {
                                    line7 = line7 + ".00";
                                }
                                else {
                                    line7 = line7.toFixed(2);
                                }
                                $m("#txtSCBalanceAtPeriod_Sub_6_5").val(parseJsonResultIntoFloatAmmount(line7));
                                $m("#txtSCBalanceAtPeriod_Sub_6_5").prop("disabled", true);
                            });
                        });
                    });
                });

                //Get Sched E Balance
                $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_AllSchedBalances/")", {
                    filerID: $m("#txtFilerID").val(),
                    election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                    office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                    filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                    filing_date: $m("#txtReportPeriodDatesTo").val(),
                    filingSchedID: 5
                }, function (result) {
                    $m("#txtSCSched_E").val(parseJsonResultIntoFloatAmmount(result.toString()));
                    $m("#txtSCSched_E").prop("disabled", true);
                });

                //Get Sched G Balance
                $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_AllSchedBalances/")", {
                    filerID: $m("#txtFilerID").val(),
                    election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                    office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                    filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                    filing_date: $m("#txtReportPeriodDatesTo").val(),
                    filingSchedID: 7
                }, function (result) {
                    $m("#txtSCSched_G").val(parseJsonResultIntoFloatAmmount(result.toString()));
                    $m("#txtSCSched_G").prop("disabled", true);
                });

                //Get Sched I Balance
                $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_AllSchedBalances/")", {
                    filerID: $m("#txtFilerID").val(),
                    election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                    office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                    filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                    filing_date: $m("#txtReportPeriodDatesTo").val(),
                    filingSchedID: 9
                }, function (result) {
                    $m("#txtSCSched_I").val(parseJsonResultIntoFloatAmmount(result.toString()));
                    $m("#txtSCSched_I").prop("disabled", true);
                });

                //Get Sched L Balance
                $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_AllSchedBalances/")", {
                    filerID: $m("#txtFilerID").val(),
                    election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                    office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                    filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                    filing_date: $m("#txtReportPeriodDatesTo").val(),
                    filingSchedID: 12
                }, function (result) {
                    $m("#txtSCSched_L").val(parseJsonResultIntoFloatAmmount(result.toString()));
                    $m("#txtSCSched_L").prop("disabled", true);
                });

                //Get Sched P Balance
                $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_AllSchedBalances/")", {
                    filerID: $m("#txtFilerID").val(),
                    election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                    office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                    filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                    filing_date: $m("#txtReportPeriodDatesTo").val(),
                    filingSchedID: 16
                }, function (result) {
                    $m("#txtSCSched_P").val(parseJsonResultIntoFloatAmmount(result.toString()));
                    $m("#txtSCSched_P").prop("disabled", true);
                });

                //Get Sched F Balance
                $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_AllSchedBalances/")", {
                    filerID: $m("#txtFilerID").val(),
                    election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                    office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                    filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                    filing_date: $m("#txtReportPeriodDatesTo").val(),
                    filingSchedID: 6
                }, function (result) {
                    $m("#txtSCSched_F").val(parseJsonResultIntoFloatAmmount(result.toString()));
                    $m("#txtSCSched_F").prop("disabled", true);
                });

                //Get Sched H Balance
                $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_AllSchedBalances/")", {
                    filerID: $m("#txtFilerID").val(),
                    election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                    office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                    filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                    filing_date: $m("#txtReportPeriodDatesTo").val(),
                    filingSchedID: 8
                }, function (result) {
                    $m("#txtSCSched_H").val(parseJsonResultIntoFloatAmmount(result.toString()));
                    $m("#txtSCSched_H").prop("disabled", true);
                });

                //Get Sched J Balance
                $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_AllSchedBalances/")", {
                    filerID: $m("#txtFilerID").val(),
                    election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                    office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                    filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                    filing_date: $m("#txtReportPeriodDatesTo").val(),
                    filingSchedID: 10
                }, function (result) {
                    $m("#txtSCSched_J").val(parseJsonResultIntoFloatAmmount(result.toString()));
                    $m("#txtSCSched_J").prop("disabled", true);
                });

                //Get Sched M Balance
                $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_AllSchedBalances/")", {
                    filerID: $m("#txtFilerID").val(),
                    election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                    office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                    filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                    filing_date: $m("#txtReportPeriodDatesTo").val(),
                    filingSchedID: 13
                }, function (result) {
                    $m("#txtSCSched_M").val(parseJsonResultIntoFloatAmmount(result.toString()));
                    $m("#txtSCSched_M").prop("disabled", true);
                });
                //Get Sched Q Balance
                $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_AllSchedBalances/")", {
                    filerID: $m("#txtFilerID").val(),
                    election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                    office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                    filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                    filing_date: $m("#txtReportPeriodDatesTo").val(),
                    filingSchedID: 17
                }, function (result) {
                    $m("#txtSCSched_Q").val(parseJsonResultIntoFloatAmmount(result.toString()));
                    $m("#txtSCSched_Q").prop("disabled", true);
                });

                //Get Sched K Balance
                $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_AllSchedBalances/")", {
                    filerID: $m("#txtFilerID").val(),
                    election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                    office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                    filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                    filing_date: $m("#txtReportPeriodDatesTo").val(),
                    filingSchedID: 11
                }, function (result) {
                    $m("#txtSCSched_K").val(parseJsonResultIntoFloatAmmount(result.toString()));
                    $m("#txtSCSched_K").prop("disabled", true);
                });
                //Get Sched N Balance
                $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_AllSchedBalances_Sched_N/")", {
                    filerID: $m("#txtFilerID").val(),
                    election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                    office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                    filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                    filing_date: $m("#txtReportPeriodDatesTo").val(),
                    filingSchedID: 14
                }, function (result) {
                    $m("#txtSCSched_N").val(parseJsonResultIntoFloatAmmount(result.toString()));
                    $m("#txtSCSched_N").prop("disabled", true);
                });

                //Get Sched O Balance
                $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_AllSchedBalances/")", {
                    filerID: $m("#txtFilerID").val(),
                    election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                    office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                    filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                    filing_date: $m("#txtReportPeriodDatesTo").val(),
                    filingSchedID: 15
                }, function (result) {
                    $m("#txtSCSched_O").val(parseJsonResultIntoFloatAmmount(result.toString()));
                    $m("#txtSCSched_O").prop("disabled", true);
                });

                //Get Sched R Balance
                $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_AllSchedBalances/")", {
                    filerID: $m("#txtFilerID").val(),
                    election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                    office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                    filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                    filing_date: $m("#txtReportPeriodDatesTo").val(),
                    filingSchedID: 18
                }, function (result) {
                    $m("#txtSCSched_R").val(parseJsonResultIntoFloatAmmount(result.toString()));
                    $m("#txtSCSched_R").prop("disabled", true);
                });

                //Get Sched S Balance
                $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_AllSchedBalances/")", {
                    filerID: $m("#txtFilerID").val(),
                    election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                    office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                    filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                    filing_date: $m("#txtReportPeriodDatesTo").val(),
                    filingSchedID: 19
                }, function (result) {
                    $m("#txtSCSched_S").val(parseJsonResultIntoFloatAmmount(result.toString()));
                    $m("#txtSCSched_S").prop("disabled", true);
                });

                //Get Sched T Balance
                $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_AllSchedBalances/")", {
                    filerID: $m("#txtFilerID").val(),
                    election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                    office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                    filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                    filing_date: $m("#txtReportPeriodDatesTo").val(),
                    filingSchedID: 20
                }, function (result) {
                    $m("#txtSCSched_T").val(parseJsonResultIntoFloatAmmount(result.toString()));
                    $m("#txtSCSched_T").prop("disabled", true);
                });

                //Get Sched U Balance
                $m.post("@Url.Content("~/DisclosureReportSummary/GetSummery_AllSchedBalances/")", {
                    filerID: $m("#txtFilerID").val(),
                    election_Year_ID: $m("#lstElectionCycle option:selected").val(),
                    office_Type_ID: $m("#lstUCOfficeType option:selected").val(),
                    filing_Type_ID: $m("#lstDisclosurePeriod option:selected").val(),
                    filing_date: $m("#txtReportPeriodDatesTo").val(),
                    filingSchedID: 21
                }, function (result) {
                    $m("#txtSCSched_U").val(parseJsonResultIntoFloatAmmount(result.toString()));
                    $m("#txtSCSched_U").prop("disabled", true);
                });
            }
        });
        /*Triggers dialog to edit data in the gridFilingTransactionsAsEntered*/
        $m('#gridFilingTransactionsAsEntered tbody').on('click', 'a.gridFilingTransactionsAsEnterededitor_edit', function (e) {
            e.preventDefault();
            var data = tableFilingTransactions.row($(this).parents('tr')).data();
            editGridDataAsEntered(data);
        });

        $m('#SchedAGridOpt2 tbody').on('click', 'a.SchedAGridOpt2editor_edit', function (e) {
            e.preventDefault();
            var data = tableTab2ContributionGrid.row($(this).parents('tr')).data();
            editGridData(data);
        });

        $m('#SchedMiscellGridOpt2 tbody').on('click', 'a.SchedMiscellGridOpt2editor_edit', function (e) {
            e.preventDefault();
            var data = tableTab2MiscellGrid.row($(this).parents('tr')).data();
            editGridData(data);
        });

        $m('#SchedExpensesGridOpt2 tbody').on('click', 'a.SchedExpensesGridOpt2editor_edit', function (e) {
            e.preventDefault();
            var data = tableTab2ExpensesGrid.row($(this).parents('tr')).data();
            editGridData(data);
        });

        $m('#SchedNotEffBalGridOpt2 tbody').on('click', 'a.SchedNotEffBalGridOpt2editor_edit', function (e) {
            e.preventDefault();
            var data = tableTab2NoEffectBalGrid.row($(this).parents('tr')).data();
            editGridData(data);
        });

        $m('#SchedAGridOptBySchedule tbody').on('click', 'a.SchedAGridOptByScheduleeditor_edit', function (e) {
            e.preventDefault();
            var sessionStorageSetFilingSchedID = sessionStorage.getItem("setFilingSchedID").toString();
            var data = null;
            if (sessionStorageSetFilingSchedID == "1") {
                data = tableTab3SchedA.row($(this).parents('tr')).data();
            }
            else if (sessionStorageSetFilingSchedID == "2") {
                data = tableTab3SchedB.row($(this).parents('tr')).data();
            }
            else if (sessionStorageSetFilingSchedID == "3") {
                data = tableTab3SchedC.row($(this).parents('tr')).data();
            }
            else if (sessionStorageSetFilingSchedID == "4") {
                data = tableTab3SchedD.row($(this).parents('tr')).data();
            }
            else if (sessionStorageSetFilingSchedID == "5") {
                data = tableTab3SchedE.row($(this).parents('tr')).data();
            }
            else if (sessionStorageSetFilingSchedID == "6") {
                data = tableTab3SchedF.row($(this).parents('tr')).data();
            }
            else if (sessionStorageSetFilingSchedID == "7") {
                data = tableTab3SchedG.row($(this).parents('tr')).data();
            }
            else if (sessionStorageSetFilingSchedID == "8") {
                data = tableTab3SchedH.row($(this).parents('tr')).data();
            }
            else if (sessionStorageSetFilingSchedID == "9") {
                data = tableTab3SchedI.row($(this).parents('tr')).data();
            }
            else if (sessionStorageSetFilingSchedID == "10") {
                data = tableTab3SchedJ.row($(this).parents('tr')).data();
            }
            else if (sessionStorageSetFilingSchedID == "11") {
                data = tableTab3SchedK.row($(this).parents('tr')).data();
            }
            else if (sessionStorageSetFilingSchedID == "12") {
                data = tableTab3SchedL.row($(this).parents('tr')).data();
            }
            else if (sessionStorageSetFilingSchedID == "13") {
                data = tableTab3SchedM.row($(this).parents('tr')).data();
            }
            else if (sessionStorageSetFilingSchedID == "14") {
                data = tableTab3SchedN.row($(this).parents('tr')).data();
            }
            else if (sessionStorageSetFilingSchedID == "15") {
                data = tableTab3SchedO.row($(this).parents('tr')).data();
            }
            else if (sessionStorageSetFilingSchedID == "16") {
                data = tableTab3SchedP.row($(this).parents('tr')).data();
            }
            else if (sessionStorageSetFilingSchedID == "17") {
                data = tableTab3SchedQ.row($(this).parents('tr')).data();
            }
            else if (sessionStorageSetFilingSchedID == "18") {
                data = tableTab3SchedR.row($(this).parents('tr')).data();
            }
            else if (sessionStorageSetFilingSchedID == "19") {
                data = tableTab3SchedS.row($(this).parents('tr')).data();
            }
            else if (sessionStorageSetFilingSchedID == "20") {
                data = tableTab3SchedT.row($(this).parents('tr')).data();
            }
            else if (sessionStorageSetFilingSchedID == "21") {
                data = tableTab3SchedU.row($(this).parents('tr')).data();
            }
            if (data != null) {
                editGridData(data);
            } else {
                console.error("Unable to obtain the edit grid data.");
            }
        });

        function editGridDataAsEntered(data) {
            var selectedTransactionType = data[1].toString();

            var varLoanLiabNumber = "";
            if (data[44] != null) {
                varLoanLiabNumber = data[44].toString();
            }
            else {
                varLoanLiabNumber = "";
            }

            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                txtFilerId: $("#txtFilerID").val(),
                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
            }, function (resultEditFlag) {
                    if (resultEditFlag == "TRUE") {

                    //Start - Set controller global session 
                    $.post("@Url.Content("~/DisclosureReportSummary/SetSession/")", {
                        strReportYearID: $m("#lstElectionCycle option:selected").val(),
                        strElectionTypeID: $m("#lstElectionType option:selected").val(),
                        strOfficeTypeID: $m("#lstUCOfficeType option:selected").val()
                            }, function (resultSetSession) {
                    });
                    //End - Set controller global session 
                    // FULL THE SESSION VALUES.
                    sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesFrom").val());
                    sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
                    sessionStorage.setItem("FilerId", $("#txtFilerID option:selected").val());
                    sessionStorage.setItem("CommitteeName", $("#txtCommitteeName").val());
                    sessionStorage.setItem("ElectionCycle", $("#lstElectionCycle option:selected").val());
                    sessionStorage.setItem("OfficeType", $("#lstUCOfficeType option:selected").val());
                    sessionStorage.setItem("County", $("#lstUCCounty option:selected").val());
                    sessionStorage.setItem("Municipality", $("#lstUCMuncipality option:selected").val());
                    sessionStorage.setItem("ElectionType", $("#lstElectionType option:selected").val());
                    sessionStorage.setItem("ElectionDate", $("#lstElectionDate option:selected").val());
                    sessionStorage.setItem("DisclosureType", $("#lstDisclosureType option:selected").val());
                    sessionStorage.setItem("DisclosureTypeText", $("#lstDisclosureType option:selected").text());
                    sessionStorage.setItem("ElectionCycleText", $("#lstElectionCycle option:selected").text());
                    sessionStorage.setItem("DisclosurePeriodText", $("#lstDisclosurePeriod option:selected").text());
                    sessionStorage.setItem("TransactionType", data[1].toString());
                    sessionStorage.setItem("lstResigTermType", $('#lstResigTermType').val());
                    sessionStorage.setItem("loan_Lib_Num", varLoanLiabNumber); //data[44].toString());
                    sessionStorage.setItem("TransNumber", data[45].toString());

                    if (data[1].toString() == "1") { // Monetary Contributions Received From Individual & Partnerships EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.

                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[45].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Monetary Contributions Received From Individual & Partnerships");
                        var urlContributionsCandIndFamily = "@Url.Content("~/ContributionsCandIndFamily/ContributionsCandIndFamily/")";
                        sessionStorage.setItem("IndPart", "Yes"); // Schedule '1' - A
                        sessionStorage.setItem("Corporate", "No"); // Schedule '2' - B
                        sessionStorage.setItem("Other", "No"); // Schedule '3' - C
                        window.location.href = urlContributionsCandIndFamily;
                    }
                    else if (data[1].toString() == "2") { // Monetary Contributions Received From Corporate EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[45].toString());
                        sessionStorage.setItem("EditFlag", "True");

                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Monetary Contributions Received From Corporate");
                        var urlContributionsCandIndFamily = "@Url.Content("~/ContributionsCandIndFamily/ContributionsCandIndFamily/")";
                        sessionStorage.setItem("Corporate", "Yes");
                        sessionStorage.setItem("IndPart", "No");
                        sessionStorage.setItem("Other", "No");
                        window.location.href = urlContributionsCandIndFamily;
                    }
                    else if (data[1].toString() == "3") { // Monetary Contributions Received From All Other EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[45].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Monetary Contributions Received From All Other");
                        var urlContributionsCandIndFamily = "@Url.Content("~/ContributionsCandIndFamily/ContributionsCandIndFamily/")";
                        sessionStorage.setItem("Other", "Yes");
                        sessionStorage.setItem("IndPart", "No");
                        sessionStorage.setItem("Corporate", "No");
                        window.location.href = urlContributionsCandIndFamily;
                    }
                    else if (data[1].toString() == "4") { // In-Kind (Non-Monetary) Contributions Received EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[45].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Contributions - In Kind");
                        var urlContributionInKind = "@Url.Content("~/ContributionInKind/ContributionInKind/")";
                        window.location.href = urlContributionInKind;
                    }
                    else if (data[1].toString() == "5") { // Other Receipts Received EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[45].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Other Receipts");
                        var urlOtherReceiptsReceivedSchedE = "@Url.Content("~/OtherReceiptsReceivedSchedE/OtherReceiptsReceivedSchedE/")";
                        window.location.href = urlOtherReceiptsReceivedSchedE;
                    }
                    else if (data[1].toString() == "6") { // Expenditures/Payments EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[45].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Expenditure Payments");
                        var urlExpenditurePaymentsSchedF = "@Url.Content("~/ExpenditurePaymentsSchedF/ExpenditurePaymentsSchedF/")";
                        window.location.href = urlExpenditurePaymentsSchedF;
                    }
                    else if (data[1].toString() == "7") { // Transfers In EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[45].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Transfer In");
                        var urlOtherReceiptsReceivedSchedE = "@Url.Content("~/TransferInScheG/TransferInScheG/")";
                        window.location.href = urlOtherReceiptsReceivedSchedE;
                    }
                    else if (data[1].toString() == "8") { // Transfers Out EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[45].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Transfer Out");
                        var urlTransferOut = "@Url.Content("~/TransferOutSchedH/TransferOutSchedH/")";
                        window.location.href = urlTransferOut;
                    }
                    else if (data[1].toString() == "9") { // Loans Received EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[45].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Loan Received");
                        var urlOtherReceiptsReceivedSchedE = "@Url.Content("~/LoanReceivedSchedI/LoanReceivedSchedI/")";
                        window.location.href = urlOtherReceiptsReceivedSchedE;
                    }
                    else if (data[1].toString() == "10") { // Loan Repayments EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[45].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Loan Repayments");
                        var urlOtherReceiptsReceivedSchedE = "@Url.Content("~/LoanRepaymentsSchedJ/LoanRepaymentsSchedJ/")";
                        window.location.href = urlOtherReceiptsReceivedSchedE;
                    }
                    else if (data[1].toString() == "11") { // Liabilities/Loans Forgiven EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[45].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Liabilities/Loans Forgiven");
                        var urlOtherReceiptsReceivedSchedE = "@Url.Content("~/LiabilitiesLoansForgivenSchedK/LiabilitiesLoansForgivenSchedK/")";
                        window.location.href = urlOtherReceiptsReceivedSchedE;
                    }
                    else if (data[1].toString() == "12") { // Expenditure Refunds (Increases Balance) EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[45].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Expenditure Refund");
                        var urlOtherReceiptsReceivedSchedE = "@Url.Content("~/ExpenditureRefundsSchedL/ExpenditureRefundsSchedL/")";
                        window.location.href = urlOtherReceiptsReceivedSchedE;
                    }
                    else if (data[1].toString() == "13") { // Contributions Refunded (Decreases Balance) EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[45].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Contributions Refunded");
                        var urlOtherReceiptsReceivedSchedE = "@Url.Content("~/ContributionRefundedSchedM/ContributionRefundedSchedM/")";
                        window.location.href = urlOtherReceiptsReceivedSchedE;
                    }
                    else if (data[1].toString() == "16") { // Non-Campaign Housekeeping Receipts EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[45].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Non-Campaign HouseKeeping Receipts");
                        var urlNonCompHKReceipts = "@Url.Content("~/NonCampaignHousekeepingReceiptsSchedP/NonCampaignHousekeepingReceiptsSchedP/")";
                        window.location.href = urlNonCompHKReceipts;
                    }
                    else if (data[1].toString() == "17") { // Non-Campaign Housekeeping Expenses EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[45].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Non-Campaign HouseKeeping Expenses");
                        var urlNonCompHKExpenses = "@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/NonCampaignHousekeepingExpensesSchedQ/")";
                        window.location.href = urlNonCompHKExpenses;
                    }
                    else if (data[1].toString() == "18") { // Expense Allocation Amoung Candidates EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[45].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Amount Allocated");
                        var urlOtherReceiptsReceivedSchedE = "@Url.Content("~/ExpensesAllocationScheR/ExpensesAllocationScheR/")";
                        window.location.href = urlOtherReceiptsReceivedSchedE;
                    }
                    else if (data[1].toString() == "19") { // Public Fund Receipts EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[45].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Public Fund Receipts");
                        var urlPublicFundReceiptsSchedS = "@Url.Content("~/PublicFundReceiptsSchedS/PublicFundReceiptsSchedS/")";
                        window.location.href = urlPublicFundReceiptsSchedS;
                    }
                    else if (data[1].toString() == "20") { // Qualified Expenditures EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[45].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Qualified Expenditures");
                        var urlPublicFundExpensesSchedT = "@Url.Content("~/PublicFundExpensesSchedT/PublicFundExpensesSchedT/")";
                        window.location.href = urlPublicFundExpensesSchedT;
                    }
                    else if (data[1].toString() == "21") { // Public Fund Repayment EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[45].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Public Fund Repayment");
                        var urlPublicFundRepaymentSchedU = "@Url.Content("~/PublicFundRepaymentSchedU/PublicFundRepaymentSchedU/")";
                        window.location.href = urlPublicFundRepaymentSchedU;
                    }
                }
                else {
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before editing this Transaction.', 'Ok', '');
                }
            });
        }

        function editGridData(data) {
            var selectedTransactionType = data[1].toString();

            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                txtFilerId: $("#txtFilerID").val(),
                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
            }, function (resultEditFlag) {
                    if (resultEditFlag == "TRUE") {

                    //Start - Set controller global session 
                        $.post("@Url.Content("~/DisclosureReportSummary/SetSession/")", {
                            strReportYearID: $m("#lstElectionCycle option:selected").val(),
                            strElectionTypeID: $m("#lstElectionType option:selected").val(),
                            strOfficeTypeID: $m("#lstUCOfficeType option:selected").val()
                        }, function (resultSetSession) {
                        });
                    // FULL THE SESSION VALUES.
                    var varLoanLiabNumber = "";
                    if (data[41] != null) {
                        varLoanLiabNumber = data[41].toString();
                    }
                    else {
                        varLoanLiabNumber = "";
                    }

                    sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesFrom").val());
                    sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
                    sessionStorage.setItem("FilerId", $("#txtFilerID option:selected").val());
                    sessionStorage.setItem("CommitteeName", $("#txtCommitteeName").val());
                    sessionStorage.setItem("ElectionCycle", $("#lstElectionCycle option:selected").val());
                    sessionStorage.setItem("OfficeType", $("#lstUCOfficeType option:selected").val());
                    sessionStorage.setItem("County", $("#lstUCCounty option:selected").val());
                    sessionStorage.setItem("Municipality", $("#lstUCMuncipality option:selected").val());
                    sessionStorage.setItem("ElectionType", $("#lstElectionType option:selected").val());
                    sessionStorage.setItem("ElectionDate", $("#lstElectionDate option:selected").val());
                    sessionStorage.setItem("DisclosureType", $("#lstDisclosureType option:selected").val());
                    sessionStorage.setItem("DisclosureTypeText", $("#lstDisclosureType option:selected").text());
                    sessionStorage.setItem("ElectionCycleText", $("#lstElectionCycle option:selected").text());
                    sessionStorage.setItem("DisclosurePeriodText", $("#lstDisclosurePeriod option:selected").text());
                    sessionStorage.setItem("TransactionType", data[1].toString());
                    sessionStorage.setItem("lstResigTermType", $('#lstResigTermType').val());
                    sessionStorage.setItem("loan_Lib_Num", varLoanLiabNumber);
                    sessionStorage.setItem("TransNumber", data[42].toString());

                    if (data[1].toString() == "1") { // Monetary Contributions Received From Individual & Partnerships EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[42].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Monetary Contributions Received From Individual & Partnerships");
                        var urlContributionsCandIndFamily = "@Url.Content("~/ContributionsCandIndFamily/ContributionsCandIndFamily/")";
                        sessionStorage.setItem("IndPart", "Yes"); // Schedule '1' - A
                        sessionStorage.setItem("Corporate", "No"); // Schedule '2' - B
                        sessionStorage.setItem("Other", "No"); // Schedule '3' - C
                        window.location.href = urlContributionsCandIndFamily;
                    }
                    else if (data[1].toString() == "2") { // Monetary Contributions Received From Corporate EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[42].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Monetary Contributions Received From Corporate");
                        var urlContributionsCandIndFamily = "@Url.Content("~/ContributionsCandIndFamily/ContributionsCandIndFamily/")";
                        sessionStorage.setItem("Corporate", "Yes");
                        sessionStorage.setItem("IndPart", "No");
                        sessionStorage.setItem("Other", "No");
                        window.location.href = urlContributionsCandIndFamily;
                    }
                    else if (data[1].toString() == "3") { // Monetary Contributions Received From All Other EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[42].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Monetary Contributions Received From All Other");
                        var urlContributionsCandIndFamily = "@Url.Content("~/ContributionsCandIndFamily/ContributionsCandIndFamily/")";
                        sessionStorage.setItem("Other", "Yes");
                        sessionStorage.setItem("IndPart", "No");
                        sessionStorage.setItem("Corporate", "No");
                        window.location.href = urlContributionsCandIndFamily;
                    }
                    else if (data[1].toString() == "4") { // In-Kind (Non-Monetary) Contributions Received EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[42].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Contributions - In Kind");
                        var urlContributionInKind = "@Url.Content("~/ContributionInKind/ContributionInKind/")";
                        window.location.href = urlContributionInKind;
                    }
                    else if (data[1].toString() == "5") { // Other Receipts Received EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[42].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Other Receipts");
                        var urlOtherReceiptsReceivedSchedE = "@Url.Content("~/OtherReceiptsReceivedSchedE/OtherReceiptsReceivedSchedE/")";
                        window.location.href = urlOtherReceiptsReceivedSchedE;
                    }
                    else if (data[1].toString() == "6") { // Expenditures/Payments EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[42].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Expenditure Payments");
                        var urlExpenditurePaymentsSchedF = "@Url.Content("~/ExpenditurePaymentsSchedF/ExpenditurePaymentsSchedF/")";
                        window.location.href = urlExpenditurePaymentsSchedF;
                    }
                    else if (data[1].toString() == "7") { // Transfers In EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[42].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Transfer In");
                        var urlOtherReceiptsReceivedSchedE = "@Url.Content("~/TransferInScheG/TransferInScheG/")";
                        window.location.href = urlOtherReceiptsReceivedSchedE;
                    }
                    else if (data[1].toString() == "8") { // Transfers Out EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[42].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Transfer Out");
                        var urlTransferOut = "@Url.Content("~/TransferOutSchedH/TransferOutSchedH/")";
                        window.location.href = urlTransferOut;
                    }
                    else if (data[1].toString() == "9") { // Loans Received EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[42].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Loan Received");
                        var urlOtherReceiptsReceivedSchedE = "@Url.Content("~/LoanReceivedSchedI/LoanReceivedSchedI/")";
                        window.location.href = urlOtherReceiptsReceivedSchedE;
                    }
                    else if (data[1].toString() == "10") { // Loan Repayments EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[42].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Loan Repayments");
                        var urlOtherReceiptsReceivedSchedE = "@Url.Content("~/LoanRepaymentsSchedJ/LoanRepaymentsSchedJ/")";
                        window.location.href = urlOtherReceiptsReceivedSchedE;
                    }
                    else if (data[1].toString() == "11") { // Liabilities/Loans Forgiven EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[42].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Liabilities/Loans Forgiven");
                        var urlOtherReceiptsReceivedSchedE = "@Url.Content("~/LiabilitiesLoansForgivenSchedK/LiabilitiesLoansForgivenSchedK/")";
                        window.location.href = urlOtherReceiptsReceivedSchedE;
                    }
                    else if (data[1].toString() == "12") { // Expenditure Refunds (Increases Balance) EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[42].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Expenditure Refund");
                        var urlOtherReceiptsReceivedSchedE = "@Url.Content("~/ExpenditureRefundsSchedL/ExpenditureRefundsSchedL/")";
                        window.location.href = urlOtherReceiptsReceivedSchedE;
                    }
                    else if (data[1].toString() == "13") { // Contributions Refunded (Decreases Balance) EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[42].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Contributions Refunded");
                        var urlOtherReceiptsReceivedSchedE = "@Url.Content("~/ContributionRefundedSchedM/ContributionRefundedSchedM/")";
                        window.location.href = urlOtherReceiptsReceivedSchedE;
                    }
                    else if (data[1].toString() == "16") { // Non-Campaign Housekeeping Receipts EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[42].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Non-Campaign HouseKeeping Receipts");
                        var urlNonCompHKReceipts = "@Url.Content("~/NonCampaignHousekeepingReceiptsSchedP/NonCampaignHousekeepingReceiptsSchedP/")";
                        window.location.href = urlNonCompHKReceipts;
                    }
                    else if (data[1].toString() == "17") { // Non-Campaign Housekeeping Expenses EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[42].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Non-Campaign HouseKeeping Expenses");
                        var urlNonCompHKExpenses = "@Url.Content("~/NonCampaignHousekeepingExpensesSchedQ/NonCampaignHousekeepingExpensesSchedQ/")";
                        window.location.href = urlNonCompHKExpenses;
                    }
                    else if (data[1].toString() == "18") { // Expense Allocation Amoung Candidates EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[42].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Amount Allocated");
                        var urlOtherReceiptsReceivedSchedE = "@Url.Content("~/ExpensesAllocationScheR/ExpensesAllocationScheR/")";
                        window.location.href = urlOtherReceiptsReceivedSchedE;
                    }
                    else if (data[1].toString() == "19") { // Public Fund Receipts EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[42].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Public Fund Receipts");
                        var urlPublicFundReceiptsSchedS = "@Url.Content("~/PublicFundReceiptsSchedS/PublicFundReceiptsSchedS/")";
                        window.location.href = urlPublicFundReceiptsSchedS;
                    }
                    else if (data[1].toString() == "20") { // Qualified Expenditures EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[42].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Qualified Expenditures");
                        var urlPublicFundExpensesSchedT = "@Url.Content("~/PublicFundExpensesSchedT/PublicFundExpensesSchedT/")";
                        window.location.href = urlPublicFundExpensesSchedT;
                     }
                    else if (data[1].toString() == "21") { // Public Fund Repayment EDIT TRANSACTION
                        // Set the Session Variable for Edit DialogBox.
                        sessionStorage.setItem("ScheduleId", data[1].toString());
                        sessionStorage.setItem("TransNumberEdit", data[42].toString());
                        sessionStorage.setItem("EditFlag", "True");
                        // Changes the Header Name.
                        $("#lblHeader,#lblHeader1,#lblHeader2").text("Public Fund Repayment");
                        var urlPublicFundRepaymentSchedU = "@Url.Content("~/PublicFundRepaymentSchedU/PublicFundRepaymentSchedU/")";
                        window.location.href = urlPublicFundRepaymentSchedU;
                    }
                }
                else {
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before editing this Transaction.', 'Ok', '');
                }
            });
        }

        sessionStorage.setItem("FromDateVal", "01/01/2014");
        sessionStorage.setItem("ToDateVal", "01/01/2018");

        $m("#txtNewFilingDate").datepicker({
            showOn: "button",
            buttonImage: "../../Content/Images/Calendar.png",
            buttonImageOnly: false,
            buttonText: "Select From Date",
            changeMonth: true,
            changeYear: true,
            numberOfMonths: 1,
            minDate: sessionStorage.getItem("FromDateVal").toString(),
            maxDate: sessionStorage.getItem("ToDateVal").toString(),
            dateFormat: 'mm/dd/yy',
            //onChange: function () {
            //    $m("#txtNewFilingDate").valid();
            //},
            onSelect: function () {
                $m("#txtNewFilingDate").removeClass("watermarkHTMLTextBox");
                $m("#txtNewFilingDate").valid();
            }
        }).datepicker();


        $m('.datepicker').attr("placeholder", "MM/DD/YYYY").datepicker();
        $("#txtNewFilingDate").addClass("watermarkHTMLTextBox");
        $("#txtNewFilingDate").blur();

        $m("#txtNewFilingDate").focusin(function () {
            if ($("#txtNewFilingDate").val().toString() != "MM/DD/YYYY") {
                $m("#txtNewFilingDate").removeClass("watermarkHTMLTextBox");
            }
            else {
                $m("#txtNewFilingDate").removeClass("watermarkHTMLTextBox");
            }
        });

        // Watermark TextBox. ////////////////////////////////////////////////////

        // DATE FORMATE....///////////////////////////////////////////////
        $("#txtNewFilingDate").focusout(function () {
            if ($("#txtNewFilingDate").val().toString() != "") {
                if ($("#txtNewFilingDate").val().toString() != "MM/DD/YYYY") {
                    var results = GetValidDateFilter();

                    if (results == "") {
                        var MyDate = new Date($("#txtNewFilingDate").val().toString());
                        var MyDateString;
                        MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                            + ('0' + MyDate.getDate()).slice(-2) + '/'
                            + MyDate.getFullYear();
                        $("#txtNewFilingDate").val("");
                        $("#txtNewFilingDate").val(MyDateString);
                    }
                }
            }
            else {
                $("#txtNewFilingDate").addClass("watermarkHTMLTextBox");
            }
        });

        //Clear Button
        $(".clsCommonClear").bind('click', function () {
            // OTHER THAN OFF-CYCLE FILING DATE
            EnableFilters();
            var validator = $m("#DisclosureReportSummary").validate();
            validator.resetForm();  // clear out the validation errors
            $m("#DisclosureReportSummary")[0].reset();   // clear out the form data

            $("#lblReportPeriodDatesTo").text("* Filing Date");

            $("#divTabOptions").hide();
            $("#divAllScheduled").hide();
            $("#divOption1AsEnteredContainer").hide();
            $("#divOption2ByTransTypeContainer").hide();
            $("#divOption3BySchedContainer").hide();

            // HIDE OFF-CYCLE FILING DATE.
            $("#divFilingDateDropDown").hide();

            $("#lstElectionDate").empty();
            $("#lstElectionDate").append("<option>" + "- Select -" + "</option>");

            // RESIGNATION/TERMINATION NOT MANDAITORY OTHER THAN OFF-CYCLE
            $("#lblReasonforFiling").text("Resignation/Termination");

            //$("#divFilingDateDropDown").hide();
            $("#divElectionDate").show();
            $("#divReportPeriodDates").show();
            $("#divReportPeriodDatesTo").show();
            $("#divFilingReason").show();
            $("#txtReportPeriodDatesTo").prop("disabled", true);
            $("#txtReportPeriodDatesFrom").prop("disabled", true);

            // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
            $("#divFilingDateOffCycle").hide();
            // HIDE TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
            $("#divReportPeriodDates").show();
            $("#divReportPeriodDatesTo").show();
            $("#divFilingReason").show();

            $("#txtReportPeriodDatesTo").addClass("txtWidth");
            $("#txtReportPeriodDatesTo").removeClass("txtWidthOffCycleFilingDate");

            // Remove Disabled
            //$("#txtCommitteeName").prop("disabled", false);
            $("#lstElectionCycle").prop("disabled", false);
            $("#lstElectionType").prop("disabled", false);
            $("#lstElectionDate").prop("disabled", false);
            $("#lstDisclosureType").prop("disabled", false);
            $("#lstDisclosurePeriod").prop("disabled", false);
            $("#txtReportPeriodDatesFrom").prop("disabled", true);
            $("#txtReportPeriodDatesTo").prop("disabled", true);

            // DEFAULT DROPDOWNS.
            $("#lstElectionCycle")[0].selectedIndex = 0;
            $("#lstElectionType")[0].selectedIndex = 0;
            $("#lstUCOfficeType")[0].selectedIndex = 0;
            $("#lstElectionDate")[0].selectedIndex = 0;
            $("#lstDisclosureType")[0].selectedIndex = 0;
            $("#lstDisclosurePeriod")[0].selectedIndex = 0;
            $("#txtReportPeriodDatesFrom")[0].selectedIndex = 0;
            $("#txtReportPeriodDatesTo")[0].selectedIndex = 0;
            $("#txtReportPeriodDatesFrom").val("");
            $("#txtReportPeriodDatesTo").val("");

            $("#lstResigTermType")[0].selectedIndex = 0;
            // DEFAULT DROPDOWNS.

            // ERROR CLEAR
            $m("label[for=txtReportPeriodDatesTo]").text('');
            $m("#txtReportPeriodDatesTo").removeClass("error");

            // Clear the Headig for Filter.
            $("#lblHeader,#lblHeader1,#lblHeader2").text("Disclosure Report Summary");
            $("#spnEleYear").hide();
            $("#spnDiclPerd").hide();
            $("#lblHEleYear").text("");
            $("#lblHDisclPer").text("");
            $("#divShowHideHelp").show();

            $("#divShowHideHelp").hide();
            $("#divHeaderForSubmitButton").hide();

            $("#divCounty").hide();
            $("#divMunicipality").hide();


            //==============================================================================================
            // FIRST TIME PAGE LOAD THEN LOAD ONLY SELECT IN DROPDOWNS IF NOT FROM FIRST TIME....
            // IF ITS COMING FROM ANY SCHEDULE TO MAIN PAGE THEN LOAD DEFAULT VALUES AND RETAIN THE VALUES.
            // FILER TYPE
            $("#lstUCOfficeType").empty();
            $("#lstUCOfficeType").append("<option>" + "- Select -" + "</option>");
            // ELECTION TYPE
            $("#lstElectionType").empty();
            $("#lstElectionType").append("<option>" + "- Select -" + "</option>");
            // ELECTION DATE
            $("#lstElectionDate").empty();
            $("#lstElectionDate").append("<option>" + "- Select -" + "</option>");
            // DISCLOSURE TYPE
            $("#lstDisclosureType").empty();
            $("#lstDisclosureType").append("<option>" + "- Select -" + "</option>");
            // DISCLOSURE PERIOD
            $("#lstDisclosurePeriod").empty();
            $("#lstDisclosurePeriod").append("<option>" + "- Select -" + "</option>");
            // RESIGNATION/TERMINATION
            $("#lstResigTermType").empty();
            $("#lstResigTermType").append("<option>" + "- Not Applicable -" + "</option>");
            // FIRST TIME PAGE LOAD THEN LOAD ONLY SELECT IN DROPDOWNS IF NOT FROM FIRST TIME....
            // IF ITS COMING FROM ANY SCHEDULE TO MAIN PAGE THEN LOAD DEFAULT VALUES AND RETAIN THE VALUES.
            //==============================================================================================
        });

        function SetToSelect(divID) {
            $(divID).empty();
            $(divID).append("<option value=''>- Select -</option>");
        }

        $("#lstElectionCycle").change(function () {
            // MAINTAIN SELECTION CONTROLS
            SetToSelect("#lstUCOfficeType");
            SetToSelect("#lstElectionType");
            SetToSelect("#lstElectionDate");
            //SetToSelect("#lstUCCounty");
            $("#divCounty").hide();
            //SetToSelect("#lstUCMuncipality");
            $("#divMunicipality").hide();
            $("#lstElectionDate").attr("disabled", false);
            SetToSelect("#lstDisclosurePeriod");

            // METHOD POPULATES OFFICETYPES LIST BASED ON REPORTYEAR
            PopulateOfficeTypes("#lstUCOfficeType", $("#lstElectionCycle").val().toString());
        });

        function PopulateOfficeTypes(controlToPopulate, electionYearID) {
            // GET THE DATA FOR THE OFFICETYPE DROPDOWN BASED ON ELECTIONYEAR
            var options = {};
            options.url = "@Url.Content("~/DisclosureReportSummary/GetOfficeTypeData/")";
            options.type = "POST";
            options.data = JSON.stringify(
                {
                    //Parameter to be sent to JsonResult function in ElectionController.  Parameter must have the same name as the one used in function.
                    strElectYearID: electionYearID
                });
            options.dataType = "json";
            options.contentType = "application/json";
            options.success = function (results) {
                SetToSelect(controlToPopulate);
                for (var i = 0; i < results.length; i++) {
                    $(controlToPopulate).append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                }

                if (sessionStorage.getItem("submitFilerType") != null) {
                    $m("#lstUCOfficeType option").each(function () {
                        if ($(this).text() == sessionStorage.getItem("submitFilerType").toString()) {
                            $(this).prop('selected', true).trigger('change');
                        }
                    });
                }
            };
            options.error = function () {
                ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
            };
            $.ajax(options);
        }

        $("#lstUCOfficeType").change(function () {

            // MAINTAIN SELECTION CONTROLS
            if ($("#lstUCOfficeType").val().toString() == "- Select -" || $("#lstUCOfficeType").val().toString() == "") {
                SetToSelect("#lstElectionType");
                SetToSelect("#lstElectionDate");
                //SetToSelect("#lstUCCounty");
                $("#divCounty").hide();
                //SetToSelect("#lstUCMuncipality");
                $("#divMunicipality").hide();
                $("#lstElectionDate").attr("disabled", false);
                SetToSelect("#lstDisclosureType");
                SetToSelect("#lstDisclosurePeriod");
                $("#divDisclosurePeriod").hide();
                return;
            }

            // METHOD POPULATES ELECTION TYPES BASED ON REPORTYEAR AND OFFICETYPE
            PopulateElectionTypes("#lstElectionType", $("#lstElectionCycle").val().toString(), $("#lstUCOfficeType").val().toString());

            //Populate County
            // IF COUNTY IS SELECTED, SHOW COUNTY AND MUNICIPALITY LISTS AND POPULATE COUNTY LIST
            var selectedOfficeType = $("#lstUCOfficeType option:selected").text();
            var electionYearID = $("#lstElectionCycle").val();
            var filerID = $("#txtFilerID").val();
            if (selectedOfficeType == "County") {
                $("#divCounty").show();
                $("#divMunicipality").show();
                // METHOD POPULATES COUNTIES BASED ON OFFICETYPE
                // Bind County
                var options = {};
                options.url = "@Url.Content("~/DisclosureReportSummary/GetCountyDataForFilings/")";
                options.type = "POST";
                options.data = JSON.stringify(
                    {
                        elect_Year_ID: electionYearID,
                        filer_ID: filerID
                    });
                options.dataType = "json";
                options.contentType = "application/json";
                options.success = function (results) {
                    $("#lstUCCounty").empty();
                    $("#lstUCCounty").append("<option>" + "- Select -" + "</option>");
                    for (var i = 0; i < results.length; i++) {
                        $("#lstUCCounty").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                    }
                    //$("#lstUCCounty")[0].selectedIndex = 0;
                    if (sessionStorage.getItem("submitCounty") != null) {
                        $m("#lstUCCounty option").each(function () {
                            if ($(this).text() == sessionStorage.getItem("submitCounty").toString()) {
                                $(this).prop('selected', true).trigger('change');
                            }
                        });
                    }

                };
                options.error = function () {
                    ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
                };
                $.ajax(options);
            }
            else {
                // SET COUNTY AND MUNICIPALITY LISTS TO SELECT AND HIDE DIVS
                //SetToSelect("#lstUCCounty");
                $("#divCounty").hide();
                //SetToSelect("#lstUCMuncipality");
                $("#divMunicipality").hide();
            }
        });

        $("#lstUCCounty").change(function () {
            // Bind Municipality
            var options = {};
            options.url = "@Url.Content("~/DisclosureReportSummary/GetMunicipalityForOffices/")";
            options.type = "POST";
            options.data = JSON.stringify(
                {
                    lstUCCounty: $("#lstUCCounty").val().toString(),
                    lstOfficeType: $("#lstUCOfficeType").val().toString()
                });
            options.dataType = "json";
            options.contentType = "application/json";
            options.success = function (results) {
                //$("#divMunicipality").show();
                $("#lstUCMuncipality").empty();
                $("#lstUCMuncipality").append("<option>" + "- Select -" + "</option>");
                for (var i = 0; i < results.length; i++) {
                    $("#lstUCMuncipality").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                }
                if (sessionStorage.getItem("submitMunicipality") != null) {
                    $m("#lstUCMuncipality option").each(function () {
                        if ($(this).text() == sessionStorage.getItem("submitMunicipality").toString()) {
                            $(this).prop('selected', true).trigger('change');
                        }
                    });
                }
            };
            options.error = function () {
                ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
            };
            $.ajax(options);
        });

        function PopulateElectionTypes(controlToPopulate, electionYearID, officeTypeID) {
            // GET THE DATA FOR THE ELECTIONTYPE DROPDOWN BASED ON ELECTIONYEAR AND OFFICETYPE
            var options = {};
            options.url = "@Url.Content("~/DisclosureReportSummary/GetElectionTypeData/")"; //JsonResult function in ElectionController
            options.type = "POST";
            options.data = JSON.stringify(
                {
                    strElectYearID: electionYearID,
                    strOfficeTypeID: officeTypeID
                });
            options.dataType = "json";
            options.contentType = "application/json";
            options.success = function (results) {
                SetToSelect(controlToPopulate);
                for (var i = 0; i < results.length; i++) {
                    $(controlToPopulate).append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                }

                //Set election type
                if (sessionStorage.getItem("submitElectionType") != null) {
                    $m("#lstElectionType option").each(function () {
                        if ($(this).text() == sessionStorage.getItem("submitElectionType").toString()) {
                            $(this).prop('selected', true).trigger('change');
                        }
                    });
                    //PopulateDisclosureTypes("#lstDisclosureType", $("#lstElectionCycle").val().toString(), $("#lstElectionType").val().toString());
                }
            };
            options.error = function () {
                ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
            };
            $.ajax(options);
        }


        function PopulateElectionDate(controlToPopulate, ElectionYearID, ElectionTypeID, OfficeTypeID) {
            // GET THE ELECTIONDATES BASED ON ELECTIONYEAR, ELECTIONTYPE, AND OFFICETYPE
            var numItems = 0;
            var options = {};
            options.url = "@Url.Content("~/DisclosureReportSummary/GetElectionDateData/")";
            options.type = "POST";
            options.data = JSON.stringify(
                {
                    strElectionYearID: ElectionYearID,
                    strElectionTypeID: ElectionTypeID,
                    strOfficeTypeID: OfficeTypeID
                });
            options.dataType = "json";
            options.contentType = "application/json";
            options.success = function (results) {
                $(controlToPopulate).empty();
                for (var i = 0; i < results.length; i++) {
                    $(controlToPopulate).append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                    numItems = numItems + 1;
                }
                // IF MORE THAN 1 DATE IS RETURNED ENABLE THE DROPDOWN LIST, OTHERWISE NO
                if (numItems > 1)
                    $(controlToPopulate).attr('disabled', false)
                else
                    $(controlToPopulate).attr("disabled", true);
            };
            options.error = function () {
                ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
            };
            $.ajax(options);
        }

        //////////////////////////////////// POPULATE DISCLOSURE TYPES /////////////////////////
        function PopulateDisclosureTypes(controlToPopulate, electionYearID, electionTypeID) {
            // GET THE DISCLOSURETYPES
            var options = {};
            options.url = "@Url.Content("~/DisclosureReportSummary/GetDisclosureTypesForYearAndFilerID/")";
            options.type = "POST";
            options.data = JSON.stringify(
                {
                    strElectionYearID: electionYearID,
                    strElectionTypeID: electionTypeID
                });
            options.dataType = "json";
            options.contentType = "application/json";
            options.success = function (results) {
                //SetToSelect(controlToPopulate);
                $("#lstDisclosureType").empty();
                $("#lstDisclosureType").append("<option>" + "- Select -" + "</option>");
                for (var i = 0; i < results.length; i++) {
                    $(controlToPopulate).append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                }
                //$("#lstDisclosureType")[0].selectedIndex = 1;
                if (sessionStorage.getItem("submitDisclosureType") != null) {
                    $m("#lstDisclosureType option").each(function () {
                        if ($(this).text() == sessionStorage.getItem("submitDisclosureType").toString()) {
                            $(this).prop('selected', true).trigger('change');
                        }
                    });
                    //PopulateDisclosurePeriods("#lstDisclosurePeriod", $("#lstElectionCycle").val().toString(), $("#lstElectionType").val().toString());
                }
            };
            options.error = function () {
                ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
            };
            $.ajax(options);
        }

        //////////////////////////////////// POPULATE DISCLOSURE PERIODS /////////////////////////
        function PopulateDisclosurePeriods(controlToPopulate, electionYearID, electionTypeID) {
            // GET THE DISCLOSUREPERIODS BASED ON ELECTIONTYPE AND DISCLOSURETYPE
            var options = {};
            options.url = "@Url.Content("~/DisclosureReportSummary/GetDisclosurePeriodsForYearAndFilerIDAndElectionType/")";
            options.type = "POST";
            options.data = JSON.stringify(
                {
                    //variable should match name of Controller method parameter
                    strElectionYearID: electionYearID,
                    strElectionTypeID: electionTypeID
                });
            options.dataType = "json";
            options.contentType = "application/json";
            options.success = function (results) {
                SetToSelect(controlToPopulate);
                for (var i = 0; i < results.length; i++) {
                    $(controlToPopulate).append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                }
                if (sessionStorage.getItem("submitDisclosurePeriod") != null) {
                    $m("#lstDisclosurePeriod option").each(function () {
                        if ($(this).text() == sessionStorage.getItem("submitDisclosurePeriod").toString()) {
                            $(this).prop('selected', true).trigger('change');
                        }
                    });
                }
            };
            options.error = function () {
                ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200', 'Ok', '');
            };
            $.ajax(options);
        }

        // FILING DATE OFF-CYCLE CHANGE
        $("#lstFilingDate").change(function () {

            // BIND THE RESIGNATION/TERMINATION EXISTING VALUE.
                // BIND THE RESIGNATION/TERMINATION TYPE IF ALREADY EXISTS FILING....
                // OTHER WISE BIND DEFAULT VALUES WITH SELECT OPTION.
                $.post("@Url.Content("~/ContributionsMonetary/GetResgTermTypeExists/")", {
                    txtFilerId: $("#txtFilerID").val(),
                    lstElectionType: $("#lstElectionType option:selected").val(),
                    lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                    lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                    lstElectionCycleId: $("#lstElectionCycle option:selected").val(),
                    strFilingDateOffCycle: $("#lstFilingDate option:selected").text(),
                    strFilingDate: $("#txtReportPeriodDatesTo").val()
                }, function (results) {
                    // CHECK IF EXIST BIND THE VALUE IF NOT NO BINDING.
                    $.each(results, function (i, item) {

                        // ADD SESSION FILINGS ID AND RESIGNATION TERMATION TYPE ID.
                        sessionStorage.setItem("ResgTermTypeFilingsId", item.FilingsId.toString());
                        sessionStorage.setItem("ResgTermTypeId", item.ResigTermTypeId.toString());

                        if (item.FilingsId != "") {

                            // IF EXIST BUT RESIGNATION/TERMINATION TYPE NULL THEN NOTHIG WILL SET.
                            if (item.ResigTermTypeId != "") {

                                // BIND DEFAULT VALUES THEN SET THE DATABASE VALUE.
                                $.post("@Url.Content("~/ContributionsMonetary/GetResgTermTypeData/")", {
                                }, function (results) {
                                    $("#lstResigTermType").empty();
                                    $("#lstResigTermType").append("<option>" + "- Not Applicable -" + "</option>");
                                    for (var i = 0; i < results.length; i++) {
                                        $("#lstResigTermType").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                                    }

                                    // SET THE DEFAULT VALUE.
                                    $("#lstResigTermType option")
                                        .filter(function () { return $.trim($(this).val()) == item.ResigTermTypeId.toString(); })
                                        .attr("selected", "selected");

                                    if (sessionStorage.getItem("submitOffCycleTermRegID") != null) {
                                        if (sessionStorage.getItem("submitOffCycleTermRegID").toString() == "1") {
                                            $("#lstResigTermType")[0].selectedIndex = 1;
                                        }
                                        else if (sessionStorage.getItem("submitOffCycleTermRegID").toString() == "2") {
                                            $("#lstResigTermType")[0].selectedIndex = 2;
                                        }
                                    }
                                });
                            }
                            else {
                                // IF NOT EXISTS THEN IT WILL LOAD DEFAULT.
                                $.post("@Url.Content("~/ContributionsMonetary/GetResgTermTypeData/")", {
                                }, function (results) {
                                    $("#lstResigTermType").empty();
                                    $("#lstResigTermType").append("<option>" + "- Not Applicable -" + "</option>");
                                    for (var i = 0; i < results.length; i++) {
                                        $("#lstResigTermType").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                                    }
                                    if (sessionStorage.getItem("submitOffCycleTermRegID") != null) {
                                        if (sessionStorage.getItem("submitOffCycleTermRegID").toString() == "1") {
                                            $("#lstResigTermType")[0].selectedIndex = 1;
                                        }
                                        else if (sessionStorage.getItem("submitOffCycleTermRegID").toString() == "2") {
                                            $("#lstResigTermType")[0].selectedIndex = 2;
                                        }
                                    }

                                });
                            }
                        }
                        else {
                            // IF NOT EXISTS THEN IT WILL LOAD DEFAULT.
                            $.post("@Url.Content("~/ContributionsMonetary/GetResgTermTypeData/")", {
                            }, function (results) {
                                $("#lstResigTermType").empty();
                                $("#lstResigTermType").append("<option>" + "- Not Applicable -" + "</option>");
                                for (var i = 0; i < results.length; i++) {
                                    $("#lstResigTermType").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                                }
                                if (sessionStorage.getItem("submitOffCycleTermRegID") != null) {
                                    if (sessionStorage.getItem("submitOffCycleTermRegID").toString() == "1") {
                                        $("#lstResigTermType")[0].selectedIndex = 1;
                                    }
                                    else if (sessionStorage.getItem("submitOffCycleTermRegID").toString() == "2") {
                                        $("#lstResigTermType")[0].selectedIndex = 2;
                                    }
                                }

                            });
                        }
                    });
                });

                // OTHER THAN OFF-CYCLE FILING DATE
                $("#lblReportPeriodDatesTo").text("* Filing Date");

                // HIDE FILING DATE.
                // SHOW NEW FILING DATE - ITS ONLY FOR OFF-CYLCLE.
                $("#divFilingDateOffCycle").hide();
                // HIDE TO DATE FOR OTHER THAN OFF-CYLCE SELECTED.
                $("#divReportPeriodDates").hide();
                $("#divReportPeriodDatesTo").hide();
                //$("#divFilingReason").hide();

                $("#txtReportPeriodDatesTo").removeClass("datepicker");

                $("#txtReportPeriodDatesTo").addClass("txtWidth");
                $("#txtReportPeriodDatesTo").removeClass("txtWidthOffCycleFilingDate");

                $("#txtReportPeriodDatesTo").val();
                $("#txtReportPeriodDatesTo").blur();

                $m("label[for=txtReportPeriodDatesTo]").text('');
                $m("#txtReportPeriodDatesTo").removeClass("error");
        });

        // txtFilerID Change
        $("#txtFilerID").change(function () {
            sessionStorage.setItem("Cnty_PageName", "DisclosureReportSummary");
            var url = '@Url.Action("RoleMap", "RoleMap", new { Cnty_FilerID = "__FilerID__" })';
            window.location.href = url.replace('__FilerID__', $("#txtFilerID option:selected").text());
        });

        function ClearServerSideErrors() {
            //removing error class and error messages in search form
            $m("label[for=lstElectionCycle]").text('');
            $m("#lstElectionCycle").removeClass("error");

            $m("label[for=txtCommitteeName]").text('');
            $m("#txtCommitteeName").removeClass("error");

            $m("label[for=txtFilerID]").text('');
            $m("#txtFilerID").removeClass("error");

            $m("label[for=lstUCOfficeType]").text('');
            $m("#lstUCOfficeType").removeClass("error");

            $m("label[for=lstUCCounty]").text('');
            $m("#lstUCCounty").removeClass("error");

            $m("label[for=lstUCMuncipality]").text('');
            $m("#lstUCMuncipality").removeClass("error");

            $m("label[for=lstElectionType]").text('');
            $m("#lstElectionType").removeClass("error");

            $m("label[for=lstElectionDate]").text('');
            $m("#lstElectionDate").removeClass("error");

            $m("label[for=lstDisclosureType]").text('');
            $m("#lstDisclosureType").removeClass("error");

            $m("label[for=lstDisclosurePeriod]").text('');
            $m("#lstDisclosurePeriod").removeClass("error");

            $m("label[for=txtReportPeriodDatesFrom]").text('');
            $m("#txtReportPeriodDatesFrom").removeClass("error");

            $m("label[for=txtReportPeriodDatesTo]").text('');
            $m("#txtReportPeriodDatesTo").removeClass("error");

        }

        function BindGridData() {
            $("#lstDisclosureType")[0].selectedIndex = 1;
            if ($("#lstDisclosurePeriod option:selected").val() == "12") {
                setTimeout(
                    function () {
                        sessionStorage.setDataTable = "true";
                        $("#divShowHideHelp").removeClass("clsShowHideHelpSec");
                        $("#divShowHideHelp").addClass("clsShowHideHelpSecInMobileTablet");
                        sessionStorage.setItem("FilerId", $("#txtFilerID option:selected").val());
                        sessionStorage.setItem("CommitteeName", $("#txtCommitteeName").val());
                        sessionStorage.setItem("ElectionCycle", $("#lstElectionCycle option:selected").val());
                        sessionStorage.setItem("ElectionType", $("#lstElectionType option:selected").val());
                        sessionStorage.setItem("ElectionDate", $("#lstElectionDate option:selected").val());
                        sessionStorage.setItem("DisclosureType", $("#lstDisclosureType option:selected").val());
                        sessionStorage.setItem("DisclosurePeriod", $("#lstDisclosurePeriod option:selected").val());
                        sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesFrom").val());
                        if ($("#lstDisclosurePeriod option:selected").val() == "12") {
                            sessionStorage.setItem("FilingDate", $("#lstFilingDate option:selected").text());
                        }
                        else {
                            sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
                        }

                        //sessionStorage.setItem("TransactionType", $("#lstTransactionType option:selected").val());
                        sessionStorage.setItem("TransactionTypeId", "true");

                        $("#lstSummaryOptions")[0].selectedIndex = 0;
                        $("#divTabOptions").show();
                        $("#divAllScheduled").show();
                        $("#divOption1AsEnteredContainer").show();
                        $("#divOption2ByTransTypeContainer").hide();
                        $("#divOption3BySchedContainer").hide();

                        //Get Is Amend Status
                        $.post("@Url.Content("~/DisclosureReportSummary/GetAmendStatus/")", {
                            txtFilerID: $("#txtFilerID").val(),
                            lstElectionCycle: $("#lstElectionCycle option:selected").val(),
                            lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                            lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                            lstElectionType: $("#lstElectionType option:selected").val(),
                            lstElectionDateId: $("#lstElectionDate option:selected").val(),
                            lstFilingDate: $m("#lstFilingDate option:selected").text(),
                            txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                        }, function (resultData) {
                            $.each(resultData, function (i, item) {
                                if (item.IsAmend.toString() == 'YES') {
                                    $("#lblSubmitDate").show();
                                    $("#lblSubmitDate").text("SUBMITTED FILING - Last submission date: " + item.Submit_Date.toString());
                                    $("#btnCommonSearchReport").prop('value', 'Amend Disclosure Report');
                                    $('#btnCommonSearchReport').prop('title', 'Amend Disclosure Report');
                                }
                                else {
                                    //$("#lblSubmitDate").hide();
                                    $("#lblSubmitDate").show();
                                    $("#lblSubmitDate").text("PENDING FILING");
                                    $("#btnCommonSearchReport").prop('value', 'Submit Disclosure Report');
                                    $('#btnCommonSearchReport').prop('title', 'Submit Disclosure Report');
                                }
                            });
                            if (resultData.length == 0) {
                                //$("#lblSubmitDate").hide();
                                $("#lblSubmitDate").show();
                                $("#lblSubmitDate").text("PENDING FILING");
                                $("#btnCommonSearchReport").prop('value', 'Submit Disclosure Report');
                                $('#btnCommonSearchReport').prop('title', 'Submit Disclosure Report');
                            }
                        });


                        //Get Opening Balance
                        $.post("@Url.Content("~/DisclosureReportSummary/GetSummery_OpeningBalance/")", {
                            filerID: $("#txtFilerID").val(),
                            election_Year_ID: $("#lstElectionCycle option:selected").val(),
                            office_Type_ID: $("#lstUCOfficeType option:selected").val(),
                            filing_Type_ID: $("#lstDisclosurePeriod option:selected").val(),
                            election_Date: $("#lstElectionDate option:selected").val(),
                            filing_date: $("#txtReportPeriodDatesTo").val(),
                            off_cycle_filing_Date: $("#lstFilingDate option:selected").text()
                        }, function (result) {
                            $("#txtAEOpeningBal").val(parseJsonResultIntoFloatAmmount(result.toString()));
                            $("#txtAEOpeningBal").prop("disabled", true);
                        });

                        //Get Closing Balance
                        $.post("@Url.Content("~/DisclosureReportSummary/GetSummery_ClosingBalance/")", {
                            filerID: $("#txtFilerID").val(),
                            election_Year_ID: $("#lstElectionCycle option:selected").val(),
                            office_Type_ID: $("#lstUCOfficeType option:selected").val(),
                            filing_Type_ID: $("#lstDisclosurePeriod option:selected").val(),
                            filing_date: $("#txtReportPeriodDatesTo").val(),
                            off_cycle_filing_Date: $("#lstFilingDate option:selected").text()
                        }, function (result) {
                            $("#txtAEClosingBal").val(parseJsonResultIntoFloatAmmount(result.toString()));
                            $("#txtAEClosingBal").prop("disabled", true);
                        });

                        //Tab 1 Grid Bind
                        GridBindAsEntered("gridFilingTransactionsAsEntered", "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21");
                        $("#divHeaderForSubmitButton").show();
                        sessionStorage.removeItem("MoveDataToSubmitPage");
                        sessionStorage.removeItem("submitReportYear");
                        sessionStorage.removeItem("submitFilerType");
                        sessionStorage.removeItem("submitElectionType");
                        sessionStorage.removeItem("submitElectionDate");
                        sessionStorage.removeItem("submitDisclosureType");
                        sessionStorage.removeItem("submitDisclosurePeriod");
                        sessionStorage.removeItem("submitOffCycleFilingDate");
                        sessionStorage.removeItem("submitOffCycleTermRegID");
                        sessionStorage.removeItem("submitCounty");
                        sessionStorage.removeItem("submitMunicipality");
                    }, 2000);
            }
            else {
                sessionStorage.setDataTable = "true";
                        $("#divShowHideHelp").removeClass("clsShowHideHelpSec");
                        $("#divShowHideHelp").addClass("clsShowHideHelpSecInMobileTablet");
                        sessionStorage.setItem("FilerId", $("#txtFilerID option:selected").val());
                        sessionStorage.setItem("CommitteeName", $("#txtCommitteeName").val());
                        sessionStorage.setItem("ElectionCycle", $("#lstElectionCycle option:selected").val());
                        sessionStorage.setItem("ElectionType", $("#lstElectionType option:selected").val());
                        sessionStorage.setItem("ElectionDate", $("#lstElectionDate option:selected").val());
                        sessionStorage.setItem("DisclosureType", $("#lstDisclosureType option:selected").val());
                        sessionStorage.setItem("DisclosurePeriod", $("#lstDisclosurePeriod option:selected").val());
                        sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesFrom").val());
                        if ($("#lstDisclosurePeriod option:selected").val() == "12") {
                            sessionStorage.setItem("FilingDate", $("#lstFilingDate option:selected").text());
                        }
                        else {
                            sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
                        }

                        //sessionStorage.setItem("TransactionType", $("#lstTransactionType option:selected").val());
                        sessionStorage.setItem("TransactionTypeId", "true");

                        $("#lstSummaryOptions")[0].selectedIndex = 0;
                        $("#divTabOptions").show();
                        $("#divAllScheduled").show();
                        $("#divOption1AsEnteredContainer").show();
                        $("#divOption2ByTransTypeContainer").hide();
                        $("#divOption3BySchedContainer").hide();

                        //Get Is Amend Status
                        $.post("@Url.Content("~/DisclosureReportSummary/GetAmendStatus/")", {
                            txtFilerID: $("#txtFilerID").val(),
                            lstElectionCycle: $("#lstElectionCycle option:selected").val(),
                            lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                            lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                            lstElectionType: $("#lstElectionType option:selected").val(),
                            lstElectionDateId: $("#lstElectionDate option:selected").val(),
                            lstFilingDate: $m("#lstFilingDate option:selected").text(),
                            txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                        }, function (resultData) {
                            $.each(resultData, function (i, item) {
                                if (item.IsAmend.toString() == 'YES') {
                                    $("#lblSubmitDate").show();
                                    $("#lblSubmitDate").text("SUBMITTED FILING - Last submission date: " + item.Submit_Date.toString());
                                    $("#btnCommonSearchReport").prop('value', 'Amend Disclosure Report');
                                    $('#btnCommonSearchReport').prop('title', 'Amend Disclosure Report');
                                }
                                else {
                                    //$("#lblSubmitDate").hide();
                                    $("#lblSubmitDate").show();
                                    $("#lblSubmitDate").text("PENDING FILING");
                                    $("#btnCommonSearchReport").prop('value', 'Submit Disclosure Report');
                                    $('#btnCommonSearchReport').prop('title', 'Submit Disclosure Report');
                                }
                            });
                            if (resultData.length == 0) {
                                //$("#lblSubmitDate").hide();
                                $("#lblSubmitDate").show();
                                $("#lblSubmitDate").text("PENDING FILING");
                                $("#btnCommonSearchReport").prop('value', 'Submit Disclosure Report');
                                $('#btnCommonSearchReport').prop('title', 'Submit Disclosure Report');
                            }
                        });


                        //Get Opening Balance
                        $.post("@Url.Content("~/DisclosureReportSummary/GetSummery_OpeningBalance/")", {
                            filerID: $("#txtFilerID").val(),
                            election_Year_ID: $("#lstElectionCycle option:selected").val(),
                            office_Type_ID: $("#lstUCOfficeType option:selected").val(),
                            filing_Type_ID: $("#lstDisclosurePeriod option:selected").val(),
                            election_Date: $("#lstElectionDate option:selected").val(),
                            filing_date: $("#txtReportPeriodDatesTo").val(),
                            off_cycle_filing_Date: $("#lstFilingDate option:selected").text()
                        }, function (result) {
                            $("#txtAEOpeningBal").val(parseJsonResultIntoFloatAmmount(result.toString()));
                            $("#txtAEOpeningBal").prop("disabled", true);
                        });

                        //Get Closing Balance
                        $.post("@Url.Content("~/DisclosureReportSummary/GetSummery_ClosingBalance/")", {
                            filerID: $("#txtFilerID").val(),
                            election_Year_ID: $("#lstElectionCycle option:selected").val(),
                            office_Type_ID: $("#lstUCOfficeType option:selected").val(),
                            filing_Type_ID: $("#lstDisclosurePeriod option:selected").val(),
                            filing_date: $("#txtReportPeriodDatesTo").val(),
                            off_cycle_filing_Date: $("#lstFilingDate option:selected").text()
                        }, function (result) {
                            $("#txtAEClosingBal").val(parseJsonResultIntoFloatAmmount(result.toString()));
                            $("#txtAEClosingBal").prop("disabled", true);
                        });

                        //Tab 1 Grid Bind
                        GridBindAsEntered("gridFilingTransactionsAsEntered", "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21");
                        $("#divHeaderForSubmitButton").show();
                        sessionStorage.removeItem("MoveDataToSubmitPage");
                        sessionStorage.removeItem("submitReportYear");
                        sessionStorage.removeItem("submitFilerType");
                        sessionStorage.removeItem("submitElectionType");
                        sessionStorage.removeItem("submitElectionDate");
                        sessionStorage.removeItem("submitDisclosureType");
                        sessionStorage.removeItem("submitDisclosurePeriod");
                        sessionStorage.removeItem("submitOffCycleFilingDate");
                        sessionStorage.removeItem("submitOffCycleTermRegID");
                        sessionStorage.removeItem("submitCounty");
                        sessionStorage.removeItem("submitMunicipality");
            }
            DisableFilters();

        }
    });

    /**
     * Ensures our any string is always floating point numbers. Sometimes in if there is a latency error they can become text.
     * param {String} potentialNumber
     */
    function parseJsonResultIntoFloatAmmount(potentialNumber) {
        var floatNumber = parseFloat(potentialNumber);
        return Object.is(floatNumber, NaN) == true ? "Amount Unavailable" : "$" + floatNumber ;
    }

    function CallHelpFilter() {

        var myWidth = 500;
        var myHeight = 600;

        var left = (screen.width - myWidth) / 2;
        var top = (screen.height - myHeight) / 4;

        window.open("@Url.Content("~/DisclosureReportSummary/DisclosureReportSummarySearchHelp/")", "Help", 'width = 450, height = 600, scrollbars = 1, width = ' + myWidth + ', height = ' + myHeight + ', top = ' + top + ', left = ' + left);
    }

</script>