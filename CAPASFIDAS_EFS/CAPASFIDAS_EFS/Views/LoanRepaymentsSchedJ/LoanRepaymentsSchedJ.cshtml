@{
    ViewBag.Title = ": Loan Repayments Schedule J";
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
}

<form id="LoanReceivedScheJForm">

    @Html.Partial("UserControls/_UC_Alert_Message")
    @Html.Partial("UserControls/_UC_Delete_Message")

    <div id="divMainNew" class="mainDiv">
        <div class="mainLowerDivCSSDesktop">
            <div id="divhide" class="hideShowButtonCSS">
                Filter
                <button id="btnCommonShowHide1" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonShowHide">
                    <img src="~/Content/Images/up20.png" alt="Up/Hide Filter Arrow" />
                </button>
            </div>
            <div id="divshow" class="hideShowButtonCSS">
                Filter
                <button id="btnCommonHideShow1" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonHideShow">
                    <img src="~/Content/Images/down20.png" alt="Down/Show Filter Arrow" />
                </button>
            </div>
        </div>
        <div class="mainLowerDivCSS">
            <div id="divhideForMobile" class="hideShowButtonCSS">
                File a New Disclosure Report
                <div class="paddingleft6emcss floatRight">
                    Filter
                    <button id="btnCommonShowHide2" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonShowHide">
                        <img src="~/Content/Images/up20.png" alt="Up/Hide Filter Arrow" />
                    </button>
                </div>
            </div>
            <div id="divshowForMobile" class="hideShowButtonCSS">
                File a New Disclosure Report
                <div class="paddingleft6emcss floatRight">
                    Filter
                    <button id="btnCommonHideShow2" type="button" class="btn btn-sm buttonTransparent  paddingLeft6emCSS clsbtnCommonHideShow">
                        <img src="~/Content/Images/down20.png" alt="Down/Show Filter Arrow" />
                    </button>
                </div>
            </div>
        </div>
        <div id="divTopSection">
            <div id="selectorItsRpt">
                <div class="divWidth">
                    <fieldset>
                        <legend class="visibleToScreenReaderOnly">Filter Controls Top</legend>
                        <div class="floatRightNew clsShowButtonClass">
                            <input type="button" id="btnCommonSearch1" class="btn btn-default clsCommonSearch clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Apply" title="Apply" style="font-size:12px;" />&nbsp;
                            <input type="button" id="btnCommonClear1" class="btn btn-default clsCommonClear ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />&nbsp;
                            <button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelp();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" class="ButtonImageCSS" title="Help" id="imgHelp1" /></button>
                        </div>
                    </fieldset>
                    <div class="requiredTextFilter">* marks required fields</div>
                    <div id="divFilerID">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilerID">* Filer ID</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("txtFilerID", ViewData["txtFilerID"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblFilerID" })
                        </div>
                    </div>
                    <div id="divFilerType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilerType">* Filer Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.TextBox("txtFilerType", null, new { id = "txtFilerType", @class = "txtWidth txtReportPeriodDatesFrom", aria_labelledby = "lblFilerType" })
                        </div>
                    </div>
                    <div id="divCommitteeName">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblCommitteeName">* Candidate/Committee Name</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("txtCommitteeName", ViewData["txtCommitteeName"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblCommitteeName" })
                        </div>
                    </div>
                    <div id="divElectionCycle">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblElectionCycle">* Report Year</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstElectionCycle", ViewData["lstElectionCycle"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblElectionCycle" })
                        </div>
                    </div>
                    <div id="divOfficeType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblOfficeType">* Election Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstUCOfficeType", null, "- Select -", new { id = "lstUCOfficeType", @class = "spanMobileWidth", aria_labelledby = "lblOfficeType" })
                        </div>
                    </div>
                    <div id="divCounty">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblCounty">* County</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstUCCounty", null, "- Select -", new { @class = "spanMobileWidth", aria_labelledby = "lblCounty" })
                        </div>
                    </div>
                    <div id="divMunicipality">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblMunicipality">* Municipality</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstUCMuncipality", null, "- Select -", new { @class = "spanMobileWidth", aria_labelledby = "lblMunicipality" })
                        </div>
                    </div>
                    <div id="divElectionType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblElectionType">* Report Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstElectionType", ViewData["lstElectionType"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblElectionType" })
                        </div>
                    </div>
                    <div id="divElectionDate">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblElectionDate">* Election Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstElectionDate", ViewData["lstElectionDate"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblElectionDate" })
                        </div>
                    </div>
                    <div id="divDisclosureType">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblDisclosureType">* Disclosure Type</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstDisclosureType", ViewData["lstDisclosureType"] as SelectList, new { @class = "spanMobileWidth", aria_labelledby = "lblDisclosureType" })
                        </div>
                    </div>
                    <div id="divDisclosurePeriod">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblDisclosurePeriod">* Disclosure Period</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstDisclosurePeriod", null, new { @class = "spanMobileWidth", aria_labelledby = "lblDisclosurePeriod" })
                        </div>
                    </div>

                    <div id="divReportPeriodDates">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblReportPeriodDatesFrom">* Cut off Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.TextBox("searchTerm", null, new { id = "txtReportPeriodDatesFrom", @class = "txtWidth", aria_labelledby = "lblReportPeriodDatesFrom" })
                        </div>
                    </div>
                    <div id="divFilingDateDropDown">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilingDate">* Filing Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstFilingDate", ViewData["lstFilingDate"] as SelectList, "- Select -", new { @class = "spanMobileWidth lstFilingDate", aria_labelledby = "lblFilingDate" })
                        </div>
                    </div>
                    <div id="divReportPeriodDatesTo">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblReportPeriodDatesTo">* Filing Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.TextBox("searchTerm", null, new { id = "txtReportPeriodDatesTo", @class = "txtWidth", aria_labelledby = "lblReportPeriodDatesTo" })
                        </div>
                    </div>

                    @* OFFICE CYCLE FILING DATE *@
                    <div id="divFilingDateOffCycle">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblFilingDateOffCycle">* New Filing Date</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            <input type="text" id="txtNewFilingDate" name="txtNewFilingDate" class="txtWidth txtCurrentDateCls" maxlength="10" aria-labelledby = "lblFilingDateOffCycle"/>
                        </div>
                    </div>
                    @* OFFICE CYCLE FILING DATE *@
                    <div id="divFilingReason">
                        <div class="verticalCSSDestop lblCSS">
                            <span id="lblReasonforFiling">Resignation/Termination</span>
                        </div>
                        <div class="verticalCSSDestop DDLCSS">
                            @Html.DropDownList("lstResigTermType", ViewData["lstResigTermType"] as SelectList, "- Select -", new { @class = "spanMobileWidth lstFilingDate", aria_labelledby = "lblReasonforFiling" })
                        </div>
                    </div>
                    <div class="floatRightNew" style="padding-bottom: 2em;">
                        <fieldset>
                            <legend class="visibleToScreenReaderOnly">Filter Controls Bottom</legend>
                            <input type="button" id="btnCommonSearch2" class="btn btn-default clsCommonSearch ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Apply" title="Search" style="font-size:12px;" />&nbsp;
                            <input type="button" id="btnCommonClear2" class="btn btn-default clsCommonClear ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />&nbsp;
                            <button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelp();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" class="ButtonImageCSS" title="Help" id="imgHelp2" /></button>
                        </fieldset>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="floatRight paddingRight3em paddingTop0pt6em">
        <p><button type="button" class="btn btn-sm buttonTransparent" onclick="CallHelpSchedJ();"><img src="~/Content/Images/help.png" alt="Question/Help Icon (Opens in new window)" class="ButtonImageCSS" title="Help Schedule J" id="imgHelp3" /></button></p>
    </div>

    <div id="divBreadCrumb" class="breadCrumbDivCSS">
        <nav aria-label="Breadcrumbs" id="pBreadCrumb" class="FontSizeCss">
            <ol class="breadcrumb">
                <li>@Html.ActionLink("File a Disclosure Report", "ContributionsMonetary", "ContributionsMonetary", null, new { @class = "lnkLogout" })</li>
                <li class="active">Loan Payments</li>
            </ol>
        </nav>
        <div id="divHeader" class="paddingtop3pt5">
            <h1>
                <span id="lblHeader1">File a Disclosure Report</span> -
                <span id="lblHEleYear">File a Disclosure Report</span> -
                <span id="lblHDisclPer">File a Disclosure Report</span>
            </h1>
        </div>
        <div id="divHeader2">
            <div class="paddingtoppt5 paddingtoppt5TS">
                <h3><span id="lblHeader2">Loan Payments</span></h3>
            </div>
        </div>
    </div>
    <div id="divGrid" class="divGridCSSTransferin">
        @Html.Partial("UserControls/_UC_Loding")
        @Html.Partial("UserControls/_UC_GridCommonControl")
        <div id="divUCLoanRepayLoanRec" class="paddingTop1em">
            @Html.Partial("UserControls/_UC_LoanRepayment_LoanReceived_Grid")
        </div>
        <div id="divUCLoanRecLoanRepay" class="paddingTop1em">
            @Html.Partial("UserControls/_UC_LoanReceived_LoanRepayment_Grid")
        </div>
        <div id="divUCLoanRecLoanForgiven" class="paddingTop1em">
            @Html.Partial("UserControls/_UC_LoanReceived_LoanForgiven_Grid")
        </div>
        <div id="divUCLoanRecOutLoans" class="paddingTop1em">
            @Html.Partial("UserControls/_UC_LoanReceived_OutstandingLoans_Grid")
        </div>
    </div>
</form>
<div id="dialog-form_Sched_J" title="Add/Edit Transaction">
    <form id="DialogBoxSchedJForm">
        <div class="divWidthSchedABC">
            <div class="requiredTextFilter">* marks required fields</div>
            <div id="hSearch" class="headerDBLiability">
                <span>Search Original Loans</span>
            </div>
            <div id="hAddScheJ" class="headerDBLiability">
                <span>Add/Edit Loan Payment</span>
            </div>
            <div id="divSearchLoans">
                <div id="divOriginalName">
                    <div id="lstSearchName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblSearchName">* Original Name</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstSearchName", ViewData["lstSearchName"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblSearchName" })
                    </div>
                </div>
                <div id="divOriginalAmount">
                    <div id="lstSearchAmount_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                       <span id="lblSearchAmount">* Original Amount $</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstSearchAmount", null, "- Select -", new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblSearchAmount" })
                    </div>
                </div>
                <div id="divOriginalDate">
                    <div id="lstSearchDate_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblSearchDate">* Original Date</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstSearchDate", null, "- Select -", new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblSearchDate" })
                    </div>
                </div>
            </div>
            <div id="divAdd" style="width: 100%;">
                <div id="divLoanRepay">
                    <div id="txtCurrentDateLoanRepay_validate" class="verticalCSSDestopForError">
                    </div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblDateRcvd">* Loan Repaid</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        <input type="text" id="txtCurrentDateLoanRepay" name="txtCurrentDateLoanRepay" class="datepicker txtWidthForDateSched_ABC txtCurrentDateCls" maxlength="10" aria-labelledby = "lblDateRcvd"/>
                    </div>
                </div>
                <div id="divLoanerCode">
                    <div id="lstLoanerCode_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblLoanerCode">* Lender Code</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstLoanerCode", ViewData["lstLoanerCode"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblLoanerCode" })
                    </div>
                </div>
                <div id="divLenderName">
                    <div id="txtLenderName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblLenderName">* Lender Name</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtLenderName", null, new { id = "txtLenderName", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "60", aria_labelledby = "lblLenderName" })
                    </div>
                </div>
                <div id="divLenderFirstName">
                    <div id="txtLenderFirstName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblLenderFirstName">* First Name</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtLenderFirstName", null, new { id = "txtLenderFirstName", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "30", aria_labelledby = "lblLenderFirstName" })
                    </div>
                </div>
                <div id="divLenderMiddleName">
                    <div id="txtLenderMIName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblLenderMiddleName">Middle Name</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtLenderMIName", null, new { id = "txtLenderMIName", @class = "txtWidthForDialogSched_A", @maxlength = "30", aria_labelledby = "lblLenderMiddleName" })
                    </div>
                </div>
                <div id="divLenderLastName">
                    <div id="txtLenderLastName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblLenderLastName">* Last Name</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtLenderLastName", null, new { id = "txtLenderLastName", @class = "txtWidthForDialogSched_A required zIndexCSS", @maxlength = "30", aria_labelledby = "lblLenderLastName" })
                    </div>
                </div>
                <div id="tdCountryContributionChk">
                    <div class="verticalCSSDestopForLableSched_ABC lblCSSAdd">
                        <span id="lblOtherCountry">Other Country</span>
                    </div>
                    <div class="verticalCSSDestopForCheckBoxSched_ABC DDLCSSAdd">
                        @Html.CheckBox("chkCountry", false, new { @class = "txtWidthForDialogSched_ABC_CountryChkbox", aria_labelledby = "lblOtherCountry" })
                    </div>
                </div>
                <div id="tdCountryContributionTxt">
                    <div id="txtCountry_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSched_ABC lblCSSAdd">
                        <span id="lblCountry">* Country</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSched_ABC DDLCSSAdd">
                        @Html.TextBox("txtCountry", null, new { id = "txtCountry", @class = "txtWidthForDialogSched_A required", @maxlength = "30", aria_labelledby = "lblCountry" })
                    </div>
                </div>
                <div id="divStreetAddress">
                    <div id="txtStreetName_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblStreetName">* Street Address</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtStreetName", null, new { id = "txtStreetName", @class = "txtWidthForDialogSched_A", @maxlength = "60", aria_labelledby = "lblStreetName" })
                    </div>
                </div>

                <div id="divCity">
                    <div id="txtCity_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblCity">* City</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtCity", null, new { id = "txtCity", @class = "txtWidthForDialogSched_A", @maxlength = "30", aria_labelledby = "lblCity" })
                    </div>
                </div>
                <div id="divState">
                    <div id="txtState_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblState">* State</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtState", null, new { id = "txtState", @class = "txtWidthForDialogSched_A", @maxlength = "2", aria_labelledby = "lblState" })
                    </div>
                </div>

                <div id="divZip5">
                    <div id="txtZipCode_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblZip5">* Zip Code</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtZipCode", null, new { id = "txtZipCode", @class = "txtWidthForDialogSched_A", @maxlength = "10", aria_labelledby = "lblZip5" })
                    </div>
                </div>
                <div id="tdMethod">
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblMethod">* Method</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.DropDownList("lstMethod", ViewData["lstMethod"] as SelectList, new { @class = "txtWidthForDialogSched_A", aria_labelledby = "lblMethod" })
                    </div>
                </div>
                <div id="tdCheck">
                    <div id="txtCheck_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblCheck">* Check #</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtCheck", null, new { id = "txtCheck", @class = "txtWidthForDialogSched_A required", @maxlength = "30", aria_labelledby = "lblCheck" })
                    </div>
                </div>
                <div id="tdOriginalDate">
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lbltdOriginalDate">Original Date</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txttdOriginalDate", null, new { id = "txttdOriginalDate", @class = "txtWidthForDialogSched_A required", aria_labelledby = "lbltdOriginalDate" })
                    </div>
                </div>
                <div id="tdOriginalAmount">
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lbltdOriginalAmount">Original Amount $ </span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txttdOriginalAmount", null, new { id = "txttdOriginalAmount", @class = "txtWidthForDialogSched_A required", aria_labelledby = "lbltdOriginalAmount" })
                    </div>
                </div>
                <div id="tdOutstandingAmount">
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lbltdOutStandingAmount">Outstanding Amount $ </span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txttdOutstandingAmount", null, new { id = "txttdOutstandingAmount", @class = "txtWidthForDialogSched_A required", aria_labelledby = "lbltdOutStandingAmount" })
                    </div>
                </div>
                <div id="divAmount">
                    <div id="txtAmt_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblAmount">* Amount Repaid $</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtAmt", null, new { id = "txtAmt", @class = "txtWidthForDialogSched_A required", @maxlength = "12", aria_labelledby = "lblAmount" })
                    </div>
                </div>

                <div id="divExplanation">
                    <div id="txtExplanationCommon_validate" class="verticalCSSDestopForError"></div>
                    <div class="verticalCSSDestopForLableSchedABC lblCSSAdd">
                        <span id="lblExplanation">Explanation</span>
                    </div>
                    <div class="verticalCSSDestopForTextboxSchedABC DDLCSSAdd">
                        @Html.TextBox("txtExplanationCommon", null, new { id = "txtExplanationCommon", @class = "txtWidthForDialogSched_A", @maxlength = "250", aria_labelledby = "lblExplanation" })
                    </div>
                </div>
            </div>
            <div id="divButtonSection" style="width:100%">
                <div id="AddUpdateBtnIdSchedA" class="AddLeftCSSSchedABC">
                    <input type="button" id="btnPreviousDialogForSearch" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="<< Previous" title="Previous" style="font-size:12px;" />
                    <input type="button" id="btnNextDialogForSearch" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Next >>" title="Next" style="font-size:12px;" />
                    <input type="button" id="btnUpdateDialog" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Save" title="Save" style="font-size:12px;" />
                    <input type="button" id="btnAddDialog" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Save" title="Save" style="font-size:12px;" />
                    <input type="button" id="btnClearDialog" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Clear" title="Clear" style="font-size:12px;" />
                    <input type="button" id="btnCloseDialog" class="btn btn-default clsSetPreserences ui-button ui-widget ui-state-default ui-corner-all" name="Command" value="Close" title="Close" style="font-size:12px;" />
                </div>
            </div>
        </div>
    </form>
</div>

<script>
    $m = jQuery.noConflict();

    function CallHelpSchedJ() {

        var myWidth = 1050;
        var myHeight = 550;

        var left = (screen.width - myWidth) / 2;
        var top = (screen.height - myHeight) / 4;

        window.open("../../LoanRepaymentsSchedJ/GetScheduleJHelpPopUp", "Help", 'width=550, height=600,scrollbars=1, width=' + myWidth + ', height=' + myHeight + ', top=' + top + ', left=' + left);
    }

        $('#menuNav').css('opacity', 0);
        $('#LoanReceivedScheJForm').css('opacity', 0);
        $('#dialog-form_Sched_J').css('opacity', 0);
        $('#divWelcomeBanner').css('opacity', 0);
        $(window).on('load', function () {
            $('#menuNav').css('opacity', 1);
            $('#LoanReceivedScheJForm').css('opacity', 1);
            $('#dialog-form_Sched_J').css('opacity', 1);
            $('#divWelcomeBanner').css('opacity', 1);
        });

    $m(document).ready(function () {

        var tableFilingTransactions = '';
        $m("#txtAmt").attr('aria-required', true);
        $("#main").addClass("SetHeightTransferIn");
        $("#main").removeClass("SetHeight");


        $("#lblAllTransText").text("All Transactions: " + sessionStorage.getItem("ElectionCycleText").toString() + " - " + sessionStorage.getItem("DisclosurePeriodText").toString());

        // Common Function in EFS-Validation.js file - Start
        validatePage("DialogBoxSchedJForm");
        LefthandFilterValues();
        // Common Function in EFS-Validation.js file - ENd

        /// Dialog Box Code /////////////////////////////////////////////////////////////////////

        var dialog;
        dialog = $m("#dialog-form_Sched_J").dialog({
            autoOpen: false,
            resizable: true,
            height: 'auto',
            width: 456,
            position: {
                my: "center top",
                at: "center top+200"
            },
            modal: true,
            resizable: false,
            closeOnEscape: false,
            open: function (event, ui) { hideDialogXButton(this); }
        });

        $(window).resize(function () {
            //// get the screen height and width
            if ($(window).width() < 500) {
                dialog = $m("#dialog-form_Sched_J").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 300,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 500 && $(window).width() <= 900) {
                dialog = $m("#dialog-form_Sched_J").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 456,
                    modal: true,
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
            else if ($(window).width() > 900) {
                dialog = $m("#dialog-form_Sched_J").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 'auto',
                    width: 456,
                    modal: true,
                    dialogClass: 'DialogCustomStyle',
                    open: function (event, ui) { hideDialogXButton(this); }
                });
            }
        }).resize();


        $("#main").addClass("SetHeightAssignReview");
        $("#main").removeClass("SetHeight");
        sessionStorage.setDataTable = "true";

        $("#lstLoanerCode").prop("disabled", true);
        $("#txttdOriginalDate").prop("disabled", true);
        $("#txttdOriginalAmount").prop("disabled", true);
        $("#txttdOutstandingAmount").prop("disabled", true);

        $m("#btnAddNewTransaction").button().on("click", function () {
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                txtFilerId: $("#txtFilerID").val(),
                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }, function (resultEditFlag) {
                if (resultEditFlag == "TRUE") {

                    dialog.dialog("open");
                    var validator = $m("#DialogBoxSchedJForm").validate();
                    validator.resetForm();  // clear out the validation errors
                    $m("#DialogBoxSchedJForm")[0].reset();   // clear out the form data
                    sessionStorage.setItem("AddEditCloseStatus", "Add");
                    $("#divUCLoanRepayLoanRec").hide();
                    $("#divUCLoanRecLoanRepay").hide();
                    $("#divUCLoanRecLoanForgiven").hide();
                    $("#divUCLoanRecOutLoans").hide();
                    $("#divShowPartnerAdddataNCR").hide();
                    $("#txtCurrentDateLoanRepay").removeClass("ui-state-error error");
                    $("#lstLoanerCode").removeClass("ui-state-error error");
                    $("#txtLenderName").removeClass("ui-state-error error");
                    $("#txtLenderFirstName").removeClass("ui-state-error error");
                    $("#txtLenderMIName").removeClass("ui-state-error error");
                    $("#txtLenderLastName").removeClass("ui-state-error error");
                    $("#txtCountry").removeClass("ui-state-error error");
                    $("#txtStreetName").removeClass("ui-state-error error");
                    $("#txtCity").removeClass("ui-state-error error");
                    $("#txtState").removeClass("ui-state-error error");
                    $("#txtZipCode").removeClass("ui-state-error error");
                    $("#txtCheck").removeClass("ui-state-error error");
                    $("#txtAmt").removeClass("ui-state-error error");
                    $("#txtExplanationCommon").removeClass("ui-state-error error");

                    $("#btnUpdateDialog").hide();
                    $("#btnAddDialog").show();

                    $("#lblExplanation").text("Explanation");
                    $("#txtCurrentDateLoanRepay").blur();
                    $("#txtZipCode").blur();
                    $("#txtAmt").blur();

                    $("#txtCountry").val("United States");
                    $("#txtCountry").prop("disabled", true);
                    $("#chkCountry").prop('checked', false);
                    $("#txtState").prop('maxLength', '2');
                    $("#lstMethod")[0].selectedIndex = 0;
                    $("#tdCheck").hide();

                    $("#divLenderName").hide();
                    $("#divLenderFirstName").show();
                    $("#divLenderMiddleName").show();
                    $("#divLenderLastName").show();

                    $("#txtCurrentDateLoanRepay").focus();
                    $m("label[for=txtCurrentDateLoanRepay]").text('');
                    $m("#txtCurrentDateLoanRepay").removeClass("error");

                    $("#hSearch").show();
                    $("#hAddScheJ").hide();
                    $("#divSearchLoans").show();
                    $("#divAdd").hide();
                    $("#lstSearchAmount").prop("disabled", true);
                    $("#lstSearchDate").prop("disabled", true);
                    $("#divOriginalName").show();
                    //Button Show/Hide
                    $("#btnPreviousDialogForSearch").hide();
                    $("#btnNextDialogForSearch").show();
                    $("#btnUpdateDialog").hide();
                    $("#btnAddDialog").hide();

                    $m("#lstSearchName").focus();

                    // Bind Committee
                    var options = {};
                    options.url = "@Url.Content("~/LoanRepaymentsSchedJ/GetSearchName/")";
                    options.type = "POST";
                    options.data = null;
                    options.dataType = "json";
                    options.contentType = "application/json";
                    options.success = function (results) {
                        $("#lstSearchName").empty();
                        $("#lstSearchName").append("<option>" + "- Select -" + "</option>");
                        for (var i = 0; i < results.length; i++) {
                            $("#lstSearchName").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                        }
                    };
                    options.error = function () {
                        ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                    };
                    $.ajax(options);
                }
                else {
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before adding this Transaction.', 'Ok', '');
                }
            });
        });

        $("#lstLoanerCode").change(function (e) {
            if ($("#lstLoanerCode option:selected").text() == "Candidate" ||
                $("#lstLoanerCode option:selected").text() == "Candidate Spouse" ||
                $("#lstLoanerCode option:selected").text() == "Family Member of Candidate - Parent" ||
                $("#lstLoanerCode option:selected").text() == "Family Member of Candidate - Grandparent" ||
                $("#lstLoanerCode option:selected").text() == "Family Member of Candidate - Child" ||
                $("#lstLoanerCode option:selected").text() == "Family Member of Candidate - Siblings" ||
                $("#lstLoanerCode option:selected").text() == "Family Member of Candidate - Spouse of Any of These" ||
                $("#lstLoanerCode option:selected").text() == "Individual") {
                $("#divLenderName").hide();
                $("#divLenderFirstName").show();
                $("#divLenderMiddleName").show();
                $("#divLenderLastName").show();
                $("#txtLenderFirstName").removeClass("ui-state-error error");
                $("#txtLenderMIName").removeClass("ui-state-error error");
                $("#txtLenderLastName").removeClass("ui-state-error error");
                $m("#txtLenderName").text('');
                $m("#txtLenderFirstName").text('');
                $m("#txtLenderMIName").text('');
                $m("#txtLenderLastName").text('');
            }
            else if ($("#lstLoanerCode option:selected").text() == "Partnership (including LLPs)" ||
                $("#lstLoanerCode option:selected").text() == "Bank" ||
                $("#lstLoanerCode option:selected").text() == "Corporation" ||
                $("#lstLoanerCode option:selected").text() == "Other Entities") {
                $("#divLenderName").show();
                $("#divLenderFirstName").hide();
                $("#divLenderMiddleName").hide();
                $("#divLenderLastName").hide();
                $("#txtLenderName").removeClass("ui-state-error error");
                $m("#txtLenderName").text('');
                $m("#txtLenderFirstName").text('');
                $m("#txtLenderMIName").text('');
                $m("#txtLenderLastName").text('');
            }
            else {
                $("#divLenderName").hide();
                $("#divLenderFirstName").show();
                $("#divLenderMiddleName").show();
                $("#divLenderLastName").show();
                $("#txtLenderFirstName").removeClass("ui-state-error error");
                $("#txtLenderMIName").removeClass("ui-state-error error");
                $("#txtLenderLastName").removeClass("ui-state-error error");
                $m("#txtLenderName").text('');
                $m("#txtLenderFirstName").text('');
                $m("#txtLenderMIName").text('');
                $m("#txtLenderLastName").text('');
            }
        });

        $m("#btnCloseDialog").button().on("click", function () {
            //By default we do not require close dialog confirmation for this form.
            var requireCloseConfirm = false;
            if (sessionStorage.getItem("AddEditCloseStatus") != null) {
                //"ADD" operation will chech the fields. IF there's any data the close confirmation will be required.
                if (sessionStorage.getItem("AddEditCloseStatus").toString() == "Add") {
                    //We may not require confirmation of the user is trying to add.
                    requireCloseConfirm = false;
                    if ($("#txtCurrentDateLoanRepay").val().toString().length >= 1
                        || $("#txtLenderName").val().toString().length >= 1
                        || $("#txtLenderFirstName").val().toString().length >= 1
                        || $("#txtLenderMIName").val().toString().length >= 1
                        || $("#txtLenderLastName").val().toString().length >= 1
                        || ($('#chkCountry').is(':checked') && $("#txtCountry").val().toString().length >= 1)/*Other COUNTRY*/
                        || $("#txtStreetName").val().toString().length >= 1
                        || $("#txtCity").val().toString().length >= 1
                        || $("#txtState").val().toString().length >= 1
                        || $("#txtZipCode").val().toString().length >= 1
                        || $("#lstMethod option:selected").val().toString() != "0"
                        || ($("#lstMethod option:selected").val().toString() == "1" && $("#txtCheck").val().toString().length >= 1)
                        || $("#txtAmt").val().toString().length >= 1
                        || $("#txtExplanationCommon").val().toString().length >= 1) {
                        requireCloseConfirm = true;
                    }
                }
            }
            if (!requireCloseConfirm) {
                dialog.dialog("close");
                // For Defect 707 You don't Refresh the Data on Grid because you just canceled the edit or save function.
            }
            else {
                // Get confirmation Close the DialogBox or Not.
                var resultsCloseSchedA = "All unsaved data will be lost if you navigate away from this page. Are you sure you want to continue?";
                $m('#modal_dialog').text(resultsCloseSchedA);
                $m("#modal_dialog").dialog({
                    resizable: false,
                    width: '400px',
                    height: 'auto',
                    bgiframe: false,
                    modal: true,
                    closeOnEscape: false,
                    open: function (event, ui) { hideDialogXButton(this); },
                    buttons: {
                        "Ok": function () {
                            //Close Confirm Box.
                            $m(this).dialog("close"); //Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                            // Close the DialogBox
                            dialog.dialog("close");
                            // For Defect 707 You don't Refresh the Data on Grid because you just canceled the edit or save function.
                        },
                        "Cancel": function () {
                            $m(this).dialog("close");
                        }
                    }
                });
            }
         });

         //====================================================================================================================
         // Date picker validation based on Filing Type.
         if ($("#lstElectionType option:selected").val().toString() == "6") { // Off-Cycle
             if ($("#lstFilingDate option:selected").text().toString() == "- New Filing Date -") {
                 sessionStorage.setItem("CuttOffDateForFiling", sessionStorage.getItem("FilingDate").toString());
             }
             else {
                 sessionStorage.setItem("CuttOffDateForFiling", $("#lstFilingDate option:selected").text().toString());
             }
         }
         else {
             sessionStorage.setItem("CuttOffDateForFiling", sessionStorage.getItem("CutOffDate").toString());
         }

        $m("#txtCurrentDateLoanRepay").datepicker({
            showOn: "button",
            buttonImage: "../../Content/Images/Calendar.png", //"@Url.Content("~/Content/Images / Calendar.png")",
            buttonImageOnly: false,
            buttonText: "Select From Date",
            changeMonth: true,
            changeYear: true,
            numberOfMonths: 1,
            maxDate: sessionStorage.getItem("CuttOffDateForFiling").toString(),
            dateFormat: 'mm/dd/yy',
            onChange: function () {
                $m("#txtCurrentDateLoanRepay").valid();
            },
        }).datepicker();

        $m('.datepicker').attr("placeholder", "MM/DD/YYYY").datepicker();
        $("#txtCurrentDateLoanRepay").addClass("watermarkHTMLTextBox");
        $("#txtCurrentDateLoanRepay").focusin(function () {
            $("#txtCurrentDateLoanRepay").removeClass("watermarkHTMLTextBox");
        });

        // Watermark TextBox. ////////////////////////////////////////////////////

        // DATE FORMATE....///////////////////////////////////////////////
        $("#txtCurrentDateLoanRepay").focusout(function () {
            if ($("#txtCurrentDateLoanRepay").val().toString() != "") {
                if ($("#txtCurrentDateLoanRepay").val().toString() != "MM/DD/YYYY") {
                    var results = GetValidDateForCommon("txtCurrentDateLoanRepay", "Transferred");

                    if (results == "") {
                        var MyDate = new Date($("#txtCurrentDateLoanRepay").val().toString());
                        var MyDateString;
                        MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                            + ('0' + MyDate.getDate()).slice(-2) + '/'
                            + MyDate.getFullYear();
                        $("#txtCurrentDateLoanRepay").val("");
                        $("#txtCurrentDateLoanRepay").val(MyDateString);
                    }
                }
            }
            else {
                $("#txtCurrentDateLoanRepay").addClass("watermarkHTMLTextBox");
            }
        });
        // DATE FORMATE....///////////////////////////////////////////////

        // Method Change
        // ------------------------------------------------------------------------------------------------------------------------------------------
        $("#lstMethod").change(function () {

            $("#txtCheck").val("");

            if ($("#lstMethod option:selected").val().toString() == "1") { // CHECK
                $("#tdCheck").show();
                $("#lblExplanation").text("Explanation");
            }
            else if ($("#lstMethod option:selected").val().toString() == "7") { // OTHER
                // EXPLANATION MANADATORY
                $("#lblExplanation").text("* Explanation");
                $("#tdCheck").hide();
            }
            else {
                $("#lblExplanation").text("Explanation");
                $("#tdCheck").hide();
            }

            if ($("#lstLoanerCode option:selected").val().toString() == "13") { // OTHER
                // EXPLANATION MANADATORY
                $("#lblExplanation").text("* Explanation");
            }
        });

        $m("#btnAddDialog").click(function () {
            $m('#DialogBoxSchedJForm').valid();
            if ($m('#DialogBoxSchedJForm').valid()) {
                $m("#divLoading").show();
                $.post("@Url.Content("~/LoanRepaymentsSchedJ/ValidateSchedJ_Amount/")", {
                    trans_Nubmer: $("#lstSearchDate").val().toString(),
                    repayAmount: $("#txtAmt").val().toString(),
                    OriginalAmount: $m("#lstSearchAmount option:selected").text(),
                    State: "ADD",
                }, function (result) {
                    if (result == "0") {
                            $m("#divLoading").hide();
                            ShowDialogBox('EFS', 'Repay Amount cannot be more than Outstanding Amount.', 'Ok', '');
                        } else {
                            // State Explanation Sched N
                            var url = '@Url.Action("AddLoanRepaymentsScheduledData", "LoanRepaymentsSchedJ")';
                            $.post(url, {
                                txtFilerId: $("#txtFilerID").val(),
                                strFilingSchedId: $m("#lstTransactionType option:selected").val(),
                                strFilingSchedDate: $m("#txtCurrentDateLoanRepay").val().toString(),
                                strPayNumber: $m("#txtCheck").val().toString(),
                                strAmt: $m("#txttdOutstandingAmount").val().toString(),
                                strAmtOrg: $m("#txtAmt").val().toString(),
                                strTransExplanation: $m("#txtExplanationCommon").val().toString(),
                                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                                lstFilingEntId: "",
                                strFlngEntName: $m("#txtLenderName").val().toString(),
                                strFlngEntFirstName: $m("#txtLenderFirstName").val().toString(),
                                strFlngEntMiddleName: $m("#txtLenderMIName").val().toString(),
                                strFlngEntLastName: $m("#txtLenderLastName").val().toString(),
                                strFlngEntStrName: $m("#txtStreetName").val().toString(),
                                txtPartCity: $m("#txtCity").val().toString(),
                                txtPartState: $m("#txtState").val().toString(),
                                txtPartZip5: $m("#txtZipCode").val().toString(),
                                txtCountry: $m("#txtCountry").val().toString(),
                                chkCountry: $('#chkCountry').is(':checked').toString(),
                                PaymentTypeId: $m("#lstMethod option:selected").val(),
                                LoanerCodeID: $m("#lstLoanerCode option:selected").val(),
                                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                                txtReportPeriodDatesTo: sessionStorage.getItem("FilingDate").toString(),
                                electionDateId: $m("#lstElectionDate").val(),
                                lstResigTermType: $m("#lstResigTermType option:selected").val(),
                                txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
                                trans_Nubmer: $("#lstSearchDate").val().toString(),
                                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
                            }, function (results) {
                                if (results.Errors == null) {
                                    if (results == "Custom Error") {
                                        ShowDialogBox('EFS', 'System Error found. Please try again.', 'Ok', '');
                                        window.location.reload();
                                    }
                                    else {
                                        if (results == "0") {
                                            ShowDialogBox('EFS', 'System Error Found. Please try again.', 'Ok', '');
                                            window.location.reload();
                                        }
                                        else {
                                            results = "Custom Error";
                                            window.status = "Transaction saved successfully";

                                            $("#lstSearchName")[0].selectedIndex = 0;
                                            $("#lstSearchAmount")[0].selectedIndex = 0;
                                            $("#lstSearchDate")[0].selectedIndex = 0;

                                            $("#lstSearchName").removeClass("ui-state-error error");
                                            $("#lstSearchAmount").removeClass("ui-state-error error");
                                            $("#lstSearchDate").removeClass("ui-state-error error");

                                            $("#txtCurrentDateLoanRepay").removeClass("ui-state-error error");
                                            $("#lstLoanerCode").removeClass("ui-state-error error");
                                            $("#txtLenderName").removeClass("ui-state-error error");
                                            $("#txtLenderFirstName").removeClass("ui-state-error error");
                                            $("#txtLenderMIName").removeClass("ui-state-error error");
                                            $("#txtLenderLastName").removeClass("ui-state-error error");
                                            $("#txtCountry").removeClass("ui-state-error error");
                                            $("#txtStreetName").removeClass("ui-state-error error");
                                            $("#txtCity").removeClass("ui-state-error error");
                                            $("#txtState").removeClass("ui-state-error error");
                                            $("#txtZipCode").removeClass("ui-state-error error");
                                            $("#txtCheck").removeClass("ui-state-error error");
                                            $("#txtAmt").removeClass("ui-state-error error");
                                            $("#txtExplanationCommon").removeClass("ui-state-error error");

                                            $("#btnUpdateDialog").hide();
                                            $("#btnAddDialog").show();

                                            $("#lblExplanation").text("Explanation");
                                            $("#txtCurrentDateLoanRepay").blur();
                                            $("#txtZipCode").blur();
                                            $("#txtAmt").blur();

                                            $("#txtCountry").val("United States");
                                            $("#txtCountry").prop("disabled", true);
                                            $("#chkCountry").prop('checked', false);
                                            $("#txtState").prop('maxLength', '2');
                                            $("#lstMethod")[0].selectedIndex = 0;
                                            $("#tdCheck").hide();
                                            $("#txtCurrentDateLoanRepay").focus();
                                            $m("label[for=txtCurrentDateLoanRepay]").text('');
                                            $m("#txtCurrentDateLoanRepay").removeClass("error");

                                            $m("label[for=txtCurrentDateLoanRepay]").text('');
                                            $m("#txtCurrentDateLoanRepay").removeClass("error");

                                            $m("label[for=lstSearchName]").text('');
                                            $m("#lstSearchName").removeClass("error");

                                            $("#txtCurrentDateLoanRepay").val("");
                                            $("#txtAmt").val("");
                                            $("#txtExplanationCommon").val("");
                                            $("#lstMethod")[0].selectedIndex = 0;
                                            $("#txtCheck").val("");

                                            $("#hSearch").show();
                                            $("#hAddScheJ").hide();
                                            $("#hAddScheN").hide();
                                            $("#divSearchLoans").show();
                                            $("#divAdd").hide();
                                            $("#lstSearchAmount").prop("disabled", false);
                                            $("#lstSearchDate").prop("disabled", false);
                                            $("#divOriginalName").show();
                                            $("#btnPreviousDialogForSearch").hide();
                                            $("#btnNextDialogForSearch").show();
                                            $("#btnUpdateDialog").hide();
                                            $("#btnAddDialog").hide();

                                            $m("#lstSearchName").focus();
                                            var doneFunction = function () {
                                                $m("#btnClearDialog").trigger("click");  // clear out the form data
                                                $("#divLoading").hide();
                                                ShowDialogBox('EFS', 'Transaction saved successfully. The loan balance will automatically be adjusted on any subsequent disclosure reports with the add/edit/delete of this loan transaction. Make sure to submit all amended disclosure reports to show the loan balance accurately.', 'Ok', '');
                                            }
                                            //Bind Grid hides the loading too!
                                            GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);
                                        }
                                    }
                                }
                                else if (results.Errors.length >= 0) {
                                    $m("#divLoading").hide();
                                    ClearServerSideErrors(); // Server Side Validation Clear
                                    AppendCustomErrorLabels(results.Errors);
                                }
                            }).fail(function () {
                                $m("#divLoading").hide();//AddLoanRepaymentsScheduledData failed.
                            });
                        }
                }).fail(function () {
                    $m("#divLoading").hide();//ValidateSchedJ_Amount failed.
                });
            }
        });

        // EDIT COMMON ...................
        //...............................................................................................................

        if (sessionStorage.getItem("EditFlag") != null) {
            if (sessionStorage.getItem("EditFlag").toString() == "True") {
                
                var validator = $m("#DialogBoxSchedJForm").validate();
                validator.resetForm();  // clear out the validation errors
                $m("#DialogBoxSchedJForm")[0].reset();   // clear out the form data

                $("#lstTransactionType option").each(function () {
                    if ($(this).val() == sessionStorage.getItem("ScheduleId").toString()) {
                        //$(this).attr('selected', 'selected');
                        $(this).prop("selected", true);
                    }
                });

                // BIND COMMON SESSION VARIABLE.
                sessionStorage.setItem("TransactionType", sessionStorage.getItem("ScheduleId").toString());        

                $.post("@Url.Content("~/_UC_GridCommonControl/GetEditTransactionData/")", {
                    strTransNumber: sessionStorage.getItem("TransNumberEdit").toString()
                }, function (resultsEditData) {
                    $.each(resultsEditData, function (i, item) {
                        
                        $("#btnPreviousDialogForSearch").hide();
                        $("#btnNextDialogForSearch").hide();

                        $("#btnNextDialog").show();
                        $("#btnCloseDialog").show();

                        $("#hSearch").hide();
                        $("#hAddScheJ").hide();

                        $("#divSearchLoans").hide();
                        $("#divAdd").show();

                        $("#btnUpdateDialog").show();
                        $("#btnAddDialog").hide();

                        sessionStorage.setItem("trans_num", item.TransNumber.toString());
                        if (item.LoanLiablityNumber != null)
                            sessionStorage.setItem("loan_Lib_Num", item.LoanLiablityNumber.toString());
                        else
                            sessionStorage.setItem("loan_Lib_Num", "");
                        sessionStorage.setItem("FilingTransId", item.TransNumber.toString());
                        sessionStorage.setItem("FilingEntityId", item.FilingEntityId.toString());
                        $("#txtCurrentDateLoanRepay").val(item.SchedDate.toString());
                        $("#txtCurrentDateLoanRepay").removeClass("watermarkHTMLTextBox");
                        if (item.SchedDate.toString() != "" || item.SchedDate.toString() != null) {
                            var MyDate = new Date($("#txtCurrentDateLoanRepay").val().toString());
                            var MyDateString;
                            MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                                + ('0' + MyDate.getDate()).slice(-2) + '/'
                                + MyDate.getFullYear();
                            $("#txtCurrentDateLoanRepay").val("");
                            $("#txtCurrentDateLoanRepay").val(MyDateString);
                            $("#txtCurrentDateLoanRepay").removeClass("watermarkHTMLTextBox");
                        }
                        $("#txtCurrentDateLoanRepay").focus();
                        
                        $m("#lstLoanerCode option").each(function () {
                            if ($(this).text() == item.LoanerCode.toString()) {
                                $(this).prop('selected', true).trigger('change');
                            }
                        });
                        if ($("#lstLoanerCode option:selected").text() == "Candidate" ||
                            $("#lstLoanerCode option:selected").text() == "Candidate Spouse" ||
                            $("#lstLoanerCode option:selected").text() == "Family Member of Candidate - Parent" ||
                            $("#lstLoanerCode option:selected").text() == "Family Member of Candidate - Grandparent" ||
                            $("#lstLoanerCode option:selected").text() == "Family Member of Candidate - Child" ||
                            $("#lstLoanerCode option:selected").text() == "Family Member of Candidate - Siblings" ||
                            $("#lstLoanerCode option:selected").text() == "Family Member of Candidate - Spouse of Any of These" ||
                            $("#lstLoanerCode option:selected").text() == "Individual") {
                            $("#divLenderName").hide();
                            $("#divLenderFirstName").show();
                            $("#divLenderMiddleName").show();
                            $("#divLenderLastName").show();
                            $("#txtLenderFirstName").removeClass("ui-state-error error");
                            $("#txtLenderMIName").removeClass("ui-state-error error");
                            $("#txtLenderLastName").removeClass("ui-state-error error");
                            $m("#txtLenderName").text('');
                            $m("#txtLenderFirstName").text('');
                            $m("#txtLenderMIName").text('');
                            $m("#txtLenderLastName").text('');
                        }
                        else if ($("#lstLoanerCode option:selected").text() == "Partnership (including LLPs)" ||
                            $("#lstLoanerCode option:selected").text() == "Bank" ||
                            $("#lstLoanerCode option:selected").text() == "Corporation" ||
                            $("#lstLoanerCode option:selected").text() == "Other Entities") {
                            $("#divLenderName").show();
                            $("#divLenderFirstName").hide();
                            $("#divLenderMiddleName").hide();
                            $("#divLenderLastName").hide();
                            $("#txtLenderName").removeClass("ui-state-error error");
                            $m("#txtLenderName").text('');
                            $m("#txtLenderFirstName").text('');
                            $m("#txtLenderMIName").text('');
                            $m("#txtLenderLastName").text('');
                        }
                        $("#lstLoanerCode").prop("disabled", true);

                        $("#txtLenderName").val(item.FilingEntityName.toString());
                        $("#txtLenderFirstName").val(item.FilingFirstName.toString());
                        $("#txtLenderMIName").val(item.FilingMiddleName.toString());
                        $("#txtLenderLastName").val(item.FilingLastName.toString());
                        $("#txtCountry").val(item.FilingCountry.toString());
                        if (item.FilingCountry.toString() == "United States") {
                            $("#chkCountry").prop('checked', false);
                            $("#txtCountry").prop("disabled", true);
                            $("#txtState").prop('maxLength', '2');
                        }
                        else { // Other Country
                            $("#chkCountry").prop('checked', true);
                            $("#txtCountry").prop("disabled", false);
                            $("#txtState").prop('maxLength', '30');
                            $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            $m('#txtZipCode').attr("placeholder", "");
                        }
                        $("#txtStreetName").val(item.FilingStreetName.toString());
                        $("#txtCity").val(item.FilingCity.toString());
                        $("#txtState").val(item.FilingState.toString());
                        $("#txtZipCode").val(item.FilingZip.toString());
                        if ($("#txtZipCode").val().toString() != "00000-0000") {
                            $("#txtZipCode").removeClass('watermark');
                        }

                        if (item.FilingZip.toString() != "") {
                            $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                        }
                        else {
                            $("#txtZipCode").addClass("watermarkHTMLTextBox");
                            if (item.FilingCountry.toString() == "United States") {
                                $("#txtZipCode").blur();
                            }
                        }

                        var originalAmount = item.OriginalAmount.toString();
                        $("#txtAmt").val(originalAmount);
                        sessionStorage.setItem("txtAmt", originalAmount);

                        if ($("#txtAmt").val().toString() != "" || $("#txtAmt").val().toString() != "999999999.99") {
                            $("#txtAmt").removeClass("watermarkHTMLTextBox");
                        }

                        $m("#lstMethod option").each(function () {
                            if ($(this).text() == item.PaymentTypeDesc.toString()) {
                                $(this).prop('selected', true).trigger('change');
                            }
                        });

                        if ($("#lstMethod option:selected").val().toString() == "1") { // CHECK
                            $("#tdCheck").show();
                            $("#lblExplanation").text("Explanation");
                        }
                        else if ($("#lstMethod option:selected").val().toString() == "7") { // OTHER
                            // EXPLANATION MANADATORY
                            $("#lblExplanation").text("* Explanation");
                            $("#tdCheck").hide();
                        }
                        else {
                            $("#lblExplanation").text("Explanation");
                            $("#tdCheck").hide();
                        }
                        $("#txtCheck").val(item.PayNumber.toString());

                        if ($("#lstLoanerCode option:selected").val().toString() == "13") { // OTHER
                            // EXPLANATION MANADATORY
                            $("#lblExplanation").text("* Explanation");
                        }

                        var varAmt = item.OriginalAmount.toString();
                        $("#txtAmt").val(varAmt);
                        $("#txtExplanationCommon").val(item.TransExplanation.toString())
                        $.post("@Url.Content("~/LoanRepaymentsSchedJ/GetOutstanding_Amount/")", {
                            trans_Number: item.TransNumber.toString(),
                            status: 'EDIT'
                        }, function (result) {
                            $.each(result, function (i, item) {
                                if (item.Original_Amt != "") {
                                    if (parseFloat(item.Original_Amt) == parseFloat(item.Amount)) {
                                        var outStandingAmt = parseFloat(item.Amount);
                                    }
                                    else {
                                        var outStandingAmt = parseFloat(item.Original_Amt) - parseFloat(item.Amount);
                                    }
                                    $("#txttdOriginalAmount").val(parseFloat(item.Original_Amt));
                                    sessionStorage.setItem("OriginalAmt", item.Original_Amt);
                                    if (outStandingAmt == Math.floor(outStandingAmt)) {
                                        outStandingAmt = outStandingAmt + ".00";
                                    }
                                    outStandingAmt = parseFloat(outStandingAmt).toFixed(2);
                                    $("#txttdOutstandingAmount").val(outStandingAmt);
                                    sessionStorage.setItem("OutStandingAmt", outStandingAmt);
                                }
                            });
                            });
                        if (item.Original_Sched_Date != null) {
                            $("#txttdOriginalDate").val(item.Original_Sched_Date.toString());
                        }
                        else {
                            $("#txttdOriginalDate").val("");
                        }
                        
                        sessionStorage.setItem("pageStatus", 'EDIT');

                        sessionStorage.setItem("loan_Lib_Num", item.LoanLiablityNumber);
                        sessionStorage.setItem("trans_num", item.TransNumber.toString());
                        // Common Code
                        sessionStorage.setItem("EditFlag", "False");
                        dialog.dialog("open");
                    });
                });
            }
        }

        // EDIT COMMON ...................
        //...............................................................................................................
         //CLEAR THE LOAN DETAILS GIRDS - SB - 02.17.2021
        function clearTheLoanDetailsGrids() {
            $(".divGridLoanReceivedJQueryClassSelector").hide();
            $("#divLiabilitiesGrid").hide();
            $("#divHeaderLoanReceived").hide();
            $("#divHeaderOutstandingLoans").hide();

            $("#divUCLoanRecLoanRepay").hide();
            $("#divUCLoanRecOutLoans").hide();
            $("#divUCLoanRepayLoanRec").hide();
            $("#divUCLoanRecLoanForgiven").hide();
        }
         $m('#gridFilingTransactions tbody').on('click', 'a.editor_edit', function (e) {
             event.preventDefault();

             var data = tableFilingTransactions.row($(this).parents('tr')).data();
             // CLEAR THE LOAN DETAILS GIRDS - SB - 02.17.2021
             clearTheLoanDetailsGrids();
             //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
             $("#divLoading").show();
             $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                 txtFilerId: $("#txtFilerID").val(),
                 lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                 strElectionTypeId: $m("#lstElectionType option:selected").val(),
                 lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                 lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                 lstFilingDate: $m("#lstFilingDate option:selected").text(),
                 txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                 electionDateId: $m("#lstElectionDate").val(),
                 lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
             }, function (resultEditFlag) {
                 if (resultEditFlag == "TRUE") {
                     var selectedTransactionType = data[1].toString();

                     var validator = $m("#DialogBoxSchedJForm").validate();
                     validator.resetForm();  // clear out the validation errors
                     $m("#DialogBoxSchedJForm")[0].reset();   // clear out the form data
                     sessionStorage.setItem("AddEditCloseStatus", "Edit");
                     $("#txtCurrentDateLoanRepay").removeClass("ui-state-error error");
                     $("#lstLoanerCode").removeClass("ui-state-error error");
                     $("#txtLenderName").removeClass("ui-state-error error");
                     $("#txtLenderFirstName").removeClass("ui-state-error error");
                     $("#txtLenderMIName").removeClass("ui-state-error error");
                     $("#txtLenderLastName").removeClass("ui-state-error error");
                     $("#txtCountry").removeClass("ui-state-error error");
                     $("#txtStreetName").removeClass("ui-state-error error");
                     $("#txtCity").removeClass("ui-state-error error");
                     $("#txtState").removeClass("ui-state-error error");
                     $("#txtZipCode").removeClass("ui-state-error error");
                     $("#txtCheck").removeClass("ui-state-error error");
                     $("#txtAmt").removeClass("ui-state-error error");
                     $("#txtExplanationCommon").removeClass("ui-state-error error");

                     $("#txtCurrentDateLoanRepay").focus();

                     if (selectedTransactionType == "10") { // Schedule I

                         $("#btnPreviousDialogForSearch").hide();
                         $("#btnNextDialogForSearch").hide();

                         $("#btnNextDialog").show();
                         $("#btnUpdateDialog").show();
                         $("#btnAddDialog").hide();
                         $("#btnCloseDialog").show();

                         $("#hSearch").hide();
                         $("#hAddScheJ").hide();

                         $("#divSearchLoans").hide();
                         $("#divAdd").show();
                         $("#divLoading").hide();
                         dialog.dialog("open");

                         $("#btnUpdateDialog").show();
                         $("#btnAddDialog").hide();

                         $("#lstLoanerCode").prop("disabled", true);
                         
                         sessionStorage.setItem("FilingTransId", data[0].toString());
                         sessionStorage.setItem("FilingEntityId", data[2].toString());
                         $("#txtCurrentDateLoanRepay").val(data[10].toString());
                         $("#txtCurrentDateLoanRepay").removeClass("watermarkHTMLTextBox");
                         if (data[10].toString() != "" || data[10].toString() != null) {
                             var MyDate = new Date($("#txtCurrentDateLoanRepay").val().toString());
                             var MyDateString;
                             MyDateString = ('0' + (MyDate.getMonth() + 1)).slice(-2) + '/'
                                 + ('0' + MyDate.getDate()).slice(-2) + '/'
                                 + MyDate.getFullYear();
                             $("#txtCurrentDateLoanRepay").val("");
                             $("#txtCurrentDateLoanRepay").val(MyDateString);
                             $("#txtCurrentDateLoanRepay").removeClass("watermarkHTMLTextBox");
                         }
                         $("#txtCurrentDateLoanRepay").focus();

                         $m("#lstLoanerCode option").each(function () {
                             if ($(this).text() == data[32].toString()) {
                                 $(this).prop('selected', true).trigger('change');
                             }
                         });
                         $("#lstLoanerCode").prop("disabled", true);

                         $("#txtLenderName").val(data[13].toString());
                         $("#txtLenderFirstName").val(data[14].toString());
                         $("#txtLenderMIName").val(data[15].toString());
                         $("#txtLenderLastName").val(data[16].toString());
                         $("#txtCountry").val(data[17].toString());
                         if (data[17].toString() == "United States") {
                             $("#chkCountry").prop('checked', false);
                             $("#txtCountry").prop("disabled", true);
                             $("#txtState").prop('maxLength', '2');
                         }
                         else { // Other Country
                             $("#chkCountry").prop('checked', true);
                             $("#txtCountry").prop("disabled", false);
                             $("#txtState").prop('maxLength', '30');
                             $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                             $m('#txtZipCode').attr("placeholder", "");
                         }
                         $("#txtStreetName").val(data[18].toString());
                         $("#txtCity").val(data[19].toString());
                         $("#txtState").val(data[20].toString());
                         $("#txtZipCode").val(data[21].toString());
                         if ($("#txtZipCode").val().toString() != "00000-0000") {
                             $("#txtZipCode").removeClass('watermark');
                         }

                         if (data[21].toString() != "") {
                             $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                         }
                         else {
                             $("#txtZipCode").addClass("watermarkHTMLTextBox");
                             if (data[17].toString() == "United States") {
                                 $("#txtZipCode").blur();
                             }
                         }

                         var originalAmount = data[24].toString();
                         $("#txtAmt").val(originalAmount);
                         sessionStorage.setItem("txtAmt", originalAmount);

                         if ($("#txtAmt").val().toString() != "" || $("#txtAmt").val().toString() != "999999999.99") {
                             $("#txtAmt").removeClass("watermarkHTMLTextBox");
                         }

                         $m("#lstMethod option").each(function () {
                             if ($(this).text() == data[22].toString()) {
                                 $(this).prop('selected', true).trigger('change');
                             }
                         });

                         if ($("#lstMethod option:selected").val().toString() == "1") { // CHECK
                             $("#tdCheck").show();
                             $("#lblExplanation").text("Explanation");
                         }
                         else if ($("#lstMethod option:selected").val().toString() == "7") { // OTHER
                             // EXPLANATION MANADATORY
                             $("#lblExplanation").text("* Explanation");
                             $("#tdCheck").hide();
                         }
                         else {
                             $("#lblExplanation").text("Explanation");
                             $("#tdCheck").hide();
                         }
                         $("#txtCheck").val(data[23].toString());

                         if ($("#lstLoanerCode option:selected").val().toString() == "13") { // OTHER
                             // EXPLANATION MANADATORY
                             $("#lblExplanation").text("* Explanation");
                         }

                         var varAmt = data[24].toString();
                         $("#txtAmt").val(varAmt);
                         $("#txtExplanationCommon").val(data[36].toString())
                         $.post("@Url.Content("~/LoanRepaymentsSchedJ/GetOutstanding_Amount/")", {
                             trans_Number: data[42].toString(),
                             status: 'EDIT'
                         }, function (result) {
                             $.each(result, function (i, item) {
                                 if (item.Original_Amt != "") {
                                     if (parseFloat(item.Original_Amt) == parseFloat(item.Amount)) {
                                         var outStandingAmt = parseFloat("0");
                                     }
                                     else {
                                         var outStandingAmt = parseFloat(item.Original_Amt) - parseFloat(item.Amount);
                                     }
                                     $("#txttdOriginalAmount").val(parseFloat(item.Original_Amt));
                                     sessionStorage.setItem("OriginalAmt", item.Original_Amt);
                                     if (outStandingAmt == Math.floor(outStandingAmt)) {
                                         outStandingAmt = outStandingAmt + ".00";
                                     }
                                     outStandingAmt = parseFloat(outStandingAmt).toFixed(2);
                                     $("#txttdOutstandingAmount").val(outStandingAmt);
                                     sessionStorage.setItem("OutStandingAmt", outStandingAmt);
                                     $("#txttdOriginalDate").val(item.Date);
                                 }
                             });
                         });
                         sessionStorage.setItem("pageStatus", 'EDIT');
                         sessionStorage.setItem("loan_Lib_Num", data[41].toString());
                         sessionStorage.setItem("trans_num", data[42].toString());

                     } // Other Schedules
                     else if (["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "16", "17", "18", "19", "20", "21"].includes(data[1].toString())) {
                         //Common code to determine redirect url and set session varialbes. Also hides $("#divLoading") on fail.
                         //Uses window.location.href
                         appCommonEFS_DetermineScheduleRedirect(data[1].toString(), data[42].toString());
                     }
                 }
                 else {
                     //resultEditFlag != "TRUE"
                     $("#divLoading").hide();
                     ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before editing this Transaction.', 'Ok', '');
                 }
            }).fail(function () {
                $("#divLoading").hide();// GetEditFlag failed.
            });
         });

        //Delete - Start
        // Delete Record FILING TRANSACTIONS.
        $m('#gridFilingTransactions tbody').on('click', 'a.editor_remove', function (e) {
            e.preventDefault();
            var dataTrans = tableFilingTransactions.row($(this).parents('tr')).data();
            // CLEAR THE LOAN DETAILS GIRDS - SB - 02.17.2021
            clearTheLoanDetailsGrids();
            //Because response time can be delayed always show/hide the loading cover interacting with grid buttons. This will keep user from clicking around indiscriminately.
            $("#divLoading").show();
            $.post("@Url.Content("~/_UC_GridCommonControl/GetEditFlag/")", {
                txtFilerId: $("#txtFilerID").val(),
                lstElectYearId: $m("#lstElectionCycle option:selected").val(),
                strElectionTypeId: $m("#lstElectionType option:selected").val(),
                lstOfficeTypeId: $m("#lstUCOfficeType option:selected").val(),
                lstFilingTypeId: $("#lstDisclosurePeriod option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                electionDateId: $m("#lstElectionDate").val(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }, function (resultEditFlag) {
                if (resultEditFlag == "TRUE") {

                    $.post("@Url.Content("~/_UC_GridCommonControl/GetDeleteFlag/")", {
                    }, function (resultDeleteFlag) {
                        if (resultDeleteFlag == "True") {

                            // LOAN RECEIVED DELETE CHECK.
                            $.post("@Url.Content("~/LoanReceivedSchedI/ValidateDelete_LoanReceived/")", {
                                loan_Lib_Number: dataTrans[41].toString(),
                            }, function (resultDeleteFlagSchedI) {

                                // CHECK THE VALIDATION IF ANY CONTRIBUTION REFUNDS (SCHEDULE 'M') EXISTS OR NOT.
                                // IF SCHEDULE 'M' EXISTS FOR EITHER SCHEDULE 'A', SCHEUDLE 'B', OR SCHEDULE 'C'...
                                // THEN SHOULD NOT DELETE UNTIL CHILD RECORDS DELETE.
                                $.post("@Url.Content("~/ContributionsCandIndFamily/ContributionsRefundSchedMExists/")", {
                                    strTransNumber: dataTrans[42].toString()
                                }, function (resultDelSchedABC) {

                                    // CHECK THE VALIDATION IF ANY EXPENDITURE REFUNDS (SCHEDULE 'L') EXISTS OR NOT.
                                    // IF SCHEDULE 'L' EXITS THEN SCHEDULE 'F' SHOULD NOT DELETE UNTLI CHILD DELETE ALL.
                                    $.post("@Url.Content("~/ExpenditurePaymentsSchedF/ExpenditureRefundSchedLExists/")", {
                                        strTransNumber: dataTrans[42].toString()
                                    }, function (resultDelSchedF) {
                                        var deleteData = {
                                            resultDeleteFlagSchedI: resultDeleteFlagSchedI,
                                            resultDelSchedABC: resultDelSchedABC,
                                            resultDelSchedF: resultDelSchedF
                                        }
                                        var resultsDelete = "Are you sure you want to delete this transaction?";
                                        var deleteURL = "";
                                        //Determine if you can delete
                                        var veredict = appCommonEFS_DetermineScheduleDelete(dataTrans, deleteData);
                                        if (!veredict || !bUtilIsObject(veredict)) {
                                            $("#divLoading").hide();
                                            return false;
                                        } else {
                                            var resultsDelete = veredict.alertMessageForOperation;
                                            var deleteURL = veredict.deleteURL;
                                        }

                                        $m('#modal_dialog').text(resultsDelete);
                                        $m("#modal_dialog").dialog({
                                            resizable: false,
                                            width: '400px',
                                            height: 'auto',
                                            bgiframe: false,
                                            modal: true,
                                            closeOnEscape: false,
                                            open: function (event, ui) {
                                                hideDialogXButton(this);
                                                $("#divLoading").hide();
                                            },
                                            buttons: {
                                                "Ok": function () {
                                                    // Close Confirm box
                                                    $m(this).dialog("close");//Close current dialog before closing the previous to prevent '_focusTabbable' error in jquery-ui.
                                                    var options = {};
                                                    options.url = deleteURL;
                                                    options.type = "GET";
                                                    options.data = {
                                                        strLoanLiabNumberOrg: dataTrans[41].toString(),
                                                        strTransNumber: dataTrans[42].toString(),
                                                        strRLiability: dataTrans[6].toString()
                                                    };
                                                    options.dataType = "json";
                                                    options.contentType = "application/json";
                                                    options.success = function (results) {
                                                        window.status = "Record deleted successfully";
                                                        var doneFunction = function () {
                                                            $("#divLoading").hide();
                                                            ShowDialogBox('EFS', 'Transaction deleted successfully. The loan balance will automatically be adjusted on any subsequent disclosure reports with the add/edit/delete of this loan transaction. Make sure to submit all amended disclosure reports to show the loan balance accurately.', 'Ok', '');
                                                        }
                                                        $("#divShowPartnerAdddataNCR").hide();
                                                        //Bind Grid hides the loading too!
                                                        GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);
                                                    };
                                                    options.error = function () {
                                                        ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                                                    };
                                                    $.ajax(options);
                                                },
                                                "Cancel": function () {
                                                    $m(this).dialog("close");
                                                }
                                            }
                                        });//Dialog End
                                    }).always(function () {
                                        //Allways hide at this level /ExpenditureRefundSchedLExists/
                                        $("#divLoading").hide();
                                    });
                                }).fail(function () {
                                    //Hide if we fail at ContributionsRefundSchedMExists/
                                    $("#divLoading").hide();
                                });
                            }).fail(function () {
                                //Hide if we fail at /ValidateDelete_LoanReceived/
                                $("#divLoading").hide();
                            });
                        }
                        else {//When resultDeleteFlag != "True"
                            $("#divLoading").hide();
                            ShowDialogBox('EFS', 'The last transaction cannot be deleted.  To delete the Disclosure report, a deletion request must be submitted to cfinfo@elections.ny.gov', 'Ok', '');
                        }
                    }).fail(function () {
                        $("#divLoading").hide(); //Hide if we fail at /GetDeleteFlag/
                    });
                }
                else { //When GetEditFlag != "True"
                    $("#divLoading").hide();
                    ShowDialogBox('EFS', 'Another Filing is being edited. Submit the edited Filing before editing this Transaction.', 'Ok', '');
                }
            }).fail(function () {
                $("#divLoading").hide();//Hide if we fail at /GetEditFlag/
            });
        });
        //Delete - End

        $m("#btnUpdateDialog").click(function () {
            $m('#DialogBoxSchedJForm').valid();
            if ($m('#DialogBoxSchedJForm').valid()) {
                // SHOW THE PROCESSING....
                $("#divLoading").show();
                var url = '@Url.Action("UpdateLoanRepaymentsScheduledData", "LoanRepaymentsSchedJ")';
                $m.post(url, {
                    txtFilerId: $("#txtFilerID").val(),
                    strFilingSchedDate: $m("#txtCurrentDateLoanRepay").val().toString(),
                    PaymentTypeId: $m("#lstMethod option:selected").val(),
                    strPayNumber: $m("#txtCheck").val().toString(),
                    strAmt: $m("#txttdOutstandingAmount").val().toString(),
                    strAmtOrg: $m("#txtAmt").val().toString(),
                    strTransExplanation: $m("#txtExplanationCommon").val().toString(),
                    lstFilingEntId: "",
                    strFlngEntName: $m("#txtLenderName").val().toString(),
                    strFlngEntFirstName: $m("#txtLenderFirstName").val().toString(),
                    strFlngEntMiddleName: $m("#txtLenderMIName").val().toString(),
                    strFlngEntLastName: $m("#txtLenderLastName").val().toString(),
                    strFlngEntStrName: $m("#txtStreetName").val().toString(),
                    txtPartCity: $m("#txtCity").val().toString(),
                    txtPartState: $m("#txtState").val().toString(),
                    txtPartZip5: $m("#txtZipCode").val().toString(),
                    txtCountry: $m("#txtCountry").val().toString(),
                    chkCountry: $('#chkCountry').is(':checked').toString(),
                    LoanerCodeID: $m("#lstLoanerCode option:selected").val(),
                    lstFilingDate: $m("#lstFilingDate option:selected").text(),
                    txtReportPeriodDatesTo: sessionStorage.getItem("FilingDate").toString(),
                    electionDateId: $m("#lstElectionDate").val(),
                    lstResigTermType: $m("#lstResigTermType option:selected").val(),
                    txtCuttOffDate: sessionStorage.getItem("CutOffDate").toString(),
                    loan_Lib_Number: sessionStorage.getItem("loan_Lib_Num").toString(),
                    trans_Nubmer: sessionStorage.getItem("trans_num").toString(),
                    strElectionTypeId: $m("#lstElectionType option:selected").val(),
                    amountCheck: sessionStorage.getItem("txtAmt").toString(),
                },
                    function (results) {
                        if (results.Errors == null) {
                            // Close Dialogbox.
                            dialog.dialog("close");
                            // Saved
                            window.status = "Transaction saved successfully";
                            var doneFunction = function () {
                                // HIDE THE PROCESSING....
                                $("#divLoading").hide();
                                $m("#btnClearDialog").trigger("click");  // clear out the form data
                                ShowDialogBox('EFS', 'Transaction saved successfully. The loan balance will automatically be adjusted on any subsequent disclosure reports with the add/edit/delete of this loan transaction. Make sure to submit all amended disclosure reports to show the loan balance accurately.', 'Ok', '');
                            }
                            //Bind Grid hides the loading too!
                            GetAllTransactionTypesData(true, tableFilingTransactions, false, doneFunction);
                        }
                        else if (results.Errors.length >= 0) {
                            $("#divLoading").hide();
                            ClearServerSideErrors(); // Server Side Validation Clear
                            AppendCustomErrorLabels(results.Errors);
                        }
                    }).fail(function () {
                        $("#divLoading").hide();//UpdateLoanRepaymentsScheduledData failed.
                    });
            }// IF VALIDATION FAILED.
            else {
                // HIDE THE PROCESSING....
                $("#divLoading").hide();
            }
         });

         function ClearServerSideErrors() {
             //removing error class and error messages in search form
             $("#txtCurrentDateLoanRepay_validate").empty();
             $("#lstLoanerCode_validate").empty();
             $("#txtLenderName_validate").empty();
             $("#txtLenderFirstName_validate").empty();
             $("#txtLenderMIName_validate").empty();
             $("#txtLenderLastName_validate").empty();
             $("#txtCountry_validate").empty();
             $("#txtStreetName_validate").empty();
             $("#txtCity_validate").empty();
             $("#txtState_validate").empty();
             $("#txtZipCode_validate").empty();
             $("#txtCheck_validate").empty();
             $("#txtAmt_validate").empty();
             $("#txtExplanationCommon_validate").empty();
         }

        $m("#btnClearDialog").button().on("click", function () {
            var loanerCodeTemp = $m("#lstLoanerCode option:selected").text();
            var OriginalDateTemp = $("#txttdOriginalDate").val();
            var OriginalAmountTemp = $("#txttdOriginalAmount").val();
            var OriginalOutstandingAmountTemp = $("#txttdOutstandingAmount").val();
            var validator = $m("#DialogBoxSchedJForm").validate();
            validator.resetForm();  // clear out the validation errors
            $m("#DialogBoxSchedJForm")[0].reset();   // clear out the form data

            $("#txtCurrentDateLoanRepay").removeClass("ui-state-error error");
            $("#lstLoanerCode").removeClass("ui-state-error error");
            $("#txtLenderName").removeClass("ui-state-error error");
            $("#txtLenderFirstName").removeClass("ui-state-error error");
            $("#txtLenderMIName").removeClass("ui-state-error error");
            $("#txtLenderLastName").removeClass("ui-state-error error");
            $("#txtCountry").removeClass("ui-state-error error");
            $("#txtStreetName").removeClass("ui-state-error error");
            $("#txtCity").removeClass("ui-state-error error");
            $("#txtState").removeClass("ui-state-error error");
            $("#txtZipCode").removeClass("ui-state-error error");
            $("#txtCheck").removeClass("ui-state-error error");
            $("#txtAmt").removeClass("ui-state-error error");
            $("#txtExplanationCommon").removeClass("ui-state-error error");

            $("#lblExplanation").text("Explanation");

            $("#txtCountry").val("United States");
            $("#txtCountry").prop("disabled", true);
            $("#chkCountry").prop('checked', false);
            $("#txtState").prop('maxLength', '2');
            $("#lstMethod")[0].selectedIndex = 0;
            $("#tdCheck").hide();
            $("#txtCurrentDateLoanRepay").focus();
            $m("label[for=txtCurrentDateLoanRepay]").text('');
            $m("#txtCurrentDateLoanRepay").removeClass("error");

            $m("#lstLoanerCode option").each(function () {
                if ($(this).text() == loanerCodeTemp.toString()) {
                    $(this).prop('selected', true).trigger('change');
                }
            });

            if ($("#lstLoanerCode option:selected").val().toString() == "13") { // OTHER
                // EXPLANATION MANADATORY
                $("#lblExplanation").text("* Explanation");
            }

            $m("#txttdOriginalDate").val(OriginalDateTemp);
            $m("#txttdOriginalAmount").val(OriginalAmountTemp);
            OriginalOutstandingAmountTemp = parseFloat(OriginalOutstandingAmountTemp).toFixed(2);
            $m("#txttdOutstandingAmount").val(OriginalOutstandingAmountTemp);
        });

        // Lender Name Auto Complete.
        $m("#txtLenderName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/ContributionsCandIndFamily/AutoCompleteEntityName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();

                var selectedValue = ui.item.label;
                $.ajax({
                    url: "@Url.Content("~/ContributionsCandIndFamily/GetAutoCompleteNameData/")",
                    dataType: "json",
                    data: {
                        strValue: selectedValue.toString()
                    },
                    success: function (results) {
                        $.each(results, function (i, item) {
                            $("#txtLenderName").val(item.FilingEntityName.toString());
                            $("#txtStreetName").val(item.FilingEntityStreetName.toString());
                            $("#txtCity").val(item.FilingEntityCity.toString());
                            $("#txtState").val(item.FilingEntityState.toString());
                            $("#txtZipCode").val(item.FilingEntityZip.toString());
                            $("#txtCountry").val(item.FilingEntityCountry.toString());
                            if ($("#txtCountry").val().toString() == "United States") {
                                $("#chkCountry").prop('checked', false);
                                $("#txtCountry").prop("disabled", true);
                                $("#txtState").prop('maxLength', '2');
                                if (item.FilingEntityZip.toString() != "") {
                                    $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                                }
                                else {
                                    $("#txtZipCode").addClass("watermarkHTMLTextBox");
                                    $("#txtZipCode").blur();
                                }
                            } else {
                                $("#chkCountry").prop('checked', true);
                                $("#txtCountry").prop("disabled", false);
                                $("#txtState").prop('maxLength', '30');

                                $m('#txtZipCode').attr("placeholder", "");
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            }
                            // Address validation
                            $m("#txtCountry").valid();
                            $m("#txtStreetName").valid();
                            $m("#txtCity").valid();
                            $m("#txtState").valid();
                            $m("#txtZipCode").valid();
                            $m("#txtLenderName").valid();
                        });
                    }
                });
                $("#lstMethod").focus();
            }
        });

         // First Name Auto Complete.
        $m("#txtLenderFirstName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/ContributionsCandIndFamily/AutoCompleteFirstName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();

                var selectedValue = ui.item.label;
                $.ajax({
                    url: "@Url.Content("~/ContributionsCandIndFamily/GetAutoCompleteNameData/")",
                    dataType: "json",
                    data: {
                        strValue: selectedValue.toString()
                    },
                    success: function (results) {
                        $.each(results, function (i, item) {
                            $("#txtLenderFirstName").val(item.FilingEntityFirstName.toString());
                            $("#txtLenderMIName").val(item.FilingEntityMiddleName.toString());
                            $("#txtLenderLastName").val(item.FilingEntityLastName.toString());
                            $("#txtStreetName").val(item.FilingEntityStreetName.toString());
                            $("#txtCity").val(item.FilingEntityCity.toString());
                            $("#txtState").val(item.FilingEntityState.toString());
                            $("#txtZipCode").val(item.FilingEntityZip.toString());
                            $("#txtCountry").val(item.FilingEntityCountry.toString());
                            if ($("#txtCountry").val().toString() == "United States") {
                                $("#chkCountry").prop('checked', false);
                                $("#txtCountry").prop("disabled", true);
                                $("#txtState").prop('maxLength', '2');
                                if (item.FilingEntityZip.toString() != "") {
                                    $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                                }
                                else {
                                    $("#txtZipCode").addClass("watermarkHTMLTextBox");
                                    $("#txtZipCode").blur();
                                }
                            } else {
                                $("#chkCountry").prop('checked', true);
                                $("#txtCountry").prop("disabled", false);
                                $("#txtState").prop('maxLength', '30');

                                $m('#txtZipCode').attr("placeholder", "");
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            }

                            $m("#txtLenderFirstName").valid();
                            // Address validation
                            $m("#txtCountry").valid();
                            $m("#txtStreetName").valid();
                            $m("#txtCity").valid();
                            $m("#txtState").valid();
                            $m("#txtZipCode").valid();
                        });
                    }
                });
                $("#lstMethod").focus();
            }
        });

        // Last Name - Auto Complete
        $m("#txtLenderLastName").autocomplete({
            source: function (request, response) {
                $.post("@Url.Content("~/ContributionsCandIndFamily/AutoCompleteLastName/")", request, response);
            },
            minLength: 1,
            select: function (event, ui) {
                event.preventDefault();

                var selectedValue = ui.item.label;
                $.ajax({
                    url: "@Url.Content("~/ContributionsCandIndFamily/GetAutoCompleteNameData/")",
                    dataType: "json",
                    data: {
                        strValue: selectedValue.toString()
                    },
                    success: function (results) {
                        $.each(results, function (i, item) {
                            $("#txtLenderFirstName").val(item.FilingEntityFirstName.toString());
                            $("#txtLenderMIName").val(item.FilingEntityMiddleName.toString());
                            $("#txtLenderLastName").val(item.FilingEntityLastName.toString());
                            $("#txtStreetName").val(item.FilingEntityStreetName.toString());
                            $("#txtCity").val(item.FilingEntityCity.toString());
                            $("#txtState").val(item.FilingEntityState.toString());
                            $("#txtZipCode").val(item.FilingEntityZip.toString());
                            $("#txtCountry").val(item.FilingEntityCountry.toString());
                            if ($("#txtCountry").val().toString() == "United States") {
                                $("#chkCountry").prop('checked', false);
                                $("#txtCountry").prop("disabled", true);
                                $("#txtState").prop('maxLength', '2');
                                if (item.FilingEntityZip.toString() != "") {
                                    $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                                }
                                else {
                                    $("#txtZipCode").addClass("watermarkHTMLTextBox");
                                    $("#txtZipCode").blur();
                                }
                            } else {
                                $("#chkCountry").prop('checked', true);
                                $("#txtCountry").prop("disabled", false);
                                $("#txtState").prop('maxLength', '30');

                                $m('#txtZipCode').attr("placeholder", "");
                                $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                            }
                            $m("#txtLenderLastName").valid();
                            // Address validation
                            $m("#txtCountry").valid();
                            $m("#txtStreetName").valid();
                            $m("#txtCity").valid();
                            $m("#txtState").valid();
                            $m("#txtZipCode").valid();
                        });
                    }
                });
                $("#lstMethod").focus();
            }
        });

        LoadData();

        function LoadData() {
            // Grid Common Code ///////////////////////////////////////////////////
            $("#divLoading").show();
            tableFilingTransactions = $m('#gridFilingTransactions').DataTable({
                "bProcessing": true,
                "responsive": true,
                "deferRender": true,
                "retrieve": true,
                "columnDefs": [
                    {
                        "targets": [0, 1, 2, 3, 4, 5, 6, 7, 38, 39, 41, 42, 43, 44],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        "targets": [9],
                        "fnCreatedCell": function (cell) {
                            cell.setAttribute('aria-label', "Row Actions");
                        }
                    }
                ],
                "initComplete": function (settings, json) {
                    //Accessibility: Applies various Accessibility features to this dataTable.
                    makeDataTableAccessible($m('#gridFilingTransactions').DataTable());
                },
                "fnRowCallback": function (nRow, aaData, iDisplayIndex) {
                    var uniqueID = generateUniqueRowIdForFnRowCallback(iDisplayIndex, nRow);
                    if (aaData[1] == "9") {
                        $m('td:eq(1)', nRow).html('<a class="editor_edit" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_loanDetails lnkGird"  href="#divUCLoanRecLoanRepay"> Loan Details </a>');
                    }
                    else if (aaData[1] == "10") {
                        $m('td:eq(1)', nRow).html('<a class="editor_edit" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_loanDetails lnkGird"  href="#divUCLoanRecLoanRepay"> Loan Details </a>');
                    }
                    else if (aaData[1] == "11") {
                        $m('td:eq(1)', nRow).html('<a class="editor_remove" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_loanDetails lnkGird"  href="#divUCLoanRecLoanRepay"> Loan Details </a>');
                    }
                    else if (aaData[1] == "14" && aaData[6] != "Y") {
                        $m('td:eq(1)', nRow).html('<a class="editor_loanDetails lnkGird"  href="#divUCLoanRecLoanRepay"> Loan Details </a>');
                    }
                    else if (aaData[1] == "14" && aaData[6] == "Y") { // LIABILITY.
                        if (aaData[22] == aaData[23]) {
                            $m('td:eq(1)', nRow).html('');
                        }
                        else if (aaData[22] != aaData[23]) {
                            $m('td:eq(1)', nRow).html('');
                        }
                    }
                    else {
                        if (aaData[1] != "15") {
                            $m('td:eq(1)', nRow).html('<a class="editor_edit" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Edit.png" title="Edit Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a><a class="editor_remove" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                        }
                        else { // SCHEDULE 15 LEGACY DATA NOT EDIT NO ADD ONLY DELETE.
                            $m('td:eq(1)', nRow).html('<a class="editor_remove" style="color:blue;" href="" target="_blank" id="lnkColumnData_' + 'Delete_' + uniqueID + '"><img src="../../Content/Images/Delete.png" title="Delete Row ' + iDisplayIndex + ' Data" style="background-repeat: no-repeat; "  /></a>');
                        }
                    }
                    return nRow;
                },
                "fnDrawCallback": function () {
                    $("#divLoading").hide();
                },
                "fnServerData": function (url, data, callback) {
                    //Bind Grid hides the loading too!
                    GetAllTransactionTypesData(false, callback, false, false);
                }
            });

            $m('#gridFilingTransactions').DataTable().ajax.reload();
            if (@Session["COMM_TYPE_ID"] == "23") {
                tableFilingTransactions.column(46).visible(true);
                tableFilingTransactions.column(47).visible(true);
                tableFilingTransactions.column(48).visible(true);
                tableFilingTransactions.column(49).visible(true);
                tableFilingTransactions.column(50).visible(true);
                tableFilingTransactions.column(51).visible(true);
                tableFilingTransactions.column(52).visible(true);
                tableFilingTransactions.column(53).visible(true);
                tableFilingTransactions.column(54).visible(true);
            }
            else {
                tableFilingTransactions.column(46).visible(false);
                tableFilingTransactions.column(47).visible(false);
                tableFilingTransactions.column(48).visible(false);
                tableFilingTransactions.column(49).visible(false);
                tableFilingTransactions.column(50).visible(false);
                tableFilingTransactions.column(51).visible(false);
                tableFilingTransactions.column(52).visible(false);
                tableFilingTransactions.column(53).visible(false);
                tableFilingTransactions.column(54).visible(false);
            }

            if (@Session["COMM_TYPE_ID"] == "19") {
                tableFilingTransactions.column(55).visible(true);
            }
            else {
                tableFilingTransactions.column(55).visible(false);
            }

            tableFilingTransactions.columns.adjust().draw(false);
            tableFilingTransactions.order([40, 'desc']).draw();
            tableFilingTransactions.columns.adjust().responsive.recalc();
            $("#divLoading").show();
        }

         //Common Code for Set Preferences - Start
        //---------------------------------------------------------------------------------------------------------------------------------------
        //---------------------------------------------------------------------------------------------------------------------------------------
        $('#btnSetPreferences').click(function () {
            $("#divLoading").show();
            var options = {};
            options.url = "@Url.Content("~/_UC_GridCommonControl/UpdateColumnValue/")";
            options.type = "GET";
            options.data = {
                uniqueValue: $m("#ddlViewableColumn").multipleSelect("getSelects").toString()
            };
            options.dataType = "json";
            options.contentType = "application/json";
            options.success = function (results) {
                window.status = "Transaction saved successfully";

                //Bind Grid hides the loading too!
                GetAllTransactionTypesData(true, tableFilingTransactions, false, false);
                HideColumn($m("#ddlViewableColumn").multipleSelect("getSelects", "text").toString().split(","));
            };
            options.error = function () {
                $("#divLoading").hide();
                ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ?(518) 474-8200 ', 'Ok', ''); 
            };
            $.ajax(options);

        });

        $.post("@Url.Content("~/_UC_GridCommonControl/GetSortName/")", {
        }, function (results) {
            HideColumn(results.toString().split(","));
        });

        function HideColumn(results) {
            var rules = {
                "indexesToStartHidden": [0, 1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43],
                "indexesToAlwaysKeepUnhidden": [8, 9], //Will always unhide.
                "columnNamesToUnhide": results,//String to match.
                "columnNamesIndexMappings": appCommonEFS_GetGridColumnSettings("UC_GridCommonControl") //String in header, index to unhide
            }
            appCommonEFS_HideTableColumn(tableFilingTransactions, rules);
        }

        /**
        * Appends label text to _validate elementys based on a list of custom errors returned from the server.
        * It won't do anyting to handle "AmmountError" keys but it will return true if it sees one in the list.
        * param {reuslt.Errors} errorList
        * Replaces this type of code basically:
        for (var i = 0; i < results.Errors.length; i++) {
            if (results.Errors[i].Key == "txtPartAmt") {
                $("#txtPartAmtSchedD_validate").append('<label for="txtPartAmtSchedD" class="error">' + results.Errors[i].Value + '</label>');
            }
            if (results.Errors[i].Key == "txtPartExplanationInKind") {
                $("#txtPartExplanationInKind_validate").append('<label for="txtPartExplanationInKind" class="error">' + results.Errors[i].Value + '</label>');
            }
            if (results.Errors[i].Key == "AmountError") {
                ShowDialogBox('EFS', 'Partnership Amount cannot be more than Outstanding Amount $' + parseFloat(expPartAmount).toFixed(2).toString(), 'Ok', '');
            }
        }
        */
        function AppendCustomErrorLabels(errorList) {
            //Define special error conditions
            //var errorLabelDiscrepancies = new Map([["errorText", "inputId"], ["etcText", "etcId"]]);
            return appCommonEFS_AppendCustomErrorLabelsForAmmountError(errorList, errorLabelDiscrepancies);
        }
        //Commonly used values in this particular page.
        function GetTableFilingTransactionsAjaxOptionsData() {
            return {
                txtFilerID: $("#txtFilerID").val(),
                lstElectionCycle: $("#lstElectionCycle option:selected").val(),
                lstUCOfficeType: $("#lstUCOfficeType option:selected").val(),
                lstDisclosurePeriod: $("#lstDisclosurePeriod option:selected").val(),
                lstElectionType: $("#lstElectionType option:selected").val(),
                lstElectionDateId: $("#lstElectionDate option:selected").val(),
                lstFilingDate: $m("#lstFilingDate option:selected").text(),
                txtFilingDate: sessionStorage.getItem("FilingDate").toString(),
                lstUCMuncipality: $m("#lstUCMuncipality option:selected").val(),
            }
        }

        /**Common code for invoking GetAllTransactionTypesData from controller.
         * reloadAndRecalc { boolean } reloads and recalculates the table. When we reload we will display the "divLoading" image until the ajax reload call is completed. This was created for ALM Defect 707 where users were intertacting with the table while the "Processing..." text was still visible.
         * dataTableInstanceToReload { function } The referecne to the datatable we will reload in the success callback..
         * dataOverides { ajax data params } pass to overwrite data values when making ajax call.
         * doneFunction { function } A function to be called if the ajax call is completed.
         */
        function GetAllTransactionTypesData(reloadAndRecalc, dataTableInstanceToReload, dataOverides, doneFunction) {
            var callback = dataTableInstanceToReload ? dataTableInstanceToReload : tableFilingTransactions;
            //Determine what data to use.
            var optionsData = bUtilIsObject(dataOverides) ? dataOverides : GetTableFilingTransactionsAjaxOptionsData();
            appCommonEFS_GetAllTransactionTypesDataCommon(reloadAndRecalc, callback, optionsData, doneFunction);
        }
        //Common Code for Set Preferences - End
        //---------------------------------------------------------------------------------------------------------------------------------------
        //---------------------------------------------------------------------------------------------------------------------------------------

        $m('#gridFilingTransactions tbody').on('click', 'tr', function (e) {
            if ($(this).hasClass('selected') != true) {
                tableFilingTransactions.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
            }
        });


         $("#divShowPartnerAdddataMonetary").hide();


         // Show Loan Details Link -----Start---------------------------------------------------------------------------

        sessionStorage.setItem("FilingTransIdForGrid", ' ');

        $("#divUCLoanRepayLoanRec").hide();
        $("#divUCLoanRecLoanRepay").hide();
        $("#divUCLoanRecLoanForgiven").hide();
        $("#divUCLoanRecOutLoans").hide();
        $("#divShowPartnerAdddataNCR").hide();

        var tableFilingTransactionsLoanReceived = '';
        var tableFilingTransactionsLoanRepay = '';
        var tableFilingTransactionsOutStandingLoans = '';
        var tableFilingTransactionsLoanForgiven = '';
        //Loan Details Grid
        $m('#gridFilingTransactions tbody').on('click', 'a.editor_loanDetails', function (e) {
            
            event.preventDefault();
            var rowData = tableFilingTransactions.row($(this).parents('tr')).data();

            sessionStorage.setItem("Loan_Lib_Num_details", rowData[41].toString());

            $("#divUCLoanRecLoanRepay").show();
            $("#divUCLoanRecOutLoans").show();
            $("#divUCLoanRepayLoanRec").show();
            $("#divUCLoanRecLoanForgiven").show();
            $("#divShowPartnerAdddataNCR").hide();
            $(".divGridLoanReceivedJQueryClassSelector").show();
            $("#divLiabilitiesGrid").show();

            $("#divHeaderLoanReceived").show();
            $("#divHeaderOutstandingLoans").show();

            tableFilingTransactionsLoanReceived = $m('#gridLoanRepayLoanRec').DataTable({
                "bProcessing": true,
                "responsive": true,
                "deferRender": true,
                "retrieve": true,
                "columnDefs": [
                    {
                        "targets": [0, 1, 2, 3, 4, 5, 6, 7],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        "targets": [9],
                        "fnCreatedCell": function (cell) {
                            cell.setAttribute('aria-label', "Row Actions");
                        }
                    }
                ],
                "initComplete": function (settings, json) {
                    //Accessibility: Applies various Accessibility features to this dataTable.
                    makeDataTableAccessible($m('#gridLoanRepayLoanRec').DataTable());
                },
                "fnServerData": function (url, data, callback) {
                    $.ajax({
                        "url": "@Url.Content("~/LoanRepaymentsSchedJ/GetLoanReceived_LoanRepaymentData/")",
                        "data": {
                            loan_Lib_Num: sessionStorage.getItem("Loan_Lib_Num_details").toString(),
                            SchedName: "LoanReceived"
                        },
                        "success": callback,
                        "dataType": "json",
                        "type": "POST",
                        "error": function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                        }
                    });
                }
            });
            tableFilingTransactionsLoanReceived.column(0).visible(false);
            tableFilingTransactionsLoanReceived.column(1).visible(false);
            tableFilingTransactionsLoanReceived.column(2).visible(false);
            tableFilingTransactionsLoanReceived.column(3).visible(false);
            tableFilingTransactionsLoanReceived.column(4).visible(false);
            tableFilingTransactionsLoanReceived.column(5).visible(false);
            tableFilingTransactionsLoanReceived.column(6).visible(false);
            tableFilingTransactionsLoanReceived.column(7).visible(false);
            tableFilingTransactionsLoanReceived.columns.adjust().draw(false);
            $m('#gridLoanRepayLoanRec').DataTable().ajax.reload();
            tableFilingTransactionsLoanReceived.search('').columns().search('').draw();

            // Bind All Loan Repayment
            tableFilingTransactionsLoanRepay = $m('#gridLoanRecLoanRepay').DataTable({
                "bProcessing": true,
                "responsive": true,
                "deferRender": true,
                "retrieve": true,
                "columnDefs": [
                    {
                        "targets": [0, 1, 2, 3, 4, 5, 6, 7],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        "targets": [9],
                        "fnCreatedCell": function (cell) {
                            cell.setAttribute('aria-label', "Row Actions");
                        }
                    }
                ],
                "initComplete": function (settings, json) {
                    //Accessibility: Applies various Accessibility features to this dataTable.
                    makeDataTableAccessible($m('#gridLoanRecLoanRepay').DataTable());
                },
                "fnServerData": function (url, data, callback) {
                    $.ajax({
                        "url": "@Url.Content("~/LoanReceivedSchedI/GetLoanReceived_LoanRepaymentData/")",
                        "data": {
                            loan_Lib_Num: sessionStorage.getItem("Loan_Lib_Num_details").toString(),
                            SchedName: "LoanRepayment",
                        },
                        "success": callback,
                        "dataType": "json",
                        "type": "POST",
                        "error": function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                        }
                    });
                }
            });
            tableFilingTransactionsLoanRepay.column(0).visible(false);
            tableFilingTransactionsLoanRepay.column(1).visible(false);
            tableFilingTransactionsLoanRepay.column(2).visible(false);
            tableFilingTransactionsLoanRepay.column(3).visible(false);
            tableFilingTransactionsLoanRepay.column(4).visible(false);
            tableFilingTransactionsLoanRepay.column(5).visible(false);
            tableFilingTransactionsLoanRepay.column(6).visible(false);
            tableFilingTransactionsLoanRepay.column(7).visible(false);
            tableFilingTransactionsLoanRepay.columns.adjust().draw(true);
            $m('#gridLoanRecLoanRepay').DataTable().ajax.reload();
            tableFilingTransactionsLoanRepay.search('').columns().search('').draw();

            //Bind All Outstanding Loan
            tableFilingTransactionsOutStandingLoans = $m('#gridLoanRecOutStandingLoan').DataTable({
                "bProcessing": true,
                "responsive": true,
                "deferRender": true,
                "retrieve": true,
                "columnDefs": [
                    {
                        "targets": [0, 1, 2, 3, 4, 5, 6, 7],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        "targets": [2],
                        "fnCreatedCell": function (cell) {
                            cell.setAttribute('aria-label', "Row Actions");
                        }
                    }
                ],
                "initComplete": function (settings, json) {
                    //Accessibility: Applies various Accessibility features to this dataTable.
                    makeDataTableAccessible($m('#gridLoanRecOutStandingLoan').DataTable());
                },
                "fnRowCallback": function (nRow, aaData, iDisplayIndex) {
                    return nRow;
                },
                "fnServerData": function (url, data, callback) {
                    $.ajax({
                        "url": "@Url.Content("~/LoanReceivedSchedI/GetLoanReceived_LoanRepaymentData/")",
                        "data": {
                            loan_Lib_Num: sessionStorage.getItem("Loan_Lib_Num_details").toString(),
                            SchedName: "LoanLiabilities",
                        },
                        "success": callback,
                        "dataType": "json",
                        "type": "POST",
                        "error": function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                        }
                    });
                }
            });
            tableFilingTransactionsOutStandingLoans.column(0).visible(false);
            tableFilingTransactionsOutStandingLoans.column(1).visible(false);
            tableFilingTransactionsOutStandingLoans.column(2).visible(false);
            tableFilingTransactionsOutStandingLoans.column(3).visible(false);
            tableFilingTransactionsOutStandingLoans.column(4).visible(false);
            tableFilingTransactionsOutStandingLoans.column(5).visible(false);
            tableFilingTransactionsOutStandingLoans.column(6).visible(false);
            tableFilingTransactionsOutStandingLoans.column(7).visible(false);
            tableFilingTransactionsOutStandingLoans.columns.adjust().draw(true);
            $m('#gridLoanRecOutStandingLoan').DataTable().ajax.reload();
            tableFilingTransactionsOutStandingLoans.search('').columns().search('').draw();

            //Get Loan Outstanding balance
            $.post("@Url.Content("~/LoanReceivedSchedI/GetLoanOutstandingBalance/")", {
                loan_Lib_Number: sessionStorage.getItem("Loan_Lib_Num_details").toString(),
            }, function (result) {
                    $("#lbl_UC_OutstandingBalance").text("Outstanding Amount: $" + result.toString());
            });


            // Bind All Loan Forgiven
            tableFilingTransactionsLoanForgiven = $m('#gridLoanRecLoanForgiven').DataTable({
                "bProcessing": true,
                "responsive": true,
                "deferRender": true,
                "retrieve": true,
                "columnDefs": [
                    {
                        "targets": [0, 1, 2, 3, 4, 5, 6, 7],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        "targets": [9],
                        "fnCreatedCell": function (cell) {
                            cell.setAttribute('aria-label', "Row Actions");
                        }
                    }
                ],
                "initComplete": function (settings, json) {
                    //Accessibility: Applies various Accessibility features to this dataTable.
                    makeDataTableAccessible($m('#gridLoanRecLoanForgiven').DataTable());
                },
                "fnServerData": function (url, data, callback) {
                    $.ajax({
                        "url": "@Url.Content("~/LoanReceivedSchedI/GetLoanReceived_LoanForgivenData/")",
                        "data": {
                            loan_Lib_Num: sessionStorage.getItem("Loan_Lib_Num_details").toString(),
                            SchedName: "LoanForgiven",
                        },
                        "success": callback,
                        "dataType": "json",
                        "type": "POST",
                        "error": function () {
                            ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                        }
                    });
                }
            });
            tableFilingTransactionsLoanForgiven.column(0).visible(false);
            tableFilingTransactionsLoanForgiven.column(1).visible(false);
            tableFilingTransactionsLoanForgiven.column(2).visible(false);
            tableFilingTransactionsLoanForgiven.column(3).visible(false);
            tableFilingTransactionsLoanForgiven.column(4).visible(false);
            tableFilingTransactionsLoanForgiven.column(5).visible(false);
            tableFilingTransactionsLoanForgiven.column(6).visible(false);
            tableFilingTransactionsLoanForgiven.column(7).visible(false);
            tableFilingTransactionsLoanForgiven.columns.adjust().draw(true);
            $m('#gridLoanRecLoanForgiven').DataTable().ajax.reload();
            tableFilingTransactionsLoanForgiven.search('').columns().search('').draw();

            $('html, body').animate({ scrollTop: $("#divUCLoanRepayLoanRec").offset().top }, 500);
        });

         //Bind Amount
        $("#lstSearchName").change(function () {
            $("#hSearch").show();
            $("#hAddScheJ").hide();
            $("#hAddScheN").hide();
            $("#divSearchLoans").show();
            $("#divAdd").hide();

            if ($m("#lstSearchName option:selected").text() == "- Select -")
            {
                $("#lstSearchAmount").prop("disabled", true);
                $("#lstSearchDate").prop("disabled", true);
            }
            else
            {
                $("#lstSearchAmount").prop("disabled", false);
                $("#lstSearchDate").prop("disabled", true);
                // Bind Committee Type
                var options = {};
                options.url = "@Url.Content("~/LoanRepaymentsSchedJ/GetSearchAmount/")";
                options.type = "POST";
                options.data = JSON.stringify(
                    {
                        FILING_ENTITY_NAME: $m("#lstSearchName option:selected").text()
                    });
                options.dataType = "json";
                options.contentType = "application/json";
                options.success = function (results) {
                    $("#lstSearchAmount").empty();
                    $("#lstSearchAmount").append("<option>" + "- Select -" + "</option>");
                    for (var i = 0; i < results.length; i++) {
                        $("#lstSearchAmount").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                    }
                };
                options.error = function () {
                    ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                };
                $.ajax(options);
            }
        });

        //Bind Amount
        $("#lstSearchAmount").change(function () {
            $("#hSearch").show();
            $("#hAddScheJ").hide();
            $("#hAddScheN").hide();
            $("#divSearchLoans").show();
            $("#divAdd").hide();

            if ($m("#lstSearchAmount option:selected").text() == "- Select -")
            {
                $("#lstSearchDate").prop("disabled", true);
            }
            else {
                $("#lstSearchDate").prop("disabled", false);
                // Bind Committee Type
                var options = {};
                options.url = "@Url.Content("~/LoanRepaymentsSchedJ/GetSearchDate/")";
                options.type = "POST";
                options.data = JSON.stringify(
                    {
                        FILING_ENTITY_NAME: $m("#lstSearchName option:selected").text(),
                        ORG_AMT: $m("#lstSearchAmount option:selected").text()
                    });
                options.dataType = "json";
                options.contentType = "application/json";
                options.success = function (results) {
                    $("#lstSearchDate").empty();
                    $("#lstSearchDate").append("<option>" + "- Select -" + "</option>");
                    for (var i = 0; i < results.length; i++) {
                        $("#lstSearchDate").append("<option value='" + results[i].Value + "'>" + results[i].Text + "</option>");
                    }
                };
                options.error = function () {
                    ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                };
                $.ajax(options);
            }
            $("#divOriginalName").show();
        });

         $m("#btnPreviousDialogForSearch").button().on("click", function () {
            $("#divExplanation").show();
            $("#divExplanationScheN").hide();

            $("#hSearch").show();
            $("#hAddScheJ").hide();
            $("#hAddScheN").hide();
            $("#divSearchLoans").show();
            $("#divAdd").hide();
            $("#lstSearchAmount").prop("disabled", false);
            $("#lstSearchDate").prop("disabled", false);
            $("#divOriginalName").show();
            //Button Show/Hide
            $("#btnPreviousDialogForSearch").hide();
            $("#btnNextDialogForSearch").show();
            $("#btnUpdateDialog").hide();
            $("#btnAddDialog").hide();
         });


         //==============================================================================================================================================
        // COMMON CODE FOR BUTTON CLEAR AND IT WILL GO TO MAIN PAGE CONTRIBUTION MONETARY.
        //Bind Clear Click
        $(".clsCommonClear").bind('click', function () {
            $("#divGridMonetary").show();
            sessionStorage.setDataTable = "true";
            $("#divShowHideHelp").removeClass("clsShowHideHelpSec");
            $("#divShowHideHelp").addClass("clsShowHideHelpSecInMobileTablet");

            sessionStorage.setItem("FilerId", $("#txtFilerID option:selected").val());
            sessionStorage.setItem("CommitteeName", $("#txtCommitteeName option:selected").val());
            sessionStorage.setItem("ElectionCycle", $("#lstElectionCycle option:selected").val());
            sessionStorage.setItem("ElectionType", $("#lstElectionType option:selected").val());
            sessionStorage.setItem("ElectionDate", $("#lstElectionDate option:selected").val());
            sessionStorage.setItem("DisclosureType", $("#lstDisclosureType option:selected").val());
            sessionStorage.setItem("DisclosurePeriod", $("#lstDisclosurePeriod option:selected").val());
            sessionStorage.setItem("CutOffDate", $("#txtReportPeriodDatesFrom").val());
            if ($("#lstElectionType option:selected").val() == "6") {
                sessionStorage.setItem("FilingDate", $("#txtNewFilingDate").val());
            }
            else {
                sessionStorage.setItem("FilingDate", $("#txtReportPeriodDatesTo").val());
            }
            sessionStorage.setItem("TransactionType", $("#lstTransactionType option:selected").val());
            sessionStorage.setItem("lstResigTermType", $("#lstResigTermType option:selected").val());
            sessionStorage.setItem("lstFilingDate", $("#lstFilingDate option:selected").val());

            sessionStorage.setItem("TransactionTypeId", "true");

            var urlContrHome = "@Url.Content("~/ContributionsMonetary/ContributionsMonetary/")";

            window.location.href = urlContrHome;
        });
        // COMMON CODE FOR BUTTON CLEAR AND IT WILL GO TO MAIN PAGE CONTRIBUTION MONETARY.
        //==============================================================================================================================================


         $m("#btnNextDialogForSearch").button().on("click", function () {
             $m('#DialogBoxSchedJForm').valid();
             if ($m('#DialogBoxSchedJForm').valid()) {
                 $.post("@Url.Content("~/LoanRepaymentsSchedJ/GetScheduleJ_EntityData/")", {
                     trans_Number: $("#lstSearchDate").val().toString()
                 }, function (result) {
                         if (result.length > 0) {
                             $.each(result, function (i, item) {

                                 $("#txtCurrentDateLoanRepay").val("");
                                 $("#txtAmt").val("");
                                 $("#txtExplanationCommon").val("");
                                 $("#lstMethod")[0].selectedIndex = 0;
                                 $("#txtCheck").val("");
                                 $("#txtCurrentDateLoanRepay").removeClass("ui-state-error error");
                                 $("#lstLoanerCode").removeClass("ui-state-error error");
                                 $("#txtLenderName").removeClass("ui-state-error error");
                                 $("#txtLenderFirstName").removeClass("ui-state-error error");
                                 $("#txtLenderMIName").removeClass("ui-state-error error");
                                 $("#txtLenderLastName").removeClass("ui-state-error error");
                                 $("#txtCountry").removeClass("ui-state-error error");
                                 $("#txtStreetName").removeClass("ui-state-error error");
                                 $("#txtCity").removeClass("ui-state-error error");
                                 $("#txtState").removeClass("ui-state-error error");
                                 $("#txtZipCode").removeClass("ui-state-error error");
                                 $("#txtCheck").removeClass("ui-state-error error");
                                 $("#txtAmt").removeClass("ui-state-error error");
                                 $("#txtExplanationCommon").removeClass("ui-state-error error");
                                 $("#txtCurrentDateLoanRepay").focus();
                                 $("#txtCurrentDateLoanRepay").removeClass("watermarkHTMLTextBox");

                                 $("#txtStreetName").val(item.FlngEntStrName);
                                 $("#txtCity").val(item.FlngEntCity);
                                 $("#txtState").val(item.FlngEntState);
                                 $("#txtZipCode").val(item.FlngEntZip);
                                 if (item.FlngEntZip.toString() != "") {
                                     $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                                 }
                                 else {
                                     if (item.FlngEntZip.toString() == "United States") {
                                         $("#txtZipCode").addClass("watermarkHTMLTextBox");
                                         $("#txtZipCode").blur();
                                     }
                                 }
                                 $("#txtCountry").val(item.FlngEntCountry.toString());
                                 if (item.FlngEntCountry.toString() == "United States") {
                                     $("#chkCountry").prop('checked', false);
                                     $("#txtCountry").prop("disabled", true);
                                     $("#txtState").prop('maxLength', '2');
                                 }
                                 else {
                                     $("#chkCountry").prop('checked', true);
                                     $("#txtCountry").prop("disabled", false);
                                     $("#txtState").prop('maxLength', '30');
                                     $("#txtZipCode").removeClass("watermarkHTMLTextBox");
                                     $m('#txtZipCode').attr("placeholder", "");
                                 }

                                 $("#txtLenderName").prop("disabled", false);
                                 $("#txtStreetName").prop("disabled", false);
                                 $("#txtCity").prop("disabled", false);
                                 $("#txtState").prop("disabled", false);
                                 $("#txtZipCode").prop("disabled", false);
                                 $("#txttdOriginalDate").val($m("#lstSearchDate option:selected").text());
                                 $("#txttdOriginalAmount").val($m("#lstSearchAmount option:selected").text());

                                 $.post("@Url.Content("~/LoanRepaymentsSchedJ/GetOutstanding_Amount/")", {
                                     trans_Number: $("#lstSearchDate").val().toString(),
                                     status: ''
                                 }, function (result) {
                                     $.each(result, function (i, item) {
                                         if (item.Original_Amt != null) {
                                             if (parseFloat(item.Original_Amt) == parseFloat(item.Amount)) {
                                                 var outStandingAmt = "0";
                                             }
                                             else {
                                                 var outStandingAmt = parseFloat(item.Original_Amt) - parseFloat(item.Amount);
                                             }

                                             if (outStandingAmt == Math.floor(outStandingAmt)) {
                                                 outStandingAmt = outStandingAmt + ".00";
                                             }
                                             outStandingAmt = parseFloat(outStandingAmt).toFixed(2);
                                             $("#txttdOutstandingAmount").val(outStandingAmt);
                                             sessionStorage.setItem("OutStandingAmt", outStandingAmt);
                                         }
                                     });

                                     // BIND LOANER CODE.
                                     var options = {};
                                     options.url = "@Url.Content("~/LoanRepaymentsSchedJ/BindLoanerCode/")";
                                     options.type = "POST";
                                     options.data = null;
                                     options.dataType = "json";
                                     options.contentType = "application/json";
                                     options.success = function (resultsMethod) {
                                         $("#lstLoanerCode").empty();
                                         for (var i = 0; i < resultsMethod.length; i++) {
                                             $("#lstLoanerCode").append("<option value='" + resultsMethod[i].Value + "'>" + resultsMethod[i].Text + "</option>");
                                         }
                                         // Set LOANER CODE.
                                         $m("#lstLoanerCode option")
                                             .filter(function () { return $m(this).val() == item.LoanOtherId.toString(); })
                                             .attr("selected", "selected");

                                         if ($("#lstLoanerCode option:selected").text() == "Other Entities") {
                                             $("#lblExplanation").text("* Explanation");
                                         }
                                         else {
                                             $("#lblExplanation").text("Explanation");
                                         }


                                         $("#hSearch").hide();
                                         $("#hAddScheJ").show();
                                         $("#hAddScheN").hide();
                                         $("#divSearchLoans").hide();
                                         $("#divAdd").show();
                                         //Button Show/Hide
                                         $("#btnPreviousDialogForSearch").show();
                                         $("#btnNextDialogForSearch").hide();
                                         $("#btnPreviousDialog").hide();
                                         $("#btnUpdateDialog").hide();
                                         $("#btnAddDialog").show();

                                         $("#txtCurrentDateLoanRepay").focus();
                                     };
                                     options.error = function () {
                                         ShowDialogBox('EFS', 'Error Fetching Data. Please Contact NYS Board of Elections ◾(518) 474-8200 ', 'Ok', '');
                                     };
                                     $.ajax(options);
                                 });

                                 sessionStorage.setItem("pageStatus", 'ADD');

                                 $("#LoanOtherId").prop("disabled", true);

                                 if (item.LoanOtherId.toString() == "1" ||
                                     item.LoanOtherId.toString() == "2" ||
                                     item.LoanOtherId.toString() == "3" ||
                                     item.LoanOtherId.toString() == "4" ||
                                     item.LoanOtherId.toString() == "6" ||
                                     item.LoanOtherId.toString() == "7" ||
                                     item.LoanOtherId.toString() == "8" ||
                                     item.LoanOtherId.toString() == "9") {
                                     $("#divLenderName").hide();
                                     $("#divLenderFirstName").show();
                                     $("#divLenderMiddleName").show();
                                     $("#divLenderLastName").show();
                                     $("#txtLenderFirstName").removeClass("ui-state-error error");
                                     $("#txtLenderMIName").removeClass("ui-state-error error");
                                     $("#txtLenderLastName").removeClass("ui-state-error error");

                                     $("#txtLenderFirstName").val(item.FlngEntFirstName);
                                     $("#txtLenderMIName").val(item.FlngEntMiddleName);
                                     $("#txtLenderLastName").val(item.FlngEntLastName);
                                 }
                                 else if (item.LoanOtherId.toString() == "10" ||
                                     item.LoanOtherId.toString() == "11" ||
                                     item.LoanOtherId.toString() == "12" ||
                                     item.LoanOtherId.toString() == "13") {
                                     $("#divLenderName").show();
                                     $("#divLenderFirstName").hide();
                                     $("#divLenderMiddleName").hide();
                                     $("#divLenderLastName").hide();
                                     $("#txtLenderName").removeClass("ui-state-error error");

                                     $("#txtLenderName").val(item.FlngEntName);
                                 }
                                 $("#lstLoanerCode").prop("disabled", true);
                             });
                         }
                         else {
                             ShowDialogBox('EFS', 'This loan no longer exists.', 'Ok', '');
                             var validator = $m("#DialogBoxSchedJForm").validate();
                             validator.resetForm();  // clear out the validation errors
                             $m("#DialogBoxSchedJForm")[0].reset();   // clear out the form data
                         }
                 });
             }
         });

        $("#txtAmt").focusout(function () {
            if ($m("#txtAmt").valid())
            {        
                if (($("#txtAmt").val()) != '')
                {          
                    if (sessionStorage.getItem("pageStatus").toString() == 'ADD')
                    {
                        var totalOutAmt = parseFloat(sessionStorage.getItem("OutStandingAmt").toString());
                        if (parseFloat($m("#txtAmt").val()) > parseFloat(totalOutAmt)) {
                            ShowDialogBox('EFS', 'Repay Amount cannot be more than Outstanding Amount $' + sessionStorage.getItem("OutStandingAmt") + '.', 'Ok', '');
                            $m("#txttdOutstandingAmount").val(bUtilSanitizeString(sessionStorage.getItem("OutStandingAmt")).toString());
                            $m("#txtAmt").val('');
                            $m("#txtAmt").focus();
                        }
                        else {
                            var amtVal = parseFloat(sessionStorage.getItem("OutStandingAmt").toString()) - parseFloat($m("#txtAmt").val());
                            if (amtVal == Math.floor(amtVal)) {
                                amtVal = amtVal + ".00";
                                $m("#txttdOutstandingAmount").val(amtVal);
                            }
                            else {
                                $m("#txttdOutstandingAmount").val(amtVal.toFixed(2));
                            }
                        }
                    }
                    else if (sessionStorage.getItem("pageStatus").toString() == 'EDIT')
                    {
                        var totalOutAmt = parseFloat(sessionStorage.getItem("OutStandingAmt").toString()) + parseFloat(sessionStorage.getItem("txtAmt").toString());
                        if (parseFloat($m("#txtAmt").val()) > parseFloat(totalOutAmt)) {
                            ShowDialogBox('EFS', 'Repay Amount cannot be more than Outstanding Amount $' + totalOutAmt.toFixed(2) + ' .', 'Ok', '');
                            $m("#txttdOutstandingAmount").val(totalOutAmt.toFixed(2));
                            $m("#txtAmt").val('');
                            $m("#txtAmt").focus();
                        }
                        else {
                            var amtVal = parseFloat(totalOutAmt) - parseFloat($m("#txtAmt").val());
                            if (amtVal == Math.floor(amtVal)) {
                                amtVal = amtVal + ".00";
                                $m("#txttdOutstandingAmount").val(amtVal);
                            }
                            else {
                                $m("#txttdOutstandingAmount").val(amtVal.toFixed(2));
                            }
                        }
                    }
                }
                else
                {
                    $m("#txttdOutstandingAmount").val(bUtilSanitizeString(sessionStorage.getItem("OutStandingAmt")).toString());
                    $m("#txttdOutstandingAmount").focus();
                }
            }
            else
            {
                if (($("#txtAmt").val()) != '') {

                    if (sessionStorage.getItem("OutStandingAmt") != null) {
                        var totalOutAmt = parseFloat(sessionStorage.getItem("OutStandingAmt").toString()) + parseFloat(sessionStorage.getItem("txtAmt").toString());
                        $m("#txttdOutstandingAmount").val(totalOutAmt.toFixed(2));
                        $m("#txttdOutstandingAmount").focus();
                    }
                }
            }
        });
         // Show Loan Details Link -----END-----------------------------------------------------------------------------
    });
</script>





















