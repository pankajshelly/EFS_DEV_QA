//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CAPASFIDAS_EFS_UnitTest.EFS_Service_UnitTest {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EFS_Service_UnitTest.ICAPASFIDAS_EFS_SERVICE")]
    public interface ICAPASFIDAS_EFS_SERVICE {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/ValidateFilings", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/ValidateFilingsResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.GetEditFlagDataContract[] ValidateFilings(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/ValidateFilings", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/ValidateFilingsResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.GetEditFlagDataContract[]> ValidateFilingsAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIEWeeklyExpenditureHisto" +
            "ryData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIEWeeklyExpenditureHisto" +
            "ryDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetFilingTransIEWeeklyExpenditureHistoryData(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIEWeeklyExpenditureHisto" +
            "ryData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIEWeeklyExpenditureHisto" +
            "ryDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetFilingTransIEWeeklyExpenditureHistoryDataAsync(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItemIEWeeklyExpFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItemIEWeeklyExpFlngTransResponse" +
            "")]
        bool AddNonItemIEWeeklyExpFlngTrans(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItemIEWeeklyExpFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItemIEWeeklyExpFlngTransResponse" +
            "")]
        System.Threading.Tasks.Task<bool> AddNonItemIEWeeklyExpFlngTransAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateIEWeeklyExpenditureFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateIEWeeklyExpenditureFlngTransResp" +
            "onse")]
        bool UpdateIEWeeklyExpenditureFlngTrans(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateIEWeeklyExpenditureFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateIEWeeklyExpenditureFlngTransResp" +
            "onse")]
        System.Threading.Tasks.Task<bool> UpdateIEWeeklyExpenditureFlngTransAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNonItemIEDateIncrdLiabUpdateData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNonItemIEDateIncrdLiabUpdateDataRes" +
            "ponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.DateIncurredContract[] GetNonItemIEDateIncrdLiabUpdateData(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNonItemIEDateIncrdLiabUpdateData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNonItemIEDateIncrdLiabUpdateDataRes" +
            "ponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.DateIncurredContract[]> GetNonItemIEDateIncrdLiabUpdateDataAsync(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNonItemIEPurposeCodes", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNonItemIEPurposeCodesResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.PurposeCodeContract[] GetNonItemIEPurposeCodes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNonItemIEPurposeCodes", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNonItemIEPurposeCodesResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.PurposeCodeContract[]> GetNonItemIEPurposeCodesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNonItemIEPurposeCodesSubContr", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNonItemIEPurposeCodesSubContrRespon" +
            "se")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.PurposeCodeContract[] GetNonItemIEPurposeCodesSubContr();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNonItemIEPurposeCodesSubContr", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNonItemIEPurposeCodesSubContrRespon" +
            "se")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.PurposeCodeContract[]> GetNonItemIEPurposeCodesSubContrAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIE24HourExpenditureData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIE24HourExpenditureDataR" +
            "esponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetFilingTransIE24HourExpenditureData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIE24HourExpenditureData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIE24HourExpenditureDataR" +
            "esponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetFilingTransIE24HourExpenditureDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItemIE24HourExpFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItemIE24HourExpFlngTransResponse" +
            "")]
        bool AddNonItemIE24HourExpFlngTrans(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItemIE24HourExpFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItemIE24HourExpFlngTransResponse" +
            "")]
        System.Threading.Tasks.Task<bool> AddNonItemIE24HourExpFlngTransAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIEWeeklyPIDAExpenditureD" +
            "ata", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIEWeeklyPIDAExpenditureD" +
            "ataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetFilingTransIEWeeklyPIDAExpenditureData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIEWeeklyPIDAExpenditureD" +
            "ata", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIEWeeklyPIDAExpenditureD" +
            "ataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetFilingTransIEWeeklyPIDAExpenditureDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItemIEWeeklyPIDAExpFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItemIEWeeklyPIDAExpFlngTransResp" +
            "onse")]
        bool AddNonItemIEWeeklyPIDAExpFlngTrans(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItemIEWeeklyPIDAExpFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItemIEWeeklyPIDAExpFlngTransResp" +
            "onse")]
        System.Threading.Tasks.Task<bool> AddNonItemIEWeeklyPIDAExpFlngTransAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetIEWeeklyLiabInccrTransactionTypes", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetIEWeeklyLiabInccrTransactionTypesRe" +
            "sponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.TransactionTypesContract[] GetIEWeeklyLiabInccrTransactionTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetIEWeeklyLiabInccrTransactionTypes", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetIEWeeklyLiabInccrTransactionTypesRe" +
            "sponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TransactionTypesContract[]> GetIEWeeklyLiabInccrTransactionTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNonItemIESchedNPurposeCodes", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNonItemIESchedNPurposeCodesResponse" +
            "")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.PurposeCodeContract[] GetNonItemIESchedNPurposeCodes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNonItemIESchedNPurposeCodes", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNonItemIESchedNPurposeCodesResponse" +
            "")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.PurposeCodeContract[]> GetNonItemIESchedNPurposeCodesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIEWeeklyLiabIncrData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIEWeeklyLiabIncrDataResp" +
            "onse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetFilingTransIEWeeklyLiabIncrData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIEWeeklyLiabIncrData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIEWeeklyLiabIncrDataResp" +
            "onse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetFilingTransIEWeeklyLiabIncrDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIEWeeklyLiabIncrHistoryD" +
            "ata", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIEWeeklyLiabIncrHistoryD" +
            "ataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetFilingTransIEWeeklyLiabIncrHistoryData(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIEWeeklyLiabIncrHistoryD" +
            "ata", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIEWeeklyLiabIncrHistoryD" +
            "ataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetFilingTransIEWeeklyLiabIncrHistoryDataAsync(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItemIEWeeklyLiabIncrFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItemIEWeeklyLiabIncrFlngTransRes" +
            "ponse")]
        bool AddNonItemIEWeeklyLiabIncrFlngTrans(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItemIEWeeklyLiabIncrFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItemIEWeeklyLiabIncrFlngTransRes" +
            "ponse")]
        System.Threading.Tasks.Task<bool> AddNonItemIEWeeklyLiabIncrFlngTransAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateIEWeeklyLiabIncrFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateIEWeeklyLiabIncrFlngTransRespons" +
            "e")]
        bool UpdateIEWeeklyLiabIncrFlngTrans(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateIEWeeklyLiabIncrFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateIEWeeklyLiabIncrFlngTransRespons" +
            "e")]
        System.Threading.Tasks.Task<bool> UpdateIEWeeklyLiabIncrFlngTransAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingMethodData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingMethodDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingMthodContract[] GetFilingMethodData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingMethodData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingMethodDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingMthodContract[]> GetFilingMethodDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetCampaignMaterialData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetCampaignMaterialDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.NonItemCampaignMaterialDataContract[] GetCampaignMaterialData(BOE.CAPASFIDAS_EFS.Domain.EFSService.NonItemCampaignMaterialContract objNonItemCampaignMaterialContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetCampaignMaterialData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetCampaignMaterialDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.NonItemCampaignMaterialDataContract[]> GetCampaignMaterialDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.NonItemCampaignMaterialContract objNonItemCampaignMaterialContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItemCampaignMaterial", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItemCampaignMaterialResponse")]
        bool AddNonItemCampaignMaterial(BOE.CAPASFIDAS_EFS.Domain.EFSService.NonItemCampaignMaterialContract objNonItemCampaignMaterialContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItemCampaignMaterial", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItemCampaignMaterialResponse")]
        System.Threading.Tasks.Task<bool> AddNonItemCampaignMaterialAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.NonItemCampaignMaterialContract objNonItemCampaignMaterialContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteCampaignMaterial", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteCampaignMaterialResponse")]
        bool DeleteCampaignMaterial(string strCampMatrId, string strModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteCampaignMaterial", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteCampaignMaterialResponse")]
        System.Threading.Tasks.Task<bool> DeleteCampaignMaterialAsync(string strCampMatrId, string strModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTokenID", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTokenIDResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.PIDAReturnVal GetTokenID(BOE.CAPASFIDAS_EFS.Domain.EFSService.DocumentIDContract objDocumentIDContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTokenID", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTokenIDResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.PIDAReturnVal> GetTokenIDAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.DocumentIDContract objDocumentIDContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTokenIDData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTokenIDDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.PIDAReturnVal GetTokenIDData(string strFileType, string strPageName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTokenIDData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTokenIDDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.PIDAReturnVal> GetTokenIDDataAsync(string strFileType, string strPageName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DocumentDownload", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DocumentDownloadResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.PIDADownloadObject DocumentDownload(string Token, int CabinetID, int DocumentID, string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DocumentDownload", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DocumentDownloadResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.PIDADownloadObject> DocumentDownloadAsync(string Token, int CabinetID, int DocumentID, string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDocumentData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDocumentDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.DocumentInfoData GetDocumentData(string IE_Comm_Doc_ID, string cabinetFolderName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDocumentData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDocumentDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.DocumentInfoData> GetDocumentDataAsync(string IE_Comm_Doc_ID, string cabinetFolderName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UploadFileInNetworkDrive", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UploadFileInNetworkDriveResponse")]
        bool UploadFileInNetworkDrive(BOE.CAPASFIDAS_EFS.Domain.EFSService.UploadFileNTDriveContract objUploadFileNTDriveContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UploadFileInNetworkDrive", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UploadFileInNetworkDriveResponse")]
        System.Threading.Tasks.Task<bool> UploadFileInNetworkDriveAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.UploadFileNTDriveContract objUploadFileNTDriveContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DownloadFileInNetworkDrive", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DownloadFileInNetworkDriveResponse")]
        byte[] DownloadFileInNetworkDrive(string strFileFolderPath, string strFileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DownloadFileInNetworkDrive", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DownloadFileInNetworkDriveResponse")]
        System.Threading.Tasks.Task<byte[]> DownloadFileInNetworkDriveAsync(string strFileFolderPath, string strFileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingDateOffCycleData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingDateOffCycleDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingDatesOffCycleContract[] GetFilingDateOffCycleData(string strElectionYearId, string strOfficeTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingDateOffCycleData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingDateOffCycleDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingDatesOffCycleContract[]> GetFilingDateOffCycleDataAsync(string strElectionYearId, string strOfficeTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDropdownValueExists", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDropdownValueExistsResponse")]
        bool GetDropdownValueExists(string strTableName, string strDropdownValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDropdownValueExists", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDropdownValueExistsResponse")]
        System.Threading.Tasks.Task<bool> GetDropdownValueExistsAsync(string strTableName, string strDropdownValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOfficeTypeEFS", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOfficeTypeEFSResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.OfficeTypeContract[] GetOfficeTypeEFS(string strElectionYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOfficeTypeEFS", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOfficeTypeEFSResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.OfficeTypeContract[]> GetOfficeTypeEFSAsync(string strElectionYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GeResigTermTypeData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GeResigTermTypeDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ResigTermTypeContract[] GeResigTermTypeData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GeResigTermTypeData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GeResigTermTypeDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ResigTermTypeContract[]> GeResigTermTypeDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetResgTermTypeExistsValue", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetResgTermTypeExistsValueResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ResigTermTypeContract[] GetResgTermTypeExistsValue(string strFilerId, string strElectionTypeId, string strOfficeTypeId, string strFilingTypeId, string strElectionYearId, string strElectionDateId, string strFilingDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetResgTermTypeExistsValue", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetResgTermTypeExistsValueResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ResigTermTypeContract[]> GetResgTermTypeExistsValueAsync(string strFilerId, string strElectionTypeId, string strOfficeTypeId, string strFilingTypeId, string strElectionYearId, string strElectionDateId, string strFilingDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateResgTermTypeFilings", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateResgTermTypeFilingsResponse")]
        bool UpdateResgTermTypeFilings(string strFilingsId, string strResgTermTypeId, string strModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateResgTermTypeFilings", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateResgTermTypeFilingsResponse")]
        System.Threading.Tasks.Task<bool> UpdateResgTermTypeFilingsAsync(string strFilingsId, string strResgTermTypeId, string strModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetEelectionExistsEFS", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetEelectionExistsEFSResponse")]
        bool GetEelectionExistsEFS(string strElectionYearId, string strElectionTypeId, string strOfficeTypeId, string strElectionDateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetEelectionExistsEFS", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetEelectionExistsEFSResponse")]
        System.Threading.Tasks.Task<bool> GetEelectionExistsEFSAsync(string strElectionYearId, string strElectionTypeId, string strOfficeTypeId, string strElectionDateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOriginalLiabilityData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOriginalLiabilityDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.LiabilityDetailsContract[] GetOriginalLiabilityData(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOriginalLiabilityData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOriginalLiabilityDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.LiabilityDetailsContract[]> GetOriginalLiabilityDataAsync(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpenditurePaymentLiabilityData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpenditurePaymentLiabilityDataResp" +
            "onse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.LiabilityDetailsContract[] GetExpenditurePaymentLiabilityData(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpenditurePaymentLiabilityData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpenditurePaymentLiabilityDataResp" +
            "onse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.LiabilityDetailsContract[]> GetExpenditurePaymentLiabilityDataAsync(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstandingLiabilityData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstandingLiabilityDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.LiabilityDetailsContract[] GetOutstandingLiabilityData(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstandingLiabilityData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstandingLiabilityDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.LiabilityDetailsContract[]> GetOutstandingLiabilityDataAsync(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetLiabilityForgivenData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetLiabilityForgivenDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.LiabilityDetailsContract[] GetLiabilityForgivenData(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetLiabilityForgivenData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetLiabilityForgivenDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.LiabilityDetailsContract[]> GetLiabilityForgivenDataAsync(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOfficeTypeForFilerIDWCF", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOfficeTypeForFilerIDWCFResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.OfficeTypeContract[] GetOfficeTypeForFilerIDWCF(string strElectYearID, string strFilerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOfficeTypeForFilerIDWCF", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOfficeTypeForFilerIDWCFResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.OfficeTypeContract[]> GetOfficeTypeForFilerIDWCFAsync(string strElectYearID, string strFilerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetElectionTypeForFilerIDWCF", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetElectionTypeForFilerIDWCFResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ElectionTypeContract[] GetElectionTypeForFilerIDWCF(string strElectYearID, string strOfficeTypeID, string strCountyID, string strMunicipalityID, string strFilerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetElectionTypeForFilerIDWCF", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetElectionTypeForFilerIDWCFResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ElectionTypeContract[]> GetElectionTypeForFilerIDWCFAsync(string strElectYearID, string strOfficeTypeID, string strCountyID, string strMunicipalityID, string strFilerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetElectionDateWCF", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetElectionDateWCFResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ElectionDateContract[] GetElectionDateWCF(string electionYearID, string electionTypeID, string officeTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetElectionDateWCF", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetElectionDateWCFResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ElectionDateContract[]> GetElectionDateWCFAsync(string electionYearID, string electionTypeID, string officeTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetCountyWCF", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetCountyWCFResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.CountyContract[] GetCountyWCF(int officeTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetCountyWCF", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetCountyWCFResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.CountyContract[]> GetCountyWCFAsync(int officeTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetMunicipalityWCF", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetMunicipalityWCFResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.MunicipalityContract[] GetMunicipalityWCF(int countyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetMunicipalityWCF", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetMunicipalityWCFResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.MunicipalityContract[]> GetMunicipalityWCFAsync(int countyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDisclosurePeriodsForYearAndFilerIDA" +
            "ndElectionType", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDisclosurePeriodsForYearAndFilerIDA" +
            "ndElectionTypeResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.DisclosurePreiodContract[] GetDisclosurePeriodsForYearAndFilerIDAndElectionType(string strFilerID, string strElectionYearID, string strElectionTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDisclosurePeriodsForYearAndFilerIDA" +
            "ndElectionType", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDisclosurePeriodsForYearAndFilerIDA" +
            "ndElectionTypeResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.DisclosurePreiodContract[]> GetDisclosurePeriodsForYearAndFilerIDAndElectionTypeAsync(string strFilerID, string strElectionYearID, string strElectionTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDisclosureTypesForYearAndFilerID", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDisclosureTypesForYearAndFilerIDRes" +
            "ponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.DisclosureTypesContract[] GetDisclosureTypesForYearAndFilerID(string strFilerID, string strElectionYearID, string strElectionTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDisclosureTypesForYearAndFilerID", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDisclosureTypesForYearAndFilerIDRes" +
            "ponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.DisclosureTypesContract[]> GetDisclosureTypesForYearAndFilerIDAsync(string strFilerID, string strElectionYearID, string strElectionTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/InsertSupportingDocument", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/InsertSupportingDocumentResponse")]
        string InsertSupportingDocument(string strFilingTransID, string strFilingMethodID, string strDocTypeID, string strScanDocID, string strFileType, string strFileSize, string strCreatedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/InsertSupportingDocument", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/InsertSupportingDocumentResponse")]
        System.Threading.Tasks.Task<string> InsertSupportingDocumentAsync(string strFilingTransID, string strFilingMethodID, string strDocTypeID, string strScanDocID, string strFileType, string strFileSize, string strCreatedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteDisclosure", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteDisclosureResponse")]
        int DeleteDisclosure(string strFilingID, string strIsSubmitted, string strUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteDisclosure", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteDisclosureResponse")]
        System.Threading.Tasks.Task<int> DeleteDisclosureAsync(string strFilingID, string strIsSubmitted, string strUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteSupportingDocument", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteSupportingDocumentResponse")]
        string DeleteSupportingDocument(string strSupportingDocumentID, string strUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteSupportingDocument", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteSupportingDocumentResponse")]
        System.Threading.Tasks.Task<string> DeleteSupportingDocumentAsync(string strSupportingDocumentID, string strUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetSupportingDocumentsGridData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetSupportingDocumentsGridDataResponse" +
            "")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.SupportingDocumentsGridContract[] GetSupportingDocumentsGridData(string strFilingTransID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetSupportingDocumentsGridData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetSupportingDocumentsGridDataResponse" +
            "")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.SupportingDocumentsGridContract[]> GetSupportingDocumentsGridDataAsync(string strFilingTransID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTransactionsGridData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTransactionsGridDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.TransactionGridContract[] GetTransactionsGridData(string strFilingsID, string strPolCalDateID, string strAmended, string strR_Status, string strDateSubmitted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTransactionsGridData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTransactionsGridDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TransactionGridContract[]> GetTransactionsGridDataAsync(string strFilingsID, string strPolCalDateID, string strAmended, string strR_Status, string strDateSubmitted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDocumentTypes", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDocumentTypesResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.DocumentTypeContract[] GetDocumentTypes(string ApplicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDocumentTypes", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDocumentTypesResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.DocumentTypeContract[]> GetDocumentTypesAsync(string ApplicationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDisclosureGridData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDisclosureGridDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.DisclosureGridContract[] GetDisclosureGridData(string strFilerID, string strReportYearID, string strOfficeTypeID, string strCountyID, string strMunicipalityID, string strElectionTypeID, string strElectionDateID, string strDiclosureTypeID, string strDisclosurePeriodID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDisclosureGridData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDisclosureGridDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.DisclosureGridContract[]> GetDisclosureGridDataAsync(string strFilerID, string strReportYearID, string strOfficeTypeID, string strCountyID, string strMunicipalityID, string strElectionTypeID, string strElectionDateID, string strDiclosureTypeID, string strDisclosurePeriodID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTransactionDetailsGridData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTransactionDetailsGridDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.TransactionDetailsGridContract[] GetTransactionDetailsGridData(string strTransNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTransactionDetailsGridData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTransactionDetailsGridDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TransactionDetailsGridContract[]> GetTransactionDetailsGridDataAsync(string strTransNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetViewSupportingDocumentsGridData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetViewSupportingDocumentsGridDataResp" +
            "onse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ViewSupportingDocumentsGridContract[] GetViewSupportingDocumentsGridData(string strFilerID, string strReportYearID, string strDisclosurePeriodID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetViewSupportingDocumentsGridData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetViewSupportingDocumentsGridDataResp" +
            "onse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ViewSupportingDocumentsGridContract[]> GetViewSupportingDocumentsGridDataAsync(string strFilerID, string strReportYearID, string strDisclosurePeriodID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDisclosurePeriodsForYearAndFilerID", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDisclosurePeriodsForYearAndFilerIDR" +
            "esponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.DisclosurePreiodContract[] GetDisclosurePeriodsForYearAndFilerID(string strFilerID, string strElectionYearID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDisclosurePeriodsForYearAndFilerID", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDisclosurePeriodsForYearAndFilerIDR" +
            "esponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.DisclosurePreiodContract[]> GetDisclosurePeriodsForYearAndFilerIDAsync(string strFilerID, string strElectionYearID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetLoanReceivedGridData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetLoanReceivedGridDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.LoanReceivedGridContract[] GetLoanReceivedGridData(string strFilerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetLoanReceivedGridData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetLoanReceivedGridDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.LoanReceivedGridContract[]> GetLoanReceivedGridDataAsync(string strFilerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetLoanPaymentGridData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetLoanPaymentGridDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.LoanPaymentGridContract[] GetLoanPaymentGridData(string strFilerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetLoanPaymentGridData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetLoanPaymentGridDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.LoanPaymentGridContract[]> GetLoanPaymentGridDataAsync(string strFilerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstandingLiabilityGridData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstandingLiabilityGridDataRespons" +
            "e")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.OutstandingLiabilityGridContract[] GetOutstandingLiabilityGridData(string strFilerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstandingLiabilityGridData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstandingLiabilityGridDataRespons" +
            "e")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.OutstandingLiabilityGridContract[]> GetOutstandingLiabilityGridDataAsync(string strFilerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetLiabilityLoanFogivenGridData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetLiabilityLoanFogivenGridDataRespons" +
            "e")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.LiabilityLoanForgivenGridContract[] GetLiabilityLoanFogivenGridData(string strFilerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetLiabilityLoanFogivenGridData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetLiabilityLoanFogivenGridDataRespons" +
            "e")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.LiabilityLoanForgivenGridContract[]> GetLiabilityLoanFogivenGridDataAsync(string strFilerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpenditurePaymentGridData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpenditurePaymentGridDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpenditurePaymentGridContract[] GetExpenditurePaymentGridData(string strFilerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpenditurePaymentGridData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpenditurePaymentGridDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpenditurePaymentGridContract[]> GetExpenditurePaymentGridDataAsync(string strFilerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/Reconcile_Loan", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/Reconcile_LoanResponse")]
        string Reconcile_Loan(string Schedule_I_TransFilingID, string[] Schedule_J_TransFilingIDs, string[] Schedule_N_TransFilingIDs, string[] Schedule_K_TransFilingIDs, string User);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/Reconcile_Loan", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/Reconcile_LoanResponse")]
        System.Threading.Tasks.Task<string> Reconcile_LoanAsync(string Schedule_I_TransFilingID, string[] Schedule_J_TransFilingIDs, string[] Schedule_N_TransFilingIDs, string[] Schedule_K_TransFilingIDs, string User);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstandingAmountLiabData_Forgiven", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstandingAmountLiabData_ForgivenR" +
            "esponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.OriginalAmountContract[] GetOutstandingAmountLiabData_Forgiven(string strFilingEntityId, string strtransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstandingAmountLiabData_Forgiven", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstandingAmountLiabData_ForgivenR" +
            "esponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.OriginalAmountContract[]> GetOutstandingAmountLiabData_ForgivenAsync(string strFilingEntityId, string strtransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAmendStatus", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAmendStatusResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.CheckAmendStatusContract[] GetAmendStatus(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAmendStatus", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAmendStatusResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.CheckAmendStatusContract[]> GetAmendStatusAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpSubContrTotAmt_LoanDetails", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpSubContrTotAmt_LoanDetailsRespon" +
            "se")]
        string GetExpSubContrTotAmt_LoanDetails(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpSubContrTotAmt_LoanDetails", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpSubContrTotAmt_LoanDetailsRespon" +
            "se")]
        System.Threading.Tasks.Task<string> GetExpSubContrTotAmt_LoanDetailsAsync(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetEditFlag", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetEditFlagResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.GetEditFlagDataContract[] GetEditFlag(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetEditFlag", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetEditFlagResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.GetEditFlagDataContract[]> GetEditFlagAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributorOriginalName", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributorOriginalNameResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalNameContract[] GetContributorOriginalName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributorOriginalName", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributorOriginalNameResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalNameContract[]> GetContributorOriginalNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributorOriginalAmount", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributorOriginalAmountResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalAmountContract[] GetContributorOriginalAmount(string strFilingEntityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributorOriginalAmount", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributorOriginalAmountResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalAmountContract[]> GetContributorOriginalAmountAsync(string strFilingEntityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributorOriginalContributionDate" +
            "", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributorOriginalContributionDate" +
            "Response")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalExpenseDateContract[] GetContributorOriginalContributionDate(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributorOriginalContributionDate" +
            "", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributorOriginalContributionDate" +
            "Response")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalExpenseDateContract[]> GetContributorOriginalContributionDateAsync(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstaningAmtContrRefunded", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstaningAmtContrRefundedResponse")]
        string GetOutstaningAmtContrRefunded(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstaningAmtContrRefunded", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstaningAmtContrRefundedResponse")]
        System.Threading.Tasks.Task<string> GetOutstaningAmtContrRefundedAsync(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOriginalAmtRefundedSchedM", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOriginalAmtRefundedSchedMResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalAmountContract[] GetOriginalAmtRefundedSchedM(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOriginalAmtRefundedSchedM", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOriginalAmtRefundedSchedMResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalAmountContract[]> GetOriginalAmtRefundedSchedMAsync(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddContributionsRefundedSchedM", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddContributionsRefundedSchedMResponse" +
            "")]
        bool AddContributionsRefundedSchedM(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddContributionsRefundedSchedM", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddContributionsRefundedSchedMResponse" +
            "")]
        System.Threading.Tasks.Task<bool> AddContributionsRefundedSchedMAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateContributionsRefundedSchedM", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateContributionsRefundedSchedMRespo" +
            "nse")]
        bool UpdateContributionsRefundedSchedM(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateContributionsRefundedSchedM", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateContributionsRefundedSchedMRespo" +
            "nse")]
        System.Threading.Tasks.Task<bool> UpdateContributionsRefundedSchedMAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddOutstandingLiabilitySchedN", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddOutstandingLiabilitySchedNResponse")]
        bool AddOutstandingLiabilitySchedN(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddOutstandingLiabilitySchedN", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddOutstandingLiabilitySchedNResponse")]
        System.Threading.Tasks.Task<bool> AddOutstandingLiabilitySchedNAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateOutstandingLiabilitySchedN", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateOutstandingLiabilitySchedNRespon" +
            "se")]
        bool UpdateOutstandingLiabilitySchedN(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateOutstandingLiabilitySchedN", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateOutstandingLiabilitySchedNRespon" +
            "se")]
        System.Threading.Tasks.Task<bool> UpdateOutstandingLiabilitySchedNAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/OutstandingLiabilityChildExists", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/OutstandingLiabilityChildExistsRespons" +
            "e")]
        string OutstandingLiabilityChildExists(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/OutstandingLiabilityChildExists", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/OutstandingLiabilityChildExistsRespons" +
            "e")]
        System.Threading.Tasks.Task<string> OutstandingLiabilityChildExistsAsync(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteOutstandingLiabilitySchedN", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteOutstandingLiabilitySchedNRespon" +
            "se")]
        bool DeleteOutstandingLiabilitySchedN(string strFilingTransId, string strModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteOutstandingLiabilitySchedN", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteOutstandingLiabilitySchedNRespon" +
            "se")]
        System.Threading.Tasks.Task<bool> DeleteOutstandingLiabilitySchedNAsync(string strFilingTransId, string strModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetEditTransactionData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetEditTransactionDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetEditTransactionData(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetEditTransactionData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetEditTransactionDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetEditTransactionDataAsync(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstandingAmountForForgiven", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstandingAmountForForgivenRespons" +
            "e")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.OriginalAmountContract[] GetOutstandingAmountForForgiven(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstandingAmountForForgiven", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstandingAmountForForgivenRespons" +
            "e")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.OriginalAmountContract[]> GetOutstandingAmountForForgivenAsync(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAuthenticateFilerInfo", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAuthenticateFilerInfoResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ValidateFilerInfoContract[] GetAuthenticateFilerInfo(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAuthenticateFilerInfo", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAuthenticateFilerInfoResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ValidateFilerInfoContract[]> GetAuthenticateFilerInfoAsync(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddAmountAllocationSchedN", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddAmountAllocationSchedNResponse")]
        bool AddAmountAllocationSchedN(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddAmountAllocationSchedN", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddAmountAllocationSchedNResponse")]
        System.Threading.Tasks.Task<bool> AddAmountAllocationSchedNAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateAmountAllocationSchedN", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateAmountAllocationSchedNResponse")]
        bool UpdateAmountAllocationSchedN(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateAmountAllocationSchedN", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateAmountAllocationSchedNResponse")]
        System.Threading.Tasks.Task<bool> UpdateAmountAllocationSchedNAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAllAmount", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAllAmountResponse")]
        string GetAllAmount(string filing_Ent_ID, string elect_Year, string municipalityID, string officeID, string distID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAllAmount", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAllAmountResponse")]
        System.Threading.Tasks.Task<string> GetAllAmountAsync(string filing_Ent_ID, string elect_Year, string municipalityID, string officeID, string distID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDistrictsForOffice", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDistrictsForOfficeResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.DistrictContract[] GetDistrictsForOffice(string strOfficeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDistrictsForOffice", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDistrictsForOfficeResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.DistrictContract[]> GetDistrictsForOfficeAsync(string strOfficeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOffices", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOfficesResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.OfficeContract[] GetOffices(string strMunicipalityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOffices", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOfficesResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.OfficeContract[]> GetOfficesAsync(string strMunicipalityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetInLieuOfStatementData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetInLieuOfStatementDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.InLieuOfStatementNonItemContract[] GetInLieuOfStatementData(string strFilerid, string strElectionDate, string strElectionYearId, string strElectionYear, string strElectTypeId, string strOfficeTypeId, string strFilingTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetInLieuOfStatementData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetInLieuOfStatementDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.InLieuOfStatementNonItemContract[]> GetInLieuOfStatementDataAsync(string strFilerid, string strElectionDate, string strElectionYearId, string strElectionYear, string strElectTypeId, string strOfficeTypeId, string strFilingTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAutoCompleteSchedR", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAutoCompleteSchedRResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.AutoCompleteSchedRContract[] GetAutoCompleteSchedR(string name, string strFilerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAutoCompleteSchedR", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAutoCompleteSchedRResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.AutoCompleteSchedRContract[]> GetAutoCompleteSchedRAsync(string name, string strFilerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddInLieuOfStatement", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddInLieuOfStatementResponse")]
        bool AddInLieuOfStatement(BOE.CAPASFIDAS_EFS.Domain.EFSService.AddInLieuOfStatementContract objAddInLieuOfStatementContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddInLieuOfStatement", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddInLieuOfStatementResponse")]
        System.Threading.Tasks.Task<bool> AddInLieuOfStatementAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.AddInLieuOfStatementContract objAddInLieuOfStatementContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteInLieuOfStatement", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteInLieuOfStatementResponse")]
        bool DeleteInLieuOfStatement(string strFilingsId, string strModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteInLieuOfStatement", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteInLieuOfStatementResponse")]
        System.Threading.Tasks.Task<bool> DeleteInLieuOfStatementAsync(string strFilingsId, string strModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetPersonNameAndTreasurerData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetPersonNameAndTreasurerDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.PersonNameAndTreasurerDataContract[] GetPersonNameAndTreasurerData(string strPersonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetPersonNameAndTreasurerData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetPersonNameAndTreasurerDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.PersonNameAndTreasurerDataContract[]> GetPersonNameAndTreasurerDataAsync(string strPersonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilerInforamation", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilerInforamationResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.FilerInfoContract[] GetFilerInforamation(string filerID, string person_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilerInforamation", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilerInforamationResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilerInfoContract[]> GetFilerInforamationAsync(string filerID, string person_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNoActivityReporttData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNoActivityReporttDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.InLieuOfStatementNonItemContract[] GetNoActivityReporttData(string strFilerid, string strElectionDate, string strElectionYearId, string strElectionYear, string strElectTypeId, string strOfficeTypeId, string strFilingTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNoActivityReporttData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNoActivityReporttDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.InLieuOfStatementNonItemContract[]> GetNoActivityReporttDataAsync(string strFilerid, string strElectionDate, string strElectionYearId, string strElectionYear, string strElectTypeId, string strOfficeTypeId, string strFilingTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNoActivityReport", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNoActivityReportResponse")]
        bool AddNoActivityReport(BOE.CAPASFIDAS_EFS.Domain.EFSService.AddInLieuOfStatementContract objAddInLieuOfStatementContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNoActivityReport", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNoActivityReportResponse")]
        System.Threading.Tasks.Task<bool> AddNoActivityReportAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.AddInLieuOfStatementContract objAddInLieuOfStatementContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetItemizedTransSubmitted", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetItemizedTransSubmittedResponse")]
        bool GetItemizedTransSubmitted(string strFilerId, string strElectionYearId, string strOfficeTypeId, string strFilingTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetItemizedTransSubmitted", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetItemizedTransSubmittedResponse")]
        System.Threading.Tasks.Task<bool> GetItemizedTransSubmittedAsync(string strFilerId, string strElectionYearId, string strOfficeTypeId, string strFilingTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/TransferOutStandingBalance", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/TransferOutStandingBalanceResponse")]
        bool TransferOutStandingBalance(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/TransferOutStandingBalance", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/TransferOutStandingBalanceResponse")]
        System.Threading.Tasks.Task<bool> TransferOutStandingBalanceAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNoticeOfNonParticipation", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNoticeOfNonParticipationResponse")]
        bool AddNoticeOfNonParticipation(BOE.CAPASFIDAS_EFS.Domain.EFSService.AddInLieuOfStatementContract objAddInLieuOfStatementContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNoticeOfNonParticipation", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNoticeOfNonParticipationResponse")]
        System.Threading.Tasks.Task<bool> AddNoticeOfNonParticipationAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.AddInLieuOfStatementContract objAddInLieuOfStatementContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNoticeOfNonParticipationtData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNoticeOfNonParticipationtDataRespon" +
            "se")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.InLieuOfStatementNonItemContract[] GetNoticeOfNonParticipationtData(string strFilerid, string strElectionDate, string strElectionYearId, string strElectionYear, string strElectTypeId, string strOfficeTypeId, string strFilingTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNoticeOfNonParticipationtData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNoticeOfNonParticipationtDataRespon" +
            "se")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.InLieuOfStatementNonItemContract[]> GetNoticeOfNonParticipationtDataAsync(string strFilerid, string strElectionDate, string strElectionYearId, string strElectionYear, string strElectTypeId, string strOfficeTypeId, string strFilingTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTransactionTypes24HNoticeData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTransactionTypes24HNoticeDataRespon" +
            "se")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.TransactionTypesContract[] GetTransactionTypes24HNoticeData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTransactionTypes24HNoticeData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTransactionTypes24HNoticeDataRespon" +
            "se")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TransactionTypesContract[]> GetTransactionTypes24HNoticeDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTrans24HourNoticeData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTrans24HourNoticeDataResponse" +
            "")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetFilingTrans24HourNoticeData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTrans24HourNoticeData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTrans24HourNoticeDataResponse" +
            "")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetFilingTrans24HourNoticeDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItem24HourNoticeFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItem24HourNoticeFlngTransRespons" +
            "e")]
        bool AddNonItem24HourNoticeFlngTrans(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItem24HourNoticeFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItem24HourNoticeFlngTransRespons" +
            "e")]
        System.Threading.Tasks.Task<bool> AddNonItem24HourNoticeFlngTransAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/Update24HNoticeFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/Update24HNoticeFlngTransResponse")]
        bool Update24HNoticeFlngTrans(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/Update24HNoticeFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/Update24HNoticeFlngTransResponse")]
        System.Threading.Tasks.Task<bool> Update24HNoticeFlngTransAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/Submit24HNoticeFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/Submit24HNoticeFlngTransResponse")]
        bool Submit24HNoticeFlngTrans(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/Submit24HNoticeFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/Submit24HNoticeFlngTransResponse")]
        System.Threading.Tasks.Task<bool> Submit24HNoticeFlngTransAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/Delete24HNoticeFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/Delete24HNoticeFlngTransResponse")]
        bool Delete24HNoticeFlngTrans(string strFilingTransId, string strModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/Delete24HNoticeFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/Delete24HNoticeFlngTransResponse")]
        System.Threading.Tasks.Task<bool> Delete24HNoticeFlngTransAsync(string strFilingTransId, string strModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNonItemChildTransExists", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNonItemChildTransExistsResponse")]
        bool GetNonItemChildTransExists(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNonItemChildTransExists", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNonItemChildTransExistsResponse")]
        System.Threading.Tasks.Task<bool> GetNonItemChildTransExistsAsync(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNonItemParentTransExists", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNonItemParentTransExistsResponse")]
        bool GetNonItemParentTransExists(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNonItemParentTransExists", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNonItemParentTransExistsResponse")]
        System.Threading.Tasks.Task<bool> GetNonItemParentTransExistsAsync(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTrans24HourNoticeHistoryData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTrans24HourNoticeHistoryDataR" +
            "esponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetFilingTrans24HourNoticeHistoryData(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTrans24HourNoticeHistoryData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTrans24HourNoticeHistoryDataR" +
            "esponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetFilingTrans24HourNoticeHistoryDataAsync(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/SubmitFilings_Summery", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/SubmitFilings_SummeryResponse")]
        bool SubmitFilings_Summery(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/SubmitFilings_Summery", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/SubmitFilings_SummeryResponse")]
        System.Threading.Tasks.Task<bool> SubmitFilings_SummeryAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransactionsDataSummary", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransactionsDataSummaryRespon" +
            "se")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetFilingTransactionsDataSummary(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransactionsDataSummary", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransactionsDataSummaryRespon" +
            "se")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetFilingTransactionsDataSummaryAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetSummery_OpeningBalance", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetSummery_OpeningBalanceResponse")]
        string GetSummery_OpeningBalance(string filerID, string election_Year_ID, string office_Type_ID, string filing_Type_ID, string election_Date, string filing_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetSummery_OpeningBalance", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetSummery_OpeningBalanceResponse")]
        System.Threading.Tasks.Task<string> GetSummery_OpeningBalanceAsync(string filerID, string election_Year_ID, string office_Type_ID, string filing_Type_ID, string election_Date, string filing_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetSummery_ClosingBalance", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetSummery_ClosingBalanceResponse")]
        string GetSummery_ClosingBalance(string filerID, string election_Year_ID, string office_Type_ID, string filing_Type_ID, string cut_Off_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetSummery_ClosingBalance", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetSummery_ClosingBalanceResponse")]
        System.Threading.Tasks.Task<string> GetSummery_ClosingBalanceAsync(string filerID, string election_Year_ID, string office_Type_ID, string filing_Type_ID, string cut_Off_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetCommEdit24HourNoticeTransData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetCommEdit24HourNoticeTransDataRespon" +
            "se")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetCommEdit24HourNoticeTransData(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetCommEdit24HourNoticeTransData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetCommEdit24HourNoticeTransDataRespon" +
            "se")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetCommEdit24HourNoticeTransDataAsync(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIEWeeklyContributioneDat" +
            "a", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIEWeeklyContributioneDat" +
            "aResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetFilingTransIEWeeklyContributioneData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIEWeeklyContributioneDat" +
            "a", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIEWeeklyContributioneDat" +
            "aResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetFilingTransIEWeeklyContributioneDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetIEWeeklyContrbutionTreasurerData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetIEWeeklyContrbutionTreasurerDataRes" +
            "ponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.NonItemIETreasurerContract[] GetIEWeeklyContrbutionTreasurerData(string strTreasurerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetIEWeeklyContrbutionTreasurerData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetIEWeeklyContrbutionTreasurerDataRes" +
            "ponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.NonItemIETreasurerContract[]> GetIEWeeklyContrbutionTreasurerDataAsync(string strTreasurerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItemIEWeeklyContrFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItemIEWeeklyContrFlngTransRespon" +
            "se")]
        bool AddNonItemIEWeeklyContrFlngTrans(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItemIEWeeklyContrFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItemIEWeeklyContrFlngTransRespon" +
            "se")]
        System.Threading.Tasks.Task<bool> AddNonItemIEWeeklyContrFlngTransAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateIEWeeklyContrFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateIEWeeklyContrFlngTransResponse")]
        bool UpdateIEWeeklyContrFlngTrans(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateIEWeeklyContrFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateIEWeeklyContrFlngTransResponse")]
        System.Threading.Tasks.Task<bool> UpdateIEWeeklyContrFlngTransAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/SubmitIEWeeklyContrFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/SubmitIEWeeklyContrFlngTransResponse")]
        bool SubmitIEWeeklyContrFlngTrans(string strFilingTransId, string strModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/SubmitIEWeeklyContrFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/SubmitIEWeeklyContrFlngTransResponse")]
        System.Threading.Tasks.Task<bool> SubmitIEWeeklyContrFlngTransAsync(string strFilingTransId, string strModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIETransHistoryData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIETransHistoryDataRespon" +
            "se")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetFilingTransIETransHistoryData(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIETransHistoryData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIETransHistoryDataRespon" +
            "se")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetFilingTransIETransHistoryDataAsync(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetItemizedNonItemIETransactions", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetItemizedNonItemIETransactionsRespon" +
            "se")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetItemizedNonItemIETransactions(string strFilerId, string strElectionYearId, string strOfficeTypeId, string strElectionTypeId, string strElectionDateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetItemizedNonItemIETransactions", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetItemizedNonItemIETransactionsRespon" +
            "se")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetItemizedNonItemIETransactionsAsync(string strFilerId, string strElectionYearId, string strOfficeTypeId, string strElectionTypeId, string strElectionDateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddItemizedIETransactionsData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddItemizedIETransactionsDataResponse")]
        bool AddItemizedIETransactionsData(string[] strFilingTransId, string strFilerId, string strElectionYearId, string strOfficeTypeId, string strFilingTypeId, string strElectionTypeId, string strElectionDateId, string strCreatedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddItemizedIETransactionsData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddItemizedIETransactionsDataResponse")]
        System.Threading.Tasks.Task<bool> AddItemizedIETransactionsDataAsync(string[] strFilingTransId, string strFilerId, string strElectionYearId, string strOfficeTypeId, string strFilingTypeId, string strElectionTypeId, string strElectionDateId, string strCreatedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributorCodeIEWeeklyContrSchedC", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributorCodeIEWeeklyContrSchedCR" +
            "esponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ContributorNameContract[] GetContributorCodeIEWeeklyContrSchedC();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributorCodeIEWeeklyContrSchedC", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributorCodeIEWeeklyContrSchedCR" +
            "esponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ContributorNameContract[]> GetContributorCodeIEWeeklyContrSchedCAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributorCodeIEWeeklyContrSchedD", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributorCodeIEWeeklyContrSchedDR" +
            "esponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ContributorNameContract[] GetContributorCodeIEWeeklyContrSchedD();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributorCodeIEWeeklyContrSchedD", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributorCodeIEWeeklyContrSchedDR" +
            "esponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ContributorNameContract[]> GetContributorCodeIEWeeklyContrSchedDAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIE24HContributioneData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIE24HContributioneDataRe" +
            "sponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetFilingTransIE24HContributioneData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIE24HContributioneData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIE24HContributioneDataRe" +
            "sponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetFilingTransIE24HContributioneDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIE24HContributionHistory" +
            "Data", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIE24HContributionHistory" +
            "DataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetFilingTransIE24HContributionHistoryData(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIE24HContributionHistory" +
            "Data", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIE24HContributionHistory" +
            "DataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetFilingTransIE24HContributionHistoryDataAsync(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetIE24HContrTransactionTypes", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetIE24HContrTransactionTypesResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.TransactionTypesContract[] GetIE24HContrTransactionTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetIE24HContrTransactionTypes", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetIE24HContrTransactionTypesResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TransactionTypesContract[]> GetIE24HContrTransactionTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItemIE24HContrFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItemIE24HContrFlngTransResponse")]
        bool AddNonItemIE24HContrFlngTrans(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItemIE24HContrFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddNonItemIE24HContrFlngTransResponse")]
        System.Threading.Tasks.Task<bool> AddNonItemIE24HContrFlngTransAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateIE24HContrFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateIE24HContrFlngTransResponse")]
        bool UpdateIE24HContrFlngTrans(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateIE24HContrFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateIE24HContrFlngTransResponse")]
        System.Threading.Tasks.Task<bool> UpdateIE24HContrFlngTransAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/SubmitIE24HContrFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/SubmitIE24HContrFlngTransResponse")]
        bool SubmitIE24HContrFlngTrans(string strFilingTransId, string strModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/SubmitIE24HContrFlngTrans", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/SubmitIE24HContrFlngTransResponse")]
        System.Threading.Tasks.Task<bool> SubmitIE24HContrFlngTransAsync(string strFilingTransId, string strModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetSummery_AllSchedBalances", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetSummery_AllSchedBalancesResponse")]
        string GetSummery_AllSchedBalances(string filerID, string election_Year_ID, string office_Type_ID, string filing_Type_ID, string filing_date, string filingSchedID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetSummery_AllSchedBalances", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetSummery_AllSchedBalancesResponse")]
        System.Threading.Tasks.Task<string> GetSummery_AllSchedBalancesAsync(string filerID, string election_Year_ID, string office_Type_ID, string filing_Type_ID, string filing_date, string filingSchedID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetIEWeeklyExpTransactionTypes", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetIEWeeklyExpTransactionTypesResponse" +
            "")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.TransactionTypesContract[] GetIEWeeklyExpTransactionTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetIEWeeklyExpTransactionTypes", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetIEWeeklyExpTransactionTypesResponse" +
            "")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TransactionTypesContract[]> GetIEWeeklyExpTransactionTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIEWeeklyExpenditureData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIEWeeklyExpenditureDataR" +
            "esponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetFilingTransIEWeeklyExpenditureData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIEWeeklyExpenditureData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransIEWeeklyExpenditureDataR" +
            "esponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetFilingTransIEWeeklyExpenditureDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFilingTransaction_TransferIn", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFilingTransaction_TransferInResp" +
            "onse")]
        bool UpdateFilingTransaction_TransferIn(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFilingTransaction_TransferIn", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFilingTransaction_TransferInResp" +
            "onse")]
        System.Threading.Tasks.Task<bool> UpdateFilingTransaction_TransferInAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransaction_NonCompHKReceipts" +
            "", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransaction_NonCompHKReceipts" +
            "Response")]
        bool AddFilingTransaction_NonCompHKReceipts(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransaction_NonCompHKReceipts" +
            "", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransaction_NonCompHKReceipts" +
            "Response")]
        System.Threading.Tasks.Task<bool> AddFilingTransaction_NonCompHKReceiptsAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFilingTransNonCompHKReceipts", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFilingTransNonCompHKReceiptsResp" +
            "onse")]
        bool UpdateFilingTransNonCompHKReceipts(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFilingTransNonCompHKReceipts", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFilingTransNonCompHKReceiptsResp" +
            "onse")]
        System.Threading.Tasks.Task<bool> UpdateFilingTransNonCompHKReceiptsAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFlngTransContrMonetaryData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFlngTransContrMonetaryDataResponse")]
        bool AddFlngTransContrMonetaryData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFlngTransContrMonetaryData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFlngTransContrMonetaryDataResponse")]
        System.Threading.Tasks.Task<bool> AddFlngTransContrMonetaryDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFlngTransMonetaryContrData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFlngTransMonetaryContrDataRespon" +
            "se")]
        bool UpdateFlngTransMonetaryContrData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFlngTransMonetaryContrData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFlngTransMonetaryContrDataRespon" +
            "se")]
        System.Threading.Tasks.Task<bool> UpdateFlngTransMonetaryContrDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFlngTransExpenditureData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFlngTransExpenditureDataResponse")]
        string AddFlngTransExpenditureData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFlngTransExpenditureData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFlngTransExpenditureDataResponse")]
        System.Threading.Tasks.Task<string> AddFlngTransExpenditureDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransaction_TransferOut", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransaction_TransferOutRespon" +
            "se")]
        bool AddFilingTransaction_TransferOut(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransaction_TransferOut", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransaction_TransferOutRespon" +
            "se")]
        System.Threading.Tasks.Task<bool> AddFilingTransaction_TransferOutAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFilingTransaction_TransferOut", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFilingTransaction_TransferOutRes" +
            "ponse")]
        bool UpdateFilingTransaction_TransferOut(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFilingTransaction_TransferOut", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFilingTransaction_TransferOutRes" +
            "ponse")]
        System.Threading.Tasks.Task<bool> UpdateFilingTransaction_TransferOutAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransaction_LoanReceived", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransaction_LoanReceivedRespo" +
            "nse")]
        bool AddFilingTransaction_LoanReceived(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransaction_LoanReceived", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransaction_LoanReceivedRespo" +
            "nse")]
        System.Threading.Tasks.Task<bool> AddFilingTransaction_LoanReceivedAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFilingTransaction_LoanReceived", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFilingTransaction_LoanReceivedRe" +
            "sponse")]
        bool UpdateFilingTransaction_LoanReceived(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFilingTransaction_LoanReceived", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFilingTransaction_LoanReceivedRe" +
            "sponse")]
        System.Threading.Tasks.Task<bool> UpdateFilingTransaction_LoanReceivedAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetLoanerCode", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetLoanerCodeResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.LoanerCodeContract[] GetLoanerCode();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetLoanerCode", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetLoanerCodeResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.LoanerCodeContract[]> GetLoanerCodeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAutoCompleteCreditorNameLiab", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAutoCompleteCreditorNameLiabRespons" +
            "e")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.OutstandingLiabilityContract[] GetAutoCompleteCreditorNameLiab(string name, string strFilerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAutoCompleteCreditorNameLiab", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAutoCompleteCreditorNameLiabRespons" +
            "e")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.OutstandingLiabilityContract[]> GetAutoCompleteCreditorNameLiabAsync(string name, string strFilerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDateIncurredLiabData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDateIncurredLiabDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.DateIncurredContract[] GetDateIncurredLiabData(string strFilingEntityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDateIncurredLiabData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDateIncurredLiabDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.DateIncurredContract[]> GetDateIncurredLiabDataAsync(string strFilingEntityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstandingAmountLiabData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstandingAmountLiabDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.OriginalAmountContract[] GetOutstandingAmountLiabData(string strFilingEntityId, string strUpdateStatus, string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstandingAmountLiabData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstandingAmountLiabDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.OriginalAmountContract[]> GetOutstandingAmountLiabDataAsync(string strFilingEntityId, string strUpdateStatus, string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpenditureLiabilityExists", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpenditureLiabilityExistsResponse")]
        string GetExpenditureLiabilityExists(string strFilingEntityId, string strFlngEntyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpenditureLiabilityExists", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpenditureLiabilityExistsResponse")]
        System.Threading.Tasks.Task<string> GetExpenditureLiabilityExistsAsync(string strFilingEntityId, string strFlngEntyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpPaymentsLiabilityData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpPaymentsLiabilityDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentLiabilityContract[] GetExpPaymentsLiabilityData(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpPaymentsLiabilityData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpPaymentsLiabilityDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentLiabilityContract[]> GetExpPaymentsLiabilityDataAsync(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFlngTransExpenditureData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFlngTransExpenditureDataResponse" +
            "")]
        bool UpdateFlngTransExpenditureData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFlngTransExpenditureData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFlngTransExpenditureDataResponse" +
            "")]
        System.Threading.Tasks.Task<bool> UpdateFlngTransExpenditureDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetSubcontracorsExists", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetSubcontracorsExistsResponse")]
        bool GetSubcontracorsExists(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetSubcontracorsExists", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetSubcontracorsExistsResponse")]
        System.Threading.Tasks.Task<bool> GetSubcontracorsExistsAsync(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDate_SchedueledJ", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDate_SchedueledJResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.GetSearchForScheduledIContract[] GetDate_SchedueledJ(string FILING_ENTITY_NAME, string ORG_AMT, string flng_Ent_FirstName, string flng_Ent_MiddleName, string flng_Ent_LastName, string filer_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDate_SchedueledJ", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDate_SchedueledJResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.GetSearchForScheduledIContract[]> GetDate_SchedueledJAsync(string FILING_ENTITY_NAME, string ORG_AMT, string flng_Ent_FirstName, string flng_Ent_MiddleName, string flng_Ent_LastName, string filer_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAmount_SchedueledJ", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAmount_SchedueledJResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.GetSearchForScheduledIContract[] GetAmount_SchedueledJ(string FILING_ENTITY_NAME, string flng_Ent_FirstName, string flng_Ent_MiddleName, string flng_Ent_LastName, string filer_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAmount_SchedueledJ", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAmount_SchedueledJResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.GetSearchForScheduledIContract[]> GetAmount_SchedueledJAsync(string FILING_ENTITY_NAME, string flng_Ent_FirstName, string flng_Ent_MiddleName, string flng_Ent_LastName, string filer_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetName_SchedueledJ", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetName_SchedueledJResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.GetSearchForScheduledIContract[] GetName_SchedueledJ(string filer_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetName_SchedueledJ", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetName_SchedueledJResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.GetSearchForScheduledIContract[]> GetName_SchedueledJAsync(string filer_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetScheduleJ_EntityData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetScheduleJ_EntityDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract[] GetScheduleJ_EntityData(string trans_Number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetScheduleJ_EntityData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetScheduleJ_EntityDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract[]> GetScheduleJ_EntityDataAsync(string trans_Number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/ValidateSchedJ_Amount", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/ValidateSchedJ_AmountResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.GetSearchForScheduledIContract[] ValidateSchedJ_Amount(string trans_Number, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/ValidateSchedJ_Amount", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/ValidateSchedJ_AmountResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.GetSearchForScheduledIContract[]> ValidateSchedJ_AmountAsync(string trans_Number, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransaction_LoanRepayment", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransaction_LoanRepaymentResp" +
            "onse")]
        bool AddFilingTransaction_LoanRepayment(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransaction_LoanRepayment", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransaction_LoanRepaymentResp" +
            "onse")]
        System.Threading.Tasks.Task<bool> AddFilingTransaction_LoanRepaymentAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransExpReimbursmentData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransExpReimbursmentDataRespo" +
            "nse")]
        bool AddFilingTransExpReimbursmentData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransExpReimbursmentData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransExpReimbursmentDataRespo" +
            "nse")]
        System.Threading.Tasks.Task<bool> AddFilingTransExpReimbursmentDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFlngTransExpReimbursementData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFlngTransExpReimbursementDataRespon" +
            "se")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract[] GetFlngTransExpReimbursementData(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFlngTransExpReimbursementData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFlngTransExpReimbursementDataRespon" +
            "se")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract[]> GetFlngTransExpReimbursementDataAsync(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetReimbursementDetailsAmt", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetReimbursementDetailsAmtResponse")]
        string GetReimbursementDetailsAmt(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetReimbursementDetailsAmt", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetReimbursementDetailsAmtResponse")]
        System.Threading.Tasks.Task<string> GetReimbursementDetailsAmtAsync(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/ValidateForUpdateScheJ", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/ValidateForUpdateScheJResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.GetSearchForScheduledIContract[] ValidateForUpdateScheJ(string filing_Trans_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/ValidateForUpdateScheJ", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/ValidateForUpdateScheJResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.GetSearchForScheduledIContract[]> ValidateForUpdateScheJAsync(string filing_Trans_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateLoanRepaymentData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateLoanRepaymentDataResponse")]
        bool UpdateLoanRepaymentData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateLoanRepaymentData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateLoanRepaymentDataResponse")]
        System.Threading.Tasks.Task<bool> UpdateLoanRepaymentDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteLoanReceived", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteLoanReceivedResponse")]
        bool DeleteLoanReceived(string transNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteLoanReceived", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteLoanReceivedResponse")]
        System.Threading.Tasks.Task<bool> DeleteLoanReceivedAsync(string transNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteLoanRepayment", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteLoanRepaymentResponse")]
        bool DeleteLoanRepayment(string loan_Lib_Number, string transNumber, string modify_By);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteLoanRepayment", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteLoanRepaymentResponse")]
        System.Threading.Tasks.Task<bool> DeleteLoanRepaymentAsync(string loan_Lib_Number, string transNumber, string modify_By);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransactionsForScheduledIJN", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransactionsForScheduledIJNRe" +
            "sponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetFilingTransactionsForScheduledIJN(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransactionsForScheduledIJN", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransactionsForScheduledIJNRe" +
            "sponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetFilingTransactionsForScheduledIJNAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFilingTransExpReimbursmentData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFilingTransExpReimbursmentDataRe" +
            "sponse")]
        bool UpdateFilingTransExpReimbursmentData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFilingTransExpReimbursmentData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFilingTransExpReimbursmentDataRe" +
            "sponse")]
        System.Threading.Tasks.Task<bool> UpdateFilingTransExpReimbursmentDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteFlngTransReimbursementDataSchedF" +
            "", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteFlngTransReimbursementDataSchedF" +
            "Response")]
        bool DeleteFlngTransReimbursementDataSchedF(string strTransNumber, string strModififedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteFlngTransReimbursementDataSchedF" +
            "", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteFlngTransReimbursementDataSchedF" +
            "Response")]
        System.Threading.Tasks.Task<bool> DeleteFlngTransReimbursementDataSchedFAsync(string strTransNumber, string strModififedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransNonCompaignHKExpensesDat" +
            "a", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransNonCompaignHKExpensesDat" +
            "aResponse")]
        string AddFilingTransNonCompaignHKExpensesData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransNonCompaignHKExpensesDat" +
            "a", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransNonCompaignHKExpensesDat" +
            "aResponse")]
        System.Threading.Tasks.Task<string> AddFilingTransNonCompaignHKExpensesDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNCHKExpensesReimbursementData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNCHKExpensesReimbursementDataRespon" +
            "se")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract[] GetNCHKExpensesReimbursementData(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNCHKExpensesReimbursementData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetNCHKExpensesReimbursementDataRespon" +
            "se")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract[]> GetNCHKExpensesReimbursementDataAsync(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateNonCompaignHKExpensesSchedQData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateNonCompaignHKExpensesSchedQDataR" +
            "esponse")]
        bool UpdateNonCompaignHKExpensesSchedQData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateNonCompaignHKExpensesSchedQData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateNonCompaignHKExpensesSchedQDataR" +
            "esponse")]
        System.Threading.Tasks.Task<bool> UpdateNonCompaignHKExpensesSchedQDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateOutStandingLoansData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateOutStandingLoansDataResponse")]
        bool UpdateOutStandingLoansData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateOutStandingLoansData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateOutStandingLoansDataResponse")]
        System.Threading.Tasks.Task<bool> UpdateOutStandingLoansDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/CheckOutstandingScheduled", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/CheckOutstandingScheduledResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract[] CheckOutstandingScheduled(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/CheckOutstandingScheduled", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/CheckOutstandingScheduledResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract[]> CheckOutstandingScheduledAsync(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/ValidateSchedI_UpdateAmount", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/ValidateSchedI_UpdateAmountResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.GetSearchForScheduledIContract[] ValidateSchedI_UpdateAmount(string trans_Number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/ValidateSchedI_UpdateAmount", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/ValidateSchedI_UpdateAmountResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.GetSearchForScheduledIContract[]> ValidateSchedI_UpdateAmountAsync(string trans_Number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpLiabilityOwedAmt", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpLiabilityOwedAmtResponse")]
        string GetExpLiabilityOwedAmt(string strFlngEntityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpLiabilityOwedAmt", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpLiabilityOwedAmtResponse")]
        System.Threading.Tasks.Task<string> GetExpLiabilityOwedAmtAsync(string strFlngEntityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpSubContrTotAmt", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpSubContrTotAmtResponse")]
        string GetExpSubContrTotAmt(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpSubContrTotAmt", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpSubContrTotAmtResponse")]
        System.Threading.Tasks.Task<string> GetExpSubContrTotAmtAsync(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstandingLiabilityAmount", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstandingLiabilityAmountResponse")]
        string GetOutstandingLiabilityAmount(string strFilingEntityId, string strFlngTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstandingLiabilityAmount", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstandingLiabilityAmountResponse")]
        System.Threading.Tasks.Task<string> GetOutstandingLiabilityAmountAsync(string strFilingEntityId, string strFlngTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpPayTotalLiabAmount", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpPayTotalLiabAmountResponse")]
        string GetExpPayTotalLiabAmount(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpPayTotalLiabAmount", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpPayTotalLiabAmountResponse")]
        System.Threading.Tasks.Task<string> GetExpPayTotalLiabAmountAsync(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributorTypesSchedC", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributorTypesSchedCResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ContributorNameContract[] GetContributorTypesSchedC();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributorTypesSchedC", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributorTypesSchedCResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ContributorNameContract[]> GetContributorTypesSchedCAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransaction_LoanForgiven", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransaction_LoanForgivenRespo" +
            "nse")]
        bool AddFilingTransaction_LoanForgiven(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransaction_LoanForgiven", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransaction_LoanForgivenRespo" +
            "nse")]
        System.Threading.Tasks.Task<bool> AddFilingTransaction_LoanForgivenAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteLoanForgiven", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteLoanForgivenResponse")]
        bool DeleteLoanForgiven(string loan_Lib_Number, string transNumber, string modify_By);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteLoanForgiven", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteLoanForgivenResponse")]
        System.Threading.Tasks.Task<bool> DeleteLoanForgivenAsync(string loan_Lib_Number, string transNumber, string modify_By);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddAuthorizedToSignCheck", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddAuthorizedToSignCheckResponse")]
        bool AddAuthorizedToSignCheck(BOE.CAPASFIDAS_EFS.Domain.EFSService.AuthorizedToSignCheckContract objAuthorizedToSignCheckContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddAuthorizedToSignCheck", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddAuthorizedToSignCheckResponse")]
        System.Threading.Tasks.Task<bool> AddAuthorizedToSignCheckAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.AuthorizedToSignCheckContract objAuthorizedToSignCheckContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetPurposeCodeReimburDetailsData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetPurposeCodeReimburDetailsDataRespon" +
            "se")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.PurposeCodeContract[] GetPurposeCodeReimburDetailsData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetPurposeCodeReimburDetailsData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetPurposeCodeReimburDetailsDataRespon" +
            "se")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.PurposeCodeContract[]> GetPurposeCodeReimburDetailsDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetPurposeCodeSubcontractorSchedF", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetPurposeCodeSubcontractorSchedFRespo" +
            "nse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.PurposeCodeContract[] GetPurposeCodeSubcontractorSchedF();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetPurposeCodeSubcontractorSchedF", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetPurposeCodeSubcontractorSchedFRespo" +
            "nse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.PurposeCodeContract[]> GetPurposeCodeSubcontractorSchedFAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetPurposeCodeCreditCardItemSchedF", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetPurposeCodeCreditCardItemSchedFResp" +
            "onse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.PurposeCodeContract[] GetPurposeCodeCreditCardItemSchedF();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetPurposeCodeCreditCardItemSchedF", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetPurposeCodeCreditCardItemSchedFResp" +
            "onse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.PurposeCodeContract[]> GetPurposeCodeCreditCardItemSchedFAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpPayTransIdPopUpSchedF", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpPayTransIdPopUpSchedFResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentTransIdPopUpSchedFContract[] GetExpPayTransIdPopUpSchedF(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpPayTransIdPopUpSchedF", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetExpPayTransIdPopUpSchedFResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentTransIdPopUpSchedFContract[]> GetExpPayTransIdPopUpSchedFAsync(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransaction_LoanForgiven_Liab" +
            "iliites", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransaction_LoanForgiven_Liab" +
            "iliitesResponse")]
        bool AddFilingTransaction_LoanForgiven_Liabiliites(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransaction_LoanForgiven_Liab" +
            "iliites", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransaction_LoanForgiven_Liab" +
            "iliitesResponse")]
        System.Threading.Tasks.Task<bool> AddFilingTransaction_LoanForgiven_LiabiliitesAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDateIncurredLiabDataForForgiven", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDateIncurredLiabDataForForgivenResp" +
            "onse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.DateIncurredContract[] GetDateIncurredLiabDataForForgiven(string strFilingEntityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDateIncurredLiabDataForForgiven", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDateIncurredLiabDataForForgivenResp" +
            "onse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.DateIncurredContract[]> GetDateIncurredLiabDataForForgivenAsync(string strFilingEntityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDateIncurredLiabUpdateData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDateIncurredLiabUpdateDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.DateIncurredContract[] GetDateIncurredLiabUpdateData(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDateIncurredLiabUpdateData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDateIncurredLiabUpdateDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.DateIncurredContract[]> GetDateIncurredLiabUpdateDataAsync(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddOtherReceivedReceiptsSchedE", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddOtherReceivedReceiptsSchedEResponse" +
            "")]
        bool AddOtherReceivedReceiptsSchedE(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsEntity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddOtherReceivedReceiptsSchedE", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddOtherReceivedReceiptsSchedEResponse" +
            "")]
        System.Threading.Tasks.Task<bool> AddOtherReceivedReceiptsSchedEAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsEntity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateOtherReceiptsReceivedSchedE", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateOtherReceiptsReceivedSchedERespo" +
            "nse")]
        bool UpdateOtherReceiptsReceivedSchedE(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateOtherReceiptsReceivedSchedE", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateOtherReceiptsReceivedSchedERespo" +
            "nse")]
        System.Threading.Tasks.Task<bool> UpdateOtherReceiptsReceivedSchedEAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOriginalName", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOriginalNameResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalNameContract[] GetOriginalName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOriginalName", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOriginalNameResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalNameContract[]> GetOriginalNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOriginalAmount", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOriginalAmountResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalAmountContract[] GetOriginalAmount(string strFilingEntityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOriginalAmount", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOriginalAmountResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalAmountContract[]> GetOriginalAmountAsync(string strFilingEntityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOriginalExpeseDate", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOriginalExpeseDateResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalExpenseDateContract[] GetOriginalExpeseDate(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOriginalExpeseDate", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOriginalExpeseDateResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalExpenseDateContract[]> GetOriginalExpeseDateAsync(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddExpenditureRefundsSchedL", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddExpenditureRefundsSchedLResponse")]
        bool AddExpenditureRefundsSchedL(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddExpenditureRefundsSchedL", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddExpenditureRefundsSchedLResponse")]
        System.Threading.Tasks.Task<bool> AddExpenditureRefundsSchedLAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstaningAmtExpRefunded", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstaningAmtExpRefundedResponse")]
        string GetOutstaningAmtExpRefunded(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstaningAmtExpRefunded", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOutstaningAmtExpRefundedResponse")]
        System.Threading.Tasks.Task<string> GetOutstaningAmtExpRefundedAsync(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateExpenditureRefundedSchedL", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateExpenditureRefundedSchedLRespons" +
            "e")]
        bool UpdateExpenditureRefundedSchedL(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateExpenditureRefundedSchedL", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateExpenditureRefundedSchedLRespons" +
            "e")]
        System.Threading.Tasks.Task<bool> UpdateExpenditureRefundedSchedLAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOriginalAmtRefundedSchedL", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOriginalAmtRefundedSchedLResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalAmountContract[] GetOriginalAmtRefundedSchedL(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOriginalAmtRefundedSchedL", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOriginalAmtRefundedSchedLResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalAmountContract[]> GetOriginalAmtRefundedSchedLAsync(string strTransNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAddressData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAddressDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ShowAddressContract[] GetAddressData(string strPersonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAddressData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAddressDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ShowAddressContract[]> GetAddressDataAsync(string strPersonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContactData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContactDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ShowContactContract[] GetContactData(string strPersonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContactData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContactDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ShowContactContract[]> GetContactDataAsync(string strPersonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDepositoryBankInfoData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDepositoryBankInfoDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.DepositoryBankInfoContract[] GetDepositoryBankInfoData(string strPersonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDepositoryBankInfoData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDepositoryBankInfoDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.DepositoryBankInfoContract[]> GetDepositoryBankInfoDataAsync(string strPersonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetCandAuthCommitteesData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetCandAuthCommitteesDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.CandAuthCommitteesContract[] GetCandAuthCommitteesData(string strPersonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetCandAuthCommitteesData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetCandAuthCommitteesDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.CandAuthCommitteesContract[]> GetCandAuthCommitteesDataAsync(string strPersonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetCandidateHeaderData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetCandidateHeaderDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.CandidateHeaderDataContract[] GetCandidateHeaderData(string strPersonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetCandidateHeaderData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetCandidateHeaderDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.CandidateHeaderDataContract[]> GetCandidateHeaderDataAsync(string strPersonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddAddressData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddAddressDataResponse")]
        bool AddAddressData(BOE.CAPASFIDAS_EFS.Domain.EFSService.AddressDataContract objAddressDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddAddressData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddAddressDataResponse")]
        System.Threading.Tasks.Task<bool> AddAddressDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.AddressDataContract objAddressDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateAddressData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateAddressDataResponse")]
        bool UpdateAddressData(BOE.CAPASFIDAS_EFS.Domain.EFSService.AddressDataContract objAddressDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateAddressData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateAddressDataResponse")]
        System.Threading.Tasks.Task<bool> UpdateAddressDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.AddressDataContract objAddressDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteAddressData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteAddressDataResponse")]
        bool DeleteAddressData(BOE.CAPASFIDAS_EFS.Domain.EFSService.AddressDataContract objAddressDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteAddressData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteAddressDataResponse")]
        System.Threading.Tasks.Task<bool> DeleteAddressDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.AddressDataContract objAddressDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAddressTypesData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAddressTypesDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.AddressTypesContract[] GetAddressTypesData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAddressTypesData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAddressTypesDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.AddressTypesContract[]> GetAddressTypesDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetBestContactTypesData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetBestContactTypesDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.BestContactTypesContract[] GetBestContactTypesData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetBestContactTypesData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetBestContactTypesDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.BestContactTypesContract[]> GetBestContactTypesDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContactTypesData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContactTypesDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ContactTypesContract[] GetContactTypesData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContactTypesData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContactTypesDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ContactTypesContract[]> GetContactTypesDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddContactData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddContactDataResponse")]
        bool AddContactData(BOE.CAPASFIDAS_EFS.Domain.EFSService.ShowContactContract objShowContactContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddContactData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddContactDataResponse")]
        System.Threading.Tasks.Task<bool> AddContactDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.ShowContactContract objShowContactContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateContactData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateContactDataResponse")]
        bool UpdateContactData(BOE.CAPASFIDAS_EFS.Domain.EFSService.ShowContactContract objShowContactContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateContactData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateContactDataResponse")]
        System.Threading.Tasks.Task<bool> UpdateContactDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.ShowContactContract objShowContactContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteContactData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteContactDataResponse")]
        bool DeleteContactData(BOE.CAPASFIDAS_EFS.Domain.EFSService.ShowContactContract objShowContactContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteContactData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteContactDataResponse")]
        System.Threading.Tasks.Task<bool> DeleteContactDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.ShowContactContract objShowContactContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddDepositoryBankInfo", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddDepositoryBankInfoResponse")]
        bool AddDepositoryBankInfo(BOE.CAPASFIDAS_EFS.Domain.EFSService.DepositoryBankInfoContract objDepositoryBankInfoContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddDepositoryBankInfo", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddDepositoryBankInfoResponse")]
        System.Threading.Tasks.Task<bool> AddDepositoryBankInfoAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.DepositoryBankInfoContract objDepositoryBankInfoContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateDepositoryBankInfo", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateDepositoryBankInfoResponse")]
        bool UpdateDepositoryBankInfo(BOE.CAPASFIDAS_EFS.Domain.EFSService.DepositoryBankInfoContract objDepositoryBankInfoContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateDepositoryBankInfo", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateDepositoryBankInfoResponse")]
        System.Threading.Tasks.Task<bool> UpdateDepositoryBankInfoAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.DepositoryBankInfoContract objDepositoryBankInfoContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteDepositoryBankInfo", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteDepositoryBankInfoResponse")]
        bool DeleteDepositoryBankInfo(BOE.CAPASFIDAS_EFS.Domain.EFSService.DepositoryBankInfoContract objDepositoryBankInfoContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteDepositoryBankInfo", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteDepositoryBankInfoResponse")]
        System.Threading.Tasks.Task<bool> DeleteDepositoryBankInfoAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.DepositoryBankInfoContract objDepositoryBankInfoContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetBankAccountTypes", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetBankAccountTypesResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.BankAccountTypesContract[] GetBankAccountTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetBankAccountTypes", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetBankAccountTypesResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.BankAccountTypesContract[]> GetBankAccountTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerProfileInfo", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerProfileInfoResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasurerProfileContract[] GetTreasurerProfileInfo(string personID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerProfileInfo", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerProfileInfoResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasurerProfileContract[]> GetTreasurerProfileInfoAsync(string personID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerCommitteeInformation", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerCommitteeInformationRespon" +
            "se")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasurerCommitteeInformationContract[] GetTreasurerCommitteeInformation(string transID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerCommitteeInformation", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerCommitteeInformationRespon" +
            "se")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasurerCommitteeInformationContract[]> GetTreasurerCommitteeInformationAsync(string transID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerAssistantInformation", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerAssistantInformationRespon" +
            "se")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasAssistantInformationContract[] GetTreasurerAssistantInformation(string commID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerAssistantInformation", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerAssistantInformationRespon" +
            "se")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasAssistantInformationContract[]> GetTreasurerAssistantInformationAsync(string commID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerHistoryInformation", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerHistoryInformationResponse" +
            "")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasurerHistoryContract[] GetTreasurerHistoryInformation(string commID, string transID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerHistoryInformation", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerHistoryInformationResponse" +
            "")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasurerHistoryContract[]> GetTreasurerHistoryInformationAsync(string commID, string transID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerAdditionalCommitteeContact" +
            "", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerAdditionalCommitteeContact" +
            "Response")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasAdditionalCommitteeContactContract[] GetTreasurerAdditionalCommitteeContact(string commID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerAdditionalCommitteeContact" +
            "", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerAdditionalCommitteeContact" +
            "Response")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasAdditionalCommitteeContactContract[]> GetTreasurerAdditionalCommitteeContactAsync(string commID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerDepositoryBankInformation", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerDepositoryBankInformationR" +
            "esponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasDepositoryBankInformationContract[] GetTreasurerDepositoryBankInformation(string commID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerDepositoryBankInformation", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerDepositoryBankInformationR" +
            "esponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasDepositoryBankInformationContract[]> GetTreasurerDepositoryBankInformationAsync(string commID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerCandidateSupposeOppose", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerCandidateSupposeOpposeResp" +
            "onse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasCandidateSupportOpposeContract[] GetTreasurerCandidateSupposeOppose(string commID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerCandidateSupposeOppose", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerCandidateSupposeOpposeResp" +
            "onse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasCandidateSupportOpposeContract[]> GetTreasurerCandidateSupposeOpposeAsync(string commID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerAuthorizedToSignCheckConta" +
            "ct", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerAuthorizedToSignCheckConta" +
            "ctResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasAuthorizedToSignCheckContract[] GetTreasurerAuthorizedToSignCheckContact(string commID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerAuthorizedToSignCheckConta" +
            "ct", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerAuthorizedToSignCheckConta" +
            "ctResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasAuthorizedToSignCheckContract[]> GetTreasurerAuthorizedToSignCheckContactAsync(string commID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerBallotIssuesContact", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerBallotIssuesContactRespons" +
            "e")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasBallotIssuesContract[] GetTreasurerBallotIssuesContact(string commID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerBallotIssuesContact", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTreasurerBallotIssuesContactRespons" +
            "e")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasBallotIssuesContract[]> GetTreasurerBallotIssuesContactAsync(string commID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddDepositoryBankInfoTreasurer", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddDepositoryBankInfoTreasurerResponse" +
            "")]
        bool AddDepositoryBankInfoTreasurer(BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasDepositoryBankInformationContract objDepositoryBankInfoContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddDepositoryBankInfoTreasurer", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddDepositoryBankInfoTreasurerResponse" +
            "")]
        System.Threading.Tasks.Task<bool> AddDepositoryBankInfoTreasurerAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasDepositoryBankInformationContract objDepositoryBankInfoContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddSubTreasurerData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddSubTreasurerDataResponse")]
        bool AddSubTreasurerData(BOE.CAPASFIDAS_EFS.Domain.EFSService.SubTreasurerPersonContract objSubTreasurerPersonContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddSubTreasurerData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddSubTreasurerDataResponse")]
        System.Threading.Tasks.Task<bool> AddSubTreasurerDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.SubTreasurerPersonContract objSubTreasurerPersonContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateSubTreasurerData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateSubTreasurerDataResponse")]
        bool UpdateSubTreasurerData(BOE.CAPASFIDAS_EFS.Domain.EFSService.SubTreasurerPersonContract objSubTreasurerPersonContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateSubTreasurerData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateSubTreasurerDataResponse")]
        System.Threading.Tasks.Task<bool> UpdateSubTreasurerDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.SubTreasurerPersonContract objSubTreasurerPersonContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransactionsData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransactionsDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetFilingTransactionsData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransactionsData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingTransactionsDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetFilingTransactionsDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributionTypeData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributionTypeDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ContributionTypeContract[] GetContributionTypeData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributionTypeData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributionTypeDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ContributionTypeContract[]> GetContributionTypeDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributionNameData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributionNameDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ContributorNameContract[] GetContributionNameData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributionNameData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributionNameDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ContributorNameContract[]> GetContributionNameDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDisclosurePeriodData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDisclosurePeriodDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.DisclosurePreiodContract[] GetDisclosurePeriodData(string strElectTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDisclosurePeriodData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDisclosurePeriodDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.DisclosurePreiodContract[]> GetDisclosurePeriodDataAsync(string strElectTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetElectionDateData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetElectionDateDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ElectionDateContract[] GetElectionDateData(string strElectYearId, string strElectTypeId, string strOfficeTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetElectionDateData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetElectionDateDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ElectionDateContract[]> GetElectionDateDataAsync(string strElectYearId, string strElectTypeId, string strOfficeTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilerCommitteeData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilerCommitteeDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.FilerCommitteeContract[] GetFilerCommitteeData(string strPersonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilerCommitteeData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilerCommitteeDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilerCommitteeContract[]> GetFilerCommitteeDataAsync(string strPersonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetPaymentMethodData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetPaymentMethodDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.PaymentMethodContract[] GetPaymentMethodData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetPaymentMethodData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetPaymentMethodDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.PaymentMethodContract[]> GetPaymentMethodDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetPurposeCodeData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetPurposeCodeDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.PurposeCodeContract[] GetPurposeCodeData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetPurposeCodeData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetPurposeCodeDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.PurposeCodeContract[]> GetPurposeCodeDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetReceiptCodeData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetReceiptCodeDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ReceiptCodeContract[] GetReceiptCodeData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetReceiptCodeData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetReceiptCodeDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ReceiptCodeContract[]> GetReceiptCodeDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetReceiptTypeData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetReceiptTypeDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ReceiptTypeContract[] GetReceiptTypeData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetReceiptTypeData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetReceiptTypeDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ReceiptTypeContract[]> GetReceiptTypeDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTransferTypeData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTransferTypeDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.TransferTypeContract[] GetTransferTypeData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTransferTypeData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTransferTypeDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TransferTypeContract[]> GetTransferTypeDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetElectionYearData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetElectionYearDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ElectionYearContract[] GetElectionYearData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetElectionYearData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetElectionYearDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ElectionYearContract[]> GetElectionYearDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetElectionYearDataForFilerID", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetElectionYearDataForFilerIDResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ElectionYearContract[] GetElectionYearDataForFilerID(string strFilerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetElectionYearDataForFilerID", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetElectionYearDataForFilerIDResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ElectionYearContract[]> GetElectionYearDataForFilerIDAsync(string strFilerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetElectionTypeData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetElectionTypeDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ElectionTypeContract[] GetElectionTypeData(string strElectionYearId, string strOfficeTypeId, string strCountyId, string strMunicipalityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetElectionTypeData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetElectionTypeDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ElectionTypeContract[]> GetElectionTypeDataAsync(string strElectionYearId, string strOfficeTypeId, string strCountyId, string strMunicipalityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingCutOffDateData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingCutOffDateDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingCutOffDateContract[] GetFilingCutOffDateData(string strElectYearId, string strFilingTypeId, string strOfficeTypeId, string strFilingDateId, string strCuttOffDateId, string strElectionDateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingCutOffDateData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetFilingCutOffDateDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingCutOffDateContract[]> GetFilingCutOffDateDataAsync(string strElectYearId, string strFilingTypeId, string strOfficeTypeId, string strFilingDateId, string strCuttOffDateId, string strElectionDateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributorTypesData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributorTypesDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ContributorTypesContract[] GetContributorTypesData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributorTypesData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContributorTypesDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ContributorTypesContract[]> GetContributorTypesDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTransactionTypesData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTransactionTypesDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.TransactionTypesContract[] GetTransactionTypesData(string strCandCommId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTransactionTypesData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetTransactionTypesDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TransactionTypesContract[]> GetTransactionTypesDataAsync(string strCandCommId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDisclosureTypesData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDisclosureTypesDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.DisclosureTypesContract[] GetDisclosureTypesData(string strCandCommId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDisclosureTypesData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetDisclosureTypesDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.DisclosureTypesContract[]> GetDisclosureTypesDataAsync(string strCandCommId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFlngTransContrInKindData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFlngTransContrInKindDataResponse")]
        bool AddFlngTransContrInKindData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFlngTransContrInKindData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFlngTransContrInKindDataResponse")]
        System.Threading.Tasks.Task<bool> AddFlngTransContrInKindDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOfficeType", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOfficeTypeResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.OfficeTypeContract[] GetOfficeType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOfficeType", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetOfficeTypeResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.OfficeTypeContract[]> GetOfficeTypeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetCounty", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetCountyResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.CountyContract[] GetCounty();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetCounty", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetCountyResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.CountyContract[]> GetCountyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetMunicipality", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetMunicipalityResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.MunicipalityContract[] GetMunicipality(string strCountyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetMunicipality", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetMunicipalityResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.MunicipalityContract[]> GetMunicipalityAsync(string strCountyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAutoCompleteNameAddress", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAutoCompleteNameAddressResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.AutoCompFLNameAddressContract[] GetAutoCompleteNameAddress(string name, string strFilerId, string strFLName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAutoCompleteNameAddress", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetAutoCompleteNameAddressResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.AutoCompFLNameAddressContract[]> GetAutoCompleteNameAddressAsync(string name, string strFilerId, string strFLName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteFilingTransactionsData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteFilingTransactionsDataResponse")]
        bool DeleteFilingTransactionsData(string strTransNumber, string strModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteFilingTransactionsData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteFilingTransactionsDataResponse")]
        System.Threading.Tasks.Task<bool> DeleteFilingTransactionsDataAsync(string strTransNumber, string strModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteFlngTransExpPaySchedFNData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteFlngTransExpPaySchedFNDataRespon" +
            "se")]
        bool DeleteFlngTransExpPaySchedFNData(string strLoanLiabNumberOrg, string strTransNumberOrg, string strRLiability, string strModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteFlngTransExpPaySchedFNData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteFlngTransExpPaySchedFNDataRespon" +
            "se")]
        System.Threading.Tasks.Task<bool> DeleteFlngTransExpPaySchedFNDataAsync(string strLoanLiabNumberOrg, string strTransNumberOrg, string strRLiability, string strModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFilingTransContrInKindData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFilingTransContrInKindDataRespon" +
            "se")]
        bool UpdateFilingTransContrInKindData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract objFilingTransactionDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFilingTransContrInKindData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateFilingTransContrInKindDataRespon" +
            "se")]
        System.Threading.Tasks.Task<bool> UpdateFilingTransContrInKindDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract objFilingTransactionDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetViewableColumns", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetViewableColumnsResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ViewableColumnContract[] GetViewableColumns(string strUniqueID, string strApplicationName, string strPageName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetViewableColumns", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetViewableColumnsResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ViewableColumnContract[]> GetViewableColumnsAsync(string strUniqueID, string strApplicationName, string strPageName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateColumnValue", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateColumnValueResponse")]
        bool UpdateColumnValue(string uniqueID, string applicationName, string pageName, string uniqueValue, string modifyBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateColumnValue", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateColumnValueResponse")]
        System.Threading.Tasks.Task<bool> UpdateColumnValueAsync(string uniqueID, string applicationName, string pageName, string uniqueValue, string modifyBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetPartnerSubContractorData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetPartnerSubContractorDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ContributorNameContract[] GetPartnerSubContractorData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetPartnerSubContractorData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetPartnerSubContractorDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ContributorNameContract[]> GetPartnerSubContractorDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddContrInKindPartnersData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddContrInKindPartnersDataResponse")]
        bool AddContrInKindPartnersData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddContrInKindPartnersData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddContrInKindPartnersDataResponse")]
        System.Threading.Tasks.Task<bool> AddContrInKindPartnersDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContrInKindPartnersData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContrInKindPartnersDataResponse")]
        BOE.CAPASFIDAS_EFS.Domain.EFSService.ContrInKindPartnersContract[] GetContrInKindPartnersData(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContrInKindPartnersData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/GetContrInKindPartnersDataResponse")]
        System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ContrInKindPartnersContract[]> GetContrInKindPartnersDataAsync(string strFilingTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteContrInKindPartnersData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteContrInKindPartnersDataResponse")]
        bool DeleteContrInKindPartnersData(string strTransNumber, string strModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteContrInKindPartnersData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/DeleteContrInKindPartnersDataResponse")]
        System.Threading.Tasks.Task<bool> DeleteContrInKindPartnersDataAsync(string strTransNumber, string strModifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateContrInKindPartnersData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateContrInKindPartnersDataResponse")]
        bool UpdateContrInKindPartnersData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateContrInKindPartnersData", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/UpdateContrInKindPartnersDataResponse")]
        System.Threading.Tasks.Task<bool> UpdateContrInKindPartnersDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransaction_TransferIn", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransaction_TransferInRespons" +
            "e")]
        bool AddFilingTransaction_TransferIn(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransaction_TransferIn", ReplyAction="http://tempuri.org/ICAPASFIDAS_EFS_SERVICE/AddFilingTransaction_TransferInRespons" +
            "e")]
        System.Threading.Tasks.Task<bool> AddFilingTransaction_TransferInAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICAPASFIDAS_EFS_SERVICEChannel : CAPASFIDAS_EFS_UnitTest.EFS_Service_UnitTest.ICAPASFIDAS_EFS_SERVICE, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CAPASFIDAS_EFS_SERVICEClient : System.ServiceModel.ClientBase<CAPASFIDAS_EFS_UnitTest.EFS_Service_UnitTest.ICAPASFIDAS_EFS_SERVICE>, CAPASFIDAS_EFS_UnitTest.EFS_Service_UnitTest.ICAPASFIDAS_EFS_SERVICE {
        
        public CAPASFIDAS_EFS_SERVICEClient() {
        }
        
        public CAPASFIDAS_EFS_SERVICEClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CAPASFIDAS_EFS_SERVICEClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CAPASFIDAS_EFS_SERVICEClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CAPASFIDAS_EFS_SERVICEClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.GetEditFlagDataContract[] ValidateFilings(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract) {
            return base.Channel.ValidateFilings(objFilingTransDataContract);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.GetEditFlagDataContract[]> ValidateFilingsAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract) {
            return base.Channel.ValidateFilingsAsync(objFilingTransDataContract);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetFilingTransIEWeeklyExpenditureHistoryData(string strFilingTransId) {
            return base.Channel.GetFilingTransIEWeeklyExpenditureHistoryData(strFilingTransId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetFilingTransIEWeeklyExpenditureHistoryDataAsync(string strFilingTransId) {
            return base.Channel.GetFilingTransIEWeeklyExpenditureHistoryDataAsync(strFilingTransId);
        }
        
        public bool AddNonItemIEWeeklyExpFlngTrans(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddNonItemIEWeeklyExpFlngTrans(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddNonItemIEWeeklyExpFlngTransAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddNonItemIEWeeklyExpFlngTransAsync(objFilingTransactionsContract);
        }
        
        public bool UpdateIEWeeklyExpenditureFlngTrans(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateIEWeeklyExpenditureFlngTrans(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateIEWeeklyExpenditureFlngTransAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateIEWeeklyExpenditureFlngTransAsync(objFilingTransactionsContract);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.DateIncurredContract[] GetNonItemIEDateIncrdLiabUpdateData(string strFilingTransId) {
            return base.Channel.GetNonItemIEDateIncrdLiabUpdateData(strFilingTransId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.DateIncurredContract[]> GetNonItemIEDateIncrdLiabUpdateDataAsync(string strFilingTransId) {
            return base.Channel.GetNonItemIEDateIncrdLiabUpdateDataAsync(strFilingTransId);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.PurposeCodeContract[] GetNonItemIEPurposeCodes() {
            return base.Channel.GetNonItemIEPurposeCodes();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.PurposeCodeContract[]> GetNonItemIEPurposeCodesAsync() {
            return base.Channel.GetNonItemIEPurposeCodesAsync();
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.PurposeCodeContract[] GetNonItemIEPurposeCodesSubContr() {
            return base.Channel.GetNonItemIEPurposeCodesSubContr();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.PurposeCodeContract[]> GetNonItemIEPurposeCodesSubContrAsync() {
            return base.Channel.GetNonItemIEPurposeCodesSubContrAsync();
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetFilingTransIE24HourExpenditureData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract) {
            return base.Channel.GetFilingTransIE24HourExpenditureData(objFilingTransDataContract);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetFilingTransIE24HourExpenditureDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract) {
            return base.Channel.GetFilingTransIE24HourExpenditureDataAsync(objFilingTransDataContract);
        }
        
        public bool AddNonItemIE24HourExpFlngTrans(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddNonItemIE24HourExpFlngTrans(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddNonItemIE24HourExpFlngTransAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddNonItemIE24HourExpFlngTransAsync(objFilingTransactionsContract);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetFilingTransIEWeeklyPIDAExpenditureData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract) {
            return base.Channel.GetFilingTransIEWeeklyPIDAExpenditureData(objFilingTransDataContract);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetFilingTransIEWeeklyPIDAExpenditureDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract) {
            return base.Channel.GetFilingTransIEWeeklyPIDAExpenditureDataAsync(objFilingTransDataContract);
        }
        
        public bool AddNonItemIEWeeklyPIDAExpFlngTrans(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddNonItemIEWeeklyPIDAExpFlngTrans(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddNonItemIEWeeklyPIDAExpFlngTransAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddNonItemIEWeeklyPIDAExpFlngTransAsync(objFilingTransactionsContract);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.TransactionTypesContract[] GetIEWeeklyLiabInccrTransactionTypes() {
            return base.Channel.GetIEWeeklyLiabInccrTransactionTypes();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TransactionTypesContract[]> GetIEWeeklyLiabInccrTransactionTypesAsync() {
            return base.Channel.GetIEWeeklyLiabInccrTransactionTypesAsync();
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.PurposeCodeContract[] GetNonItemIESchedNPurposeCodes() {
            return base.Channel.GetNonItemIESchedNPurposeCodes();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.PurposeCodeContract[]> GetNonItemIESchedNPurposeCodesAsync() {
            return base.Channel.GetNonItemIESchedNPurposeCodesAsync();
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetFilingTransIEWeeklyLiabIncrData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract) {
            return base.Channel.GetFilingTransIEWeeklyLiabIncrData(objFilingTransDataContract);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetFilingTransIEWeeklyLiabIncrDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract) {
            return base.Channel.GetFilingTransIEWeeklyLiabIncrDataAsync(objFilingTransDataContract);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetFilingTransIEWeeklyLiabIncrHistoryData(string strFilingTransId) {
            return base.Channel.GetFilingTransIEWeeklyLiabIncrHistoryData(strFilingTransId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetFilingTransIEWeeklyLiabIncrHistoryDataAsync(string strFilingTransId) {
            return base.Channel.GetFilingTransIEWeeklyLiabIncrHistoryDataAsync(strFilingTransId);
        }
        
        public bool AddNonItemIEWeeklyLiabIncrFlngTrans(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddNonItemIEWeeklyLiabIncrFlngTrans(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddNonItemIEWeeklyLiabIncrFlngTransAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddNonItemIEWeeklyLiabIncrFlngTransAsync(objFilingTransactionsContract);
        }
        
        public bool UpdateIEWeeklyLiabIncrFlngTrans(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateIEWeeklyLiabIncrFlngTrans(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateIEWeeklyLiabIncrFlngTransAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateIEWeeklyLiabIncrFlngTransAsync(objFilingTransactionsContract);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingMthodContract[] GetFilingMethodData() {
            return base.Channel.GetFilingMethodData();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingMthodContract[]> GetFilingMethodDataAsync() {
            return base.Channel.GetFilingMethodDataAsync();
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.NonItemCampaignMaterialDataContract[] GetCampaignMaterialData(BOE.CAPASFIDAS_EFS.Domain.EFSService.NonItemCampaignMaterialContract objNonItemCampaignMaterialContract) {
            return base.Channel.GetCampaignMaterialData(objNonItemCampaignMaterialContract);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.NonItemCampaignMaterialDataContract[]> GetCampaignMaterialDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.NonItemCampaignMaterialContract objNonItemCampaignMaterialContract) {
            return base.Channel.GetCampaignMaterialDataAsync(objNonItemCampaignMaterialContract);
        }
        
        public bool AddNonItemCampaignMaterial(BOE.CAPASFIDAS_EFS.Domain.EFSService.NonItemCampaignMaterialContract objNonItemCampaignMaterialContract) {
            return base.Channel.AddNonItemCampaignMaterial(objNonItemCampaignMaterialContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddNonItemCampaignMaterialAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.NonItemCampaignMaterialContract objNonItemCampaignMaterialContract) {
            return base.Channel.AddNonItemCampaignMaterialAsync(objNonItemCampaignMaterialContract);
        }
        
        public bool DeleteCampaignMaterial(string strCampMatrId, string strModifiedBy) {
            return base.Channel.DeleteCampaignMaterial(strCampMatrId, strModifiedBy);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCampaignMaterialAsync(string strCampMatrId, string strModifiedBy) {
            return base.Channel.DeleteCampaignMaterialAsync(strCampMatrId, strModifiedBy);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.PIDAReturnVal GetTokenID(BOE.CAPASFIDAS_EFS.Domain.EFSService.DocumentIDContract objDocumentIDContract) {
            return base.Channel.GetTokenID(objDocumentIDContract);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.PIDAReturnVal> GetTokenIDAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.DocumentIDContract objDocumentIDContract) {
            return base.Channel.GetTokenIDAsync(objDocumentIDContract);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.PIDAReturnVal GetTokenIDData(string strFileType, string strPageName) {
            return base.Channel.GetTokenIDData(strFileType, strPageName);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.PIDAReturnVal> GetTokenIDDataAsync(string strFileType, string strPageName) {
            return base.Channel.GetTokenIDDataAsync(strFileType, strPageName);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.PIDADownloadObject DocumentDownload(string Token, int CabinetID, int DocumentID, string fileName) {
            return base.Channel.DocumentDownload(Token, CabinetID, DocumentID, fileName);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.PIDADownloadObject> DocumentDownloadAsync(string Token, int CabinetID, int DocumentID, string fileName) {
            return base.Channel.DocumentDownloadAsync(Token, CabinetID, DocumentID, fileName);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.DocumentInfoData GetDocumentData(string IE_Comm_Doc_ID, string cabinetFolderName) {
            return base.Channel.GetDocumentData(IE_Comm_Doc_ID, cabinetFolderName);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.DocumentInfoData> GetDocumentDataAsync(string IE_Comm_Doc_ID, string cabinetFolderName) {
            return base.Channel.GetDocumentDataAsync(IE_Comm_Doc_ID, cabinetFolderName);
        }
        
        public bool UploadFileInNetworkDrive(BOE.CAPASFIDAS_EFS.Domain.EFSService.UploadFileNTDriveContract objUploadFileNTDriveContract) {
            return base.Channel.UploadFileInNetworkDrive(objUploadFileNTDriveContract);
        }
        
        public System.Threading.Tasks.Task<bool> UploadFileInNetworkDriveAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.UploadFileNTDriveContract objUploadFileNTDriveContract) {
            return base.Channel.UploadFileInNetworkDriveAsync(objUploadFileNTDriveContract);
        }
        
        public byte[] DownloadFileInNetworkDrive(string strFileFolderPath, string strFileName) {
            return base.Channel.DownloadFileInNetworkDrive(strFileFolderPath, strFileName);
        }
        
        public System.Threading.Tasks.Task<byte[]> DownloadFileInNetworkDriveAsync(string strFileFolderPath, string strFileName) {
            return base.Channel.DownloadFileInNetworkDriveAsync(strFileFolderPath, strFileName);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingDatesOffCycleContract[] GetFilingDateOffCycleData(string strElectionYearId, string strOfficeTypeId) {
            return base.Channel.GetFilingDateOffCycleData(strElectionYearId, strOfficeTypeId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingDatesOffCycleContract[]> GetFilingDateOffCycleDataAsync(string strElectionYearId, string strOfficeTypeId) {
            return base.Channel.GetFilingDateOffCycleDataAsync(strElectionYearId, strOfficeTypeId);
        }
        
        public bool GetDropdownValueExists(string strTableName, string strDropdownValue) {
            return base.Channel.GetDropdownValueExists(strTableName, strDropdownValue);
        }
        
        public System.Threading.Tasks.Task<bool> GetDropdownValueExistsAsync(string strTableName, string strDropdownValue) {
            return base.Channel.GetDropdownValueExistsAsync(strTableName, strDropdownValue);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.OfficeTypeContract[] GetOfficeTypeEFS(string strElectionYear) {
            return base.Channel.GetOfficeTypeEFS(strElectionYear);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.OfficeTypeContract[]> GetOfficeTypeEFSAsync(string strElectionYear) {
            return base.Channel.GetOfficeTypeEFSAsync(strElectionYear);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ResigTermTypeContract[] GeResigTermTypeData() {
            return base.Channel.GeResigTermTypeData();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ResigTermTypeContract[]> GeResigTermTypeDataAsync() {
            return base.Channel.GeResigTermTypeDataAsync();
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ResigTermTypeContract[] GetResgTermTypeExistsValue(string strFilerId, string strElectionTypeId, string strOfficeTypeId, string strFilingTypeId, string strElectionYearId, string strElectionDateId, string strFilingDate) {
            return base.Channel.GetResgTermTypeExistsValue(strFilerId, strElectionTypeId, strOfficeTypeId, strFilingTypeId, strElectionYearId, strElectionDateId, strFilingDate);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ResigTermTypeContract[]> GetResgTermTypeExistsValueAsync(string strFilerId, string strElectionTypeId, string strOfficeTypeId, string strFilingTypeId, string strElectionYearId, string strElectionDateId, string strFilingDate) {
            return base.Channel.GetResgTermTypeExistsValueAsync(strFilerId, strElectionTypeId, strOfficeTypeId, strFilingTypeId, strElectionYearId, strElectionDateId, strFilingDate);
        }
        
        public bool UpdateResgTermTypeFilings(string strFilingsId, string strResgTermTypeId, string strModifiedBy) {
            return base.Channel.UpdateResgTermTypeFilings(strFilingsId, strResgTermTypeId, strModifiedBy);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateResgTermTypeFilingsAsync(string strFilingsId, string strResgTermTypeId, string strModifiedBy) {
            return base.Channel.UpdateResgTermTypeFilingsAsync(strFilingsId, strResgTermTypeId, strModifiedBy);
        }
        
        public bool GetEelectionExistsEFS(string strElectionYearId, string strElectionTypeId, string strOfficeTypeId, string strElectionDateId) {
            return base.Channel.GetEelectionExistsEFS(strElectionYearId, strElectionTypeId, strOfficeTypeId, strElectionDateId);
        }
        
        public System.Threading.Tasks.Task<bool> GetEelectionExistsEFSAsync(string strElectionYearId, string strElectionTypeId, string strOfficeTypeId, string strElectionDateId) {
            return base.Channel.GetEelectionExistsEFSAsync(strElectionYearId, strElectionTypeId, strOfficeTypeId, strElectionDateId);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.LiabilityDetailsContract[] GetOriginalLiabilityData(string strTransNumber) {
            return base.Channel.GetOriginalLiabilityData(strTransNumber);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.LiabilityDetailsContract[]> GetOriginalLiabilityDataAsync(string strTransNumber) {
            return base.Channel.GetOriginalLiabilityDataAsync(strTransNumber);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.LiabilityDetailsContract[] GetExpenditurePaymentLiabilityData(string strTransNumber) {
            return base.Channel.GetExpenditurePaymentLiabilityData(strTransNumber);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.LiabilityDetailsContract[]> GetExpenditurePaymentLiabilityDataAsync(string strTransNumber) {
            return base.Channel.GetExpenditurePaymentLiabilityDataAsync(strTransNumber);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.LiabilityDetailsContract[] GetOutstandingLiabilityData(string strTransNumber) {
            return base.Channel.GetOutstandingLiabilityData(strTransNumber);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.LiabilityDetailsContract[]> GetOutstandingLiabilityDataAsync(string strTransNumber) {
            return base.Channel.GetOutstandingLiabilityDataAsync(strTransNumber);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.LiabilityDetailsContract[] GetLiabilityForgivenData(string strTransNumber) {
            return base.Channel.GetLiabilityForgivenData(strTransNumber);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.LiabilityDetailsContract[]> GetLiabilityForgivenDataAsync(string strTransNumber) {
            return base.Channel.GetLiabilityForgivenDataAsync(strTransNumber);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.OfficeTypeContract[] GetOfficeTypeForFilerIDWCF(string strElectYearID, string strFilerID) {
            return base.Channel.GetOfficeTypeForFilerIDWCF(strElectYearID, strFilerID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.OfficeTypeContract[]> GetOfficeTypeForFilerIDWCFAsync(string strElectYearID, string strFilerID) {
            return base.Channel.GetOfficeTypeForFilerIDWCFAsync(strElectYearID, strFilerID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ElectionTypeContract[] GetElectionTypeForFilerIDWCF(string strElectYearID, string strOfficeTypeID, string strCountyID, string strMunicipalityID, string strFilerID) {
            return base.Channel.GetElectionTypeForFilerIDWCF(strElectYearID, strOfficeTypeID, strCountyID, strMunicipalityID, strFilerID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ElectionTypeContract[]> GetElectionTypeForFilerIDWCFAsync(string strElectYearID, string strOfficeTypeID, string strCountyID, string strMunicipalityID, string strFilerID) {
            return base.Channel.GetElectionTypeForFilerIDWCFAsync(strElectYearID, strOfficeTypeID, strCountyID, strMunicipalityID, strFilerID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ElectionDateContract[] GetElectionDateWCF(string electionYearID, string electionTypeID, string officeTypeID) {
            return base.Channel.GetElectionDateWCF(electionYearID, electionTypeID, officeTypeID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ElectionDateContract[]> GetElectionDateWCFAsync(string electionYearID, string electionTypeID, string officeTypeID) {
            return base.Channel.GetElectionDateWCFAsync(electionYearID, electionTypeID, officeTypeID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.CountyContract[] GetCountyWCF(int officeTypeID) {
            return base.Channel.GetCountyWCF(officeTypeID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.CountyContract[]> GetCountyWCFAsync(int officeTypeID) {
            return base.Channel.GetCountyWCFAsync(officeTypeID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.MunicipalityContract[] GetMunicipalityWCF(int countyID) {
            return base.Channel.GetMunicipalityWCF(countyID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.MunicipalityContract[]> GetMunicipalityWCFAsync(int countyID) {
            return base.Channel.GetMunicipalityWCFAsync(countyID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.DisclosurePreiodContract[] GetDisclosurePeriodsForYearAndFilerIDAndElectionType(string strFilerID, string strElectionYearID, string strElectionTypeID) {
            return base.Channel.GetDisclosurePeriodsForYearAndFilerIDAndElectionType(strFilerID, strElectionYearID, strElectionTypeID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.DisclosurePreiodContract[]> GetDisclosurePeriodsForYearAndFilerIDAndElectionTypeAsync(string strFilerID, string strElectionYearID, string strElectionTypeID) {
            return base.Channel.GetDisclosurePeriodsForYearAndFilerIDAndElectionTypeAsync(strFilerID, strElectionYearID, strElectionTypeID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.DisclosureTypesContract[] GetDisclosureTypesForYearAndFilerID(string strFilerID, string strElectionYearID, string strElectionTypeID) {
            return base.Channel.GetDisclosureTypesForYearAndFilerID(strFilerID, strElectionYearID, strElectionTypeID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.DisclosureTypesContract[]> GetDisclosureTypesForYearAndFilerIDAsync(string strFilerID, string strElectionYearID, string strElectionTypeID) {
            return base.Channel.GetDisclosureTypesForYearAndFilerIDAsync(strFilerID, strElectionYearID, strElectionTypeID);
        }
        
        public string InsertSupportingDocument(string strFilingTransID, string strFilingMethodID, string strDocTypeID, string strScanDocID, string strFileType, string strFileSize, string strCreatedBy) {
            return base.Channel.InsertSupportingDocument(strFilingTransID, strFilingMethodID, strDocTypeID, strScanDocID, strFileType, strFileSize, strCreatedBy);
        }
        
        public System.Threading.Tasks.Task<string> InsertSupportingDocumentAsync(string strFilingTransID, string strFilingMethodID, string strDocTypeID, string strScanDocID, string strFileType, string strFileSize, string strCreatedBy) {
            return base.Channel.InsertSupportingDocumentAsync(strFilingTransID, strFilingMethodID, strDocTypeID, strScanDocID, strFileType, strFileSize, strCreatedBy);
        }
        
        public int DeleteDisclosure(string strFilingID, string strIsSubmitted, string strUserName) {
            return base.Channel.DeleteDisclosure(strFilingID, strIsSubmitted, strUserName);
        }
        
        public System.Threading.Tasks.Task<int> DeleteDisclosureAsync(string strFilingID, string strIsSubmitted, string strUserName) {
            return base.Channel.DeleteDisclosureAsync(strFilingID, strIsSubmitted, strUserName);
        }
        
        public string DeleteSupportingDocument(string strSupportingDocumentID, string strUserName) {
            return base.Channel.DeleteSupportingDocument(strSupportingDocumentID, strUserName);
        }
        
        public System.Threading.Tasks.Task<string> DeleteSupportingDocumentAsync(string strSupportingDocumentID, string strUserName) {
            return base.Channel.DeleteSupportingDocumentAsync(strSupportingDocumentID, strUserName);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.SupportingDocumentsGridContract[] GetSupportingDocumentsGridData(string strFilingTransID) {
            return base.Channel.GetSupportingDocumentsGridData(strFilingTransID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.SupportingDocumentsGridContract[]> GetSupportingDocumentsGridDataAsync(string strFilingTransID) {
            return base.Channel.GetSupportingDocumentsGridDataAsync(strFilingTransID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.TransactionGridContract[] GetTransactionsGridData(string strFilingsID, string strPolCalDateID, string strAmended, string strR_Status, string strDateSubmitted) {
            return base.Channel.GetTransactionsGridData(strFilingsID, strPolCalDateID, strAmended, strR_Status, strDateSubmitted);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TransactionGridContract[]> GetTransactionsGridDataAsync(string strFilingsID, string strPolCalDateID, string strAmended, string strR_Status, string strDateSubmitted) {
            return base.Channel.GetTransactionsGridDataAsync(strFilingsID, strPolCalDateID, strAmended, strR_Status, strDateSubmitted);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.DocumentTypeContract[] GetDocumentTypes(string ApplicationID) {
            return base.Channel.GetDocumentTypes(ApplicationID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.DocumentTypeContract[]> GetDocumentTypesAsync(string ApplicationID) {
            return base.Channel.GetDocumentTypesAsync(ApplicationID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.DisclosureGridContract[] GetDisclosureGridData(string strFilerID, string strReportYearID, string strOfficeTypeID, string strCountyID, string strMunicipalityID, string strElectionTypeID, string strElectionDateID, string strDiclosureTypeID, string strDisclosurePeriodID) {
            return base.Channel.GetDisclosureGridData(strFilerID, strReportYearID, strOfficeTypeID, strCountyID, strMunicipalityID, strElectionTypeID, strElectionDateID, strDiclosureTypeID, strDisclosurePeriodID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.DisclosureGridContract[]> GetDisclosureGridDataAsync(string strFilerID, string strReportYearID, string strOfficeTypeID, string strCountyID, string strMunicipalityID, string strElectionTypeID, string strElectionDateID, string strDiclosureTypeID, string strDisclosurePeriodID) {
            return base.Channel.GetDisclosureGridDataAsync(strFilerID, strReportYearID, strOfficeTypeID, strCountyID, strMunicipalityID, strElectionTypeID, strElectionDateID, strDiclosureTypeID, strDisclosurePeriodID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.TransactionDetailsGridContract[] GetTransactionDetailsGridData(string strTransNum) {
            return base.Channel.GetTransactionDetailsGridData(strTransNum);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TransactionDetailsGridContract[]> GetTransactionDetailsGridDataAsync(string strTransNum) {
            return base.Channel.GetTransactionDetailsGridDataAsync(strTransNum);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ViewSupportingDocumentsGridContract[] GetViewSupportingDocumentsGridData(string strFilerID, string strReportYearID, string strDisclosurePeriodID) {
            return base.Channel.GetViewSupportingDocumentsGridData(strFilerID, strReportYearID, strDisclosurePeriodID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ViewSupportingDocumentsGridContract[]> GetViewSupportingDocumentsGridDataAsync(string strFilerID, string strReportYearID, string strDisclosurePeriodID) {
            return base.Channel.GetViewSupportingDocumentsGridDataAsync(strFilerID, strReportYearID, strDisclosurePeriodID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.DisclosurePreiodContract[] GetDisclosurePeriodsForYearAndFilerID(string strFilerID, string strElectionYearID) {
            return base.Channel.GetDisclosurePeriodsForYearAndFilerID(strFilerID, strElectionYearID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.DisclosurePreiodContract[]> GetDisclosurePeriodsForYearAndFilerIDAsync(string strFilerID, string strElectionYearID) {
            return base.Channel.GetDisclosurePeriodsForYearAndFilerIDAsync(strFilerID, strElectionYearID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.LoanReceivedGridContract[] GetLoanReceivedGridData(string strFilerID) {
            return base.Channel.GetLoanReceivedGridData(strFilerID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.LoanReceivedGridContract[]> GetLoanReceivedGridDataAsync(string strFilerID) {
            return base.Channel.GetLoanReceivedGridDataAsync(strFilerID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.LoanPaymentGridContract[] GetLoanPaymentGridData(string strFilerID) {
            return base.Channel.GetLoanPaymentGridData(strFilerID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.LoanPaymentGridContract[]> GetLoanPaymentGridDataAsync(string strFilerID) {
            return base.Channel.GetLoanPaymentGridDataAsync(strFilerID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.OutstandingLiabilityGridContract[] GetOutstandingLiabilityGridData(string strFilerID) {
            return base.Channel.GetOutstandingLiabilityGridData(strFilerID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.OutstandingLiabilityGridContract[]> GetOutstandingLiabilityGridDataAsync(string strFilerID) {
            return base.Channel.GetOutstandingLiabilityGridDataAsync(strFilerID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.LiabilityLoanForgivenGridContract[] GetLiabilityLoanFogivenGridData(string strFilerID) {
            return base.Channel.GetLiabilityLoanFogivenGridData(strFilerID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.LiabilityLoanForgivenGridContract[]> GetLiabilityLoanFogivenGridDataAsync(string strFilerID) {
            return base.Channel.GetLiabilityLoanFogivenGridDataAsync(strFilerID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpenditurePaymentGridContract[] GetExpenditurePaymentGridData(string strFilerID) {
            return base.Channel.GetExpenditurePaymentGridData(strFilerID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpenditurePaymentGridContract[]> GetExpenditurePaymentGridDataAsync(string strFilerID) {
            return base.Channel.GetExpenditurePaymentGridDataAsync(strFilerID);
        }
        
        public string Reconcile_Loan(string Schedule_I_TransFilingID, string[] Schedule_J_TransFilingIDs, string[] Schedule_N_TransFilingIDs, string[] Schedule_K_TransFilingIDs, string User) {
            return base.Channel.Reconcile_Loan(Schedule_I_TransFilingID, Schedule_J_TransFilingIDs, Schedule_N_TransFilingIDs, Schedule_K_TransFilingIDs, User);
        }
        
        public System.Threading.Tasks.Task<string> Reconcile_LoanAsync(string Schedule_I_TransFilingID, string[] Schedule_J_TransFilingIDs, string[] Schedule_N_TransFilingIDs, string[] Schedule_K_TransFilingIDs, string User) {
            return base.Channel.Reconcile_LoanAsync(Schedule_I_TransFilingID, Schedule_J_TransFilingIDs, Schedule_N_TransFilingIDs, Schedule_K_TransFilingIDs, User);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.OriginalAmountContract[] GetOutstandingAmountLiabData_Forgiven(string strFilingEntityId, string strtransNumber) {
            return base.Channel.GetOutstandingAmountLiabData_Forgiven(strFilingEntityId, strtransNumber);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.OriginalAmountContract[]> GetOutstandingAmountLiabData_ForgivenAsync(string strFilingEntityId, string strtransNumber) {
            return base.Channel.GetOutstandingAmountLiabData_ForgivenAsync(strFilingEntityId, strtransNumber);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.CheckAmendStatusContract[] GetAmendStatus(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract) {
            return base.Channel.GetAmendStatus(objFilingTransDataContract);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.CheckAmendStatusContract[]> GetAmendStatusAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract) {
            return base.Channel.GetAmendStatusAsync(objFilingTransDataContract);
        }
        
        public string GetExpSubContrTotAmt_LoanDetails(string strTransNumber) {
            return base.Channel.GetExpSubContrTotAmt_LoanDetails(strTransNumber);
        }
        
        public System.Threading.Tasks.Task<string> GetExpSubContrTotAmt_LoanDetailsAsync(string strTransNumber) {
            return base.Channel.GetExpSubContrTotAmt_LoanDetailsAsync(strTransNumber);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.GetEditFlagDataContract[] GetEditFlag(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract) {
            return base.Channel.GetEditFlag(objFilingTransDataContract);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.GetEditFlagDataContract[]> GetEditFlagAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract) {
            return base.Channel.GetEditFlagAsync(objFilingTransDataContract);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalNameContract[] GetContributorOriginalName() {
            return base.Channel.GetContributorOriginalName();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalNameContract[]> GetContributorOriginalNameAsync() {
            return base.Channel.GetContributorOriginalNameAsync();
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalAmountContract[] GetContributorOriginalAmount(string strFilingEntityId) {
            return base.Channel.GetContributorOriginalAmount(strFilingEntityId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalAmountContract[]> GetContributorOriginalAmountAsync(string strFilingEntityId) {
            return base.Channel.GetContributorOriginalAmountAsync(strFilingEntityId);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalExpenseDateContract[] GetContributorOriginalContributionDate(string strTransNumber) {
            return base.Channel.GetContributorOriginalContributionDate(strTransNumber);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalExpenseDateContract[]> GetContributorOriginalContributionDateAsync(string strTransNumber) {
            return base.Channel.GetContributorOriginalContributionDateAsync(strTransNumber);
        }
        
        public string GetOutstaningAmtContrRefunded(string strTransNumber) {
            return base.Channel.GetOutstaningAmtContrRefunded(strTransNumber);
        }
        
        public System.Threading.Tasks.Task<string> GetOutstaningAmtContrRefundedAsync(string strTransNumber) {
            return base.Channel.GetOutstaningAmtContrRefundedAsync(strTransNumber);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalAmountContract[] GetOriginalAmtRefundedSchedM(string strTransNumber) {
            return base.Channel.GetOriginalAmtRefundedSchedM(strTransNumber);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalAmountContract[]> GetOriginalAmtRefundedSchedMAsync(string strTransNumber) {
            return base.Channel.GetOriginalAmtRefundedSchedMAsync(strTransNumber);
        }
        
        public bool AddContributionsRefundedSchedM(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddContributionsRefundedSchedM(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddContributionsRefundedSchedMAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddContributionsRefundedSchedMAsync(objFilingTransactionsContract);
        }
        
        public bool UpdateContributionsRefundedSchedM(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateContributionsRefundedSchedM(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateContributionsRefundedSchedMAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateContributionsRefundedSchedMAsync(objFilingTransactionsContract);
        }
        
        public bool AddOutstandingLiabilitySchedN(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddOutstandingLiabilitySchedN(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddOutstandingLiabilitySchedNAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddOutstandingLiabilitySchedNAsync(objFilingTransactionsContract);
        }
        
        public bool UpdateOutstandingLiabilitySchedN(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateOutstandingLiabilitySchedN(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateOutstandingLiabilitySchedNAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateOutstandingLiabilitySchedNAsync(objFilingTransactionsContract);
        }
        
        public string OutstandingLiabilityChildExists(string strFilingTransId) {
            return base.Channel.OutstandingLiabilityChildExists(strFilingTransId);
        }
        
        public System.Threading.Tasks.Task<string> OutstandingLiabilityChildExistsAsync(string strFilingTransId) {
            return base.Channel.OutstandingLiabilityChildExistsAsync(strFilingTransId);
        }
        
        public bool DeleteOutstandingLiabilitySchedN(string strFilingTransId, string strModifiedBy) {
            return base.Channel.DeleteOutstandingLiabilitySchedN(strFilingTransId, strModifiedBy);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteOutstandingLiabilitySchedNAsync(string strFilingTransId, string strModifiedBy) {
            return base.Channel.DeleteOutstandingLiabilitySchedNAsync(strFilingTransId, strModifiedBy);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetEditTransactionData(string strFilingTransId) {
            return base.Channel.GetEditTransactionData(strFilingTransId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetEditTransactionDataAsync(string strFilingTransId) {
            return base.Channel.GetEditTransactionDataAsync(strFilingTransId);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.OriginalAmountContract[] GetOutstandingAmountForForgiven(string strFilingTransId) {
            return base.Channel.GetOutstandingAmountForForgiven(strFilingTransId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.OriginalAmountContract[]> GetOutstandingAmountForForgivenAsync(string strFilingTransId) {
            return base.Channel.GetOutstandingAmountForForgivenAsync(strFilingTransId);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ValidateFilerInfoContract[] GetAuthenticateFilerInfo(string userID) {
            return base.Channel.GetAuthenticateFilerInfo(userID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ValidateFilerInfoContract[]> GetAuthenticateFilerInfoAsync(string userID) {
            return base.Channel.GetAuthenticateFilerInfoAsync(userID);
        }
        
        public bool AddAmountAllocationSchedN(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddAmountAllocationSchedN(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddAmountAllocationSchedNAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddAmountAllocationSchedNAsync(objFilingTransactionsContract);
        }
        
        public bool UpdateAmountAllocationSchedN(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateAmountAllocationSchedN(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAmountAllocationSchedNAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateAmountAllocationSchedNAsync(objFilingTransactionsContract);
        }
        
        public string GetAllAmount(string filing_Ent_ID, string elect_Year, string municipalityID, string officeID, string distID) {
            return base.Channel.GetAllAmount(filing_Ent_ID, elect_Year, municipalityID, officeID, distID);
        }
        
        public System.Threading.Tasks.Task<string> GetAllAmountAsync(string filing_Ent_ID, string elect_Year, string municipalityID, string officeID, string distID) {
            return base.Channel.GetAllAmountAsync(filing_Ent_ID, elect_Year, municipalityID, officeID, distID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.DistrictContract[] GetDistrictsForOffice(string strOfficeID) {
            return base.Channel.GetDistrictsForOffice(strOfficeID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.DistrictContract[]> GetDistrictsForOfficeAsync(string strOfficeID) {
            return base.Channel.GetDistrictsForOfficeAsync(strOfficeID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.OfficeContract[] GetOffices(string strMunicipalityID) {
            return base.Channel.GetOffices(strMunicipalityID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.OfficeContract[]> GetOfficesAsync(string strMunicipalityID) {
            return base.Channel.GetOfficesAsync(strMunicipalityID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.InLieuOfStatementNonItemContract[] GetInLieuOfStatementData(string strFilerid, string strElectionDate, string strElectionYearId, string strElectionYear, string strElectTypeId, string strOfficeTypeId, string strFilingTypeId) {
            return base.Channel.GetInLieuOfStatementData(strFilerid, strElectionDate, strElectionYearId, strElectionYear, strElectTypeId, strOfficeTypeId, strFilingTypeId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.InLieuOfStatementNonItemContract[]> GetInLieuOfStatementDataAsync(string strFilerid, string strElectionDate, string strElectionYearId, string strElectionYear, string strElectTypeId, string strOfficeTypeId, string strFilingTypeId) {
            return base.Channel.GetInLieuOfStatementDataAsync(strFilerid, strElectionDate, strElectionYearId, strElectionYear, strElectTypeId, strOfficeTypeId, strFilingTypeId);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.AutoCompleteSchedRContract[] GetAutoCompleteSchedR(string name, string strFilerId) {
            return base.Channel.GetAutoCompleteSchedR(name, strFilerId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.AutoCompleteSchedRContract[]> GetAutoCompleteSchedRAsync(string name, string strFilerId) {
            return base.Channel.GetAutoCompleteSchedRAsync(name, strFilerId);
        }
        
        public bool AddInLieuOfStatement(BOE.CAPASFIDAS_EFS.Domain.EFSService.AddInLieuOfStatementContract objAddInLieuOfStatementContract) {
            return base.Channel.AddInLieuOfStatement(objAddInLieuOfStatementContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddInLieuOfStatementAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.AddInLieuOfStatementContract objAddInLieuOfStatementContract) {
            return base.Channel.AddInLieuOfStatementAsync(objAddInLieuOfStatementContract);
        }
        
        public bool DeleteInLieuOfStatement(string strFilingsId, string strModifiedBy) {
            return base.Channel.DeleteInLieuOfStatement(strFilingsId, strModifiedBy);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteInLieuOfStatementAsync(string strFilingsId, string strModifiedBy) {
            return base.Channel.DeleteInLieuOfStatementAsync(strFilingsId, strModifiedBy);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.PersonNameAndTreasurerDataContract[] GetPersonNameAndTreasurerData(string strPersonId) {
            return base.Channel.GetPersonNameAndTreasurerData(strPersonId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.PersonNameAndTreasurerDataContract[]> GetPersonNameAndTreasurerDataAsync(string strPersonId) {
            return base.Channel.GetPersonNameAndTreasurerDataAsync(strPersonId);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.FilerInfoContract[] GetFilerInforamation(string filerID, string person_ID) {
            return base.Channel.GetFilerInforamation(filerID, person_ID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilerInfoContract[]> GetFilerInforamationAsync(string filerID, string person_ID) {
            return base.Channel.GetFilerInforamationAsync(filerID, person_ID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.InLieuOfStatementNonItemContract[] GetNoActivityReporttData(string strFilerid, string strElectionDate, string strElectionYearId, string strElectionYear, string strElectTypeId, string strOfficeTypeId, string strFilingTypeId) {
            return base.Channel.GetNoActivityReporttData(strFilerid, strElectionDate, strElectionYearId, strElectionYear, strElectTypeId, strOfficeTypeId, strFilingTypeId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.InLieuOfStatementNonItemContract[]> GetNoActivityReporttDataAsync(string strFilerid, string strElectionDate, string strElectionYearId, string strElectionYear, string strElectTypeId, string strOfficeTypeId, string strFilingTypeId) {
            return base.Channel.GetNoActivityReporttDataAsync(strFilerid, strElectionDate, strElectionYearId, strElectionYear, strElectTypeId, strOfficeTypeId, strFilingTypeId);
        }
        
        public bool AddNoActivityReport(BOE.CAPASFIDAS_EFS.Domain.EFSService.AddInLieuOfStatementContract objAddInLieuOfStatementContract) {
            return base.Channel.AddNoActivityReport(objAddInLieuOfStatementContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddNoActivityReportAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.AddInLieuOfStatementContract objAddInLieuOfStatementContract) {
            return base.Channel.AddNoActivityReportAsync(objAddInLieuOfStatementContract);
        }
        
        public bool GetItemizedTransSubmitted(string strFilerId, string strElectionYearId, string strOfficeTypeId, string strFilingTypeId) {
            return base.Channel.GetItemizedTransSubmitted(strFilerId, strElectionYearId, strOfficeTypeId, strFilingTypeId);
        }
        
        public System.Threading.Tasks.Task<bool> GetItemizedTransSubmittedAsync(string strFilerId, string strElectionYearId, string strOfficeTypeId, string strFilingTypeId) {
            return base.Channel.GetItemizedTransSubmittedAsync(strFilerId, strElectionYearId, strOfficeTypeId, strFilingTypeId);
        }
        
        public bool TransferOutStandingBalance(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.TransferOutStandingBalance(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> TransferOutStandingBalanceAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.TransferOutStandingBalanceAsync(objFilingTransactionsContract);
        }
        
        public bool AddNoticeOfNonParticipation(BOE.CAPASFIDAS_EFS.Domain.EFSService.AddInLieuOfStatementContract objAddInLieuOfStatementContract) {
            return base.Channel.AddNoticeOfNonParticipation(objAddInLieuOfStatementContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddNoticeOfNonParticipationAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.AddInLieuOfStatementContract objAddInLieuOfStatementContract) {
            return base.Channel.AddNoticeOfNonParticipationAsync(objAddInLieuOfStatementContract);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.InLieuOfStatementNonItemContract[] GetNoticeOfNonParticipationtData(string strFilerid, string strElectionDate, string strElectionYearId, string strElectionYear, string strElectTypeId, string strOfficeTypeId, string strFilingTypeId) {
            return base.Channel.GetNoticeOfNonParticipationtData(strFilerid, strElectionDate, strElectionYearId, strElectionYear, strElectTypeId, strOfficeTypeId, strFilingTypeId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.InLieuOfStatementNonItemContract[]> GetNoticeOfNonParticipationtDataAsync(string strFilerid, string strElectionDate, string strElectionYearId, string strElectionYear, string strElectTypeId, string strOfficeTypeId, string strFilingTypeId) {
            return base.Channel.GetNoticeOfNonParticipationtDataAsync(strFilerid, strElectionDate, strElectionYearId, strElectionYear, strElectTypeId, strOfficeTypeId, strFilingTypeId);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.TransactionTypesContract[] GetTransactionTypes24HNoticeData() {
            return base.Channel.GetTransactionTypes24HNoticeData();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TransactionTypesContract[]> GetTransactionTypes24HNoticeDataAsync() {
            return base.Channel.GetTransactionTypes24HNoticeDataAsync();
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetFilingTrans24HourNoticeData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract) {
            return base.Channel.GetFilingTrans24HourNoticeData(objFilingTransDataContract);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetFilingTrans24HourNoticeDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract) {
            return base.Channel.GetFilingTrans24HourNoticeDataAsync(objFilingTransDataContract);
        }
        
        public bool AddNonItem24HourNoticeFlngTrans(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddNonItem24HourNoticeFlngTrans(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddNonItem24HourNoticeFlngTransAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddNonItem24HourNoticeFlngTransAsync(objFilingTransactionsContract);
        }
        
        public bool Update24HNoticeFlngTrans(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.Update24HNoticeFlngTrans(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> Update24HNoticeFlngTransAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.Update24HNoticeFlngTransAsync(objFilingTransactionsContract);
        }
        
        public bool Submit24HNoticeFlngTrans(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.Submit24HNoticeFlngTrans(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> Submit24HNoticeFlngTransAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.Submit24HNoticeFlngTransAsync(objFilingTransactionsContract);
        }
        
        public bool Delete24HNoticeFlngTrans(string strFilingTransId, string strModifiedBy) {
            return base.Channel.Delete24HNoticeFlngTrans(strFilingTransId, strModifiedBy);
        }
        
        public System.Threading.Tasks.Task<bool> Delete24HNoticeFlngTransAsync(string strFilingTransId, string strModifiedBy) {
            return base.Channel.Delete24HNoticeFlngTransAsync(strFilingTransId, strModifiedBy);
        }
        
        public bool GetNonItemChildTransExists(string strFilingTransId) {
            return base.Channel.GetNonItemChildTransExists(strFilingTransId);
        }
        
        public System.Threading.Tasks.Task<bool> GetNonItemChildTransExistsAsync(string strFilingTransId) {
            return base.Channel.GetNonItemChildTransExistsAsync(strFilingTransId);
        }
        
        public bool GetNonItemParentTransExists(string strFilingTransId) {
            return base.Channel.GetNonItemParentTransExists(strFilingTransId);
        }
        
        public System.Threading.Tasks.Task<bool> GetNonItemParentTransExistsAsync(string strFilingTransId) {
            return base.Channel.GetNonItemParentTransExistsAsync(strFilingTransId);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetFilingTrans24HourNoticeHistoryData(string strFilingTransId) {
            return base.Channel.GetFilingTrans24HourNoticeHistoryData(strFilingTransId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetFilingTrans24HourNoticeHistoryDataAsync(string strFilingTransId) {
            return base.Channel.GetFilingTrans24HourNoticeHistoryDataAsync(strFilingTransId);
        }
        
        public bool SubmitFilings_Summery(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.SubmitFilings_Summery(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> SubmitFilings_SummeryAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.SubmitFilings_SummeryAsync(objFilingTransactionsContract);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetFilingTransactionsDataSummary(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract) {
            return base.Channel.GetFilingTransactionsDataSummary(objFilingTransDataContract);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetFilingTransactionsDataSummaryAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract) {
            return base.Channel.GetFilingTransactionsDataSummaryAsync(objFilingTransDataContract);
        }
        
        public string GetSummery_OpeningBalance(string filerID, string election_Year_ID, string office_Type_ID, string filing_Type_ID, string election_Date, string filing_date) {
            return base.Channel.GetSummery_OpeningBalance(filerID, election_Year_ID, office_Type_ID, filing_Type_ID, election_Date, filing_date);
        }
        
        public System.Threading.Tasks.Task<string> GetSummery_OpeningBalanceAsync(string filerID, string election_Year_ID, string office_Type_ID, string filing_Type_ID, string election_Date, string filing_date) {
            return base.Channel.GetSummery_OpeningBalanceAsync(filerID, election_Year_ID, office_Type_ID, filing_Type_ID, election_Date, filing_date);
        }
        
        public string GetSummery_ClosingBalance(string filerID, string election_Year_ID, string office_Type_ID, string filing_Type_ID, string cut_Off_date) {
            return base.Channel.GetSummery_ClosingBalance(filerID, election_Year_ID, office_Type_ID, filing_Type_ID, cut_Off_date);
        }
        
        public System.Threading.Tasks.Task<string> GetSummery_ClosingBalanceAsync(string filerID, string election_Year_ID, string office_Type_ID, string filing_Type_ID, string cut_Off_date) {
            return base.Channel.GetSummery_ClosingBalanceAsync(filerID, election_Year_ID, office_Type_ID, filing_Type_ID, cut_Off_date);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetCommEdit24HourNoticeTransData(string strFilingTransId) {
            return base.Channel.GetCommEdit24HourNoticeTransData(strFilingTransId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetCommEdit24HourNoticeTransDataAsync(string strFilingTransId) {
            return base.Channel.GetCommEdit24HourNoticeTransDataAsync(strFilingTransId);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetFilingTransIEWeeklyContributioneData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract) {
            return base.Channel.GetFilingTransIEWeeklyContributioneData(objFilingTransDataContract);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetFilingTransIEWeeklyContributioneDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract) {
            return base.Channel.GetFilingTransIEWeeklyContributioneDataAsync(objFilingTransDataContract);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.NonItemIETreasurerContract[] GetIEWeeklyContrbutionTreasurerData(string strTreasurerId) {
            return base.Channel.GetIEWeeklyContrbutionTreasurerData(strTreasurerId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.NonItemIETreasurerContract[]> GetIEWeeklyContrbutionTreasurerDataAsync(string strTreasurerId) {
            return base.Channel.GetIEWeeklyContrbutionTreasurerDataAsync(strTreasurerId);
        }
        
        public bool AddNonItemIEWeeklyContrFlngTrans(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddNonItemIEWeeklyContrFlngTrans(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddNonItemIEWeeklyContrFlngTransAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddNonItemIEWeeklyContrFlngTransAsync(objFilingTransactionsContract);
        }
        
        public bool UpdateIEWeeklyContrFlngTrans(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateIEWeeklyContrFlngTrans(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateIEWeeklyContrFlngTransAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateIEWeeklyContrFlngTransAsync(objFilingTransactionsContract);
        }
        
        public bool SubmitIEWeeklyContrFlngTrans(string strFilingTransId, string strModifiedBy) {
            return base.Channel.SubmitIEWeeklyContrFlngTrans(strFilingTransId, strModifiedBy);
        }
        
        public System.Threading.Tasks.Task<bool> SubmitIEWeeklyContrFlngTransAsync(string strFilingTransId, string strModifiedBy) {
            return base.Channel.SubmitIEWeeklyContrFlngTransAsync(strFilingTransId, strModifiedBy);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetFilingTransIETransHistoryData(string strFilingTransId) {
            return base.Channel.GetFilingTransIETransHistoryData(strFilingTransId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetFilingTransIETransHistoryDataAsync(string strFilingTransId) {
            return base.Channel.GetFilingTransIETransHistoryDataAsync(strFilingTransId);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetItemizedNonItemIETransactions(string strFilerId, string strElectionYearId, string strOfficeTypeId, string strElectionTypeId, string strElectionDateId) {
            return base.Channel.GetItemizedNonItemIETransactions(strFilerId, strElectionYearId, strOfficeTypeId, strElectionTypeId, strElectionDateId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetItemizedNonItemIETransactionsAsync(string strFilerId, string strElectionYearId, string strOfficeTypeId, string strElectionTypeId, string strElectionDateId) {
            return base.Channel.GetItemizedNonItemIETransactionsAsync(strFilerId, strElectionYearId, strOfficeTypeId, strElectionTypeId, strElectionDateId);
        }
        
        public bool AddItemizedIETransactionsData(string[] strFilingTransId, string strFilerId, string strElectionYearId, string strOfficeTypeId, string strFilingTypeId, string strElectionTypeId, string strElectionDateId, string strCreatedBy) {
            return base.Channel.AddItemizedIETransactionsData(strFilingTransId, strFilerId, strElectionYearId, strOfficeTypeId, strFilingTypeId, strElectionTypeId, strElectionDateId, strCreatedBy);
        }
        
        public System.Threading.Tasks.Task<bool> AddItemizedIETransactionsDataAsync(string[] strFilingTransId, string strFilerId, string strElectionYearId, string strOfficeTypeId, string strFilingTypeId, string strElectionTypeId, string strElectionDateId, string strCreatedBy) {
            return base.Channel.AddItemizedIETransactionsDataAsync(strFilingTransId, strFilerId, strElectionYearId, strOfficeTypeId, strFilingTypeId, strElectionTypeId, strElectionDateId, strCreatedBy);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ContributorNameContract[] GetContributorCodeIEWeeklyContrSchedC() {
            return base.Channel.GetContributorCodeIEWeeklyContrSchedC();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ContributorNameContract[]> GetContributorCodeIEWeeklyContrSchedCAsync() {
            return base.Channel.GetContributorCodeIEWeeklyContrSchedCAsync();
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ContributorNameContract[] GetContributorCodeIEWeeklyContrSchedD() {
            return base.Channel.GetContributorCodeIEWeeklyContrSchedD();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ContributorNameContract[]> GetContributorCodeIEWeeklyContrSchedDAsync() {
            return base.Channel.GetContributorCodeIEWeeklyContrSchedDAsync();
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetFilingTransIE24HContributioneData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract) {
            return base.Channel.GetFilingTransIE24HContributioneData(objFilingTransDataContract);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetFilingTransIE24HContributioneDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract) {
            return base.Channel.GetFilingTransIE24HContributioneDataAsync(objFilingTransDataContract);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetFilingTransIE24HContributionHistoryData(string strFilingTransId) {
            return base.Channel.GetFilingTransIE24HContributionHistoryData(strFilingTransId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetFilingTransIE24HContributionHistoryDataAsync(string strFilingTransId) {
            return base.Channel.GetFilingTransIE24HContributionHistoryDataAsync(strFilingTransId);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.TransactionTypesContract[] GetIE24HContrTransactionTypes() {
            return base.Channel.GetIE24HContrTransactionTypes();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TransactionTypesContract[]> GetIE24HContrTransactionTypesAsync() {
            return base.Channel.GetIE24HContrTransactionTypesAsync();
        }
        
        public bool AddNonItemIE24HContrFlngTrans(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddNonItemIE24HContrFlngTrans(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddNonItemIE24HContrFlngTransAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddNonItemIE24HContrFlngTransAsync(objFilingTransactionsContract);
        }
        
        public bool UpdateIE24HContrFlngTrans(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateIE24HContrFlngTrans(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateIE24HContrFlngTransAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateIE24HContrFlngTransAsync(objFilingTransactionsContract);
        }
        
        public bool SubmitIE24HContrFlngTrans(string strFilingTransId, string strModifiedBy) {
            return base.Channel.SubmitIE24HContrFlngTrans(strFilingTransId, strModifiedBy);
        }
        
        public System.Threading.Tasks.Task<bool> SubmitIE24HContrFlngTransAsync(string strFilingTransId, string strModifiedBy) {
            return base.Channel.SubmitIE24HContrFlngTransAsync(strFilingTransId, strModifiedBy);
        }
        
        public string GetSummery_AllSchedBalances(string filerID, string election_Year_ID, string office_Type_ID, string filing_Type_ID, string filing_date, string filingSchedID) {
            return base.Channel.GetSummery_AllSchedBalances(filerID, election_Year_ID, office_Type_ID, filing_Type_ID, filing_date, filingSchedID);
        }
        
        public System.Threading.Tasks.Task<string> GetSummery_AllSchedBalancesAsync(string filerID, string election_Year_ID, string office_Type_ID, string filing_Type_ID, string filing_date, string filingSchedID) {
            return base.Channel.GetSummery_AllSchedBalancesAsync(filerID, election_Year_ID, office_Type_ID, filing_Type_ID, filing_date, filingSchedID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.TransactionTypesContract[] GetIEWeeklyExpTransactionTypes() {
            return base.Channel.GetIEWeeklyExpTransactionTypes();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TransactionTypesContract[]> GetIEWeeklyExpTransactionTypesAsync() {
            return base.Channel.GetIEWeeklyExpTransactionTypesAsync();
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetFilingTransIEWeeklyExpenditureData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract) {
            return base.Channel.GetFilingTransIEWeeklyExpenditureData(objFilingTransDataContract);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetFilingTransIEWeeklyExpenditureDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract) {
            return base.Channel.GetFilingTransIEWeeklyExpenditureDataAsync(objFilingTransDataContract);
        }
        
        public bool UpdateFilingTransaction_TransferIn(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateFilingTransaction_TransferIn(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateFilingTransaction_TransferInAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateFilingTransaction_TransferInAsync(objFilingTransactionsContract);
        }
        
        public bool AddFilingTransaction_NonCompHKReceipts(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddFilingTransaction_NonCompHKReceipts(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddFilingTransaction_NonCompHKReceiptsAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddFilingTransaction_NonCompHKReceiptsAsync(objFilingTransactionsContract);
        }
        
        public bool UpdateFilingTransNonCompHKReceipts(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateFilingTransNonCompHKReceipts(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateFilingTransNonCompHKReceiptsAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateFilingTransNonCompHKReceiptsAsync(objFilingTransactionsContract);
        }
        
        public bool AddFlngTransContrMonetaryData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddFlngTransContrMonetaryData(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddFlngTransContrMonetaryDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddFlngTransContrMonetaryDataAsync(objFilingTransactionsContract);
        }
        
        public bool UpdateFlngTransMonetaryContrData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateFlngTransMonetaryContrData(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateFlngTransMonetaryContrDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateFlngTransMonetaryContrDataAsync(objFilingTransactionsContract);
        }
        
        public string AddFlngTransExpenditureData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddFlngTransExpenditureData(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<string> AddFlngTransExpenditureDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddFlngTransExpenditureDataAsync(objFilingTransactionsContract);
        }
        
        public bool AddFilingTransaction_TransferOut(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddFilingTransaction_TransferOut(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddFilingTransaction_TransferOutAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddFilingTransaction_TransferOutAsync(objFilingTransactionsContract);
        }
        
        public bool UpdateFilingTransaction_TransferOut(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateFilingTransaction_TransferOut(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateFilingTransaction_TransferOutAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateFilingTransaction_TransferOutAsync(objFilingTransactionsContract);
        }
        
        public bool AddFilingTransaction_LoanReceived(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddFilingTransaction_LoanReceived(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddFilingTransaction_LoanReceivedAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddFilingTransaction_LoanReceivedAsync(objFilingTransactionsContract);
        }
        
        public bool UpdateFilingTransaction_LoanReceived(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateFilingTransaction_LoanReceived(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateFilingTransaction_LoanReceivedAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateFilingTransaction_LoanReceivedAsync(objFilingTransactionsContract);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.LoanerCodeContract[] GetLoanerCode() {
            return base.Channel.GetLoanerCode();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.LoanerCodeContract[]> GetLoanerCodeAsync() {
            return base.Channel.GetLoanerCodeAsync();
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.OutstandingLiabilityContract[] GetAutoCompleteCreditorNameLiab(string name, string strFilerId) {
            return base.Channel.GetAutoCompleteCreditorNameLiab(name, strFilerId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.OutstandingLiabilityContract[]> GetAutoCompleteCreditorNameLiabAsync(string name, string strFilerId) {
            return base.Channel.GetAutoCompleteCreditorNameLiabAsync(name, strFilerId);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.DateIncurredContract[] GetDateIncurredLiabData(string strFilingEntityId) {
            return base.Channel.GetDateIncurredLiabData(strFilingEntityId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.DateIncurredContract[]> GetDateIncurredLiabDataAsync(string strFilingEntityId) {
            return base.Channel.GetDateIncurredLiabDataAsync(strFilingEntityId);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.OriginalAmountContract[] GetOutstandingAmountLiabData(string strFilingEntityId, string strUpdateStatus, string strFilingTransId) {
            return base.Channel.GetOutstandingAmountLiabData(strFilingEntityId, strUpdateStatus, strFilingTransId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.OriginalAmountContract[]> GetOutstandingAmountLiabDataAsync(string strFilingEntityId, string strUpdateStatus, string strFilingTransId) {
            return base.Channel.GetOutstandingAmountLiabDataAsync(strFilingEntityId, strUpdateStatus, strFilingTransId);
        }
        
        public string GetExpenditureLiabilityExists(string strFilingEntityId, string strFlngEntyName) {
            return base.Channel.GetExpenditureLiabilityExists(strFilingEntityId, strFlngEntyName);
        }
        
        public System.Threading.Tasks.Task<string> GetExpenditureLiabilityExistsAsync(string strFilingEntityId, string strFlngEntyName) {
            return base.Channel.GetExpenditureLiabilityExistsAsync(strFilingEntityId, strFlngEntyName);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentLiabilityContract[] GetExpPaymentsLiabilityData(string strTransNumber) {
            return base.Channel.GetExpPaymentsLiabilityData(strTransNumber);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentLiabilityContract[]> GetExpPaymentsLiabilityDataAsync(string strTransNumber) {
            return base.Channel.GetExpPaymentsLiabilityDataAsync(strTransNumber);
        }
        
        public bool UpdateFlngTransExpenditureData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateFlngTransExpenditureData(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateFlngTransExpenditureDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateFlngTransExpenditureDataAsync(objFilingTransactionsContract);
        }
        
        public bool GetSubcontracorsExists(string strFilingTransId) {
            return base.Channel.GetSubcontracorsExists(strFilingTransId);
        }
        
        public System.Threading.Tasks.Task<bool> GetSubcontracorsExistsAsync(string strFilingTransId) {
            return base.Channel.GetSubcontracorsExistsAsync(strFilingTransId);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.GetSearchForScheduledIContract[] GetDate_SchedueledJ(string FILING_ENTITY_NAME, string ORG_AMT, string flng_Ent_FirstName, string flng_Ent_MiddleName, string flng_Ent_LastName, string filer_ID) {
            return base.Channel.GetDate_SchedueledJ(FILING_ENTITY_NAME, ORG_AMT, flng_Ent_FirstName, flng_Ent_MiddleName, flng_Ent_LastName, filer_ID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.GetSearchForScheduledIContract[]> GetDate_SchedueledJAsync(string FILING_ENTITY_NAME, string ORG_AMT, string flng_Ent_FirstName, string flng_Ent_MiddleName, string flng_Ent_LastName, string filer_ID) {
            return base.Channel.GetDate_SchedueledJAsync(FILING_ENTITY_NAME, ORG_AMT, flng_Ent_FirstName, flng_Ent_MiddleName, flng_Ent_LastName, filer_ID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.GetSearchForScheduledIContract[] GetAmount_SchedueledJ(string FILING_ENTITY_NAME, string flng_Ent_FirstName, string flng_Ent_MiddleName, string flng_Ent_LastName, string filer_ID) {
            return base.Channel.GetAmount_SchedueledJ(FILING_ENTITY_NAME, flng_Ent_FirstName, flng_Ent_MiddleName, flng_Ent_LastName, filer_ID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.GetSearchForScheduledIContract[]> GetAmount_SchedueledJAsync(string FILING_ENTITY_NAME, string flng_Ent_FirstName, string flng_Ent_MiddleName, string flng_Ent_LastName, string filer_ID) {
            return base.Channel.GetAmount_SchedueledJAsync(FILING_ENTITY_NAME, flng_Ent_FirstName, flng_Ent_MiddleName, flng_Ent_LastName, filer_ID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.GetSearchForScheduledIContract[] GetName_SchedueledJ(string filer_ID) {
            return base.Channel.GetName_SchedueledJ(filer_ID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.GetSearchForScheduledIContract[]> GetName_SchedueledJAsync(string filer_ID) {
            return base.Channel.GetName_SchedueledJAsync(filer_ID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract[] GetScheduleJ_EntityData(string trans_Number) {
            return base.Channel.GetScheduleJ_EntityData(trans_Number);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract[]> GetScheduleJ_EntityDataAsync(string trans_Number) {
            return base.Channel.GetScheduleJ_EntityDataAsync(trans_Number);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.GetSearchForScheduledIContract[] ValidateSchedJ_Amount(string trans_Number, string status) {
            return base.Channel.ValidateSchedJ_Amount(trans_Number, status);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.GetSearchForScheduledIContract[]> ValidateSchedJ_AmountAsync(string trans_Number, string status) {
            return base.Channel.ValidateSchedJ_AmountAsync(trans_Number, status);
        }
        
        public bool AddFilingTransaction_LoanRepayment(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddFilingTransaction_LoanRepayment(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddFilingTransaction_LoanRepaymentAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddFilingTransaction_LoanRepaymentAsync(objFilingTransactionsContract);
        }
        
        public bool AddFilingTransExpReimbursmentData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddFilingTransExpReimbursmentData(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddFilingTransExpReimbursmentDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddFilingTransExpReimbursmentDataAsync(objFilingTransactionsContract);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract[] GetFlngTransExpReimbursementData(string strTransNumber) {
            return base.Channel.GetFlngTransExpReimbursementData(strTransNumber);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract[]> GetFlngTransExpReimbursementDataAsync(string strTransNumber) {
            return base.Channel.GetFlngTransExpReimbursementDataAsync(strTransNumber);
        }
        
        public string GetReimbursementDetailsAmt(string strTransNumber) {
            return base.Channel.GetReimbursementDetailsAmt(strTransNumber);
        }
        
        public System.Threading.Tasks.Task<string> GetReimbursementDetailsAmtAsync(string strTransNumber) {
            return base.Channel.GetReimbursementDetailsAmtAsync(strTransNumber);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.GetSearchForScheduledIContract[] ValidateForUpdateScheJ(string filing_Trans_ID) {
            return base.Channel.ValidateForUpdateScheJ(filing_Trans_ID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.GetSearchForScheduledIContract[]> ValidateForUpdateScheJAsync(string filing_Trans_ID) {
            return base.Channel.ValidateForUpdateScheJAsync(filing_Trans_ID);
        }
        
        public bool UpdateLoanRepaymentData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateLoanRepaymentData(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateLoanRepaymentDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateLoanRepaymentDataAsync(objFilingTransactionsContract);
        }
        
        public bool DeleteLoanReceived(string transNumber) {
            return base.Channel.DeleteLoanReceived(transNumber);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteLoanReceivedAsync(string transNumber) {
            return base.Channel.DeleteLoanReceivedAsync(transNumber);
        }
        
        public bool DeleteLoanRepayment(string loan_Lib_Number, string transNumber, string modify_By) {
            return base.Channel.DeleteLoanRepayment(loan_Lib_Number, transNumber, modify_By);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteLoanRepaymentAsync(string loan_Lib_Number, string transNumber, string modify_By) {
            return base.Channel.DeleteLoanRepaymentAsync(loan_Lib_Number, transNumber, modify_By);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetFilingTransactionsForScheduledIJN(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract) {
            return base.Channel.GetFilingTransactionsForScheduledIJN(objFilingTransDataContract);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetFilingTransactionsForScheduledIJNAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract) {
            return base.Channel.GetFilingTransactionsForScheduledIJNAsync(objFilingTransDataContract);
        }
        
        public bool UpdateFilingTransExpReimbursmentData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateFilingTransExpReimbursmentData(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateFilingTransExpReimbursmentDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateFilingTransExpReimbursmentDataAsync(objFilingTransactionsContract);
        }
        
        public bool DeleteFlngTransReimbursementDataSchedF(string strTransNumber, string strModififedBy) {
            return base.Channel.DeleteFlngTransReimbursementDataSchedF(strTransNumber, strModififedBy);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteFlngTransReimbursementDataSchedFAsync(string strTransNumber, string strModififedBy) {
            return base.Channel.DeleteFlngTransReimbursementDataSchedFAsync(strTransNumber, strModififedBy);
        }
        
        public string AddFilingTransNonCompaignHKExpensesData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddFilingTransNonCompaignHKExpensesData(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<string> AddFilingTransNonCompaignHKExpensesDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddFilingTransNonCompaignHKExpensesDataAsync(objFilingTransactionsContract);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract[] GetNCHKExpensesReimbursementData(string strFilingTransId) {
            return base.Channel.GetNCHKExpensesReimbursementData(strFilingTransId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract[]> GetNCHKExpensesReimbursementDataAsync(string strFilingTransId) {
            return base.Channel.GetNCHKExpensesReimbursementDataAsync(strFilingTransId);
        }
        
        public bool UpdateNonCompaignHKExpensesSchedQData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateNonCompaignHKExpensesSchedQData(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateNonCompaignHKExpensesSchedQDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateNonCompaignHKExpensesSchedQDataAsync(objFilingTransactionsContract);
        }
        
        public bool UpdateOutStandingLoansData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateOutStandingLoansData(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateOutStandingLoansDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateOutStandingLoansDataAsync(objFilingTransactionsContract);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract[] CheckOutstandingScheduled(string strFilingTransId) {
            return base.Channel.CheckOutstandingScheduled(strFilingTransId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract[]> CheckOutstandingScheduledAsync(string strFilingTransId) {
            return base.Channel.CheckOutstandingScheduledAsync(strFilingTransId);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.GetSearchForScheduledIContract[] ValidateSchedI_UpdateAmount(string trans_Number) {
            return base.Channel.ValidateSchedI_UpdateAmount(trans_Number);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.GetSearchForScheduledIContract[]> ValidateSchedI_UpdateAmountAsync(string trans_Number) {
            return base.Channel.ValidateSchedI_UpdateAmountAsync(trans_Number);
        }
        
        public string GetExpLiabilityOwedAmt(string strFlngEntityId) {
            return base.Channel.GetExpLiabilityOwedAmt(strFlngEntityId);
        }
        
        public System.Threading.Tasks.Task<string> GetExpLiabilityOwedAmtAsync(string strFlngEntityId) {
            return base.Channel.GetExpLiabilityOwedAmtAsync(strFlngEntityId);
        }
        
        public string GetExpSubContrTotAmt(string strTransNumber) {
            return base.Channel.GetExpSubContrTotAmt(strTransNumber);
        }
        
        public System.Threading.Tasks.Task<string> GetExpSubContrTotAmtAsync(string strTransNumber) {
            return base.Channel.GetExpSubContrTotAmtAsync(strTransNumber);
        }
        
        public string GetOutstandingLiabilityAmount(string strFilingEntityId, string strFlngTransId) {
            return base.Channel.GetOutstandingLiabilityAmount(strFilingEntityId, strFlngTransId);
        }
        
        public System.Threading.Tasks.Task<string> GetOutstandingLiabilityAmountAsync(string strFilingEntityId, string strFlngTransId) {
            return base.Channel.GetOutstandingLiabilityAmountAsync(strFilingEntityId, strFlngTransId);
        }
        
        public string GetExpPayTotalLiabAmount(string strTransNumber) {
            return base.Channel.GetExpPayTotalLiabAmount(strTransNumber);
        }
        
        public System.Threading.Tasks.Task<string> GetExpPayTotalLiabAmountAsync(string strTransNumber) {
            return base.Channel.GetExpPayTotalLiabAmountAsync(strTransNumber);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ContributorNameContract[] GetContributorTypesSchedC() {
            return base.Channel.GetContributorTypesSchedC();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ContributorNameContract[]> GetContributorTypesSchedCAsync() {
            return base.Channel.GetContributorTypesSchedCAsync();
        }
        
        public bool AddFilingTransaction_LoanForgiven(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddFilingTransaction_LoanForgiven(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddFilingTransaction_LoanForgivenAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddFilingTransaction_LoanForgivenAsync(objFilingTransactionsContract);
        }
        
        public bool DeleteLoanForgiven(string loan_Lib_Number, string transNumber, string modify_By) {
            return base.Channel.DeleteLoanForgiven(loan_Lib_Number, transNumber, modify_By);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteLoanForgivenAsync(string loan_Lib_Number, string transNumber, string modify_By) {
            return base.Channel.DeleteLoanForgivenAsync(loan_Lib_Number, transNumber, modify_By);
        }
        
        public bool AddAuthorizedToSignCheck(BOE.CAPASFIDAS_EFS.Domain.EFSService.AuthorizedToSignCheckContract objAuthorizedToSignCheckContract) {
            return base.Channel.AddAuthorizedToSignCheck(objAuthorizedToSignCheckContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddAuthorizedToSignCheckAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.AuthorizedToSignCheckContract objAuthorizedToSignCheckContract) {
            return base.Channel.AddAuthorizedToSignCheckAsync(objAuthorizedToSignCheckContract);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.PurposeCodeContract[] GetPurposeCodeReimburDetailsData() {
            return base.Channel.GetPurposeCodeReimburDetailsData();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.PurposeCodeContract[]> GetPurposeCodeReimburDetailsDataAsync() {
            return base.Channel.GetPurposeCodeReimburDetailsDataAsync();
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.PurposeCodeContract[] GetPurposeCodeSubcontractorSchedF() {
            return base.Channel.GetPurposeCodeSubcontractorSchedF();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.PurposeCodeContract[]> GetPurposeCodeSubcontractorSchedFAsync() {
            return base.Channel.GetPurposeCodeSubcontractorSchedFAsync();
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.PurposeCodeContract[] GetPurposeCodeCreditCardItemSchedF() {
            return base.Channel.GetPurposeCodeCreditCardItemSchedF();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.PurposeCodeContract[]> GetPurposeCodeCreditCardItemSchedFAsync() {
            return base.Channel.GetPurposeCodeCreditCardItemSchedFAsync();
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentTransIdPopUpSchedFContract[] GetExpPayTransIdPopUpSchedF(string strTransNumber) {
            return base.Channel.GetExpPayTransIdPopUpSchedF(strTransNumber);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentTransIdPopUpSchedFContract[]> GetExpPayTransIdPopUpSchedFAsync(string strTransNumber) {
            return base.Channel.GetExpPayTransIdPopUpSchedFAsync(strTransNumber);
        }
        
        public bool AddFilingTransaction_LoanForgiven_Liabiliites(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddFilingTransaction_LoanForgiven_Liabiliites(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddFilingTransaction_LoanForgiven_LiabiliitesAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddFilingTransaction_LoanForgiven_LiabiliitesAsync(objFilingTransactionsContract);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.DateIncurredContract[] GetDateIncurredLiabDataForForgiven(string strFilingEntityId) {
            return base.Channel.GetDateIncurredLiabDataForForgiven(strFilingEntityId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.DateIncurredContract[]> GetDateIncurredLiabDataForForgivenAsync(string strFilingEntityId) {
            return base.Channel.GetDateIncurredLiabDataForForgivenAsync(strFilingEntityId);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.DateIncurredContract[] GetDateIncurredLiabUpdateData(string strTransNumber) {
            return base.Channel.GetDateIncurredLiabUpdateData(strTransNumber);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.DateIncurredContract[]> GetDateIncurredLiabUpdateDataAsync(string strTransNumber) {
            return base.Channel.GetDateIncurredLiabUpdateDataAsync(strTransNumber);
        }
        
        public bool AddOtherReceivedReceiptsSchedE(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsEntity) {
            return base.Channel.AddOtherReceivedReceiptsSchedE(objFilingTransactionsEntity);
        }
        
        public System.Threading.Tasks.Task<bool> AddOtherReceivedReceiptsSchedEAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsEntity) {
            return base.Channel.AddOtherReceivedReceiptsSchedEAsync(objFilingTransactionsEntity);
        }
        
        public bool UpdateOtherReceiptsReceivedSchedE(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateOtherReceiptsReceivedSchedE(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateOtherReceiptsReceivedSchedEAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateOtherReceiptsReceivedSchedEAsync(objFilingTransactionsContract);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalNameContract[] GetOriginalName() {
            return base.Channel.GetOriginalName();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalNameContract[]> GetOriginalNameAsync() {
            return base.Channel.GetOriginalNameAsync();
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalAmountContract[] GetOriginalAmount(string strFilingEntityId) {
            return base.Channel.GetOriginalAmount(strFilingEntityId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalAmountContract[]> GetOriginalAmountAsync(string strFilingEntityId) {
            return base.Channel.GetOriginalAmountAsync(strFilingEntityId);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalExpenseDateContract[] GetOriginalExpeseDate(string strTransNumber) {
            return base.Channel.GetOriginalExpeseDate(strTransNumber);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalExpenseDateContract[]> GetOriginalExpeseDateAsync(string strTransNumber) {
            return base.Channel.GetOriginalExpeseDateAsync(strTransNumber);
        }
        
        public bool AddExpenditureRefundsSchedL(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddExpenditureRefundsSchedL(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddExpenditureRefundsSchedLAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddExpenditureRefundsSchedLAsync(objFilingTransactionsContract);
        }
        
        public string GetOutstaningAmtExpRefunded(string strTransNumber) {
            return base.Channel.GetOutstaningAmtExpRefunded(strTransNumber);
        }
        
        public System.Threading.Tasks.Task<string> GetOutstaningAmtExpRefundedAsync(string strTransNumber) {
            return base.Channel.GetOutstaningAmtExpRefundedAsync(strTransNumber);
        }
        
        public bool UpdateExpenditureRefundedSchedL(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateExpenditureRefundedSchedL(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateExpenditureRefundedSchedLAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateExpenditureRefundedSchedLAsync(objFilingTransactionsContract);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalAmountContract[] GetOriginalAmtRefundedSchedL(string strTransNumber) {
            return base.Channel.GetOriginalAmtRefundedSchedL(strTransNumber);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ExpPaymentOriginalAmountContract[]> GetOriginalAmtRefundedSchedLAsync(string strTransNumber) {
            return base.Channel.GetOriginalAmtRefundedSchedLAsync(strTransNumber);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ShowAddressContract[] GetAddressData(string strPersonId) {
            return base.Channel.GetAddressData(strPersonId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ShowAddressContract[]> GetAddressDataAsync(string strPersonId) {
            return base.Channel.GetAddressDataAsync(strPersonId);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ShowContactContract[] GetContactData(string strPersonId) {
            return base.Channel.GetContactData(strPersonId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ShowContactContract[]> GetContactDataAsync(string strPersonId) {
            return base.Channel.GetContactDataAsync(strPersonId);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.DepositoryBankInfoContract[] GetDepositoryBankInfoData(string strPersonId) {
            return base.Channel.GetDepositoryBankInfoData(strPersonId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.DepositoryBankInfoContract[]> GetDepositoryBankInfoDataAsync(string strPersonId) {
            return base.Channel.GetDepositoryBankInfoDataAsync(strPersonId);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.CandAuthCommitteesContract[] GetCandAuthCommitteesData(string strPersonId) {
            return base.Channel.GetCandAuthCommitteesData(strPersonId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.CandAuthCommitteesContract[]> GetCandAuthCommitteesDataAsync(string strPersonId) {
            return base.Channel.GetCandAuthCommitteesDataAsync(strPersonId);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.CandidateHeaderDataContract[] GetCandidateHeaderData(string strPersonId) {
            return base.Channel.GetCandidateHeaderData(strPersonId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.CandidateHeaderDataContract[]> GetCandidateHeaderDataAsync(string strPersonId) {
            return base.Channel.GetCandidateHeaderDataAsync(strPersonId);
        }
        
        public bool AddAddressData(BOE.CAPASFIDAS_EFS.Domain.EFSService.AddressDataContract objAddressDataContract) {
            return base.Channel.AddAddressData(objAddressDataContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddAddressDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.AddressDataContract objAddressDataContract) {
            return base.Channel.AddAddressDataAsync(objAddressDataContract);
        }
        
        public bool UpdateAddressData(BOE.CAPASFIDAS_EFS.Domain.EFSService.AddressDataContract objAddressDataContract) {
            return base.Channel.UpdateAddressData(objAddressDataContract);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAddressDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.AddressDataContract objAddressDataContract) {
            return base.Channel.UpdateAddressDataAsync(objAddressDataContract);
        }
        
        public bool DeleteAddressData(BOE.CAPASFIDAS_EFS.Domain.EFSService.AddressDataContract objAddressDataContract) {
            return base.Channel.DeleteAddressData(objAddressDataContract);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAddressDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.AddressDataContract objAddressDataContract) {
            return base.Channel.DeleteAddressDataAsync(objAddressDataContract);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.AddressTypesContract[] GetAddressTypesData() {
            return base.Channel.GetAddressTypesData();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.AddressTypesContract[]> GetAddressTypesDataAsync() {
            return base.Channel.GetAddressTypesDataAsync();
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.BestContactTypesContract[] GetBestContactTypesData() {
            return base.Channel.GetBestContactTypesData();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.BestContactTypesContract[]> GetBestContactTypesDataAsync() {
            return base.Channel.GetBestContactTypesDataAsync();
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ContactTypesContract[] GetContactTypesData() {
            return base.Channel.GetContactTypesData();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ContactTypesContract[]> GetContactTypesDataAsync() {
            return base.Channel.GetContactTypesDataAsync();
        }
        
        public bool AddContactData(BOE.CAPASFIDAS_EFS.Domain.EFSService.ShowContactContract objShowContactContract) {
            return base.Channel.AddContactData(objShowContactContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddContactDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.ShowContactContract objShowContactContract) {
            return base.Channel.AddContactDataAsync(objShowContactContract);
        }
        
        public bool UpdateContactData(BOE.CAPASFIDAS_EFS.Domain.EFSService.ShowContactContract objShowContactContract) {
            return base.Channel.UpdateContactData(objShowContactContract);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateContactDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.ShowContactContract objShowContactContract) {
            return base.Channel.UpdateContactDataAsync(objShowContactContract);
        }
        
        public bool DeleteContactData(BOE.CAPASFIDAS_EFS.Domain.EFSService.ShowContactContract objShowContactContract) {
            return base.Channel.DeleteContactData(objShowContactContract);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteContactDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.ShowContactContract objShowContactContract) {
            return base.Channel.DeleteContactDataAsync(objShowContactContract);
        }
        
        public bool AddDepositoryBankInfo(BOE.CAPASFIDAS_EFS.Domain.EFSService.DepositoryBankInfoContract objDepositoryBankInfoContract) {
            return base.Channel.AddDepositoryBankInfo(objDepositoryBankInfoContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddDepositoryBankInfoAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.DepositoryBankInfoContract objDepositoryBankInfoContract) {
            return base.Channel.AddDepositoryBankInfoAsync(objDepositoryBankInfoContract);
        }
        
        public bool UpdateDepositoryBankInfo(BOE.CAPASFIDAS_EFS.Domain.EFSService.DepositoryBankInfoContract objDepositoryBankInfoContract) {
            return base.Channel.UpdateDepositoryBankInfo(objDepositoryBankInfoContract);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateDepositoryBankInfoAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.DepositoryBankInfoContract objDepositoryBankInfoContract) {
            return base.Channel.UpdateDepositoryBankInfoAsync(objDepositoryBankInfoContract);
        }
        
        public bool DeleteDepositoryBankInfo(BOE.CAPASFIDAS_EFS.Domain.EFSService.DepositoryBankInfoContract objDepositoryBankInfoContract) {
            return base.Channel.DeleteDepositoryBankInfo(objDepositoryBankInfoContract);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteDepositoryBankInfoAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.DepositoryBankInfoContract objDepositoryBankInfoContract) {
            return base.Channel.DeleteDepositoryBankInfoAsync(objDepositoryBankInfoContract);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.BankAccountTypesContract[] GetBankAccountTypes() {
            return base.Channel.GetBankAccountTypes();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.BankAccountTypesContract[]> GetBankAccountTypesAsync() {
            return base.Channel.GetBankAccountTypesAsync();
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasurerProfileContract[] GetTreasurerProfileInfo(string personID) {
            return base.Channel.GetTreasurerProfileInfo(personID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasurerProfileContract[]> GetTreasurerProfileInfoAsync(string personID) {
            return base.Channel.GetTreasurerProfileInfoAsync(personID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasurerCommitteeInformationContract[] GetTreasurerCommitteeInformation(string transID) {
            return base.Channel.GetTreasurerCommitteeInformation(transID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasurerCommitteeInformationContract[]> GetTreasurerCommitteeInformationAsync(string transID) {
            return base.Channel.GetTreasurerCommitteeInformationAsync(transID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasAssistantInformationContract[] GetTreasurerAssistantInformation(string commID) {
            return base.Channel.GetTreasurerAssistantInformation(commID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasAssistantInformationContract[]> GetTreasurerAssistantInformationAsync(string commID) {
            return base.Channel.GetTreasurerAssistantInformationAsync(commID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasurerHistoryContract[] GetTreasurerHistoryInformation(string commID, string transID) {
            return base.Channel.GetTreasurerHistoryInformation(commID, transID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasurerHistoryContract[]> GetTreasurerHistoryInformationAsync(string commID, string transID) {
            return base.Channel.GetTreasurerHistoryInformationAsync(commID, transID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasAdditionalCommitteeContactContract[] GetTreasurerAdditionalCommitteeContact(string commID) {
            return base.Channel.GetTreasurerAdditionalCommitteeContact(commID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasAdditionalCommitteeContactContract[]> GetTreasurerAdditionalCommitteeContactAsync(string commID) {
            return base.Channel.GetTreasurerAdditionalCommitteeContactAsync(commID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasDepositoryBankInformationContract[] GetTreasurerDepositoryBankInformation(string commID) {
            return base.Channel.GetTreasurerDepositoryBankInformation(commID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasDepositoryBankInformationContract[]> GetTreasurerDepositoryBankInformationAsync(string commID) {
            return base.Channel.GetTreasurerDepositoryBankInformationAsync(commID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasCandidateSupportOpposeContract[] GetTreasurerCandidateSupposeOppose(string commID) {
            return base.Channel.GetTreasurerCandidateSupposeOppose(commID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasCandidateSupportOpposeContract[]> GetTreasurerCandidateSupposeOpposeAsync(string commID) {
            return base.Channel.GetTreasurerCandidateSupposeOpposeAsync(commID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasAuthorizedToSignCheckContract[] GetTreasurerAuthorizedToSignCheckContact(string commID) {
            return base.Channel.GetTreasurerAuthorizedToSignCheckContact(commID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasAuthorizedToSignCheckContract[]> GetTreasurerAuthorizedToSignCheckContactAsync(string commID) {
            return base.Channel.GetTreasurerAuthorizedToSignCheckContactAsync(commID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasBallotIssuesContract[] GetTreasurerBallotIssuesContact(string commID) {
            return base.Channel.GetTreasurerBallotIssuesContact(commID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasBallotIssuesContract[]> GetTreasurerBallotIssuesContactAsync(string commID) {
            return base.Channel.GetTreasurerBallotIssuesContactAsync(commID);
        }
        
        public bool AddDepositoryBankInfoTreasurer(BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasDepositoryBankInformationContract objDepositoryBankInfoContract) {
            return base.Channel.AddDepositoryBankInfoTreasurer(objDepositoryBankInfoContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddDepositoryBankInfoTreasurerAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.TreasDepositoryBankInformationContract objDepositoryBankInfoContract) {
            return base.Channel.AddDepositoryBankInfoTreasurerAsync(objDepositoryBankInfoContract);
        }
        
        public bool AddSubTreasurerData(BOE.CAPASFIDAS_EFS.Domain.EFSService.SubTreasurerPersonContract objSubTreasurerPersonContract) {
            return base.Channel.AddSubTreasurerData(objSubTreasurerPersonContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddSubTreasurerDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.SubTreasurerPersonContract objSubTreasurerPersonContract) {
            return base.Channel.AddSubTreasurerDataAsync(objSubTreasurerPersonContract);
        }
        
        public bool UpdateSubTreasurerData(BOE.CAPASFIDAS_EFS.Domain.EFSService.SubTreasurerPersonContract objSubTreasurerPersonContract) {
            return base.Channel.UpdateSubTreasurerData(objSubTreasurerPersonContract);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateSubTreasurerDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.SubTreasurerPersonContract objSubTreasurerPersonContract) {
            return base.Channel.UpdateSubTreasurerDataAsync(objSubTreasurerPersonContract);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[] GetFilingTransactionsData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract) {
            return base.Channel.GetFilingTransactionsData(objFilingTransDataContract);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract[]> GetFilingTransactionsDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransDataContract objFilingTransDataContract) {
            return base.Channel.GetFilingTransactionsDataAsync(objFilingTransDataContract);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ContributionTypeContract[] GetContributionTypeData() {
            return base.Channel.GetContributionTypeData();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ContributionTypeContract[]> GetContributionTypeDataAsync() {
            return base.Channel.GetContributionTypeDataAsync();
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ContributorNameContract[] GetContributionNameData() {
            return base.Channel.GetContributionNameData();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ContributorNameContract[]> GetContributionNameDataAsync() {
            return base.Channel.GetContributionNameDataAsync();
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.DisclosurePreiodContract[] GetDisclosurePeriodData(string strElectTypeId) {
            return base.Channel.GetDisclosurePeriodData(strElectTypeId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.DisclosurePreiodContract[]> GetDisclosurePeriodDataAsync(string strElectTypeId) {
            return base.Channel.GetDisclosurePeriodDataAsync(strElectTypeId);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ElectionDateContract[] GetElectionDateData(string strElectYearId, string strElectTypeId, string strOfficeTypeId) {
            return base.Channel.GetElectionDateData(strElectYearId, strElectTypeId, strOfficeTypeId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ElectionDateContract[]> GetElectionDateDataAsync(string strElectYearId, string strElectTypeId, string strOfficeTypeId) {
            return base.Channel.GetElectionDateDataAsync(strElectYearId, strElectTypeId, strOfficeTypeId);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.FilerCommitteeContract[] GetFilerCommitteeData(string strPersonId) {
            return base.Channel.GetFilerCommitteeData(strPersonId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilerCommitteeContract[]> GetFilerCommitteeDataAsync(string strPersonId) {
            return base.Channel.GetFilerCommitteeDataAsync(strPersonId);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.PaymentMethodContract[] GetPaymentMethodData() {
            return base.Channel.GetPaymentMethodData();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.PaymentMethodContract[]> GetPaymentMethodDataAsync() {
            return base.Channel.GetPaymentMethodDataAsync();
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.PurposeCodeContract[] GetPurposeCodeData() {
            return base.Channel.GetPurposeCodeData();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.PurposeCodeContract[]> GetPurposeCodeDataAsync() {
            return base.Channel.GetPurposeCodeDataAsync();
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ReceiptCodeContract[] GetReceiptCodeData() {
            return base.Channel.GetReceiptCodeData();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ReceiptCodeContract[]> GetReceiptCodeDataAsync() {
            return base.Channel.GetReceiptCodeDataAsync();
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ReceiptTypeContract[] GetReceiptTypeData() {
            return base.Channel.GetReceiptTypeData();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ReceiptTypeContract[]> GetReceiptTypeDataAsync() {
            return base.Channel.GetReceiptTypeDataAsync();
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.TransferTypeContract[] GetTransferTypeData() {
            return base.Channel.GetTransferTypeData();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TransferTypeContract[]> GetTransferTypeDataAsync() {
            return base.Channel.GetTransferTypeDataAsync();
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ElectionYearContract[] GetElectionYearData() {
            return base.Channel.GetElectionYearData();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ElectionYearContract[]> GetElectionYearDataAsync() {
            return base.Channel.GetElectionYearDataAsync();
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ElectionYearContract[] GetElectionYearDataForFilerID(string strFilerID) {
            return base.Channel.GetElectionYearDataForFilerID(strFilerID);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ElectionYearContract[]> GetElectionYearDataForFilerIDAsync(string strFilerID) {
            return base.Channel.GetElectionYearDataForFilerIDAsync(strFilerID);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ElectionTypeContract[] GetElectionTypeData(string strElectionYearId, string strOfficeTypeId, string strCountyId, string strMunicipalityId) {
            return base.Channel.GetElectionTypeData(strElectionYearId, strOfficeTypeId, strCountyId, strMunicipalityId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ElectionTypeContract[]> GetElectionTypeDataAsync(string strElectionYearId, string strOfficeTypeId, string strCountyId, string strMunicipalityId) {
            return base.Channel.GetElectionTypeDataAsync(strElectionYearId, strOfficeTypeId, strCountyId, strMunicipalityId);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingCutOffDateContract[] GetFilingCutOffDateData(string strElectYearId, string strFilingTypeId, string strOfficeTypeId, string strFilingDateId, string strCuttOffDateId, string strElectionDateId) {
            return base.Channel.GetFilingCutOffDateData(strElectYearId, strFilingTypeId, strOfficeTypeId, strFilingDateId, strCuttOffDateId, strElectionDateId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingCutOffDateContract[]> GetFilingCutOffDateDataAsync(string strElectYearId, string strFilingTypeId, string strOfficeTypeId, string strFilingDateId, string strCuttOffDateId, string strElectionDateId) {
            return base.Channel.GetFilingCutOffDateDataAsync(strElectYearId, strFilingTypeId, strOfficeTypeId, strFilingDateId, strCuttOffDateId, strElectionDateId);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ContributorTypesContract[] GetContributorTypesData() {
            return base.Channel.GetContributorTypesData();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ContributorTypesContract[]> GetContributorTypesDataAsync() {
            return base.Channel.GetContributorTypesDataAsync();
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.TransactionTypesContract[] GetTransactionTypesData(string strCandCommId) {
            return base.Channel.GetTransactionTypesData(strCandCommId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.TransactionTypesContract[]> GetTransactionTypesDataAsync(string strCandCommId) {
            return base.Channel.GetTransactionTypesDataAsync(strCandCommId);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.DisclosureTypesContract[] GetDisclosureTypesData(string strCandCommId) {
            return base.Channel.GetDisclosureTypesData(strCandCommId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.DisclosureTypesContract[]> GetDisclosureTypesDataAsync(string strCandCommId) {
            return base.Channel.GetDisclosureTypesDataAsync(strCandCommId);
        }
        
        public bool AddFlngTransContrInKindData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddFlngTransContrInKindData(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddFlngTransContrInKindDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddFlngTransContrInKindDataAsync(objFilingTransactionsContract);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.OfficeTypeContract[] GetOfficeType() {
            return base.Channel.GetOfficeType();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.OfficeTypeContract[]> GetOfficeTypeAsync() {
            return base.Channel.GetOfficeTypeAsync();
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.CountyContract[] GetCounty() {
            return base.Channel.GetCounty();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.CountyContract[]> GetCountyAsync() {
            return base.Channel.GetCountyAsync();
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.MunicipalityContract[] GetMunicipality(string strCountyId) {
            return base.Channel.GetMunicipality(strCountyId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.MunicipalityContract[]> GetMunicipalityAsync(string strCountyId) {
            return base.Channel.GetMunicipalityAsync(strCountyId);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.AutoCompFLNameAddressContract[] GetAutoCompleteNameAddress(string name, string strFilerId, string strFLName) {
            return base.Channel.GetAutoCompleteNameAddress(name, strFilerId, strFLName);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.AutoCompFLNameAddressContract[]> GetAutoCompleteNameAddressAsync(string name, string strFilerId, string strFLName) {
            return base.Channel.GetAutoCompleteNameAddressAsync(name, strFilerId, strFLName);
        }
        
        public bool DeleteFilingTransactionsData(string strTransNumber, string strModifiedBy) {
            return base.Channel.DeleteFilingTransactionsData(strTransNumber, strModifiedBy);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteFilingTransactionsDataAsync(string strTransNumber, string strModifiedBy) {
            return base.Channel.DeleteFilingTransactionsDataAsync(strTransNumber, strModifiedBy);
        }
        
        public bool DeleteFlngTransExpPaySchedFNData(string strLoanLiabNumberOrg, string strTransNumberOrg, string strRLiability, string strModifiedBy) {
            return base.Channel.DeleteFlngTransExpPaySchedFNData(strLoanLiabNumberOrg, strTransNumberOrg, strRLiability, strModifiedBy);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteFlngTransExpPaySchedFNDataAsync(string strLoanLiabNumberOrg, string strTransNumberOrg, string strRLiability, string strModifiedBy) {
            return base.Channel.DeleteFlngTransExpPaySchedFNDataAsync(strLoanLiabNumberOrg, strTransNumberOrg, strRLiability, strModifiedBy);
        }
        
        public bool UpdateFilingTransContrInKindData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract objFilingTransactionDataContract) {
            return base.Channel.UpdateFilingTransContrInKindData(objFilingTransactionDataContract);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateFilingTransContrInKindDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionDataContract objFilingTransactionDataContract) {
            return base.Channel.UpdateFilingTransContrInKindDataAsync(objFilingTransactionDataContract);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ViewableColumnContract[] GetViewableColumns(string strUniqueID, string strApplicationName, string strPageName) {
            return base.Channel.GetViewableColumns(strUniqueID, strApplicationName, strPageName);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ViewableColumnContract[]> GetViewableColumnsAsync(string strUniqueID, string strApplicationName, string strPageName) {
            return base.Channel.GetViewableColumnsAsync(strUniqueID, strApplicationName, strPageName);
        }
        
        public bool UpdateColumnValue(string uniqueID, string applicationName, string pageName, string uniqueValue, string modifyBy) {
            return base.Channel.UpdateColumnValue(uniqueID, applicationName, pageName, uniqueValue, modifyBy);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateColumnValueAsync(string uniqueID, string applicationName, string pageName, string uniqueValue, string modifyBy) {
            return base.Channel.UpdateColumnValueAsync(uniqueID, applicationName, pageName, uniqueValue, modifyBy);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ContributorNameContract[] GetPartnerSubContractorData() {
            return base.Channel.GetPartnerSubContractorData();
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ContributorNameContract[]> GetPartnerSubContractorDataAsync() {
            return base.Channel.GetPartnerSubContractorDataAsync();
        }
        
        public bool AddContrInKindPartnersData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddContrInKindPartnersData(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddContrInKindPartnersDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddContrInKindPartnersDataAsync(objFilingTransactionsContract);
        }
        
        public BOE.CAPASFIDAS_EFS.Domain.EFSService.ContrInKindPartnersContract[] GetContrInKindPartnersData(string strFilingTransId) {
            return base.Channel.GetContrInKindPartnersData(strFilingTransId);
        }
        
        public System.Threading.Tasks.Task<BOE.CAPASFIDAS_EFS.Domain.EFSService.ContrInKindPartnersContract[]> GetContrInKindPartnersDataAsync(string strFilingTransId) {
            return base.Channel.GetContrInKindPartnersDataAsync(strFilingTransId);
        }
        
        public bool DeleteContrInKindPartnersData(string strTransNumber, string strModifiedBy) {
            return base.Channel.DeleteContrInKindPartnersData(strTransNumber, strModifiedBy);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteContrInKindPartnersDataAsync(string strTransNumber, string strModifiedBy) {
            return base.Channel.DeleteContrInKindPartnersDataAsync(strTransNumber, strModifiedBy);
        }
        
        public bool UpdateContrInKindPartnersData(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateContrInKindPartnersData(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateContrInKindPartnersDataAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.UpdateContrInKindPartnersDataAsync(objFilingTransactionsContract);
        }
        
        public bool AddFilingTransaction_TransferIn(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddFilingTransaction_TransferIn(objFilingTransactionsContract);
        }
        
        public System.Threading.Tasks.Task<bool> AddFilingTransaction_TransferInAsync(BOE.CAPASFIDAS_EFS.Domain.EFSService.FilingTransactionsContract objFilingTransactionsContract) {
            return base.Channel.AddFilingTransaction_TransferInAsync(objFilingTransactionsContract);
        }
    }
}
